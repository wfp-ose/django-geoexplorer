var OpenLayers={VERSION_NUMBER:"Release 2.13 dev",singleFile:true,_getScriptLocation:(function(){var r=new RegExp("(^|(.*?\\/))(OpenLayers[^\\/]*?\\.js)(\\?|$)"),s=document.getElementsByTagName("script"),src,m,l="";for(var i=0,len=s.length;i<len;i++){src=s[i].getAttribute("src");if(src){m=src.match(r);if(m){l=m[1];break}}}return(function(){return l})})(),ImgPath:""};OpenLayers.Class=function(){var len=arguments.length;var P=arguments[0];var F=arguments[len-1];var C=typeof F.initialize=="function"?F.initialize:function(){P.prototype.initialize.apply(this,arguments)};if(len>1){var newArgs=[C,P].concat(Array.prototype.slice.call(arguments).slice(1,len-1),F);OpenLayers.inherit.apply(null,newArgs)}else{C.prototype=F}return C};OpenLayers.inherit=function(C,P){var F=function(){};F.prototype=P.prototype;C.prototype=new F;var i,l,o;for(i=2,l=arguments.length;i<l;i++){o=arguments[i];if(typeof o==="function"){o=o.prototype}OpenLayers.Util.extend(C.prototype,o)}};OpenLayers.Util=OpenLayers.Util||{};OpenLayers.Util.extend=function(destination,source){destination=destination||{};if(source){for(var property in source){var value=source[property];if(value!==undefined){destination[property]=value}}var sourceIsEvt=typeof window.Event=="function"&&source instanceof window.Event;if(!sourceIsEvt&&source.hasOwnProperty&&source.hasOwnProperty("toString")){destination.toString=source.toString}}return destination};OpenLayers.String={startsWith:function(str,sub){return(str.indexOf(sub)==0)},contains:function(str,sub){return(str.indexOf(sub)!=-1)},trim:function(str){return str.replace(/^\s\s*/,"").replace(/\s\s*$/,"")},camelize:function(str){var oStringList=str.split("-");var camelizedString=oStringList[0];for(var i=1,len=oStringList.length;i<len;i++){var s=oStringList[i];camelizedString+=s.charAt(0).toUpperCase()+s.substring(1)}return camelizedString},format:function(template,context,args){if(!context){context=window}var replacer=function(str,match){var replacement;var subs=match.split(/\.+/);for(var i=0;i<subs.length;i++){if(i==0){replacement=context}if(replacement===undefined){break}replacement=replacement[subs[i]]}if(typeof replacement=="function"){replacement=args?replacement.apply(null,args):replacement()}if(typeof replacement=="undefined"){return"undefined"}else{return replacement}};return template.replace(OpenLayers.String.tokenRegEx,replacer)},tokenRegEx:/\$\{([\w.]+?)\}/g,numberRegEx:/^([+-]?)(?=\d|\.\d)\d*(\.\d*)?([Ee]([+-]?\d+))?$/,isNumeric:function(value){return OpenLayers.String.numberRegEx.test(value)},numericIf:function(value,trimWhitespace){var originalValue=value;if(trimWhitespace===true&&value!=null&&value.replace){value=value.replace(/^\s*|\s*$/g,"")}return OpenLayers.String.isNumeric(value)?parseFloat(value):originalValue}};OpenLayers.Number={decimalSeparator:".",thousandsSeparator:",",limitSigDigs:function(num,sig){var fig=0;if(sig>0){fig=parseFloat(num.toPrecision(sig))}return fig},format:function(num,dec,tsep,dsep){dec=(typeof dec!="undefined")?dec:0;tsep=(typeof tsep!="undefined")?tsep:OpenLayers.Number.thousandsSeparator;dsep=(typeof dsep!="undefined")?dsep:OpenLayers.Number.decimalSeparator;if(dec!=null){num=parseFloat(num.toFixed(dec))}var parts=num.toString().split(".");if(parts.length==1&&dec==null){dec=0}var integer=parts[0];if(tsep){var thousands=/(-?[0-9]+)([0-9]{3})/;while(thousands.test(integer)){integer=integer.replace(thousands,"$1"+tsep+"$2")}}var str;if(dec==0){str=integer}else{var rem=parts.length>1?parts[1]:"0";if(dec!=null){rem=rem+new Array(dec-rem.length+1).join("0")}str=integer+dsep+rem}return str},zeroPad:function(num,len,radix){var str=num.toString(radix||10);while(str.length<len){str="0"+str}return str}};OpenLayers.Function={bind:function(func,object){var args=Array.prototype.slice.apply(arguments,[2]);return function(){var newArgs=args.concat(Array.prototype.slice.apply(arguments,[0]));return func.apply(object,newArgs)}},bindAsEventListener:function(func,object){return function(event){return func.call(object,event||window.event)}},False:function(){return false},True:function(){return true},Void:function(){}};OpenLayers.Array={filter:function(array,callback,caller){var selected=[];if(Array.prototype.filter){selected=array.filter(callback,caller)}else{var len=array.length;if(typeof callback!="function"){throw new TypeError()}for(var i=0;i<len;i++){if(i in array){var val=array[i];if(callback.call(caller,val,i,array)){selected.push(val)}}}}return selected}};OpenLayers.Bounds=OpenLayers.Class({left:null,bottom:null,right:null,top:null,centerLonLat:null,initialize:function(left,bottom,right,top){if(OpenLayers.Util.isArray(left)){top=left[3];right=left[2];bottom=left[1];left=left[0]}if(left!=null){this.left=OpenLayers.Util.toFloat(left)}if(bottom!=null){this.bottom=OpenLayers.Util.toFloat(bottom)}if(right!=null){this.right=OpenLayers.Util.toFloat(right)}if(top!=null){this.top=OpenLayers.Util.toFloat(top)}},clone:function(){return new OpenLayers.Bounds(this.left,this.bottom,this.right,this.top)},equals:function(bounds){var equals=false;if(bounds!=null){equals=((this.left==bounds.left)&&(this.right==bounds.right)&&(this.top==bounds.top)&&(this.bottom==bounds.bottom))}return equals},toString:function(){return[this.left,this.bottom,this.right,this.top].join(",")},toArray:function(reverseAxisOrder){if(reverseAxisOrder===true){return[this.bottom,this.left,this.top,this.right]}else{return[this.left,this.bottom,this.right,this.top]}},toBBOX:function(decimal,reverseAxisOrder){if(decimal==null){decimal=6}var mult=Math.pow(10,decimal);var xmin=Math.round(this.left*mult)/mult;var ymin=Math.round(this.bottom*mult)/mult;var xmax=Math.round(this.right*mult)/mult;var ymax=Math.round(this.top*mult)/mult;if(reverseAxisOrder===true){return ymin+","+xmin+","+ymax+","+xmax}else{return xmin+","+ymin+","+xmax+","+ymax}},toGeometry:function(){return new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(this.left,this.bottom),new OpenLayers.Geometry.Point(this.right,this.bottom),new OpenLayers.Geometry.Point(this.right,this.top),new OpenLayers.Geometry.Point(this.left,this.top)])])},getWidth:function(){return(this.right-this.left)},getHeight:function(){return(this.top-this.bottom)},getSize:function(){return new OpenLayers.Size(this.getWidth(),this.getHeight())},getCenterPixel:function(){return new OpenLayers.Pixel((this.left+this.right)/2,(this.bottom+this.top)/2)},getCenterLonLat:function(){if(!this.centerLonLat){this.centerLonLat=new OpenLayers.LonLat((this.left+this.right)/2,(this.bottom+this.top)/2)}return this.centerLonLat},scale:function(ratio,origin){if(origin==null){origin=this.getCenterLonLat()}var origx,origy;if(origin.CLASS_NAME=="OpenLayers.LonLat"){origx=origin.lon;origy=origin.lat}else{origx=origin.x;origy=origin.y}var left=(this.left-origx)*ratio+origx;var bottom=(this.bottom-origy)*ratio+origy;var right=(this.right-origx)*ratio+origx;var top=(this.top-origy)*ratio+origy;return new OpenLayers.Bounds(left,bottom,right,top)},add:function(x,y){if((x==null)||(y==null)){throw new TypeError("Bounds.add cannot receive null values")}return new OpenLayers.Bounds(this.left+x,this.bottom+y,this.right+x,this.top+y)},extend:function(object){if(object){switch(object.CLASS_NAME){case"OpenLayers.LonLat":this.extendXY(object.lon,object.lat);break;case"OpenLayers.Geometry.Point":this.extendXY(object.x,object.y);break;case"OpenLayers.Bounds":this.centerLonLat=null;if((this.left==null)||(object.left<this.left)){this.left=object.left}if((this.bottom==null)||(object.bottom<this.bottom)){this.bottom=object.bottom}if((this.right==null)||(object.right>this.right)){this.right=object.right}if((this.top==null)||(object.top>this.top)){this.top=object.top}break}}},extendXY:function(x,y){this.centerLonLat=null;if((this.left==null)||(x<this.left)){this.left=x}if((this.bottom==null)||(y<this.bottom)){this.bottom=y}if((this.right==null)||(x>this.right)){this.right=x}if((this.top==null)||(y>this.top)){this.top=y}},containsLonLat:function(ll,options){if(typeof options==="boolean"){options={inclusive:options}}options=options||{};var contains=this.contains(ll.lon,ll.lat,options.inclusive),worldBounds=options.worldBounds;if(worldBounds&&!contains){var worldWidth=worldBounds.getWidth();var worldCenterX=(worldBounds.left+worldBounds.right)/2;var worldsAway=Math.round((ll.lon-worldCenterX)/worldWidth);contains=this.containsLonLat({lon:ll.lon-worldsAway*worldWidth,lat:ll.lat},{inclusive:options.inclusive})}return contains},containsPixel:function(px,inclusive){return this.contains(px.x,px.y,inclusive)},contains:function(x,y,inclusive){if(inclusive==null){inclusive=true}if(x==null||y==null){return false}x=OpenLayers.Util.toFloat(x);y=OpenLayers.Util.toFloat(y);var contains=false;if(inclusive){contains=((x>=this.left)&&(x<=this.right)&&(y>=this.bottom)&&(y<=this.top))}else{contains=((x>this.left)&&(x<this.right)&&(y>this.bottom)&&(y<this.top))}return contains},intersectsBounds:function(bounds,options){if(typeof options==="boolean"){options={inclusive:options}}options=options||{};if(options.worldBounds){var self=this.wrapDateLine(options.worldBounds);bounds=bounds.wrapDateLine(options.worldBounds)}else{self=this}if(options.inclusive==null){options.inclusive=true}var intersects=false;var mightTouch=(self.left==bounds.right||self.right==bounds.left||self.top==bounds.bottom||self.bottom==bounds.top);if(options.inclusive||!mightTouch){var inBottom=(((bounds.bottom>=self.bottom)&&(bounds.bottom<=self.top))||((self.bottom>=bounds.bottom)&&(self.bottom<=bounds.top)));var inTop=(((bounds.top>=self.bottom)&&(bounds.top<=self.top))||((self.top>bounds.bottom)&&(self.top<bounds.top)));var inLeft=(((bounds.left>=self.left)&&(bounds.left<=self.right))||((self.left>=bounds.left)&&(self.left<=bounds.right)));var inRight=(((bounds.right>=self.left)&&(bounds.right<=self.right))||((self.right>=bounds.left)&&(self.right<=bounds.right)));intersects=((inBottom||inTop)&&(inLeft||inRight))}if(options.worldBounds&&!intersects){var world=options.worldBounds;var width=world.getWidth();var selfCrosses=!world.containsBounds(self);var boundsCrosses=!world.containsBounds(bounds);if(selfCrosses&&!boundsCrosses){bounds=bounds.add(-width,0);intersects=self.intersectsBounds(bounds,{inclusive:options.inclusive})}else{if(boundsCrosses&&!selfCrosses){self=self.add(-width,0);intersects=bounds.intersectsBounds(self,{inclusive:options.inclusive})}}}return intersects},containsBounds:function(bounds,partial,inclusive){if(partial==null){partial=false}if(inclusive==null){inclusive=true}var bottomLeft=this.contains(bounds.left,bounds.bottom,inclusive);var bottomRight=this.contains(bounds.right,bounds.bottom,inclusive);var topLeft=this.contains(bounds.left,bounds.top,inclusive);var topRight=this.contains(bounds.right,bounds.top,inclusive);return(partial)?(bottomLeft||bottomRight||topLeft||topRight):(bottomLeft&&bottomRight&&topLeft&&topRight)},determineQuadrant:function(lonlat){var quadrant="";var center=this.getCenterLonLat();quadrant+=(lonlat.lat<center.lat)?"b":"t";quadrant+=(lonlat.lon<center.lon)?"l":"r";return quadrant},transform:function(source,dest){this.centerLonLat=null;var ll=OpenLayers.Projection.transform({x:this.left,y:this.bottom},source,dest);var lr=OpenLayers.Projection.transform({x:this.right,y:this.bottom},source,dest);var ul=OpenLayers.Projection.transform({x:this.left,y:this.top},source,dest);var ur=OpenLayers.Projection.transform({x:this.right,y:this.top},source,dest);this.left=Math.min(ll.x,ul.x);this.bottom=Math.min(ll.y,lr.y);this.right=Math.max(lr.x,ur.x);this.top=Math.max(ul.y,ur.y);return this},wrapDateLine:function(maxExtent,options){options=options||{};var leftTolerance=options.leftTolerance||0;var rightTolerance=options.rightTolerance||0;var newBounds=this.clone();if(maxExtent){var width=maxExtent.getWidth();while(newBounds.left<maxExtent.left&&newBounds.right-rightTolerance<=maxExtent.left){newBounds=newBounds.add(width,0)}while(newBounds.left+leftTolerance>=maxExtent.right&&newBounds.right>maxExtent.right){newBounds=newBounds.add(-width,0)}var newLeft=newBounds.left+leftTolerance;if(newLeft<maxExtent.right&&newLeft>maxExtent.left&&newBounds.right-rightTolerance>maxExtent.right){newBounds=newBounds.add(-width,0)}}return newBounds},CLASS_NAME:"OpenLayers.Bounds"});OpenLayers.Bounds.fromString=function(str,reverseAxisOrder){var bounds=str.split(",");return OpenLayers.Bounds.fromArray(bounds,reverseAxisOrder)};OpenLayers.Bounds.fromArray=function(bbox,reverseAxisOrder){return reverseAxisOrder===true?new OpenLayers.Bounds(bbox[1],bbox[0],bbox[3],bbox[2]):new OpenLayers.Bounds(bbox[0],bbox[1],bbox[2],bbox[3])};OpenLayers.Bounds.fromSize=function(size){return new OpenLayers.Bounds(0,size.h,size.w,0)};OpenLayers.Bounds.oppositeQuadrant=function(quadrant){var opp="";opp+=(quadrant.charAt(0)=="t")?"b":"t";opp+=(quadrant.charAt(1)=="l")?"r":"l";return opp};OpenLayers.Element={visible:function(element){return OpenLayers.Util.getElement(element).style.display!="none"},toggle:function(){for(var i=0,len=arguments.length;i<len;i++){var element=OpenLayers.Util.getElement(arguments[i]);var display=OpenLayers.Element.visible(element)?"none":"";element.style.display=display}},remove:function(element){element=OpenLayers.Util.getElement(element);element.parentNode.removeChild(element)},getHeight:function(element){element=OpenLayers.Util.getElement(element);return element.offsetHeight},hasClass:function(element,name){var names=element.className;return(!!names&&new RegExp("(^|\\s)"+name+"(\\s|$)").test(names))},addClass:function(element,name){if(!OpenLayers.Element.hasClass(element,name)){element.className+=(element.className?" ":"")+name}return element},removeClass:function(element,name){var names=element.className;if(names){element.className=OpenLayers.String.trim(names.replace(new RegExp("(^|\\s+)"+name+"(\\s+|$)")," "))}return element},toggleClass:function(element,name){if(OpenLayers.Element.hasClass(element,name)){OpenLayers.Element.removeClass(element,name)}else{OpenLayers.Element.addClass(element,name)}return element},getStyle:function(element,style){element=OpenLayers.Util.getElement(element);var value=null;if(element&&element.style){value=element.style[OpenLayers.String.camelize(style)];if(!value){if(document.defaultView&&document.defaultView.getComputedStyle){var css=document.defaultView.getComputedStyle(element,null);value=css?css.getPropertyValue(style):null}else{if(element.currentStyle){value=element.currentStyle[OpenLayers.String.camelize(style)]}}}var positions=["left","top","right","bottom"];if(window.opera&&(OpenLayers.Util.indexOf(positions,style)!=-1)&&(OpenLayers.Element.getStyle(element,"position")=="static")){value="auto"}}return value=="auto"?null:value}};OpenLayers.LonLat=OpenLayers.Class({lon:0,lat:0,initialize:function(lon,lat){if(OpenLayers.Util.isArray(lon)){lat=lon[1];lon=lon[0]}this.lon=OpenLayers.Util.toFloat(lon);this.lat=OpenLayers.Util.toFloat(lat)},toString:function(){return("lon="+this.lon+",lat="+this.lat)},toShortString:function(){return(this.lon+", "+this.lat)},clone:function(){return new OpenLayers.LonLat(this.lon,this.lat)},add:function(lon,lat){if((lon==null)||(lat==null)){throw new TypeError("LonLat.add cannot receive null values")}return new OpenLayers.LonLat(this.lon+OpenLayers.Util.toFloat(lon),this.lat+OpenLayers.Util.toFloat(lat))},equals:function(ll){var equals=false;if(ll!=null){equals=((this.lon==ll.lon&&this.lat==ll.lat)||(isNaN(this.lon)&&isNaN(this.lat)&&isNaN(ll.lon)&&isNaN(ll.lat)))}return equals},transform:function(source,dest){var point=OpenLayers.Projection.transform({x:this.lon,y:this.lat},source,dest);this.lon=point.x;this.lat=point.y;return this},wrapDateLine:function(maxExtent){var newLonLat=this.clone();if(maxExtent){while(newLonLat.lon<maxExtent.left){newLonLat.lon+=maxExtent.getWidth()}while(newLonLat.lon>maxExtent.right){newLonLat.lon-=maxExtent.getWidth()}}return newLonLat},CLASS_NAME:"OpenLayers.LonLat"});OpenLayers.LonLat.fromString=function(str){var pair=str.split(",");return new OpenLayers.LonLat(pair[0],pair[1])};OpenLayers.LonLat.fromArray=function(arr){var gotArr=OpenLayers.Util.isArray(arr),lon=gotArr&&arr[0],lat=gotArr&&arr[1];return new OpenLayers.LonLat(lon,lat)};OpenLayers.Pixel=OpenLayers.Class({x:0,y:0,initialize:function(x,y){this.x=parseFloat(x);this.y=parseFloat(y)},toString:function(){return("x="+this.x+",y="+this.y)},clone:function(){return new OpenLayers.Pixel(this.x,this.y)},equals:function(px){var equals=false;if(px!=null){equals=((this.x==px.x&&this.y==px.y)||(isNaN(this.x)&&isNaN(this.y)&&isNaN(px.x)&&isNaN(px.y)))}return equals},distanceTo:function(px){return Math.sqrt(Math.pow(this.x-px.x,2)+Math.pow(this.y-px.y,2))},add:function(x,y){if((x==null)||(y==null)){throw new TypeError("Pixel.add cannot receive null values")}return new OpenLayers.Pixel(this.x+x,this.y+y)},offset:function(px){var newPx=this.clone();if(px){newPx=this.add(px.x,px.y)}return newPx},CLASS_NAME:"OpenLayers.Pixel"});OpenLayers.Size=OpenLayers.Class({w:0,h:0,initialize:function(w,h){this.w=parseFloat(w);this.h=parseFloat(h)},toString:function(){return("w="+this.w+",h="+this.h)},clone:function(){return new OpenLayers.Size(this.w,this.h)},equals:function(sz){var equals=false;if(sz!=null){equals=((this.w==sz.w&&this.h==sz.h)||(isNaN(this.w)&&isNaN(this.h)&&isNaN(sz.w)&&isNaN(sz.h)))}return equals},CLASS_NAME:"OpenLayers.Size"});OpenLayers.Console={log:function(){},debug:function(){},info:function(){},warn:function(){},error:function(){},userError:function(error){alert(error)},assert:function(){},dir:function(){},dirxml:function(){},trace:function(){},group:function(){},groupEnd:function(){},time:function(){},timeEnd:function(){},profile:function(){},profileEnd:function(){},count:function(){},CLASS_NAME:"OpenLayers.Console"};(function(){var scripts=document.getElementsByTagName("script");for(var i=0,len=scripts.length;i<len;++i){if(scripts[i].src.indexOf("firebug.js")!=-1){if(console){OpenLayers.Util.extend(OpenLayers.Console,console);break}}}})();OpenLayers.Lang={code:null,defaultCode:"en",getCode:function(){if(!OpenLayers.Lang.code){OpenLayers.Lang.setCode()}return OpenLayers.Lang.code},setCode:function(code){var lang;if(!code){code=(OpenLayers.BROWSER_NAME=="msie")?navigator.userLanguage:navigator.language}var parts=code.split("-");parts[0]=parts[0].toLowerCase();if(typeof OpenLayers.Lang[parts[0]]=="object"){lang=parts[0]}if(parts[1]){var testLang=parts[0]+"-"+parts[1].toUpperCase();if(typeof OpenLayers.Lang[testLang]=="object"){lang=testLang}}if(!lang){OpenLayers.Console.warn("Failed to find OpenLayers.Lang."+parts.join("-")+" dictionary, falling back to default language");lang=OpenLayers.Lang.defaultCode}OpenLayers.Lang.code=lang},translate:function(key,context){var dictionary=OpenLayers.Lang[OpenLayers.Lang.getCode()];var message=dictionary&&dictionary[key];if(!message){message=key}if(context){message=OpenLayers.String.format(message,context)}return message}};OpenLayers.i18n=OpenLayers.Lang.translate;OpenLayers.Util=OpenLayers.Util||{};OpenLayers.Util.getElement=function(){var elements=[];for(var i=0,len=arguments.length;i<len;i++){var element=arguments[i];if(typeof element=="string"){element=document.getElementById(element)}if(arguments.length==1){return element}elements.push(element)}return elements};OpenLayers.Util.isElement=function(o){return !!(o&&o.nodeType===1)};OpenLayers.Util.isArray=function(a){return(Object.prototype.toString.call(a)==="[object Array]")};OpenLayers.Util.removeItem=function(array,item){for(var i=array.length-1;i>=0;i--){if(array[i]==item){array.splice(i,1)}}return array};OpenLayers.Util.indexOf=function(array,obj){if(typeof array.indexOf=="function"){return array.indexOf(obj)}else{for(var i=0,len=array.length;i<len;i++){if(array[i]==obj){return i}}return -1}};OpenLayers.Util.dotless=/\./g;OpenLayers.Util.modifyDOMElement=function(element,id,px,sz,position,border,overflow,opacity){if(id){element.id=id.replace(OpenLayers.Util.dotless,"_")}if(px){element.style.left=px.x+"px";element.style.top=px.y+"px"}if(sz){element.style.width=sz.w+"px";element.style.height=sz.h+"px"}if(position){element.style.position=position}if(border){element.style.border=border}if(overflow){element.style.overflow=overflow}if(parseFloat(opacity)>=0&&parseFloat(opacity)<1){element.style.filter="alpha(opacity="+(opacity*100)+")";element.style.opacity=opacity}else{if(parseFloat(opacity)==1){element.style.filter="";element.style.opacity=""}}};OpenLayers.Util.createDiv=function(id,px,sz,imgURL,position,border,overflow,opacity){var dom=document.createElement("div");if(imgURL){dom.style.backgroundImage="url("+imgURL+")"}if(!id){id=OpenLayers.Util.createUniqueID("OpenLayersDiv")}if(!position){position="absolute"}OpenLayers.Util.modifyDOMElement(dom,id,px,sz,position,border,overflow,opacity);return dom};OpenLayers.Util.createImage=function(id,px,sz,imgURL,position,border,opacity,delayDisplay){var image=document.createElement("img");if(!id){id=OpenLayers.Util.createUniqueID("OpenLayersDiv")}if(!position){position="relative"}OpenLayers.Util.modifyDOMElement(image,id,px,sz,position,border,null,opacity);if(delayDisplay){image.style.display="none";function display(){image.style.display="";OpenLayers.Event.stopObservingElement(image)}OpenLayers.Event.observe(image,"load",display);OpenLayers.Event.observe(image,"error",display)}image.style.alt=id;image.galleryImg="no";if(imgURL){image.src=imgURL}return image};OpenLayers.IMAGE_RELOAD_ATTEMPTS=0;OpenLayers.Util.alphaHackNeeded=null;OpenLayers.Util.alphaHack=function(){if(OpenLayers.Util.alphaHackNeeded==null){var arVersion=navigator.appVersion.split("MSIE");var version=parseFloat(arVersion[1]);var filter=false;try{filter=!!(document.body.filters)}catch(e){}OpenLayers.Util.alphaHackNeeded=(filter&&(version>=5.5)&&(version<7))}return OpenLayers.Util.alphaHackNeeded};OpenLayers.Util.modifyAlphaImageDiv=function(div,id,px,sz,imgURL,position,border,sizing,opacity){OpenLayers.Util.modifyDOMElement(div,id,px,sz,position,null,null,opacity);var img=div.childNodes[0];if(imgURL){img.src=imgURL}OpenLayers.Util.modifyDOMElement(img,div.id+"_innerImage",null,sz,"relative",border);if(OpenLayers.Util.alphaHack()){if(div.style.display!="none"){div.style.display="inline-block"}if(sizing==null){sizing="scale"}div.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+img.src+"', sizingMethod='"+sizing+"')";if(parseFloat(div.style.opacity)>=0&&parseFloat(div.style.opacity)<1){div.style.filter+=" alpha(opacity="+div.style.opacity*100+")"}img.style.filter="alpha(opacity=0)"}};OpenLayers.Util.createAlphaImageDiv=function(id,px,sz,imgURL,position,border,sizing,opacity,delayDisplay){var div=OpenLayers.Util.createDiv();var img=OpenLayers.Util.createImage(null,null,null,null,null,null,null,delayDisplay);img.className="olAlphaImg";div.appendChild(img);OpenLayers.Util.modifyAlphaImageDiv(div,id,px,sz,imgURL,position,border,sizing,opacity);return div};OpenLayers.Util.upperCaseObject=function(object){var uObject={};for(var key in object){uObject[key.toUpperCase()]=object[key]}return uObject};OpenLayers.Util.applyDefaults=function(to,from){to=to||{};var fromIsEvt=typeof window.Event=="function"&&from instanceof window.Event;for(var key in from){if(to[key]===undefined||(!fromIsEvt&&from.hasOwnProperty&&from.hasOwnProperty(key)&&!to.hasOwnProperty(key))){to[key]=from[key]}}if(!fromIsEvt&&from&&from.hasOwnProperty&&from.hasOwnProperty("toString")&&!to.hasOwnProperty("toString")){to.toString=from.toString}return to};OpenLayers.Util.getParameterString=function(params){var paramsArray=[];for(var key in params){var value=params[key];if((value!=null)&&(typeof value!="function")){var encodedValue;if(typeof value=="object"&&value.constructor==Array){var encodedItemArray=[];var item;for(var itemIndex=0,len=value.length;itemIndex<len;itemIndex++){item=value[itemIndex];encodedItemArray.push(encodeURIComponent((item===null||item===undefined)?"":item))}encodedValue=encodedItemArray.join(",")}else{encodedValue=encodeURIComponent(value)}paramsArray.push(encodeURIComponent(key)+"="+encodedValue)}}return paramsArray.join("&")};OpenLayers.Util.urlAppend=function(url,paramStr){var newUrl=url;if(paramStr){var parts=(url+" ").split(/[?&]/);newUrl+=(parts.pop()===" "?paramStr:parts.length?"&"+paramStr:"?"+paramStr)}return newUrl};OpenLayers.Util.getImagesLocation=function(){return OpenLayers.ImgPath||(OpenLayers._getScriptLocation()+"img/")};OpenLayers.Util.getImageLocation=function(image){return OpenLayers.Util.getImagesLocation()+image};OpenLayers.Util.Try=function(){var returnValue=null;for(var i=0,len=arguments.length;i<len;i++){var lambda=arguments[i];try{returnValue=lambda();break}catch(e){}}return returnValue};OpenLayers.Util.getXmlNodeValue=function(node){var val=null;OpenLayers.Util.Try(function(){val=node.text;if(!val){val=node.textContent}if(!val){val=node.firstChild.nodeValue}},function(){val=node.textContent});return val};OpenLayers.Util.mouseLeft=function(evt,div){var target=(evt.relatedTarget)?evt.relatedTarget:evt.toElement;while(target!=div&&target!=null){target=target.parentNode}return(target!=div)};OpenLayers.Util.DEFAULT_PRECISION=14;OpenLayers.Util.toFloat=function(number,precision){if(precision==null){precision=OpenLayers.Util.DEFAULT_PRECISION}if(typeof number!=="number"){number=parseFloat(number)}return precision===0?number:parseFloat(number.toPrecision(precision))};OpenLayers.Util.rad=function(x){return x*Math.PI/180};OpenLayers.Util.deg=function(x){return x*180/Math.PI};OpenLayers.Util.VincentyConstants={a:6378137,b:6356752.3142,f:1/298.257223563};OpenLayers.Util.distVincenty=function(p1,p2){var ct=OpenLayers.Util.VincentyConstants;var a=ct.a,b=ct.b,f=ct.f;var L=OpenLayers.Util.rad(p2.lon-p1.lon);var U1=Math.atan((1-f)*Math.tan(OpenLayers.Util.rad(p1.lat)));var U2=Math.atan((1-f)*Math.tan(OpenLayers.Util.rad(p2.lat)));var sinU1=Math.sin(U1),cosU1=Math.cos(U1);var sinU2=Math.sin(U2),cosU2=Math.cos(U2);var lambda=L,lambdaP=2*Math.PI;var iterLimit=20;while(Math.abs(lambda-lambdaP)>1e-12&&--iterLimit>0){var sinLambda=Math.sin(lambda),cosLambda=Math.cos(lambda);var sinSigma=Math.sqrt((cosU2*sinLambda)*(cosU2*sinLambda)+(cosU1*sinU2-sinU1*cosU2*cosLambda)*(cosU1*sinU2-sinU1*cosU2*cosLambda));if(sinSigma==0){return 0}var cosSigma=sinU1*sinU2+cosU1*cosU2*cosLambda;var sigma=Math.atan2(sinSigma,cosSigma);var alpha=Math.asin(cosU1*cosU2*sinLambda/sinSigma);var cosSqAlpha=Math.cos(alpha)*Math.cos(alpha);var cos2SigmaM=cosSigma-2*sinU1*sinU2/cosSqAlpha;var C=f/16*cosSqAlpha*(4+f*(4-3*cosSqAlpha));lambdaP=lambda;lambda=L+(1-C)*f*Math.sin(alpha)*(sigma+C*sinSigma*(cos2SigmaM+C*cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)))}if(iterLimit==0){return NaN}var uSq=cosSqAlpha*(a*a-b*b)/(b*b);var A=1+uSq/16384*(4096+uSq*(-768+uSq*(320-175*uSq)));var B=uSq/1024*(256+uSq*(-128+uSq*(74-47*uSq)));var deltaSigma=B*sinSigma*(cos2SigmaM+B/4*(cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)-B/6*cos2SigmaM*(-3+4*sinSigma*sinSigma)*(-3+4*cos2SigmaM*cos2SigmaM)));var s=b*A*(sigma-deltaSigma);var d=s.toFixed(3)/1000;return d};OpenLayers.Util.destinationVincenty=function(lonlat,brng,dist){var u=OpenLayers.Util;var ct=u.VincentyConstants;var a=ct.a,b=ct.b,f=ct.f;var lon1=lonlat.lon;var lat1=lonlat.lat;var s=dist;var alpha1=u.rad(brng);var sinAlpha1=Math.sin(alpha1);var cosAlpha1=Math.cos(alpha1);var tanU1=(1-f)*Math.tan(u.rad(lat1));var cosU1=1/Math.sqrt((1+tanU1*tanU1)),sinU1=tanU1*cosU1;var sigma1=Math.atan2(tanU1,cosAlpha1);var sinAlpha=cosU1*sinAlpha1;var cosSqAlpha=1-sinAlpha*sinAlpha;var uSq=cosSqAlpha*(a*a-b*b)/(b*b);var A=1+uSq/16384*(4096+uSq*(-768+uSq*(320-175*uSq)));var B=uSq/1024*(256+uSq*(-128+uSq*(74-47*uSq)));var sigma=s/(b*A),sigmaP=2*Math.PI;while(Math.abs(sigma-sigmaP)>1e-12){var cos2SigmaM=Math.cos(2*sigma1+sigma);var sinSigma=Math.sin(sigma);var cosSigma=Math.cos(sigma);var deltaSigma=B*sinSigma*(cos2SigmaM+B/4*(cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)-B/6*cos2SigmaM*(-3+4*sinSigma*sinSigma)*(-3+4*cos2SigmaM*cos2SigmaM)));sigmaP=sigma;sigma=s/(b*A)+deltaSigma}var tmp=sinU1*sinSigma-cosU1*cosSigma*cosAlpha1;var lat2=Math.atan2(sinU1*cosSigma+cosU1*sinSigma*cosAlpha1,(1-f)*Math.sqrt(sinAlpha*sinAlpha+tmp*tmp));var lambda=Math.atan2(sinSigma*sinAlpha1,cosU1*cosSigma-sinU1*sinSigma*cosAlpha1);var C=f/16*cosSqAlpha*(4+f*(4-3*cosSqAlpha));var L=lambda-(1-C)*f*sinAlpha*(sigma+C*sinSigma*(cos2SigmaM+C*cosSigma*(-1+2*cos2SigmaM*cos2SigmaM)));var revAz=Math.atan2(sinAlpha,-tmp);return new OpenLayers.LonLat(lon1+u.deg(L),u.deg(lat2))};OpenLayers.Util.getParameters=function(url,options){options=options||{};url=(url===null||url===undefined)?window.location.href:url;var paramsString="";if(OpenLayers.String.contains(url,"?")){var start=url.indexOf("?")+1;var end=OpenLayers.String.contains(url,"#")?url.indexOf("#"):url.length;paramsString=url.substring(start,end)}var parameters={};var pairs=paramsString.split(/[&;]/);for(var i=0,len=pairs.length;i<len;++i){var keyValue=pairs[i].split("=");if(keyValue[0]){var key=keyValue[0];try{key=decodeURIComponent(key)}catch(err){key=unescape(key)}var value=(keyValue[1]||"").replace(/\+/g," ");try{value=decodeURIComponent(value)}catch(err){value=unescape(value)}if(options.splitArgs!==false){value=value.split(",")}if(value.length==1){value=value[0]}parameters[key]=value}}return parameters};OpenLayers.Util.lastSeqID=0;OpenLayers.Util.createUniqueID=function(prefix){if(prefix==null){prefix="id_"}else{prefix=prefix.replace(OpenLayers.Util.dotless,"_")}OpenLayers.Util.lastSeqID+=1;return prefix+OpenLayers.Util.lastSeqID};OpenLayers.INCHES_PER_UNIT={inches:1,ft:12,mi:63360,m:39.37,km:39370,dd:4374754,yd:36};OpenLayers.INCHES_PER_UNIT["in"]=OpenLayers.INCHES_PER_UNIT.inches;OpenLayers.INCHES_PER_UNIT.degrees=OpenLayers.INCHES_PER_UNIT.dd;OpenLayers.INCHES_PER_UNIT.nmi=1852*OpenLayers.INCHES_PER_UNIT.m;OpenLayers.METERS_PER_INCH=0.0254000508001016;OpenLayers.Util.extend(OpenLayers.INCHES_PER_UNIT,{Inch:OpenLayers.INCHES_PER_UNIT.inches,Meter:1/OpenLayers.METERS_PER_INCH,Foot:0.3048006096012192/OpenLayers.METERS_PER_INCH,IFoot:0.3048/OpenLayers.METERS_PER_INCH,ClarkeFoot:0.3047972651151/OpenLayers.METERS_PER_INCH,SearsFoot:0.30479947153867626/OpenLayers.METERS_PER_INCH,GoldCoastFoot:0.3047997101815088/OpenLayers.METERS_PER_INCH,IInch:0.0254/OpenLayers.METERS_PER_INCH,MicroInch:0.0000254/OpenLayers.METERS_PER_INCH,Mil:2.54e-8/OpenLayers.METERS_PER_INCH,Centimeter:0.01/OpenLayers.METERS_PER_INCH,Kilometer:1000/OpenLayers.METERS_PER_INCH,Yard:0.9144018288036576/OpenLayers.METERS_PER_INCH,SearsYard:0.914398414616029/OpenLayers.METERS_PER_INCH,IndianYard:0.9143985307444408/OpenLayers.METERS_PER_INCH,IndianYd37:0.91439523/OpenLayers.METERS_PER_INCH,IndianYd62:0.9143988/OpenLayers.METERS_PER_INCH,IndianYd75:0.9143985/OpenLayers.METERS_PER_INCH,IndianFoot:0.30479951/OpenLayers.METERS_PER_INCH,IndianFt37:0.30479841/OpenLayers.METERS_PER_INCH,IndianFt62:0.3047996/OpenLayers.METERS_PER_INCH,IndianFt75:0.3047995/OpenLayers.METERS_PER_INCH,Mile:1609.3472186944373/OpenLayers.METERS_PER_INCH,IYard:0.9144/OpenLayers.METERS_PER_INCH,IMile:1609.344/OpenLayers.METERS_PER_INCH,NautM:1852/OpenLayers.METERS_PER_INCH,"Lat-66":110943.31648893273/OpenLayers.METERS_PER_INCH,"Lat-83":110946.25736872235/OpenLayers.METERS_PER_INCH,Decimeter:0.1/OpenLayers.METERS_PER_INCH,Millimeter:0.001/OpenLayers.METERS_PER_INCH,Dekameter:10/OpenLayers.METERS_PER_INCH,Decameter:10/OpenLayers.METERS_PER_INCH,Hectometer:100/OpenLayers.METERS_PER_INCH,GermanMeter:1.0000135965/OpenLayers.METERS_PER_INCH,CaGrid:0.999738/OpenLayers.METERS_PER_INCH,ClarkeChain:20.1166194976/OpenLayers.METERS_PER_INCH,GunterChain:20.11684023368047/OpenLayers.METERS_PER_INCH,BenoitChain:20.116782494375872/OpenLayers.METERS_PER_INCH,SearsChain:20.11676512155/OpenLayers.METERS_PER_INCH,ClarkeLink:0.201166194976/OpenLayers.METERS_PER_INCH,GunterLink:0.2011684023368047/OpenLayers.METERS_PER_INCH,BenoitLink:0.20116782494375873/OpenLayers.METERS_PER_INCH,SearsLink:0.2011676512155/OpenLayers.METERS_PER_INCH,Rod:5.02921005842012/OpenLayers.METERS_PER_INCH,IntnlChain:20.1168/OpenLayers.METERS_PER_INCH,IntnlLink:0.201168/OpenLayers.METERS_PER_INCH,Perch:5.02921005842012/OpenLayers.METERS_PER_INCH,Pole:5.02921005842012/OpenLayers.METERS_PER_INCH,Furlong:201.1684023368046/OpenLayers.METERS_PER_INCH,Rood:3.778266898/OpenLayers.METERS_PER_INCH,CapeFoot:0.3047972615/OpenLayers.METERS_PER_INCH,Brealey:375/OpenLayers.METERS_PER_INCH,ModAmFt:0.304812252984506/OpenLayers.METERS_PER_INCH,Fathom:1.8288/OpenLayers.METERS_PER_INCH,"NautM-UK":1853.184/OpenLayers.METERS_PER_INCH,"50kilometers":50000/OpenLayers.METERS_PER_INCH,"150kilometers":150000/OpenLayers.METERS_PER_INCH});OpenLayers.Util.extend(OpenLayers.INCHES_PER_UNIT,{mm:OpenLayers.INCHES_PER_UNIT.Meter/1000,cm:OpenLayers.INCHES_PER_UNIT.Meter/100,dm:OpenLayers.INCHES_PER_UNIT.Meter*100,km:OpenLayers.INCHES_PER_UNIT.Meter*1000,kmi:OpenLayers.INCHES_PER_UNIT.nmi,fath:OpenLayers.INCHES_PER_UNIT.Fathom,ch:OpenLayers.INCHES_PER_UNIT.IntnlChain,link:OpenLayers.INCHES_PER_UNIT.IntnlLink,"us-in":OpenLayers.INCHES_PER_UNIT.inches,"us-ft":OpenLayers.INCHES_PER_UNIT.Foot,"us-yd":OpenLayers.INCHES_PER_UNIT.Yard,"us-ch":OpenLayers.INCHES_PER_UNIT.GunterChain,"us-mi":OpenLayers.INCHES_PER_UNIT.Mile,"ind-yd":OpenLayers.INCHES_PER_UNIT.IndianYd37,"ind-ft":OpenLayers.INCHES_PER_UNIT.IndianFt37,"ind-ch":20.11669506/OpenLayers.METERS_PER_INCH});OpenLayers.DOTS_PER_INCH=72;OpenLayers.Util.normalizeScale=function(scale){var normScale=(scale>1)?(1/scale):scale;return normScale};OpenLayers.Util.getResolutionFromScale=function(scale,units){var resolution;if(scale){if(units==null){units="degrees"}var normScale=OpenLayers.Util.normalizeScale(scale);resolution=1/(normScale*OpenLayers.INCHES_PER_UNIT[units]*OpenLayers.DOTS_PER_INCH)}return resolution};OpenLayers.Util.getScaleFromResolution=function(resolution,units){if(units==null){units="degrees"}var scale=resolution*OpenLayers.INCHES_PER_UNIT[units]*OpenLayers.DOTS_PER_INCH;return scale};OpenLayers.Util.pagePosition=function(forElement){var pos=[0,0];var viewportElement=OpenLayers.Util.getViewportElement();if(!forElement||forElement==window||forElement==viewportElement){return pos}var BUGGY_GECKO_BOX_OBJECT=OpenLayers.IS_GECKO&&document.getBoxObjectFor&&OpenLayers.Element.getStyle(forElement,"position")=="absolute"&&(forElement.style.top==""||forElement.style.left=="");var parent=null;var box;if(forElement.getBoundingClientRect){box=forElement.getBoundingClientRect();var scrollTop=window.pageYOffset||viewportElement.scrollTop;var scrollLeft=window.pageXOffset||viewportElement.scrollLeft;pos[0]=box.left+scrollLeft;pos[1]=box.top+scrollTop}else{if(document.getBoxObjectFor&&!BUGGY_GECKO_BOX_OBJECT){box=document.getBoxObjectFor(forElement);var vpBox=document.getBoxObjectFor(viewportElement);pos[0]=box.screenX-vpBox.screenX;pos[1]=box.screenY-vpBox.screenY}else{pos[0]=forElement.offsetLeft;pos[1]=forElement.offsetTop;parent=forElement.offsetParent;if(parent!=forElement){while(parent){pos[0]+=parent.offsetLeft;pos[1]+=parent.offsetTop;parent=parent.offsetParent}}var browser=OpenLayers.BROWSER_NAME;if(browser=="opera"||(browser=="safari"&&OpenLayers.Element.getStyle(forElement,"position")=="absolute")){pos[1]-=document.body.offsetTop}parent=forElement.offsetParent;while(parent&&parent!=document.body){pos[0]-=parent.scrollLeft;if(browser!="opera"||parent.tagName!="TR"){pos[1]-=parent.scrollTop}parent=parent.offsetParent}}}return pos};OpenLayers.Util.getViewportElement=function(){var viewportElement=arguments.callee.viewportElement;if(viewportElement==undefined){viewportElement=(OpenLayers.BROWSER_NAME=="msie"&&document.compatMode!="CSS1Compat")?document.body:document.documentElement;arguments.callee.viewportElement=viewportElement}return viewportElement};OpenLayers.Util.isEquivalentUrl=function(url1,url2,options){options=options||{};OpenLayers.Util.applyDefaults(options,{ignoreCase:true,ignorePort80:true,ignoreHash:true,splitArgs:false});var urlObj1=OpenLayers.Util.createUrlObject(url1,options);var urlObj2=OpenLayers.Util.createUrlObject(url2,options);for(var key in urlObj1){if(key!=="args"){if(urlObj1[key]!=urlObj2[key]){return false}}}for(var key in urlObj1.args){if(urlObj1.args[key]!=urlObj2.args[key]){return false}delete urlObj2.args[key]}for(var key in urlObj2.args){return false}return true};OpenLayers.Util.createUrlObject=function(url,options){options=options||{};if(!(/^\w+:\/\//).test(url)){var loc=window.location;var port=loc.port?":"+loc.port:"";var fullUrl=loc.protocol+"//"+loc.host.split(":").shift()+port;if(url.indexOf("/")===0){url=fullUrl+url}else{var parts=loc.pathname.split("/");parts.pop();url=fullUrl+parts.join("/")+"/"+url}}if(options.ignoreCase){url=url.toLowerCase()}var a=document.createElement("a");a.href=url;var urlObject={};urlObject.host=a.host.split(":").shift();urlObject.protocol=a.protocol;if(options.ignorePort80){urlObject.port=(a.port=="80"||a.port=="0")?"":a.port}else{urlObject.port=(a.port==""||a.port=="0")?"80":a.port}urlObject.hash=(options.ignoreHash||a.hash==="#")?"":a.hash;var queryString=a.search;if(!queryString){var qMark=url.indexOf("?");queryString=(qMark!=-1)?url.substr(qMark):""}urlObject.args=OpenLayers.Util.getParameters(queryString,{splitArgs:options.splitArgs});urlObject.pathname=(a.pathname.charAt(0)=="/")?a.pathname:"/"+a.pathname;return urlObject};OpenLayers.Util.removeTail=function(url){var head=null;var qMark=url.indexOf("?");var hashMark=url.indexOf("#");if(qMark==-1){head=(hashMark!=-1)?url.substr(0,hashMark):url}else{head=(hashMark!=-1)?url.substr(0,Math.min(qMark,hashMark)):url.substr(0,qMark)}return head};OpenLayers.IS_GECKO=(function(){var ua=navigator.userAgent.toLowerCase();return ua.indexOf("webkit")==-1&&ua.indexOf("gecko")!=-1})();OpenLayers.CANVAS_SUPPORTED=(function(){var elem=document.createElement("canvas");return !!(elem.getContext&&elem.getContext("2d"))})();OpenLayers.BROWSER_NAME=(function(){var name="";var ua=navigator.userAgent.toLowerCase();if(ua.indexOf("opera")!=-1){name="opera"}else{if(ua.indexOf("msie")!=-1){name="msie"}else{if(ua.indexOf("safari")!=-1){name="safari"}else{if(ua.indexOf("mozilla")!=-1){if(ua.indexOf("firefox")!=-1){name="firefox"}else{name="mozilla"}}}}}return name})();OpenLayers.Util.getBrowserName=function(){return OpenLayers.BROWSER_NAME};OpenLayers.Util.getRenderedDimensions=function(contentHTML,size,options){var w,h;var container=document.createElement("div");container.style.visibility="hidden";var containerElement=(options&&options.containerElement)?options.containerElement:document.body;var parentHasPositionAbsolute=false;var superContainer=null;var parent=containerElement;while(parent&&parent.tagName.toLowerCase()!="body"){var parentPosition=OpenLayers.Element.getStyle(parent,"position");if(parentPosition=="absolute"){parentHasPositionAbsolute=true;break}else{if(parentPosition&&parentPosition!="static"){break}}parent=parent.parentNode}if(parentHasPositionAbsolute&&(containerElement.clientHeight===0||containerElement.clientWidth===0)){superContainer=document.createElement("div");superContainer.style.visibility="hidden";superContainer.style.position="absolute";superContainer.style.overflow="visible";superContainer.style.width=document.body.clientWidth+"px";superContainer.style.height=document.body.clientHeight+"px";superContainer.appendChild(container)}container.style.position="absolute";if(size){if(size.w){w=size.w;container.style.width=w+"px"}else{if(size.h){h=size.h;container.style.height=h+"px"}}}if(options&&options.displayClass){container.className=options.displayClass}var content=document.createElement("div");content.innerHTML=contentHTML;content.style.overflow="visible";if(content.childNodes){for(var i=0,l=content.childNodes.length;i<l;i++){if(!content.childNodes[i].style){continue}content.childNodes[i].style.overflow="visible"}}container.appendChild(content);if(superContainer){containerElement.appendChild(superContainer)}else{containerElement.appendChild(container)}if(!w){w=parseInt(content.scrollWidth);container.style.width=w+"px"}if(!h){h=parseInt(content.scrollHeight)}container.removeChild(content);if(superContainer){superContainer.removeChild(container);containerElement.removeChild(superContainer)}else{containerElement.removeChild(container)}return new OpenLayers.Size(w,h)};OpenLayers.Util.getScrollbarWidth=function(){var scrollbarWidth=OpenLayers.Util._scrollbarWidth;if(scrollbarWidth==null){var scr=null;var inn=null;var wNoScroll=0;var wScroll=0;scr=document.createElement("div");scr.style.position="absolute";scr.style.top="-1000px";scr.style.left="-1000px";scr.style.width="100px";scr.style.height="50px";scr.style.overflow="hidden";inn=document.createElement("div");inn.style.width="100%";inn.style.height="200px";scr.appendChild(inn);document.body.appendChild(scr);wNoScroll=inn.offsetWidth;scr.style.overflow="scroll";wScroll=inn.offsetWidth;document.body.removeChild(document.body.lastChild);OpenLayers.Util._scrollbarWidth=(wNoScroll-wScroll);scrollbarWidth=OpenLayers.Util._scrollbarWidth}return scrollbarWidth};OpenLayers.Util.getFormattedLonLat=function(coordinate,axis,dmsOption){if(!dmsOption){dmsOption="dms"}coordinate=(coordinate+540)%360-180;var abscoordinate=Math.abs(coordinate);var coordinatedegrees=Math.floor(abscoordinate);var coordinateminutes=(abscoordinate-coordinatedegrees)/(1/60);var tempcoordinateminutes=coordinateminutes;coordinateminutes=Math.floor(coordinateminutes);var coordinateseconds=(tempcoordinateminutes-coordinateminutes)/(1/60);coordinateseconds=Math.round(coordinateseconds*10);coordinateseconds/=10;if(coordinateseconds>=60){coordinateseconds-=60;coordinateminutes+=1;if(coordinateminutes>=60){coordinateminutes-=60;coordinatedegrees+=1}}if(coordinatedegrees<10){coordinatedegrees="0"+coordinatedegrees}var str=coordinatedegrees+"\u00B0";if(dmsOption.indexOf("dm")>=0){if(coordinateminutes<10){coordinateminutes="0"+coordinateminutes}str+=coordinateminutes+"'";if(dmsOption.indexOf("dms")>=0){if(coordinateseconds<10){coordinateseconds="0"+coordinateseconds}str+=coordinateseconds+'"'}}if(axis=="lon"){str+=coordinate<0?OpenLayers.i18n("W"):OpenLayers.i18n("E")}else{str+=coordinate<0?OpenLayers.i18n("S"):OpenLayers.i18n("N")}return str};OpenLayers.Util.getConstructor=function(className){var Constructor;var parts=className.split(".");if(parts[0]==="OpenLayers"){Constructor=OpenLayers}else{Constructor=window[parts[0]]}for(var i=1,ii=parts.length;i<ii;++i){Constructor=Constructor[parts[i]]}return Constructor};OpenLayers.Util=OpenLayers.Util||{};OpenLayers.Util.vendorPrefix=(function(){var VENDOR_PREFIXES=["","O","ms","Moz","Webkit"],divStyle=document.createElement("div").style,cssCache={},jsCache={};function domToCss(prefixedDom){if(!prefixedDom){return null}return prefixedDom.replace(/([A-Z])/g,function(c){return"-"+c.toLowerCase()}).replace(/^ms-/,"-ms-")}function css(property){if(cssCache[property]===undefined){var domProperty=property.replace(/(-[\s\S])/g,function(c){return c.charAt(1).toUpperCase()});var prefixedDom=style(domProperty);cssCache[property]=domToCss(prefixedDom)}return cssCache[property]}function js(obj,property){if(jsCache[property]===undefined){var tmpProp,i=0,l=VENDOR_PREFIXES.length,prefix,isStyleObj=(typeof obj.cssText!=="undefined");jsCache[property]=null;for(;i<l;i++){prefix=VENDOR_PREFIXES[i];if(prefix){if(!isStyleObj){prefix=prefix.toLowerCase()}tmpProp=prefix+property.charAt(0).toUpperCase()+property.slice(1)}else{tmpProp=property}if(obj[tmpProp]!==undefined){jsCache[property]=tmpProp;break}}}return jsCache[property]}function style(property){return js(divStyle,property)}return{css:css,js:js,style:style,cssCache:cssCache,jsCache:jsCache}}());OpenLayers.Event={observers:false,KEY_SPACE:32,KEY_BACKSPACE:8,KEY_TAB:9,KEY_RETURN:13,KEY_ESC:27,KEY_LEFT:37,KEY_UP:38,KEY_RIGHT:39,KEY_DOWN:40,KEY_DELETE:46,element:function(event){return event.target||event.srcElement},isSingleTouch:function(event){return event.touches&&event.touches.length==1},isMultiTouch:function(event){return event.touches&&event.touches.length>1},isLeftClick:function(event){return(((event.which)&&(event.which==1))||((event.button)&&(event.button==1)))},isRightClick:function(event){return(((event.which)&&(event.which==3))||((event.button)&&(event.button==2)))},stop:function(event,allowDefault){if(!allowDefault){OpenLayers.Event.preventDefault(event)}if(event.stopPropagation){event.stopPropagation()}else{event.cancelBubble=true}},preventDefault:function(event){if(event.preventDefault){event.preventDefault()}else{event.returnValue=false}},findElement:function(event,tagName){var element=OpenLayers.Event.element(event);while(element.parentNode&&(!element.tagName||(element.tagName.toUpperCase()!=tagName.toUpperCase()))){element=element.parentNode}return element},observe:function(elementParam,name,observer,useCapture){var element=OpenLayers.Util.getElement(elementParam);useCapture=useCapture||false;if(name=="keypress"&&(navigator.appVersion.match(/Konqueror|Safari|KHTML/)||element.attachEvent)){name="keydown"}if(!this.observers){this.observers={}}if(!element._eventCacheID){var idPrefix="eventCacheID_";if(element.id){idPrefix=element.id+"_"+idPrefix}element._eventCacheID=OpenLayers.Util.createUniqueID(idPrefix)}var cacheID=element._eventCacheID;if(!this.observers[cacheID]){this.observers[cacheID]=[]}this.observers[cacheID].push({element:element,name:name,observer:observer,useCapture:useCapture});if(element.addEventListener){element.addEventListener(name,observer,useCapture)}else{if(element.attachEvent){element.attachEvent("on"+name,observer)}}},stopObservingElement:function(elementParam){var element=OpenLayers.Util.getElement(elementParam);var cacheID=element._eventCacheID;this._removeElementObservers(OpenLayers.Event.observers[cacheID])},_removeElementObservers:function(elementObservers){if(elementObservers){for(var i=elementObservers.length-1;i>=0;i--){var entry=elementObservers[i];OpenLayers.Event.stopObserving.apply(this,[entry.element,entry.name,entry.observer,entry.useCapture])}}},stopObserving:function(elementParam,name,observer,useCapture){useCapture=useCapture||false;var element=OpenLayers.Util.getElement(elementParam);var cacheID=element._eventCacheID;if(name=="keypress"){if(navigator.appVersion.match(/Konqueror|Safari|KHTML/)||element.detachEvent){name="keydown"}}var foundEntry=false;var elementObservers=OpenLayers.Event.observers[cacheID];if(elementObservers){var i=0;while(!foundEntry&&i<elementObservers.length){var cacheEntry=elementObservers[i];if((cacheEntry.name==name)&&(cacheEntry.observer==observer)&&(cacheEntry.useCapture==useCapture)){elementObservers.splice(i,1);if(elementObservers.length==0){delete OpenLayers.Event.observers[cacheID]}foundEntry=true;break}i++}}if(foundEntry){if(element.removeEventListener){element.removeEventListener(name,observer,useCapture)}else{if(element&&element.detachEvent){element.detachEvent("on"+name,observer)}}}return foundEntry},unloadCache:function(){if(OpenLayers.Event&&OpenLayers.Event.observers){for(var cacheID in OpenLayers.Event.observers){var elementObservers=OpenLayers.Event.observers[cacheID];OpenLayers.Event._removeElementObservers.apply(this,[elementObservers])}OpenLayers.Event.observers=false}},CLASS_NAME:"OpenLayers.Event"};OpenLayers.Event.observe(window,"unload",OpenLayers.Event.unloadCache,false);OpenLayers.Events=OpenLayers.Class({BROWSER_EVENTS:["mouseover","mouseout","mousedown","mouseup","mousemove","click","dblclick","rightclick","dblrightclick","resize","focus","blur","touchstart","touchmove","touchend","keydown"],listeners:null,object:null,element:null,eventHandler:null,fallThrough:null,includeXY:false,extensions:null,extensionCount:null,clearMouseListener:null,initialize:function(object,element,eventTypes,fallThrough,options){OpenLayers.Util.extend(this,options);this.object=object;this.fallThrough=fallThrough;this.listeners={};this.extensions={};this.extensionCount={};this._msTouches=[];if(element!=null){this.attachToElement(element)}},destroy:function(){for(var e in this.extensions){if(typeof this.extensions[e]!=="boolean"){this.extensions[e].destroy()}}this.extensions=null;if(this.element){OpenLayers.Event.stopObservingElement(this.element);if(this.element.hasScrollEvent){OpenLayers.Event.stopObserving(window,"scroll",this.clearMouseListener)}}this.element=null;this.listeners=null;this.object=null;this.fallThrough=null;this.eventHandler=null},addEventType:function(eventName){},attachToElement:function(element){if(this.element){OpenLayers.Event.stopObservingElement(this.element)}else{this.eventHandler=OpenLayers.Function.bindAsEventListener(this.handleBrowserEvent,this);this.clearMouseListener=OpenLayers.Function.bind(this.clearMouseCache,this)}this.element=element;var msTouch=!!window.navigator.msMaxTouchPoints;var type;for(var i=0,len=this.BROWSER_EVENTS.length;i<len;i++){type=this.BROWSER_EVENTS[i];OpenLayers.Event.observe(element,type,this.eventHandler);if(msTouch&&type.indexOf("touch")===0){this.addMsTouchListener(element,type,this.eventHandler)}}OpenLayers.Event.observe(element,"dragstart",OpenLayers.Event.stop)},on:function(object){for(var type in object){if(type!="scope"&&object.hasOwnProperty(type)){this.register(type,object.scope,object[type])}}},register:function(type,obj,func,priority){if(type in OpenLayers.Events&&!this.extensions[type]){this.extensions[type]=new OpenLayers.Events[type](this)}if(func!=null){if(obj==null){obj=this.object}var listeners=this.listeners[type];if(!listeners){listeners=[];this.listeners[type]=listeners;this.extensionCount[type]=0}var listener={obj:obj,func:func};if(priority){listeners.splice(this.extensionCount[type],0,listener);if(typeof priority==="object"&&priority.extension){this.extensionCount[type]++}}else{listeners.push(listener)}}},registerPriority:function(type,obj,func){this.register(type,obj,func,true)},un:function(object){for(var type in object){if(type!="scope"&&object.hasOwnProperty(type)){this.unregister(type,object.scope,object[type])}}},unregister:function(type,obj,func){if(obj==null){obj=this.object}var listeners=this.listeners[type];if(listeners!=null){for(var i=0,len=listeners.length;i<len;i++){if(listeners[i].obj==obj&&listeners[i].func==func){listeners.splice(i,1);break}}}},remove:function(type){if(this.listeners[type]!=null){this.listeners[type]=[]}},triggerEvent:function(type,evt){var listeners=this.listeners[type];if(!listeners||listeners.length==0){return undefined}if(evt==null){evt={}}evt.object=this.object;evt.element=this.element;if(!evt.type){evt.type=type}listeners=listeners.slice();var continueChain;for(var i=0,len=listeners.length;i<len;i++){var callback=listeners[i];continueChain=callback.func.apply(callback.obj,[evt]);if((continueChain!=undefined)&&(continueChain==false)){break}}if(!this.fallThrough){OpenLayers.Event.stop(evt,true)}return continueChain},handleBrowserEvent:function(evt){var type=evt.type,listeners=this.listeners[type];if(!listeners||listeners.length==0){return}var touches=evt.touches;if(touches&&touches[0]){var x=0;var y=0;var num=touches.length;var touch;for(var i=0;i<num;++i){touch=this.getTouchClientXY(touches[i]);x+=touch.clientX;y+=touch.clientY}evt.clientX=x/num;evt.clientY=y/num}if(this.includeXY){evt.xy=this.getMousePosition(evt)}this.triggerEvent(type,evt)},getTouchClientXY:function(evt){var win=window.olMockWin||window,winPageX=win.pageXOffset,winPageY=win.pageYOffset,x=evt.clientX,y=evt.clientY;if(evt.pageY===0&&Math.floor(y)>Math.floor(evt.pageY)||evt.pageX===0&&Math.floor(x)>Math.floor(evt.pageX)){x=x-winPageX;y=y-winPageY}else{if(y<(evt.pageY-winPageY)||x<(evt.pageX-winPageX)){x=evt.pageX-winPageX;y=evt.pageY-winPageY}}evt.olClientX=x;evt.olClientY=y;return{clientX:x,clientY:y}},clearMouseCache:function(){this.element.scrolls=null;this.element.lefttop=null;this.element.offsets=null},getMousePosition:function(evt){if(!this.includeXY){this.clearMouseCache()}else{if(!this.element.hasScrollEvent){OpenLayers.Event.observe(window,"scroll",this.clearMouseListener);this.element.hasScrollEvent=true}}if(!this.element.scrolls){var viewportElement=OpenLayers.Util.getViewportElement();this.element.scrolls=[window.pageXOffset||viewportElement.scrollLeft,window.pageYOffset||viewportElement.scrollTop]}if(!this.element.lefttop){this.element.lefttop=[(document.documentElement.clientLeft||0),(document.documentElement.clientTop||0)]}if(!this.element.offsets){this.element.offsets=OpenLayers.Util.pagePosition(this.element)}return new OpenLayers.Pixel((evt.clientX+this.element.scrolls[0])-this.element.offsets[0]-this.element.lefttop[0],(evt.clientY+this.element.scrolls[1])-this.element.offsets[1]-this.element.lefttop[1])},addMsTouchListener:function(element,type,handler){var eventHandler=this.eventHandler;var touches=this._msTouches;function msHandler(evt){handler(OpenLayers.Util.applyDefaults({stopPropagation:function(){for(var i=touches.length-1;i>=0;--i){touches[i].stopPropagation()}},preventDefault:function(){for(var i=touches.length-1;i>=0;--i){touches[i].preventDefault()}},type:type},evt))}switch(type){case"touchstart":return this.addMsTouchListenerStart(element,type,msHandler);case"touchend":return this.addMsTouchListenerEnd(element,type,msHandler);case"touchmove":return this.addMsTouchListenerMove(element,type,msHandler);default:throw"Unknown touch event type"}},addMsTouchListenerStart:function(element,type,handler){var touches=this._msTouches;var cb=function(e){var alreadyInArray=false;for(var i=0,ii=touches.length;i<ii;++i){if(touches[i].pointerId==e.pointerId){alreadyInArray=true;break}}if(!alreadyInArray){touches.push(e)}e.touches=touches.slice();handler(e)};OpenLayers.Event.observe(element,"MSPointerDown",cb);var internalCb=function(e){for(var i=0,ii=touches.length;i<ii;++i){if(touches[i].pointerId==e.pointerId){touches.splice(i,1);break}}};OpenLayers.Event.observe(element,"MSPointerUp",internalCb)},addMsTouchListenerMove:function(element,type,handler){var touches=this._msTouches;var cb=function(e){if(e.pointerType==e.MSPOINTER_TYPE_MOUSE&&e.buttons==0){return}if(touches.length==1&&touches[0].pageX==e.pageX&&touches[0].pageY==e.pageY){return}for(var i=0,ii=touches.length;i<ii;++i){if(touches[i].pointerId==e.pointerId){touches[i]=e;break}}e.touches=touches.slice();handler(e)};OpenLayers.Event.observe(element,"MSPointerMove",cb)},addMsTouchListenerEnd:function(element,type,handler){var touches=this._msTouches;var cb=function(e){for(var i=0,ii=touches.length;i<ii;++i){if(touches[i].pointerId==e.pointerId){touches.splice(i,1);break}}e.touches=touches.slice();handler(e)};OpenLayers.Event.observe(element,"MSPointerUp",cb)},CLASS_NAME:"OpenLayers.Events"});OpenLayers.Animation=(function(window){var requestAnimationFrame=OpenLayers.Util.vendorPrefix.js(window,"requestAnimationFrame");var isNative=!!(requestAnimationFrame);var requestFrame=(function(){var request=window[requestAnimationFrame]||function(callback,element){window.setTimeout(callback,16)};return function(callback,element){request.apply(window,[callback,element])}})();var counter=0;var loops={};function start(callback,duration,element){duration=duration>0?duration:Number.POSITIVE_INFINITY;var id=++counter;var start=+new Date;loops[id]=function(){if(loops[id]&&+new Date-start<=duration){callback();if(loops[id]){requestFrame(loops[id],element)}}else{delete loops[id]}};requestFrame(loops[id],element);return id}function stop(id){delete loops[id]}return{isNative:isNative,requestFrame:requestFrame,start:start,stop:stop}})(window);OpenLayers.Tween=OpenLayers.Class({easing:null,begin:null,finish:null,duration:null,callbacks:null,time:null,minFrameRate:null,startTime:null,animationId:null,playing:false,initialize:function(easing){this.easing=(easing)?easing:OpenLayers.Easing.Expo.easeOut},start:function(begin,finish,duration,options){this.playing=true;this.begin=begin;this.finish=finish;this.duration=duration;this.callbacks=options.callbacks;this.minFrameRate=options.minFrameRate||30;this.time=0;this.startTime=new Date().getTime();OpenLayers.Animation.stop(this.animationId);this.animationId=null;if(this.callbacks&&this.callbacks.start){this.callbacks.start.call(this,this.begin)}this.animationId=OpenLayers.Animation.start(OpenLayers.Function.bind(this.play,this))},stop:function(){if(!this.playing){return}if(this.callbacks&&this.callbacks.done){this.callbacks.done.call(this,this.finish)}OpenLayers.Animation.stop(this.animationId);this.animationId=null;this.playing=false},play:function(){var value={};for(var i in this.begin){var b=this.begin[i];var f=this.finish[i];if(b==null||f==null||isNaN(b)||isNaN(f)){throw new TypeError("invalid value for Tween")}var c=f-b;value[i]=this.easing.apply(this,[this.time,b,c,this.duration])}this.time++;if(this.callbacks&&this.callbacks.eachStep){if((new Date().getTime()-this.startTime)/this.time<=1000/this.minFrameRate){this.callbacks.eachStep.call(this,value)}}if(this.time>this.duration){this.stop()}},CLASS_NAME:"OpenLayers.Tween"});OpenLayers.Easing={CLASS_NAME:"OpenLayers.Easing"};OpenLayers.Easing.Linear={easeIn:function(t,b,c,d){return c*t/d+b},easeOut:function(t,b,c,d){return c*t/d+b},easeInOut:function(t,b,c,d){return c*t/d+b},CLASS_NAME:"OpenLayers.Easing.Linear"};OpenLayers.Easing.Expo={easeIn:function(t,b,c,d){return(t==0)?b:c*Math.pow(2,10*(t/d-1))+b},easeOut:function(t,b,c,d){return(t==d)?b+c:c*(-Math.pow(2,-10*t/d)+1)+b},easeInOut:function(t,b,c,d){if(t==0){return b}if(t==d){return b+c}if((t/=d/2)<1){return c/2*Math.pow(2,10*(t-1))+b}return c/2*(-Math.pow(2,-10*--t)+2)+b},CLASS_NAME:"OpenLayers.Easing.Expo"};OpenLayers.Easing.Quad={easeIn:function(t,b,c,d){return c*(t/=d)*t+b},easeOut:function(t,b,c,d){return -c*(t/=d)*(t-2)+b},easeInOut:function(t,b,c,d){if((t/=d/2)<1){return c/2*t*t+b}return -c/2*((--t)*(t-2)-1)+b},CLASS_NAME:"OpenLayers.Easing.Quad"};OpenLayers.Projection=OpenLayers.Class({proj:null,projCode:null,titleRegEx:/\+title=[^\+]*/,initialize:function(projCode,options){OpenLayers.Util.extend(this,options);this.projCode=projCode;if(typeof Proj4js=="object"){this.proj=new Proj4js.Proj(projCode)}},getCode:function(){return this.proj?this.proj.srsCode:this.projCode},getUnits:function(){return this.proj?this.proj.units:null},toString:function(){return this.getCode()},equals:function(projection){var p=projection,equals=false;if(p){if(!(p instanceof OpenLayers.Projection)){p=new OpenLayers.Projection(p)}if((typeof Proj4js=="object")&&this.proj.defData&&p.proj.defData){equals=this.proj.defData.replace(this.titleRegEx,"")==p.proj.defData.replace(this.titleRegEx,"")}else{if(p.getCode){var source=this.getCode(),target=p.getCode();equals=source==target||!!OpenLayers.Projection.transforms[source]&&OpenLayers.Projection.transforms[source][target]===OpenLayers.Projection.nullTransform}}}return equals},destroy:function(){delete this.proj;delete this.projCode},CLASS_NAME:"OpenLayers.Projection"});OpenLayers.Projection.transforms={};OpenLayers.Projection.defaults={"EPSG:4326":{units:"degrees",maxExtent:[-180,-90,180,90],yx:true},"CRS:84":{units:"degrees",maxExtent:[-180,-90,180,90]},"EPSG:900913":{units:"m",maxExtent:[-20037508.34,-20037508.34,20037508.34,20037508.34]}};OpenLayers.Projection.addTransform=function(from,to,method){if(method===OpenLayers.Projection.nullTransform){var defaults=OpenLayers.Projection.defaults[from];if(defaults&&!OpenLayers.Projection.defaults[to]){OpenLayers.Projection.defaults[to]=defaults}}if(!OpenLayers.Projection.transforms[from]){OpenLayers.Projection.transforms[from]={}}OpenLayers.Projection.transforms[from][to]=method};OpenLayers.Projection.transform=function(point,source,dest){if(source&&dest){if(!(source instanceof OpenLayers.Projection)){source=new OpenLayers.Projection(source)}if(!(dest instanceof OpenLayers.Projection)){dest=new OpenLayers.Projection(dest)}if(source.proj&&dest.proj){point=Proj4js.transform(source.proj,dest.proj,point)}else{var sourceCode=source.getCode();var destCode=dest.getCode();var transforms=OpenLayers.Projection.transforms;if(transforms[sourceCode]&&transforms[sourceCode][destCode]){transforms[sourceCode][destCode](point)}}}return point};OpenLayers.Projection.nullTransform=function(point){return point};(function(){var pole=20037508.34;function inverseMercator(xy){xy.x=180*xy.x/pole;xy.y=180/Math.PI*(2*Math.atan(Math.exp((xy.y/pole)*Math.PI))-Math.PI/2);return xy}function forwardMercator(xy){xy.x=xy.x*pole/180;var y=Math.log(Math.tan((90+xy.y)*Math.PI/360))/Math.PI*pole;xy.y=Math.max(-20037508.34,Math.min(y,20037508.34));return xy}function map(base,codes){var add=OpenLayers.Projection.addTransform;var same=OpenLayers.Projection.nullTransform;var i,len,code,other,j;for(i=0,len=codes.length;i<len;++i){code=codes[i];add(base,code,forwardMercator);add(code,base,inverseMercator);for(j=i+1;j<len;++j){other=codes[j];add(code,other,same);add(other,code,same)}}}var mercator=["EPSG:900913","EPSG:3857","EPSG:102113","EPSG:102100","OSGEO:41001"],geographic=["CRS:84","urn:ogc:def:crs:EPSG:6.6:4326","EPSG:4326"],i;for(i=mercator.length-1;i>=0;--i){map(mercator[i],geographic)}for(i=geographic.length-1;i>=0;--i){map(geographic[i],mercator)}})();OpenLayers.Map=OpenLayers.Class({Z_INDEX_BASE:{BaseLayer:100,Overlay:325,Feature:725,Popup:750,Control:1000},id:null,fractionalZoom:false,events:null,allOverlays:false,div:null,dragging:false,size:null,viewPortDiv:null,layerContainerOrigin:null,layerContainerDiv:null,layers:null,controls:null,popups:null,baseLayer:null,center:null,resolution:null,zoom:0,panRatio:1.5,options:null,tileSize:null,projection:"EPSG:4326",units:null,resolutions:null,maxResolution:null,minResolution:null,maxScale:null,minScale:null,maxExtent:null,minExtent:null,restrictedExtent:null,numZoomLevels:16,theme:null,displayProjection:null,fallThrough:false,autoUpdateSize:true,eventListeners:null,panTween:null,panMethod:OpenLayers.Easing.Expo.easeOut,panDuration:50,zoomTween:null,zoomMethod:OpenLayers.Easing.Quad.easeOut,zoomDuration:20,paddingForPopups:null,layerContainerOriginPx:null,minPx:null,maxPx:null,initialize:function(div,options){if(arguments.length===1&&typeof div==="object"){options=div;div=options&&options.div}this.tileSize=new OpenLayers.Size(OpenLayers.Map.TILE_WIDTH,OpenLayers.Map.TILE_HEIGHT);this.paddingForPopups=new OpenLayers.Bounds(15,15,15,15);this.theme=OpenLayers._getScriptLocation()+"theme/default/style.css";this.options=OpenLayers.Util.extend({},options);OpenLayers.Util.extend(this,options);var projCode=this.projection instanceof OpenLayers.Projection?this.projection.projCode:this.projection;OpenLayers.Util.applyDefaults(this,OpenLayers.Projection.defaults[projCode]);if(this.maxExtent&&!(this.maxExtent instanceof OpenLayers.Bounds)){this.maxExtent=new OpenLayers.Bounds(this.maxExtent)}if(this.minExtent&&!(this.minExtent instanceof OpenLayers.Bounds)){this.minExtent=new OpenLayers.Bounds(this.minExtent)}if(this.restrictedExtent&&!(this.restrictedExtent instanceof OpenLayers.Bounds)){this.restrictedExtent=new OpenLayers.Bounds(this.restrictedExtent)}if(this.center&&!(this.center instanceof OpenLayers.LonLat)){this.center=new OpenLayers.LonLat(this.center)}this.layers=[];this.id=OpenLayers.Util.createUniqueID("OpenLayers.Map_");this.div=OpenLayers.Util.getElement(div);if(!this.div){this.div=document.createElement("div");this.div.style.height="1px";this.div.style.width="1px"}OpenLayers.Element.addClass(this.div,"olMap");var id=this.id+"_OpenLayers_ViewPort";this.viewPortDiv=OpenLayers.Util.createDiv(id,null,null,null,"relative",null,"hidden");this.viewPortDiv.style.width="100%";this.viewPortDiv.style.height="100%";this.viewPortDiv.className="olMapViewport";this.div.appendChild(this.viewPortDiv);this.events=new OpenLayers.Events(this,this.viewPortDiv,null,this.fallThrough,{includeXY:true});if(OpenLayers.TileManager&&this.tileManager!==null){if(!(this.tileManager instanceof OpenLayers.TileManager)){this.tileManager=new OpenLayers.TileManager(this.tileManager)}this.tileManager.addMap(this)}id=this.id+"_OpenLayers_Container";this.layerContainerDiv=OpenLayers.Util.createDiv(id);this.layerContainerDiv.style.zIndex=this.Z_INDEX_BASE.Popup-1;this.layerContainerOriginPx={x:0,y:0};this.applyTransform();this.viewPortDiv.appendChild(this.layerContainerDiv);this.updateSize();if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)}if(this.autoUpdateSize===true){this.updateSizeDestroy=OpenLayers.Function.bind(this.updateSize,this);OpenLayers.Event.observe(window,"resize",this.updateSizeDestroy)}if(this.theme){var addNode=true;var nodes=document.getElementsByTagName("link");for(var i=0,len=nodes.length;i<len;++i){if(OpenLayers.Util.isEquivalentUrl(nodes.item(i).href,this.theme)){addNode=false;break}}if(addNode){var cssNode=document.createElement("link");cssNode.setAttribute("rel","stylesheet");cssNode.setAttribute("type","text/css");cssNode.setAttribute("href",this.theme);document.getElementsByTagName("head")[0].appendChild(cssNode)}}if(this.controls==null){this.controls=[];if(OpenLayers.Control!=null){if(OpenLayers.Control.Navigation){this.controls.push(new OpenLayers.Control.Navigation())}else{if(OpenLayers.Control.TouchNavigation){this.controls.push(new OpenLayers.Control.TouchNavigation())}}if(OpenLayers.Control.Zoom){this.controls.push(new OpenLayers.Control.Zoom())}else{if(OpenLayers.Control.PanZoom){this.controls.push(new OpenLayers.Control.PanZoom())}}if(OpenLayers.Control.ArgParser){this.controls.push(new OpenLayers.Control.ArgParser())}if(OpenLayers.Control.Attribution){this.controls.push(new OpenLayers.Control.Attribution())}}}for(var i=0,len=this.controls.length;i<len;i++){this.addControlToMap(this.controls[i])}this.popups=[];this.unloadDestroy=OpenLayers.Function.bind(this.destroy,this);OpenLayers.Event.observe(window,"unload",this.unloadDestroy);if(options&&options.layers){delete this.center;delete this.zoom;this.addLayers(options.layers);if(options.center&&!this.getCenter()){this.setCenter(options.center,options.zoom)}}if(this.panMethod){this.panTween=new OpenLayers.Tween(this.panMethod)}if(this.zoomMethod&&this.applyTransform.transform){this.zoomTween=new OpenLayers.Tween(this.zoomMethod)}},getViewport:function(){return this.viewPortDiv},render:function(div){this.div=OpenLayers.Util.getElement(div);OpenLayers.Element.addClass(this.div,"olMap");this.viewPortDiv.parentNode.removeChild(this.viewPortDiv);this.div.appendChild(this.viewPortDiv);this.updateSize()},unloadDestroy:null,updateSizeDestroy:null,destroy:function(){if(!this.unloadDestroy){return false}if(this.panTween){this.panTween.stop();this.panTween=null}if(this.zoomTween){this.zoomTween.stop();this.zoomTween=null}OpenLayers.Event.stopObserving(window,"unload",this.unloadDestroy);this.unloadDestroy=null;if(this.updateSizeDestroy){OpenLayers.Event.stopObserving(window,"resize",this.updateSizeDestroy)}this.paddingForPopups=null;if(this.controls!=null){for(var i=this.controls.length-1;i>=0;--i){this.controls[i].destroy()}this.controls=null}if(this.layers!=null){for(var i=this.layers.length-1;i>=0;--i){this.layers[i].destroy(false)}this.layers=null}if(this.viewPortDiv&&this.viewPortDiv.parentNode){this.viewPortDiv.parentNode.removeChild(this.viewPortDiv)}this.viewPortDiv=null;if(this.tileManager){this.tileManager.removeMap(this);this.tileManager=null}if(this.eventListeners){this.events.un(this.eventListeners);this.eventListeners=null}this.events.destroy();this.events=null;this.options=null},setOptions:function(options){var updatePxExtent=this.minPx&&options.restrictedExtent!=this.restrictedExtent;OpenLayers.Util.extend(this,options);updatePxExtent&&this.moveTo(this.getCachedCenter(),this.zoom,{forceZoomChange:true})},getTileSize:function(){return this.tileSize},getBy:function(array,property,match){var test=(typeof match.test=="function");var found=OpenLayers.Array.filter(this[array],function(item){return item[property]==match||(test&&match.test(item[property]))});return found},getLayersBy:function(property,match){return this.getBy("layers",property,match)},getLayersByName:function(match){return this.getLayersBy("name",match)},getLayersByClass:function(match){return this.getLayersBy("CLASS_NAME",match)},getControlsBy:function(property,match){return this.getBy("controls",property,match)},getControlsByClass:function(match){return this.getControlsBy("CLASS_NAME",match)},getLayer:function(id){var foundLayer=null;for(var i=0,len=this.layers.length;i<len;i++){var layer=this.layers[i];if(layer.id==id){foundLayer=layer;break}}return foundLayer},setLayerZIndex:function(layer,zIdx){layer.setZIndex(this.Z_INDEX_BASE[layer.isBaseLayer?"BaseLayer":"Overlay"]+zIdx*5)},resetLayersZIndex:function(){for(var i=0,len=this.layers.length;i<len;i++){var layer=this.layers[i];this.setLayerZIndex(layer,i)}},addLayer:function(layer){for(var i=0,len=this.layers.length;i<len;i++){if(this.layers[i]==layer){return false}}if(this.events.triggerEvent("preaddlayer",{layer:layer})===false){return false}if(this.allOverlays){layer.isBaseLayer=false}layer.div.className="olLayerDiv";layer.div.style.overflow="";this.setLayerZIndex(layer,this.layers.length);if(layer.isFixed){this.viewPortDiv.appendChild(layer.div)}else{this.layerContainerDiv.appendChild(layer.div)}this.layers.push(layer);layer.setMap(this);if(layer.isBaseLayer||(this.allOverlays&&!this.baseLayer)){if(this.baseLayer==null){this.setBaseLayer(layer)}else{layer.setVisibility(false)}}else{layer.redraw()}this.events.triggerEvent("addlayer",{layer:layer});layer.events.triggerEvent("added",{map:this,layer:layer});layer.afterAdd();return true},addLayers:function(layers){for(var i=0,len=layers.length;i<len;i++){this.addLayer(layers[i])}},removeLayer:function(layer,setNewBaseLayer){if(this.events.triggerEvent("preremovelayer",{layer:layer})===false){return}if(setNewBaseLayer==null){setNewBaseLayer=true}if(layer.isFixed){this.viewPortDiv.removeChild(layer.div)}else{this.layerContainerDiv.removeChild(layer.div)}OpenLayers.Util.removeItem(this.layers,layer);layer.removeMap(this);layer.map=null;if(this.baseLayer==layer){this.baseLayer=null;if(setNewBaseLayer){for(var i=0,len=this.layers.length;i<len;i++){var iLayer=this.layers[i];if(iLayer.isBaseLayer||this.allOverlays){this.setBaseLayer(iLayer);break}}}}this.resetLayersZIndex();this.events.triggerEvent("removelayer",{layer:layer});layer.events.triggerEvent("removed",{map:this,layer:layer})},getNumLayers:function(){return this.layers.length},getLayerIndex:function(layer){return OpenLayers.Util.indexOf(this.layers,layer)},setLayerIndex:function(layer,idx){var base=this.getLayerIndex(layer);if(idx<0){idx=0}else{if(idx>this.layers.length){idx=this.layers.length}}if(base!=idx){this.layers.splice(base,1);this.layers.splice(idx,0,layer);for(var i=0,len=this.layers.length;i<len;i++){this.setLayerZIndex(this.layers[i],i)}this.events.triggerEvent("changelayer",{layer:layer,property:"order"});if(this.allOverlays){if(idx===0){this.setBaseLayer(layer)}else{if(this.baseLayer!==this.layers[0]){this.setBaseLayer(this.layers[0])}}}}},raiseLayer:function(layer,delta){var idx=this.getLayerIndex(layer)+delta;this.setLayerIndex(layer,idx)},setBaseLayer:function(newBaseLayer){if(newBaseLayer!=this.baseLayer){if(OpenLayers.Util.indexOf(this.layers,newBaseLayer)!=-1){var center=this.getCachedCenter();var newResolution=OpenLayers.Util.getResolutionFromScale(this.getScale(),newBaseLayer.units);if(this.baseLayer!=null&&!this.allOverlays){this.baseLayer.setVisibility(false)}this.baseLayer=newBaseLayer;if(!this.allOverlays||this.baseLayer.visibility){this.baseLayer.setVisibility(true);if(this.baseLayer.inRange===false){this.baseLayer.redraw()}}if(center!=null){var newZoom=this.getZoomForResolution(newResolution||this.resolution,true);this.setCenter(center,newZoom,false,true)}this.events.triggerEvent("changebaselayer",{layer:this.baseLayer})}}},addControl:function(control,px){this.controls.push(control);this.addControlToMap(control,px)},addControls:function(controls,pixels){var pxs=(arguments.length===1)?[]:pixels;for(var i=0,len=controls.length;i<len;i++){var ctrl=controls[i];var px=(pxs[i])?pxs[i]:null;this.addControl(ctrl,px)}},addControlToMap:function(control,px){control.outsideViewport=(control.div!=null);if(this.displayProjection&&!control.displayProjection){control.displayProjection=this.displayProjection}control.setMap(this);var div=control.draw(px);if(div){if(!control.outsideViewport){div.style.zIndex=this.Z_INDEX_BASE.Control+this.controls.length;this.viewPortDiv.appendChild(div)}}if(control.autoActivate){control.activate()}},getControl:function(id){var returnControl=null;for(var i=0,len=this.controls.length;i<len;i++){var control=this.controls[i];if(control.id==id){returnControl=control;break}}return returnControl},removeControl:function(control){if((control)&&(control==this.getControl(control.id))){if(control.div&&(control.div.parentNode==this.viewPortDiv)){this.viewPortDiv.removeChild(control.div)}OpenLayers.Util.removeItem(this.controls,control)}},addPopup:function(popup,exclusive){if(exclusive){for(var i=this.popups.length-1;i>=0;--i){this.removePopup(this.popups[i])}}popup.map=this;this.popups.push(popup);var popupDiv=popup.draw();if(popupDiv){popupDiv.style.zIndex=this.Z_INDEX_BASE.Popup+this.popups.length;this.layerContainerDiv.appendChild(popupDiv)}},removePopup:function(popup){OpenLayers.Util.removeItem(this.popups,popup);if(popup.div){try{this.layerContainerDiv.removeChild(popup.div)}catch(e){}}popup.map=null},getSize:function(){var size=null;if(this.size!=null){size=this.size.clone()}return size},updateSize:function(){var newSize=this.getCurrentSize();if(newSize&&!isNaN(newSize.h)&&!isNaN(newSize.w)){this.events.clearMouseCache();var oldSize=this.getSize();if(oldSize==null){this.size=oldSize=newSize}if(!newSize.equals(oldSize)){this.size=newSize;for(var i=0,len=this.layers.length;i<len;i++){this.layers[i].onMapResize()}var center=this.getCachedCenter();if(this.baseLayer!=null&&center!=null){var zoom=this.getZoom();this.zoom=null;this.setCenter(center,zoom)}}}this.events.triggerEvent("updatesize")},getCurrentSize:function(){var size=new OpenLayers.Size(this.div.clientWidth,this.div.clientHeight);if(size.w==0&&size.h==0||isNaN(size.w)&&isNaN(size.h)){size.w=this.div.offsetWidth;size.h=this.div.offsetHeight}if(size.w==0&&size.h==0||isNaN(size.w)&&isNaN(size.h)){size.w=parseInt(this.div.style.width);size.h=parseInt(this.div.style.height)}return size},calculateBounds:function(center,resolution){var extent=null;if(center==null){center=this.getCachedCenter()}if(resolution==null){resolution=this.getResolution()}if((center!=null)&&(resolution!=null)){var halfWDeg=(this.size.w*resolution)/2;var halfHDeg=(this.size.h*resolution)/2;extent=new OpenLayers.Bounds(center.lon-halfWDeg,center.lat-halfHDeg,center.lon+halfWDeg,center.lat+halfHDeg)}return extent},getCenter:function(){var center=null;var cachedCenter=this.getCachedCenter();if(cachedCenter){center=cachedCenter.clone()}return center},getCachedCenter:function(){if(!this.center&&this.size){this.center=this.getLonLatFromViewPortPx({x:this.size.w/2,y:this.size.h/2})}return this.center},getZoom:function(){return this.zoom},pan:function(dx,dy,options){options=OpenLayers.Util.applyDefaults(options,{animate:true,dragging:false});if(options.dragging){if(dx!=0||dy!=0){this.moveByPx(dx,dy)}}else{var centerPx=this.getViewPortPxFromLonLat(this.getCachedCenter());var newCenterPx=centerPx.add(dx,dy);if(this.dragging||!newCenterPx.equals(centerPx)){var newCenterLonLat=this.getLonLatFromViewPortPx(newCenterPx);if(options.animate){this.panTo(newCenterLonLat)}else{this.moveTo(newCenterLonLat);if(this.dragging){this.dragging=false;this.events.triggerEvent("moveend")}}}}},panTo:function(lonlat){if(this.panTween&&this.getExtent().scale(this.panRatio).containsLonLat(lonlat)){var center=this.getCachedCenter();if(lonlat.equals(center)){return}var from=this.getPixelFromLonLat(center);var to=this.getPixelFromLonLat(lonlat);var vector={x:to.x-from.x,y:to.y-from.y};var last={x:0,y:0};this.panTween.start({x:0,y:0},vector,this.panDuration,{callbacks:{eachStep:OpenLayers.Function.bind(function(px){var x=px.x-last.x,y=px.y-last.y;this.moveByPx(x,y);last.x=Math.round(px.x);last.y=Math.round(px.y)},this),done:OpenLayers.Function.bind(function(px){this.moveTo(lonlat);this.dragging=false;this.events.triggerEvent("moveend")},this)}})}else{this.setCenter(lonlat)}},setCenter:function(lonlat,zoom,dragging,forceZoomChange){if(this.panTween){this.panTween.stop()}if(this.zoomTween){this.zoomTween.stop()}this.moveTo(lonlat,zoom,{dragging:dragging,forceZoomChange:forceZoomChange})},moveByPx:function(dx,dy){var hw=this.size.w/2;var hh=this.size.h/2;var x=hw+dx;var y=hh+dy;var wrapDateLine=this.baseLayer.wrapDateLine;var xRestriction=0;var yRestriction=0;if(this.restrictedExtent){xRestriction=hw;yRestriction=hh;wrapDateLine=false}dx=wrapDateLine||x<=this.maxPx.x-xRestriction&&x>=this.minPx.x+xRestriction?Math.round(dx):0;dy=y<=this.maxPx.y-yRestriction&&y>=this.minPx.y+yRestriction?Math.round(dy):0;if(dx||dy){if(!this.dragging){this.dragging=true;this.events.triggerEvent("movestart")}this.center=null;if(dx){this.layerContainerOriginPx.x-=dx;this.minPx.x-=dx;this.maxPx.x-=dx}if(dy){this.layerContainerOriginPx.y-=dy;this.minPx.y-=dy;this.maxPx.y-=dy}this.applyTransform();var layer,i,len;for(i=0,len=this.layers.length;i<len;++i){layer=this.layers[i];if(layer.visibility&&(layer===this.baseLayer||layer.inRange)){layer.moveByPx(dx,dy);layer.events.triggerEvent("move")}}this.events.triggerEvent("move")}},adjustZoom:function(zoom){if(this.baseLayer&&this.baseLayer.wrapDateLine){var resolution,resolutions=this.baseLayer.resolutions,maxResolution=this.getMaxExtent().getWidth()/this.size.w;if(this.getResolutionForZoom(zoom)>maxResolution){if(this.fractionalZoom){zoom=this.getZoomForResolution(maxResolution)}else{for(var i=zoom|0,ii=resolutions.length;i<ii;++i){if(resolutions[i]<=maxResolution){zoom=i;break}}}}}return zoom},getMinZoom:function(){return this.adjustZoom(0)},moveTo:function(lonlat,zoom,options){if(lonlat!=null&&!(lonlat instanceof OpenLayers.LonLat)){lonlat=new OpenLayers.LonLat(lonlat)}if(!options){options={}}if(zoom!=null){zoom=parseFloat(zoom);if(!this.fractionalZoom){zoom=Math.round(zoom)}}var requestedZoom=zoom;zoom=this.adjustZoom(zoom);if(zoom!==requestedZoom){lonlat=this.getCenter()}var dragging=options.dragging||this.dragging;var forceZoomChange=options.forceZoomChange;if(!this.getCachedCenter()&&!this.isValidLonLat(lonlat)){lonlat=this.maxExtent.getCenterLonLat();this.center=lonlat.clone()}if(this.restrictedExtent!=null){if(lonlat==null){lonlat=this.center}if(zoom==null){zoom=this.getZoom()}var resolution=this.getResolutionForZoom(zoom);var extent=this.calculateBounds(lonlat,resolution);if(!this.restrictedExtent.containsBounds(extent)){var maxCenter=this.restrictedExtent.getCenterLonLat();if(extent.getWidth()>this.restrictedExtent.getWidth()){lonlat=new OpenLayers.LonLat(maxCenter.lon,lonlat.lat)}else{if(extent.left<this.restrictedExtent.left){lonlat=lonlat.add(this.restrictedExtent.left-extent.left,0)}else{if(extent.right>this.restrictedExtent.right){lonlat=lonlat.add(this.restrictedExtent.right-extent.right,0)}}}if(extent.getHeight()>this.restrictedExtent.getHeight()){lonlat=new OpenLayers.LonLat(lonlat.lon,maxCenter.lat)}else{if(extent.bottom<this.restrictedExtent.bottom){lonlat=lonlat.add(0,this.restrictedExtent.bottom-extent.bottom)}else{if(extent.top>this.restrictedExtent.top){lonlat=lonlat.add(0,this.restrictedExtent.top-extent.top)}}}}}var zoomChanged=forceZoomChange||((this.isValidZoomLevel(zoom))&&(zoom!=this.getZoom()));var centerChanged=(this.isValidLonLat(lonlat))&&(!lonlat.equals(this.center));if(zoomChanged||centerChanged||dragging){dragging||this.events.triggerEvent("movestart",{zoomChanged:zoomChanged});if(centerChanged){if(!zoomChanged&&this.center){this.centerLayerContainer(lonlat)}this.center=lonlat.clone()}var res=zoomChanged?this.getResolutionForZoom(zoom):this.getResolution();if(zoomChanged||this.layerContainerOrigin==null){this.layerContainerOrigin=this.getCachedCenter();this.layerContainerOriginPx.x=0;this.layerContainerOriginPx.y=0;this.applyTransform();var maxExtent=this.getMaxExtent({restricted:true});var maxExtentCenter=maxExtent.getCenterLonLat();var lonDelta=this.center.lon-maxExtentCenter.lon;var latDelta=maxExtentCenter.lat-this.center.lat;var extentWidth=Math.round(maxExtent.getWidth()/res);var extentHeight=Math.round(maxExtent.getHeight()/res);this.minPx={x:(this.size.w-extentWidth)/2-lonDelta/res,y:(this.size.h-extentHeight)/2-latDelta/res};this.maxPx={x:this.minPx.x+Math.round(maxExtent.getWidth()/res),y:this.minPx.y+Math.round(maxExtent.getHeight()/res)}}if(zoomChanged){this.zoom=zoom;this.resolution=res}var bounds=this.getExtent();if(this.baseLayer.visibility){this.baseLayer.moveTo(bounds,zoomChanged,options.dragging);options.dragging||this.baseLayer.events.triggerEvent("moveend",{zoomChanged:zoomChanged})}bounds=this.baseLayer.getExtent();for(var i=this.layers.length-1;i>=0;--i){var layer=this.layers[i];if(layer!==this.baseLayer&&!layer.isBaseLayer){var inRange=layer.calculateInRange();if(layer.inRange!=inRange){layer.inRange=inRange;if(!inRange){layer.display(false)}this.events.triggerEvent("changelayer",{layer:layer,property:"visibility"})}if(inRange&&layer.visibility){layer.moveTo(bounds,zoomChanged,options.dragging);options.dragging||layer.events.triggerEvent("moveend",{zoomChanged:zoomChanged})}}}this.events.triggerEvent("move");dragging||this.events.triggerEvent("moveend");if(zoomChanged){for(var i=0,len=this.popups.length;i<len;i++){this.popups[i].updatePosition()}this.events.triggerEvent("zoomend")}}},centerLayerContainer:function(lonlat){var originPx=this.getViewPortPxFromLonLat(this.layerContainerOrigin);var newPx=this.getViewPortPxFromLonLat(lonlat);if((originPx!=null)&&(newPx!=null)){var oldLeft=this.layerContainerOriginPx.x;var oldTop=this.layerContainerOriginPx.y;var newLeft=Math.round(originPx.x-newPx.x);var newTop=Math.round(originPx.y-newPx.y);this.applyTransform((this.layerContainerOriginPx.x=newLeft),(this.layerContainerOriginPx.y=newTop));var dx=oldLeft-newLeft;var dy=oldTop-newTop;this.minPx.x-=dx;this.maxPx.x-=dx;this.minPx.y-=dy;this.maxPx.y-=dy}},isValidZoomLevel:function(zoomLevel){return((zoomLevel!=null)&&(zoomLevel>=0)&&(zoomLevel<this.getNumZoomLevels()))},isValidLonLat:function(lonlat){var valid=false;if(lonlat!=null){var maxExtent=this.getMaxExtent();var worldBounds=this.baseLayer.wrapDateLine&&maxExtent;valid=maxExtent.containsLonLat(lonlat,{worldBounds:worldBounds})}return valid},getProjection:function(){var projection=this.getProjectionObject();return projection?projection.getCode():null},getProjectionObject:function(){var projection=null;if(this.baseLayer!=null){projection=this.baseLayer.projection}return projection},getMaxResolution:function(){var maxResolution=null;if(this.baseLayer!=null){maxResolution=this.baseLayer.maxResolution}return maxResolution},getMaxExtent:function(options){var maxExtent=null;if(options&&options.restricted&&this.restrictedExtent){maxExtent=this.restrictedExtent}else{if(this.baseLayer!=null){maxExtent=this.baseLayer.maxExtent}}return maxExtent},getNumZoomLevels:function(){var numZoomLevels=null;if(this.baseLayer!=null){numZoomLevels=this.baseLayer.numZoomLevels}return numZoomLevels},getExtent:function(){var extent=null;if(this.baseLayer!=null){extent=this.baseLayer.getExtent()}return extent},getResolution:function(){var resolution=null;if(this.baseLayer!=null){resolution=this.baseLayer.getResolution()}else{if(this.allOverlays===true&&this.layers.length>0){resolution=this.layers[0].getResolution()}}return resolution},getUnits:function(){var units=null;if(this.baseLayer!=null){units=this.baseLayer.units}return units},getScale:function(){var scale=null;if(this.baseLayer!=null){var res=this.getResolution();var units=this.baseLayer.units;scale=OpenLayers.Util.getScaleFromResolution(res,units)}return scale},getZoomForExtent:function(bounds,closest){var zoom=null;if(this.baseLayer!=null){zoom=this.baseLayer.getZoomForExtent(bounds,closest)}return zoom},getResolutionForZoom:function(zoom){var resolution=null;if(this.baseLayer){resolution=this.baseLayer.getResolutionForZoom(zoom)}return resolution},getZoomForResolution:function(resolution,closest){var zoom=null;if(this.baseLayer!=null){zoom=this.baseLayer.getZoomForResolution(resolution,closest)}return zoom},zoomTo:function(zoom,xy){var map=this;if(map.isValidZoomLevel(zoom)){if(map.baseLayer.wrapDateLine){zoom=map.adjustZoom(zoom)}if(map.zoomTween){var currentRes=map.getResolution(),targetRes=map.getResolutionForZoom(zoom),start={scale:1},end={scale:currentRes/targetRes};if(map.zoomTween.playing&&map.zoomTween.duration<3*map.zoomDuration){map.zoomTween.finish={scale:map.zoomTween.finish.scale*end.scale}}else{if(!xy){var size=map.getSize();xy={x:size.w/2,y:size.h/2}}map.zoomTween.start(start,end,map.zoomDuration,{minFrameRate:50,callbacks:{eachStep:function(data){var containerOrigin=map.layerContainerOriginPx,scale=data.scale,dx=((scale-1)*(containerOrigin.x-xy.x))|0,dy=((scale-1)*(containerOrigin.y-xy.y))|0;map.applyTransform(containerOrigin.x+dx,containerOrigin.y+dy,scale)},done:function(data){map.applyTransform();var resolution=map.getResolution()/data.scale,zoom=map.getZoomForResolution(resolution,true);map.moveTo(map.getZoomTargetCenter(xy,resolution),zoom,true)}}})}}else{var center=xy?map.getZoomTargetCenter(xy,map.getResolutionForZoom(zoom)):null;map.setCenter(center,zoom)}}},zoomIn:function(){this.zoomTo(this.getZoom()+1)},zoomOut:function(){this.zoomTo(this.getZoom()-1)},zoomToExtent:function(bounds,closest){if(!(bounds instanceof OpenLayers.Bounds)){bounds=new OpenLayers.Bounds(bounds)}var center=bounds.getCenterLonLat();if(this.baseLayer.wrapDateLine){var maxExtent=this.getMaxExtent();bounds=bounds.clone();while(bounds.right<bounds.left){bounds.right+=maxExtent.getWidth()}center=bounds.getCenterLonLat().wrapDateLine(maxExtent)}this.setCenter(center,this.getZoomForExtent(bounds,closest))},zoomToMaxExtent:function(options){var restricted=(options)?options.restricted:true;var maxExtent=this.getMaxExtent({restricted:restricted});this.zoomToExtent(maxExtent)},zoomToScale:function(scale,closest){var res=OpenLayers.Util.getResolutionFromScale(scale,this.baseLayer.units);var halfWDeg=(this.size.w*res)/2;var halfHDeg=(this.size.h*res)/2;var center=this.getCachedCenter();var extent=new OpenLayers.Bounds(center.lon-halfWDeg,center.lat-halfHDeg,center.lon+halfWDeg,center.lat+halfHDeg);this.zoomToExtent(extent,closest)},getLonLatFromViewPortPx:function(viewPortPx){var lonlat=null;if(this.baseLayer!=null){lonlat=this.baseLayer.getLonLatFromViewPortPx(viewPortPx)}return lonlat},getViewPortPxFromLonLat:function(lonlat){var px=null;if(this.baseLayer!=null){px=this.baseLayer.getViewPortPxFromLonLat(lonlat)}return px},getZoomTargetCenter:function(xy,resolution){var lonlat=null,size=this.getSize(),deltaX=size.w/2-xy.x,deltaY=xy.y-size.h/2,zoomPoint=this.getLonLatFromPixel(xy);if(zoomPoint){lonlat=new OpenLayers.LonLat(zoomPoint.lon+deltaX*resolution,zoomPoint.lat+deltaY*resolution)}return lonlat},getLonLatFromPixel:function(px){return this.getLonLatFromViewPortPx(px)},getPixelFromLonLat:function(lonlat){var px=this.getViewPortPxFromLonLat(lonlat);px.x=Math.round(px.x);px.y=Math.round(px.y);return px},getGeodesicPixelSize:function(px){var lonlat=px?this.getLonLatFromPixel(px):(this.getCachedCenter()||new OpenLayers.LonLat(0,0));var res=this.getResolution();var left=lonlat.add(-res/2,0);var right=lonlat.add(res/2,0);var bottom=lonlat.add(0,-res/2);var top=lonlat.add(0,res/2);var dest=new OpenLayers.Projection("EPSG:4326");var source=this.getProjectionObject()||dest;if(!source.equals(dest)){left.transform(source,dest);right.transform(source,dest);bottom.transform(source,dest);top.transform(source,dest)}return new OpenLayers.Size(OpenLayers.Util.distVincenty(left,right),OpenLayers.Util.distVincenty(bottom,top))},getViewPortPxFromLayerPx:function(layerPx){var viewPortPx=null;if(layerPx!=null){var dX=this.layerContainerOriginPx.x;var dY=this.layerContainerOriginPx.y;viewPortPx=layerPx.add(dX,dY)}return viewPortPx},getLayerPxFromViewPortPx:function(viewPortPx){var layerPx=null;if(viewPortPx!=null){var dX=-this.layerContainerOriginPx.x;var dY=-this.layerContainerOriginPx.y;layerPx=viewPortPx.add(dX,dY);if(isNaN(layerPx.x)||isNaN(layerPx.y)){layerPx=null}}return layerPx},getLonLatFromLayerPx:function(px){px=this.getViewPortPxFromLayerPx(px);return this.getLonLatFromViewPortPx(px)},getLayerPxFromLonLat:function(lonlat){var px=this.getPixelFromLonLat(lonlat);return this.getLayerPxFromViewPortPx(px)},applyTransform:function(x,y,scale){scale=scale||1;var origin=this.layerContainerOriginPx,needTransform=scale!==1;x=x||origin.x;y=y||origin.y;var style=this.layerContainerDiv.style,transform=this.applyTransform.transform,template=this.applyTransform.template;if(transform===undefined){transform=OpenLayers.Util.vendorPrefix.style("transform");this.applyTransform.transform=transform;if(transform){var computedStyle=OpenLayers.Element.getStyle(this.viewPortDiv,OpenLayers.Util.vendorPrefix.css("transform"));if(!computedStyle||computedStyle!=="none"){template=["translate3d(",",0) ","scale3d(",",1)"];style[transform]=[template[0],"0,0",template[1]].join("")}if(!template||!~style[transform].indexOf(template[0])){template=["translate(",") ","scale(",")"]}this.applyTransform.template=template}}if(transform!==null&&(template[0]==="translate3d("||needTransform===true)){if(needTransform===true&&template[0]==="translate("){x-=origin.x;y-=origin.y;style.left=origin.x+"px";style.top=origin.y+"px"}style[transform]=[template[0],x,"px,",y,"px",template[1],template[2],scale,",",scale,template[3]].join("")}else{style.left=x+"px";style.top=y+"px";if(transform!==null){style[transform]=""}}},CLASS_NAME:"OpenLayers.Map"});OpenLayers.Map.TILE_WIDTH=256;OpenLayers.Map.TILE_HEIGHT=256;OpenLayers.Feature=OpenLayers.Class({layer:null,id:null,lonlat:null,data:null,marker:null,popupClass:null,popup:null,initialize:function(layer,lonlat,data){this.layer=layer;this.lonlat=lonlat;this.data=(data!=null)?data:{};this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){if((this.layer!=null)&&(this.layer.map!=null)){if(this.popup!=null){this.layer.map.removePopup(this.popup)}}if(this.layer!=null&&this.marker!=null){this.layer.removeMarker(this.marker)}this.layer=null;this.id=null;this.lonlat=null;this.data=null;if(this.marker!=null){this.destroyMarker(this.marker);this.marker=null}if(this.popup!=null){this.destroyPopup(this.popup);this.popup=null}},onScreen:function(){var onScreen=false;if((this.layer!=null)&&(this.layer.map!=null)){var screenBounds=this.layer.map.getExtent();onScreen=screenBounds.containsLonLat(this.lonlat)}return onScreen},createMarker:function(){if(this.lonlat!=null){this.marker=new OpenLayers.Marker(this.lonlat,this.data.icon)}return this.marker},destroyMarker:function(){this.marker.destroy()},createPopup:function(closeBox){if(this.lonlat!=null){if(!this.popup){var anchor=(this.marker)?this.marker.icon:null;var popupClass=this.popupClass?this.popupClass:OpenLayers.Popup.Anchored;this.popup=new popupClass(this.id+"_popup",this.lonlat,this.data.popupSize,this.data.popupContentHTML,anchor,closeBox)}if(this.data.overflow!=null){this.popup.contentDiv.style.overflow=this.data.overflow}this.popup.feature=this}return this.popup},destroyPopup:function(){if(this.popup){this.popup.feature=null;this.popup.destroy();this.popup=null}},CLASS_NAME:"OpenLayers.Feature"});OpenLayers.State={UNKNOWN:"Unknown",INSERT:"Insert",UPDATE:"Update",DELETE:"Delete"};OpenLayers.Feature.Vector=OpenLayers.Class(OpenLayers.Feature,{fid:null,geometry:null,attributes:null,bounds:null,state:null,style:null,url:null,renderIntent:"default",modified:null,initialize:function(geometry,attributes,style){OpenLayers.Feature.prototype.initialize.apply(this,[null,null,attributes]);this.lonlat=null;this.geometry=geometry?geometry:null;this.state=null;this.attributes={};if(attributes){this.attributes=OpenLayers.Util.extend(this.attributes,attributes)}this.style=style?style:null},destroy:function(){if(this.layer){this.layer.removeFeatures(this);this.layer=null}this.geometry=null;this.modified=null;OpenLayers.Feature.prototype.destroy.apply(this,arguments)},clone:function(){return new OpenLayers.Feature.Vector(this.geometry?this.geometry.clone():null,this.attributes,this.style)},onScreen:function(boundsOnly){var onScreen=false;if(this.layer&&this.layer.map){var screenBounds=this.layer.map.getExtent();if(boundsOnly){var featureBounds=this.geometry.getBounds();onScreen=screenBounds.intersectsBounds(featureBounds)}else{var screenPoly=screenBounds.toGeometry();onScreen=screenPoly.intersects(this.geometry)}}return onScreen},getVisibility:function(){return !(this.style&&this.style.display=="none"||!this.layer||this.layer&&this.layer.styleMap&&this.layer.styleMap.createSymbolizer(this,this.renderIntent).display=="none"||this.layer&&!this.layer.getVisibility())},createMarker:function(){return null},destroyMarker:function(){},createPopup:function(){return null},atPoint:function(lonlat,toleranceLon,toleranceLat){var atPoint=false;if(this.geometry){atPoint=this.geometry.atPoint(lonlat,toleranceLon,toleranceLat)}return atPoint},destroyPopup:function(){},move:function(location){if(!this.layer||!this.geometry.move){return undefined}var pixel;if(location.CLASS_NAME=="OpenLayers.LonLat"){pixel=this.layer.getViewPortPxFromLonLat(location)}else{pixel=location}var lastPixel=this.layer.getViewPortPxFromLonLat(this.geometry.getBounds().getCenterLonLat());var res=this.layer.map.getResolution();this.geometry.move(res*(pixel.x-lastPixel.x),res*(lastPixel.y-pixel.y));this.layer.drawFeature(this);return lastPixel},toState:function(state){if(state==OpenLayers.State.UPDATE){switch(this.state){case OpenLayers.State.UNKNOWN:case OpenLayers.State.DELETE:this.state=state;break;case OpenLayers.State.UPDATE:case OpenLayers.State.INSERT:break}}else{if(state==OpenLayers.State.INSERT){switch(this.state){case OpenLayers.State.UNKNOWN:break;default:this.state=state;break}}else{if(state==OpenLayers.State.DELETE){switch(this.state){case OpenLayers.State.INSERT:break;case OpenLayers.State.DELETE:break;case OpenLayers.State.UNKNOWN:case OpenLayers.State.UPDATE:this.state=state;break}}else{if(state==OpenLayers.State.UNKNOWN){this.state=state}}}}},CLASS_NAME:"OpenLayers.Feature.Vector"});OpenLayers.Feature.Vector.style={"default":{fillColor:"#ee9900",fillOpacity:0.4,hoverFillColor:"white",hoverFillOpacity:0.8,strokeColor:"#ee9900",strokeOpacity:1,strokeWidth:1,strokeLinecap:"round",strokeDashstyle:"solid",hoverStrokeColor:"red",hoverStrokeOpacity:1,hoverStrokeWidth:0.2,pointRadius:6,hoverPointRadius:1,hoverPointUnit:"%",pointerEvents:"visiblePainted",cursor:"inherit",fontColor:"#000000",labelAlign:"cm",labelOutlineColor:"white",labelOutlineWidth:3},select:{fillColor:"blue",fillOpacity:0.4,hoverFillColor:"white",hoverFillOpacity:0.8,strokeColor:"blue",strokeOpacity:1,strokeWidth:2,strokeLinecap:"round",strokeDashstyle:"solid",hoverStrokeColor:"red",hoverStrokeOpacity:1,hoverStrokeWidth:0.2,pointRadius:6,hoverPointRadius:1,hoverPointUnit:"%",pointerEvents:"visiblePainted",cursor:"pointer",fontColor:"#000000",labelAlign:"cm",labelOutlineColor:"white",labelOutlineWidth:3},temporary:{fillColor:"#66cccc",fillOpacity:0.2,hoverFillColor:"white",hoverFillOpacity:0.8,strokeColor:"#66cccc",strokeOpacity:1,strokeLinecap:"round",strokeWidth:2,strokeDashstyle:"solid",hoverStrokeColor:"red",hoverStrokeOpacity:1,hoverStrokeWidth:0.2,pointRadius:6,hoverPointRadius:1,hoverPointUnit:"%",pointerEvents:"visiblePainted",cursor:"inherit",fontColor:"#000000",labelAlign:"cm",labelOutlineColor:"white",labelOutlineWidth:3},"delete":{display:"none"}};OpenLayers.Style=OpenLayers.Class({id:null,name:null,title:null,description:null,layerName:null,isDefault:false,rules:null,context:null,defaultStyle:null,defaultsPerSymbolizer:false,propertyStyles:null,initialize:function(style,options){OpenLayers.Util.extend(this,options);this.rules=[];if(options&&options.rules){this.addRules(options.rules)}this.setDefaultStyle(style||OpenLayers.Feature.Vector.style["default"]);this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){for(var i=0,len=this.rules.length;i<len;i++){this.rules[i].destroy();this.rules[i]=null}this.rules=null;this.defaultStyle=null},createSymbolizer:function(feature){var style=this.defaultsPerSymbolizer?{}:this.createLiterals(OpenLayers.Util.extend({},this.defaultStyle),feature);var rules=this.rules;var rule,context;var elseRules=[];var appliedRules=false;for(var i=0,len=rules.length;i<len;i++){rule=rules[i];var applies=rule.evaluate(feature);if(applies){if(rule instanceof OpenLayers.Rule&&rule.elseFilter){elseRules.push(rule)}else{appliedRules=true;this.applySymbolizer(rule,style,feature)}}}if(appliedRules==false&&elseRules.length>0){appliedRules=true;for(var i=0,len=elseRules.length;i<len;i++){this.applySymbolizer(elseRules[i],style,feature)}}if(rules.length>0&&appliedRules==false){style.display="none"}if(style.label!=null&&typeof style.label!=="string"){style.label=String(style.label)}return style},applySymbolizer:function(rule,style,feature){var symbolizerPrefix=feature.geometry?this.getSymbolizerPrefix(feature.geometry):OpenLayers.Style.SYMBOLIZER_PREFIXES[0];var symbolizer=rule.symbolizer[symbolizerPrefix]||rule.symbolizer;if(this.defaultsPerSymbolizer===true){var defaults=this.defaultStyle;OpenLayers.Util.applyDefaults(symbolizer,{pointRadius:defaults.pointRadius});if(symbolizer.stroke===true||symbolizer.graphic===true){OpenLayers.Util.applyDefaults(symbolizer,{strokeWidth:defaults.strokeWidth,strokeColor:defaults.strokeColor,strokeOpacity:defaults.strokeOpacity,strokeDashstyle:defaults.strokeDashstyle,strokeLinecap:defaults.strokeLinecap})}if(symbolizer.fill===true||symbolizer.graphic===true){OpenLayers.Util.applyDefaults(symbolizer,{fillColor:defaults.fillColor,fillOpacity:defaults.fillOpacity})}if(symbolizer.graphic===true){OpenLayers.Util.applyDefaults(symbolizer,{pointRadius:this.defaultStyle.pointRadius,externalGraphic:this.defaultStyle.externalGraphic,graphicName:this.defaultStyle.graphicName,graphicOpacity:this.defaultStyle.graphicOpacity,graphicWidth:this.defaultStyle.graphicWidth,graphicHeight:this.defaultStyle.graphicHeight,graphicXOffset:this.defaultStyle.graphicXOffset,graphicYOffset:this.defaultStyle.graphicYOffset})}}return this.createLiterals(OpenLayers.Util.extend(style,symbolizer),feature)},createLiterals:function(style,feature){var context=OpenLayers.Util.extend({},feature.attributes||feature.data);OpenLayers.Util.extend(context,this.context);for(var i in this.propertyStyles){style[i]=OpenLayers.Style.createLiteral(style[i],context,feature,i)}return style},findPropertyStyles:function(){var propertyStyles={};var style=this.defaultStyle;this.addPropertyStyles(propertyStyles,style);var rules=this.rules;var symbolizer,value;for(var i=0,len=rules.length;i<len;i++){symbolizer=rules[i].symbolizer;for(var key in symbolizer){value=symbolizer[key];if(typeof value=="object"){this.addPropertyStyles(propertyStyles,value)}else{this.addPropertyStyles(propertyStyles,symbolizer);break}}}return propertyStyles},addPropertyStyles:function(propertyStyles,symbolizer){var property;for(var key in symbolizer){property=symbolizer[key];if(typeof property=="string"&&property.match(/\$\{\w+\}/)){propertyStyles[key]=true}}return propertyStyles},addRules:function(rules){Array.prototype.push.apply(this.rules,rules);this.propertyStyles=this.findPropertyStyles()},setDefaultStyle:function(style){this.defaultStyle=style;this.propertyStyles=this.findPropertyStyles()},getSymbolizerPrefix:function(geometry){var prefixes=OpenLayers.Style.SYMBOLIZER_PREFIXES;for(var i=0,len=prefixes.length;i<len;i++){if(geometry.CLASS_NAME.indexOf(prefixes[i])!=-1){return prefixes[i]}}},clone:function(){var options=OpenLayers.Util.extend({},this);if(this.rules){options.rules=[];for(var i=0,len=this.rules.length;i<len;++i){options.rules.push(this.rules[i].clone())}}options.context=this.context&&OpenLayers.Util.extend({},this.context);var defaultStyle=OpenLayers.Util.extend({},this.defaultStyle);return new OpenLayers.Style(defaultStyle,options)},CLASS_NAME:"OpenLayers.Style"});OpenLayers.Style.createLiteral=function(value,context,feature,property){if(typeof value=="string"&&value.indexOf("${")!=-1){value=OpenLayers.String.format(value,context,[feature,property]);value=(isNaN(value)||!value)?value:parseFloat(value)}return value};OpenLayers.Style.SYMBOLIZER_PREFIXES=["Point","Line","Polygon","Text","Raster"];OpenLayers.Rule=OpenLayers.Class({id:null,name:null,title:null,description:null,context:null,filter:null,elseFilter:false,symbolizer:null,symbolizers:null,minScaleDenominator:null,maxScaleDenominator:null,initialize:function(options){this.symbolizer={};OpenLayers.Util.extend(this,options);if(this.symbolizers){delete this.symbolizer}this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){for(var i in this.symbolizer){this.symbolizer[i]=null}this.symbolizer=null;delete this.symbolizers},evaluate:function(feature){var context=this.getContext(feature);var applies=true;if(this.minScaleDenominator||this.maxScaleDenominator){var scale=feature.layer.map.getScale()}if(this.minScaleDenominator){applies=scale>=OpenLayers.Style.createLiteral(this.minScaleDenominator,context)}if(applies&&this.maxScaleDenominator){applies=scale<OpenLayers.Style.createLiteral(this.maxScaleDenominator,context)}if(applies&&this.filter){if(this.filter.CLASS_NAME=="OpenLayers.Filter.FeatureId"){applies=this.filter.evaluate(feature)}else{applies=this.filter.evaluate(context)}}return applies},getContext:function(feature){var context=this.context;if(!context){context=feature.attributes||feature.data}if(typeof this.context=="function"){context=this.context(feature)}return context},clone:function(){var options=OpenLayers.Util.extend({},this);if(this.symbolizers){var len=this.symbolizers.length;options.symbolizers=new Array(len);for(var i=0;i<len;++i){options.symbolizers[i]=this.symbolizers[i].clone()}}else{options.symbolizer={};var value,type;for(var key in this.symbolizer){value=this.symbolizer[key];type=typeof value;if(type==="object"){options.symbolizer[key]=OpenLayers.Util.extend({},value)}else{if(type==="string"){options.symbolizer[key]=value}}}}options.filter=this.filter&&this.filter.clone();options.context=this.context&&OpenLayers.Util.extend({},this.context);return new OpenLayers.Rule(options)},CLASS_NAME:"OpenLayers.Rule"});OpenLayers.Symbolizer=OpenLayers.Class({zIndex:0,initialize:function(config){OpenLayers.Util.extend(this,config)},clone:function(){var Type=OpenLayers.Util.getConstructor(this.CLASS_NAME);return new Type(OpenLayers.Util.extend({},this))},CLASS_NAME:"OpenLayers.Symbolizer"});OpenLayers.Symbolizer.Point=OpenLayers.Class(OpenLayers.Symbolizer,{initialize:function(config){OpenLayers.Symbolizer.prototype.initialize.apply(this,arguments)},CLASS_NAME:"OpenLayers.Symbolizer.Point"});OpenLayers.Symbolizer.Line=OpenLayers.Class(OpenLayers.Symbolizer,{initialize:function(config){OpenLayers.Symbolizer.prototype.initialize.apply(this,arguments)},CLASS_NAME:"OpenLayers.Symbolizer.Line"});OpenLayers.Symbolizer.Polygon=OpenLayers.Class(OpenLayers.Symbolizer,{initialize:function(config){OpenLayers.Symbolizer.prototype.initialize.apply(this,arguments)},CLASS_NAME:"OpenLayers.Symbolizer.Polygon"});OpenLayers.Symbolizer.Text=OpenLayers.Class(OpenLayers.Symbolizer,{initialize:function(config){OpenLayers.Symbolizer.prototype.initialize.apply(this,arguments)},CLASS_NAME:"OpenLayers.Symbolizer.Text"});OpenLayers.Symbolizer.Raster=OpenLayers.Class(OpenLayers.Symbolizer,{initialize:function(config){OpenLayers.Symbolizer.prototype.initialize.apply(this,arguments)},CLASS_NAME:"OpenLayers.Symbolizer.Raster"});OpenLayers.Style2=OpenLayers.Class({id:null,name:null,title:null,description:null,layerName:null,isDefault:false,rules:null,initialize:function(config){OpenLayers.Util.extend(this,config);this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){for(var i=0,len=this.rules.length;i<len;i++){this.rules[i].destroy()}delete this.rules},clone:function(){var config=OpenLayers.Util.extend({},this);if(this.rules){config.rules=[];for(var i=0,len=this.rules.length;i<len;++i){config.rules.push(this.rules[i].clone())}}return new OpenLayers.Style2(config)},CLASS_NAME:"OpenLayers.Style2"});OpenLayers.Format=OpenLayers.Class({options:null,externalProjection:null,internalProjection:null,data:null,keepData:false,initialize:function(options){OpenLayers.Util.extend(this,options);this.options=options},destroy:function(){},read:function(data){throw new Error("Read not implemented.")},write:function(object){throw new Error("Write not implemented.")},CLASS_NAME:"OpenLayers.Format"});OpenLayers.Format.XML=OpenLayers.Class(OpenLayers.Format,{namespaces:null,namespaceAlias:null,defaultPrefix:null,readers:{},writers:{},xmldom:null,initialize:function(options){if(window.ActiveXObject){this.xmldom=new ActiveXObject("Microsoft.XMLDOM")}OpenLayers.Format.prototype.initialize.apply(this,[options]);this.namespaces=OpenLayers.Util.extend({},this.namespaces);this.namespaceAlias={};for(var alias in this.namespaces){this.namespaceAlias[this.namespaces[alias]]=alias}},destroy:function(){this.xmldom=null;OpenLayers.Format.prototype.destroy.apply(this,arguments)},setNamespace:function(alias,uri){this.namespaces[alias]=uri;this.namespaceAlias[uri]=alias},read:function(text){var index=text.indexOf("<");if(index>0){text=text.substring(index)}var node=OpenLayers.Util.Try(OpenLayers.Function.bind((function(){var xmldom;if(window.ActiveXObject&&!this.xmldom){xmldom=new ActiveXObject("Microsoft.XMLDOM")}else{xmldom=this.xmldom}xmldom.loadXML(text);return xmldom}),this),function(){return new DOMParser().parseFromString(text,"text/xml")},function(){var req=new XMLHttpRequest();req.open("GET","data:text/xml;charset=utf-8,"+encodeURIComponent(text),false);if(req.overrideMimeType){req.overrideMimeType("text/xml")}req.send(null);return req.responseXML});if(this.keepData){this.data=node}return node},write:function(node){var data;if(this.xmldom){data=node.xml}else{var serializer=new XMLSerializer();if(node.nodeType==1){var doc=document.implementation.createDocument("","",null);if(doc.importNode){node=doc.importNode(node,true)}doc.appendChild(node);data=serializer.serializeToString(doc)}else{data=serializer.serializeToString(node)}}return data},createElementNS:function(uri,name){var element;if(this.xmldom){if(typeof uri=="string"){element=this.xmldom.createNode(1,name,uri)}else{element=this.xmldom.createNode(1,name,"")}}else{element=document.createElementNS(uri,name)}return element},createDocumentFragment:function(){var element;if(this.xmldom){element=this.xmldom.createDocumentFragment()}else{element=document.createDocumentFragment()}return element},createTextNode:function(text){var node;if(typeof text!=="string"){text=String(text)}if(this.xmldom){node=this.xmldom.createTextNode(text)}else{node=document.createTextNode(text)}return node},getElementsByTagNameNS:function(node,uri,name){var elements=[];if(node.getElementsByTagNameNS){elements=node.getElementsByTagNameNS(uri,name)}else{var allNodes=node.getElementsByTagName("*");var potentialNode,fullName;for(var i=0,len=allNodes.length;i<len;++i){potentialNode=allNodes[i];fullName=(potentialNode.prefix)?(potentialNode.prefix+":"+name):name;if((name=="*")||(fullName==potentialNode.nodeName)){if((uri=="*")||(uri==potentialNode.namespaceURI)){elements.push(potentialNode)}}}}return elements},getAttributeNodeNS:function(node,uri,name){var attributeNode=null;if(node.getAttributeNodeNS){attributeNode=node.getAttributeNodeNS(uri,name)}else{var attributes=node.attributes;var potentialNode,fullName;for(var i=0,len=attributes.length;i<len;++i){potentialNode=attributes[i];if(potentialNode.namespaceURI==uri){fullName=(potentialNode.prefix)?(potentialNode.prefix+":"+name):name;if(fullName==potentialNode.nodeName){attributeNode=potentialNode;break}}}}return attributeNode},getAttributeNS:function(node,uri,name){var attributeValue="";if(node.getAttributeNS){attributeValue=node.getAttributeNS(uri,name)||""}else{var attributeNode=this.getAttributeNodeNS(node,uri,name);if(attributeNode){attributeValue=attributeNode.nodeValue}}return attributeValue},getChildValue:function(node,def){var value=def||"";if(node){for(var child=node.firstChild;child;child=child.nextSibling){switch(child.nodeType){case 3:case 4:value+=child.nodeValue}}}return value},isSimpleContent:function(node){var simple=true;for(var child=node.firstChild;child;child=child.nextSibling){if(child.nodeType===1){simple=false;break}}return simple},contentType:function(node){var simple=false,complex=false;var type=OpenLayers.Format.XML.CONTENT_TYPE.EMPTY;for(var child=node.firstChild;child;child=child.nextSibling){switch(child.nodeType){case 1:complex=true;break;case 8:break;default:simple=true}if(complex&&simple){break}}if(complex&&simple){type=OpenLayers.Format.XML.CONTENT_TYPE.MIXED}else{if(complex){return OpenLayers.Format.XML.CONTENT_TYPE.COMPLEX}else{if(simple){return OpenLayers.Format.XML.CONTENT_TYPE.SIMPLE}}}return type},hasAttributeNS:function(node,uri,name){var found=false;if(node.hasAttributeNS){found=node.hasAttributeNS(uri,name)}else{found=!!this.getAttributeNodeNS(node,uri,name)}return found},setAttributeNS:function(node,uri,name,value){if(node.setAttributeNS){node.setAttributeNS(uri,name,value)}else{if(this.xmldom){if(uri){var attribute=node.ownerDocument.createNode(2,name,uri);attribute.nodeValue=value;node.setAttributeNode(attribute)}else{node.setAttribute(name,value)}}else{throw"setAttributeNS not implemented"}}},createElementNSPlus:function(name,options){options=options||{};var uri=options.uri||this.namespaces[options.prefix];if(!uri){var loc=name.indexOf(":");uri=this.namespaces[name.substring(0,loc)]}if(!uri){uri=this.namespaces[this.defaultPrefix]}var node=this.createElementNS(uri,name);if(options.attributes){this.setAttributes(node,options.attributes)}var value=options.value;if(value!=null){node.appendChild(this.createTextNode(value))}return node},setAttributes:function(node,obj){var value,uri;for(var name in obj){if(obj[name]!=null&&obj[name].toString){value=obj[name].toString();uri=this.namespaces[name.substring(0,name.indexOf(":"))]||null;this.setAttributeNS(node,uri,name,value)}}},readNode:function(node,obj){if(!obj){obj={}}var group=this.readers[node.namespaceURI?this.namespaceAlias[node.namespaceURI]:this.defaultPrefix];if(group){var local=node.localName||node.nodeName.split(":").pop();var reader=group[local]||group["*"];if(reader){reader.apply(this,[node,obj])}}return obj},readChildNodes:function(node,obj){if(!obj){obj={}}var children=node.childNodes;var child;for(var i=0,len=children.length;i<len;++i){child=children[i];if(child.nodeType==1){this.readNode(child,obj)}}return obj},writeNode:function(name,obj,parent){var prefix,local;var split=name.indexOf(":");if(split>0){prefix=name.substring(0,split);local=name.substring(split+1)}else{if(parent){prefix=this.namespaceAlias[parent.namespaceURI]}else{prefix=this.defaultPrefix}local=name}var child=this.writers[prefix][local].apply(this,[obj]);if(parent){parent.appendChild(child)}return child},getChildEl:function(node,name,uri){return node&&this.getThisOrNextEl(node.firstChild,name,uri)},getNextEl:function(node,name,uri){return node&&this.getThisOrNextEl(node.nextSibling,name,uri)},getThisOrNextEl:function(node,name,uri){outer:for(var sibling=node;sibling;sibling=sibling.nextSibling){switch(sibling.nodeType){case 1:if((!name||name===(sibling.localName||sibling.nodeName.split(":").pop()))&&(!uri||uri===sibling.namespaceURI)){break outer}sibling=null;break outer;case 3:if(/^\s*$/.test(sibling.nodeValue)){break}case 4:case 6:case 12:case 10:case 11:sibling=null;break outer}}return sibling||null},lookupNamespaceURI:function(node,prefix){var uri=null;if(node){if(node.lookupNamespaceURI){uri=node.lookupNamespaceURI(prefix)}else{outer:switch(node.nodeType){case 1:if(node.namespaceURI!==null&&node.prefix===prefix){uri=node.namespaceURI;break outer}var len=node.attributes.length;if(len){var attr;for(var i=0;i<len;++i){attr=node.attributes[i];if(attr.prefix==="xmlns"&&attr.name==="xmlns:"+prefix){uri=attr.value||null;break outer}else{if(attr.name==="xmlns"&&prefix===null){uri=attr.value||null;break outer}}}}uri=this.lookupNamespaceURI(node.parentNode,prefix);break outer;case 2:uri=this.lookupNamespaceURI(node.ownerElement,prefix);break outer;case 9:uri=this.lookupNamespaceURI(node.documentElement,prefix);break outer;case 6:case 12:case 10:case 11:break outer;default:uri=this.lookupNamespaceURI(node.parentNode,prefix);break outer}}}return uri},getXMLDoc:function(){if(!OpenLayers.Format.XML.document&&!this.xmldom){if(document.implementation&&document.implementation.createDocument){OpenLayers.Format.XML.document=document.implementation.createDocument("","",null)}else{if(!this.xmldom&&window.ActiveXObject){this.xmldom=new ActiveXObject("Microsoft.XMLDOM")}}}return OpenLayers.Format.XML.document||this.xmldom},CLASS_NAME:"OpenLayers.Format.XML"});OpenLayers.Format.XML.CONTENT_TYPE={EMPTY:0,SIMPLE:1,COMPLEX:2,MIXED:3};OpenLayers.Format.XML.lookupNamespaceURI=OpenLayers.Function.bind(OpenLayers.Format.XML.prototype.lookupNamespaceURI,OpenLayers.Format.XML.prototype);OpenLayers.Format.XML.document=null;OpenLayers.Geometry=OpenLayers.Class({id:null,parent:null,bounds:null,initialize:function(){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){this.id=null;this.bounds=null},clone:function(){return new OpenLayers.Geometry()},setBounds:function(bounds){if(bounds){this.bounds=bounds.clone()}},clearBounds:function(){this.bounds=null;if(this.parent){this.parent.clearBounds()}},extendBounds:function(newBounds){var bounds=this.getBounds();if(!bounds){this.setBounds(newBounds)}else{this.bounds.extend(newBounds)}},getBounds:function(){if(this.bounds==null){this.calculateBounds()}return this.bounds},calculateBounds:function(){},distanceTo:function(geometry,options){},getVertices:function(nodes){},atPoint:function(lonlat,toleranceLon,toleranceLat){var atPoint=false;var bounds=this.getBounds();if((bounds!=null)&&(lonlat!=null)){var dX=(toleranceLon!=null)?toleranceLon:0;var dY=(toleranceLat!=null)?toleranceLat:0;var toleranceBounds=new OpenLayers.Bounds(this.bounds.left-dX,this.bounds.bottom-dY,this.bounds.right+dX,this.bounds.top+dY);atPoint=toleranceBounds.containsLonLat(lonlat)}return atPoint},getLength:function(){return 0},getArea:function(){return 0},getCentroid:function(){return null},toString:function(){var string;if(OpenLayers.Format&&OpenLayers.Format.WKT){string=OpenLayers.Format.WKT.prototype.write(new OpenLayers.Feature.Vector(this))}else{string=Object.prototype.toString.call(this)}return string},CLASS_NAME:"OpenLayers.Geometry"});OpenLayers.Geometry.fromWKT=function(wkt){var geom;if(OpenLayers.Format&&OpenLayers.Format.WKT){var format=OpenLayers.Geometry.fromWKT.format;if(!format){format=new OpenLayers.Format.WKT();OpenLayers.Geometry.fromWKT.format=format}var result=format.read(wkt);if(result instanceof OpenLayers.Feature.Vector){geom=result.geometry}else{if(OpenLayers.Util.isArray(result)){var len=result.length;var components=new Array(len);for(var i=0;i<len;++i){components[i]=result[i].geometry}geom=new OpenLayers.Geometry.Collection(components)}}}return geom};OpenLayers.Geometry.segmentsIntersect=function(seg1,seg2,options){var point=options&&options.point;var tolerance=options&&options.tolerance;var intersection=false;var x11_21=seg1.x1-seg2.x1;var y11_21=seg1.y1-seg2.y1;var x12_11=seg1.x2-seg1.x1;var y12_11=seg1.y2-seg1.y1;var y22_21=seg2.y2-seg2.y1;var x22_21=seg2.x2-seg2.x1;var d=(y22_21*x12_11)-(x22_21*y12_11);var n1=(x22_21*y11_21)-(y22_21*x11_21);var n2=(x12_11*y11_21)-(y12_11*x11_21);if(d==0){if(n1==0&&n2==0){intersection=true}}else{var along1=n1/d;var along2=n2/d;if(along1>=0&&along1<=1&&along2>=0&&along2<=1){if(!point){intersection=true}else{var x=seg1.x1+(along1*x12_11);var y=seg1.y1+(along1*y12_11);intersection=new OpenLayers.Geometry.Point(x,y)}}}if(tolerance){var dist;if(intersection){if(point){var segs=[seg1,seg2];var seg,x,y;outer:for(var i=0;i<2;++i){seg=segs[i];for(var j=1;j<3;++j){x=seg["x"+j];y=seg["y"+j];dist=Math.sqrt(Math.pow(x-intersection.x,2)+Math.pow(y-intersection.y,2));if(dist<tolerance){intersection.x=x;intersection.y=y;break outer}}}}}else{var segs=[seg1,seg2];var source,target,x,y,p,result;outer:for(var i=0;i<2;++i){source=segs[i];target=segs[(i+1)%2];for(var j=1;j<3;++j){p={x:source["x"+j],y:source["y"+j]};result=OpenLayers.Geometry.distanceToSegment(p,target);if(result.distance<tolerance){if(point){intersection=new OpenLayers.Geometry.Point(p.x,p.y)}else{intersection=true}break outer}}}}}return intersection};OpenLayers.Geometry.distanceToSegment=function(point,segment){var result=OpenLayers.Geometry.distanceSquaredToSegment(point,segment);result.distance=Math.sqrt(result.distance);return result};OpenLayers.Geometry.distanceSquaredToSegment=function(point,segment){var x0=point.x;var y0=point.y;var x1=segment.x1;var y1=segment.y1;var x2=segment.x2;var y2=segment.y2;var dx=x2-x1;var dy=y2-y1;var along=((dx*(x0-x1))+(dy*(y0-y1)))/(Math.pow(dx,2)+Math.pow(dy,2));var x,y;if(along<=0){x=x1;y=y1}else{if(along>=1){x=x2;y=y2}else{x=x1+along*dx;y=y1+along*dy}}return{distance:Math.pow(x-x0,2)+Math.pow(y-y0,2),x:x,y:y,along:along}};OpenLayers.Geometry.Point=OpenLayers.Class(OpenLayers.Geometry,{x:null,y:null,initialize:function(x,y){OpenLayers.Geometry.prototype.initialize.apply(this,arguments);this.x=parseFloat(x);this.y=parseFloat(y)},clone:function(obj){if(obj==null){obj=new OpenLayers.Geometry.Point(this.x,this.y)}OpenLayers.Util.applyDefaults(obj,this);return obj},calculateBounds:function(){this.bounds=new OpenLayers.Bounds(this.x,this.y,this.x,this.y)},distanceTo:function(geometry,options){var edge=!(options&&options.edge===false);var details=edge&&options&&options.details;var distance,x0,y0,x1,y1,result;if(geometry instanceof OpenLayers.Geometry.Point){x0=this.x;y0=this.y;x1=geometry.x;y1=geometry.y;distance=Math.sqrt(Math.pow(x0-x1,2)+Math.pow(y0-y1,2));result=!details?distance:{x0:x0,y0:y0,x1:x1,y1:y1,distance:distance}}else{result=geometry.distanceTo(this,options);if(details){result={x0:result.x1,y0:result.y1,x1:result.x0,y1:result.y0,distance:result.distance}}}return result},equals:function(geom){var equals=false;if(geom!=null){equals=((this.x==geom.x&&this.y==geom.y)||(isNaN(this.x)&&isNaN(this.y)&&isNaN(geom.x)&&isNaN(geom.y)))}return equals},toShortString:function(){return(this.x+", "+this.y)},move:function(x,y){this.x=this.x+x;this.y=this.y+y;this.clearBounds()},rotate:function(angle,origin){angle*=Math.PI/180;var radius=this.distanceTo(origin);var theta=angle+Math.atan2(this.y-origin.y,this.x-origin.x);this.x=origin.x+(radius*Math.cos(theta));this.y=origin.y+(radius*Math.sin(theta));this.clearBounds()},getCentroid:function(){return new OpenLayers.Geometry.Point(this.x,this.y)},resize:function(scale,origin,ratio){ratio=(ratio==undefined)?1:ratio;this.x=origin.x+(scale*ratio*(this.x-origin.x));this.y=origin.y+(scale*(this.y-origin.y));this.clearBounds();return this},intersects:function(geometry){var intersect=false;if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){intersect=this.equals(geometry)}else{intersect=geometry.intersects(this)}return intersect},transform:function(source,dest){if((source&&dest)){OpenLayers.Projection.transform(this,source,dest);this.bounds=null}return this},getVertices:function(nodes){return[this]},CLASS_NAME:"OpenLayers.Geometry.Point"});OpenLayers.Geometry.Collection=OpenLayers.Class(OpenLayers.Geometry,{components:null,componentTypes:null,initialize:function(components){OpenLayers.Geometry.prototype.initialize.apply(this,arguments);this.components=[];if(components!=null){this.addComponents(components)}},destroy:function(){this.components.length=0;this.components=null;OpenLayers.Geometry.prototype.destroy.apply(this,arguments)},clone:function(){var Constructor=OpenLayers.Util.getConstructor(this.CLASS_NAME);var geometry=new Constructor();for(var i=0,len=this.components.length;i<len;i++){geometry.addComponent(this.components[i].clone())}OpenLayers.Util.applyDefaults(geometry,this);return geometry},getComponentsString:function(){var strings=[];for(var i=0,len=this.components.length;i<len;i++){strings.push(this.components[i].toShortString())}return strings.join(",")},calculateBounds:function(){this.bounds=null;var bounds=new OpenLayers.Bounds();var components=this.components;if(components){for(var i=0,len=components.length;i<len;i++){bounds.extend(components[i].getBounds())}}if(bounds.left!=null&&bounds.bottom!=null&&bounds.right!=null&&bounds.top!=null){this.setBounds(bounds)}},addComponents:function(components){if(!(OpenLayers.Util.isArray(components))){components=[components]}for(var i=0,len=components.length;i<len;i++){this.addComponent(components[i])}},addComponent:function(component,index){var added=false;if(component){if(this.componentTypes==null||(OpenLayers.Util.indexOf(this.componentTypes,component.CLASS_NAME)>-1)){if(index!=null&&(index<this.components.length)){var components1=this.components.slice(0,index);var components2=this.components.slice(index,this.components.length);components1.push(component);this.components=components1.concat(components2)}else{this.components.push(component)}component.parent=this;this.clearBounds();added=true}}return added},removeComponents:function(components){var removed=false;if(!(OpenLayers.Util.isArray(components))){components=[components]}for(var i=components.length-1;i>=0;--i){removed=this.removeComponent(components[i])||removed}return removed},removeComponent:function(component){OpenLayers.Util.removeItem(this.components,component);this.clearBounds();return true},getLength:function(){var length=0;for(var i=0,len=this.components.length;i<len;i++){length+=this.components[i].getLength()}return length},getArea:function(){var area=0;for(var i=0,len=this.components.length;i<len;i++){area+=this.components[i].getArea()}return area},getGeodesicArea:function(projection){var area=0;for(var i=0,len=this.components.length;i<len;i++){area+=this.components[i].getGeodesicArea(projection)}return area},getCentroid:function(weighted){if(!weighted){return this.components.length&&this.components[0].getCentroid()}var len=this.components.length;if(!len){return false}var areas=[];var centroids=[];var areaSum=0;var minArea=Number.MAX_VALUE;var component;for(var i=0;i<len;++i){component=this.components[i];var area=component.getArea();var centroid=component.getCentroid(true);if(isNaN(area)||isNaN(centroid.x)||isNaN(centroid.y)){continue}areas.push(area);areaSum+=area;minArea=(area<minArea&&area>0)?area:minArea;centroids.push(centroid)}len=areas.length;if(areaSum===0){for(var i=0;i<len;++i){areas[i]=1}areaSum=areas.length}else{for(var i=0;i<len;++i){areas[i]/=minArea}areaSum/=minArea}var xSum=0,ySum=0,centroid,area;for(var i=0;i<len;++i){centroid=centroids[i];area=areas[i];xSum+=centroid.x*area;ySum+=centroid.y*area}return new OpenLayers.Geometry.Point(xSum/areaSum,ySum/areaSum)},getGeodesicLength:function(projection){var length=0;for(var i=0,len=this.components.length;i<len;i++){length+=this.components[i].getGeodesicLength(projection)}return length},move:function(x,y){for(var i=0,len=this.components.length;i<len;i++){this.components[i].move(x,y)}},rotate:function(angle,origin){for(var i=0,len=this.components.length;i<len;++i){this.components[i].rotate(angle,origin)}},resize:function(scale,origin,ratio){for(var i=0;i<this.components.length;++i){this.components[i].resize(scale,origin,ratio)}return this},distanceTo:function(geometry,options){var edge=!(options&&options.edge===false);var details=edge&&options&&options.details;var result,best,distance;var min=Number.POSITIVE_INFINITY;for(var i=0,len=this.components.length;i<len;++i){result=this.components[i].distanceTo(geometry,options);distance=details?result.distance:result;if(distance<min){min=distance;best=result;if(min==0){break}}}return best},equals:function(geometry){var equivalent=true;if(!geometry||!geometry.CLASS_NAME||(this.CLASS_NAME!=geometry.CLASS_NAME)){equivalent=false}else{if(!(OpenLayers.Util.isArray(geometry.components))||(geometry.components.length!=this.components.length)){equivalent=false}else{for(var i=0,len=this.components.length;i<len;++i){if(!this.components[i].equals(geometry.components[i])){equivalent=false;break}}}}return equivalent},transform:function(source,dest){if(source&&dest){for(var i=0,len=this.components.length;i<len;i++){var component=this.components[i];component.transform(source,dest)}this.bounds=null}return this},intersects:function(geometry){var intersect=false;for(var i=0,len=this.components.length;i<len;++i){intersect=geometry.intersects(this.components[i]);if(intersect){break}}return intersect},getVertices:function(nodes){var vertices=[];for(var i=0,len=this.components.length;i<len;++i){Array.prototype.push.apply(vertices,this.components[i].getVertices(nodes))}return vertices},CLASS_NAME:"OpenLayers.Geometry.Collection"});OpenLayers.Geometry.MultiPoint=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.Point"],addPoint:function(point,index){this.addComponent(point,index)},removePoint:function(point){this.removeComponent(point)},CLASS_NAME:"OpenLayers.Geometry.MultiPoint"});OpenLayers.Geometry.Curve=OpenLayers.Class(OpenLayers.Geometry.MultiPoint,{componentTypes:["OpenLayers.Geometry.Point"],getLength:function(){var length=0;if(this.components&&(this.components.length>1)){for(var i=1,len=this.components.length;i<len;i++){length+=this.components[i-1].distanceTo(this.components[i])}}return length},getGeodesicLength:function(projection){var geom=this;if(projection){var gg=new OpenLayers.Projection("EPSG:4326");if(!gg.equals(projection)){geom=this.clone().transform(projection,gg)}}var length=0;if(geom.components&&(geom.components.length>1)){var p1,p2;for(var i=1,len=geom.components.length;i<len;i++){p1=geom.components[i-1];p2=geom.components[i];length+=OpenLayers.Util.distVincenty({lon:p1.x,lat:p1.y},{lon:p2.x,lat:p2.y})}}return length*1000},CLASS_NAME:"OpenLayers.Geometry.Curve"});OpenLayers.Geometry.LineString=OpenLayers.Class(OpenLayers.Geometry.Curve,{removeComponent:function(point){var removed=this.components&&(this.components.length>2);if(removed){OpenLayers.Geometry.Collection.prototype.removeComponent.apply(this,arguments)}return removed},intersects:function(geometry){var intersect=false;var type=geometry.CLASS_NAME;if(type=="OpenLayers.Geometry.LineString"||type=="OpenLayers.Geometry.LinearRing"||type=="OpenLayers.Geometry.Point"){var segs1=this.getSortedSegments();var segs2;if(type=="OpenLayers.Geometry.Point"){segs2=[{x1:geometry.x,y1:geometry.y,x2:geometry.x,y2:geometry.y}]}else{segs2=geometry.getSortedSegments()}var seg1,seg1x1,seg1x2,seg1y1,seg1y2,seg2,seg2y1,seg2y2;outer:for(var i=0,len=segs1.length;i<len;++i){seg1=segs1[i];seg1x1=seg1.x1;seg1x2=seg1.x2;seg1y1=seg1.y1;seg1y2=seg1.y2;inner:for(var j=0,jlen=segs2.length;j<jlen;++j){seg2=segs2[j];if(seg2.x1>seg1x2){break}if(seg2.x2<seg1x1){continue}seg2y1=seg2.y1;seg2y2=seg2.y2;if(Math.min(seg2y1,seg2y2)>Math.max(seg1y1,seg1y2)){continue}if(Math.max(seg2y1,seg2y2)<Math.min(seg1y1,seg1y2)){continue}if(OpenLayers.Geometry.segmentsIntersect(seg1,seg2)){intersect=true;break outer}}}}else{intersect=geometry.intersects(this)}return intersect},getSortedSegments:function(){var numSeg=this.components.length-1;var segments=new Array(numSeg),point1,point2;for(var i=0;i<numSeg;++i){point1=this.components[i];point2=this.components[i+1];if(point1.x<point2.x){segments[i]={x1:point1.x,y1:point1.y,x2:point2.x,y2:point2.y}}else{segments[i]={x1:point2.x,y1:point2.y,x2:point1.x,y2:point1.y}}}function byX1(seg1,seg2){return seg1.x1-seg2.x1}return segments.sort(byX1)},splitWithSegment:function(seg,options){var edge=!(options&&options.edge===false);var tolerance=options&&options.tolerance;var lines=[];var verts=this.getVertices();var points=[];var intersections=[];var split=false;var vert1,vert2,point;var node,vertex,target;var interOptions={point:true,tolerance:tolerance};var result=null;for(var i=0,stop=verts.length-2;i<=stop;++i){vert1=verts[i];points.push(vert1.clone());vert2=verts[i+1];target={x1:vert1.x,y1:vert1.y,x2:vert2.x,y2:vert2.y};point=OpenLayers.Geometry.segmentsIntersect(seg,target,interOptions);if(point instanceof OpenLayers.Geometry.Point){if((point.x===seg.x1&&point.y===seg.y1)||(point.x===seg.x2&&point.y===seg.y2)||point.equals(vert1)||point.equals(vert2)){vertex=true}else{vertex=false}if(vertex||edge){if(!point.equals(intersections[intersections.length-1])){intersections.push(point.clone())}if(i===0){if(point.equals(vert1)){continue}}if(point.equals(vert2)){continue}split=true;if(!point.equals(vert1)){points.push(point)}lines.push(new OpenLayers.Geometry.LineString(points));points=[point.clone()]}}}if(split){points.push(vert2.clone());lines.push(new OpenLayers.Geometry.LineString(points))}if(intersections.length>0){var xDir=seg.x1<seg.x2?1:-1;var yDir=seg.y1<seg.y2?1:-1;result={lines:lines,points:intersections.sort(function(p1,p2){return(xDir*p1.x-xDir*p2.x)||(yDir*p1.y-yDir*p2.y)})}}return result},split:function(target,options){var results=null;var mutual=options&&options.mutual;var sourceSplit,targetSplit,sourceParts,targetParts;if(target instanceof OpenLayers.Geometry.LineString){var verts=this.getVertices();var vert1,vert2,seg,splits,lines,point;var points=[];sourceParts=[];for(var i=0,stop=verts.length-2;i<=stop;++i){vert1=verts[i];vert2=verts[i+1];seg={x1:vert1.x,y1:vert1.y,x2:vert2.x,y2:vert2.y};targetParts=targetParts||[target];if(mutual){points.push(vert1.clone())}for(var j=0;j<targetParts.length;++j){splits=targetParts[j].splitWithSegment(seg,options);if(splits){lines=splits.lines;if(lines.length>0){lines.unshift(j,1);Array.prototype.splice.apply(targetParts,lines);j+=lines.length-2}if(mutual){for(var k=0,len=splits.points.length;k<len;++k){point=splits.points[k];if(!point.equals(vert1)){points.push(point);sourceParts.push(new OpenLayers.Geometry.LineString(points));if(point.equals(vert2)){points=[]}else{points=[point.clone()]}}}}}}}if(mutual&&sourceParts.length>0&&points.length>0){points.push(vert2.clone());sourceParts.push(new OpenLayers.Geometry.LineString(points))}}else{results=target.splitWith(this,options)}if(targetParts&&targetParts.length>1){targetSplit=true}else{targetParts=[]}if(sourceParts&&sourceParts.length>1){sourceSplit=true}else{sourceParts=[]}if(targetSplit||sourceSplit){if(mutual){results=[sourceParts,targetParts]}else{results=targetParts}}return results},splitWith:function(geometry,options){return geometry.split(this,options)},getVertices:function(nodes){var vertices;if(nodes===true){vertices=[this.components[0],this.components[this.components.length-1]]}else{if(nodes===false){vertices=this.components.slice(1,this.components.length-1)}else{vertices=this.components.slice()}}return vertices},distanceTo:function(geometry,options){var edge=!(options&&options.edge===false);var details=edge&&options&&options.details;var result,best={};var min=Number.POSITIVE_INFINITY;if(geometry instanceof OpenLayers.Geometry.Point){var segs=this.getSortedSegments();var x=geometry.x;var y=geometry.y;var seg;for(var i=0,len=segs.length;i<len;++i){seg=segs[i];result=OpenLayers.Geometry.distanceToSegment(geometry,seg);if(result.distance<min){min=result.distance;best=result;if(min===0){break}}else{if(seg.x2>x&&((y>seg.y1&&y<seg.y2)||(y<seg.y1&&y>seg.y2))){break}}}if(details){best={distance:best.distance,x0:best.x,y0:best.y,x1:x,y1:y}}else{best=best.distance}}else{if(geometry instanceof OpenLayers.Geometry.LineString){var segs0=this.getSortedSegments();var segs1=geometry.getSortedSegments();var seg0,seg1,intersection,x0,y0;var len1=segs1.length;var interOptions={point:true};outer:for(var i=0,len=segs0.length;i<len;++i){seg0=segs0[i];x0=seg0.x1;y0=seg0.y1;for(var j=0;j<len1;++j){seg1=segs1[j];intersection=OpenLayers.Geometry.segmentsIntersect(seg0,seg1,interOptions);if(intersection){min=0;best={distance:0,x0:intersection.x,y0:intersection.y,x1:intersection.x,y1:intersection.y};break outer}else{result=OpenLayers.Geometry.distanceToSegment({x:x0,y:y0},seg1);if(result.distance<min){min=result.distance;best={distance:min,x0:x0,y0:y0,x1:result.x,y1:result.y}}}}}if(!details){best=best.distance}if(min!==0){if(seg0){result=geometry.distanceTo(new OpenLayers.Geometry.Point(seg0.x2,seg0.y2),options);var dist=details?result.distance:result;if(dist<min){if(details){best={distance:min,x0:result.x1,y0:result.y1,x1:result.x0,y1:result.y0}}else{best=dist}}}}}else{best=geometry.distanceTo(this,options);if(details){best={distance:best.distance,x0:best.x1,y0:best.y1,x1:best.x0,y1:best.y0}}}}return best},simplify:function(tolerance){if(this&&this!==null){var points=this.getVertices();if(points.length<3){return this}var compareNumbers=function(a,b){return(a-b)};var douglasPeuckerReduction=function(points,firstPoint,lastPoint,tolerance){var maxDistance=0;var indexFarthest=0;for(var index=firstPoint,distance;index<lastPoint;index++){distance=perpendicularDistance(points[firstPoint],points[lastPoint],points[index]);if(distance>maxDistance){maxDistance=distance;indexFarthest=index}}if(maxDistance>tolerance&&indexFarthest!=firstPoint){pointIndexsToKeep.push(indexFarthest);douglasPeuckerReduction(points,firstPoint,indexFarthest,tolerance);douglasPeuckerReduction(points,indexFarthest,lastPoint,tolerance)}};var perpendicularDistance=function(point1,point2,point){var area=Math.abs(0.5*(point1.x*point2.y+point2.x*point.y+point.x*point1.y-point2.x*point1.y-point.x*point2.y-point1.x*point.y));var bottom=Math.sqrt(Math.pow(point1.x-point2.x,2)+Math.pow(point1.y-point2.y,2));var height=area/bottom*2;return height};var firstPoint=0;var lastPoint=points.length-1;var pointIndexsToKeep=[];pointIndexsToKeep.push(firstPoint);pointIndexsToKeep.push(lastPoint);while(points[firstPoint].equals(points[lastPoint])){lastPoint--;pointIndexsToKeep.push(lastPoint)}douglasPeuckerReduction(points,firstPoint,lastPoint,tolerance);var returnPoints=[];pointIndexsToKeep.sort(compareNumbers);for(var index=0;index<pointIndexsToKeep.length;index++){returnPoints.push(points[pointIndexsToKeep[index]])}return new OpenLayers.Geometry.LineString(returnPoints)}else{return this}},CLASS_NAME:"OpenLayers.Geometry.LineString"});OpenLayers.Geometry.MultiLineString=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.LineString"],split:function(geometry,options){var results=null;var mutual=options&&options.mutual;var splits,sourceLine,sourceLines,sourceSplit,targetSplit;var sourceParts=[];var targetParts=[geometry];for(var i=0,len=this.components.length;i<len;++i){sourceLine=this.components[i];sourceSplit=false;for(var j=0;j<targetParts.length;++j){splits=sourceLine.split(targetParts[j],options);if(splits){if(mutual){sourceLines=splits[0];for(var k=0,klen=sourceLines.length;k<klen;++k){if(k===0&&sourceParts.length){sourceParts[sourceParts.length-1].addComponent(sourceLines[k])}else{sourceParts.push(new OpenLayers.Geometry.MultiLineString([sourceLines[k]]))}}sourceSplit=true;splits=splits[1]}if(splits.length){splits.unshift(j,1);Array.prototype.splice.apply(targetParts,splits);break}}}if(!sourceSplit){if(sourceParts.length){sourceParts[sourceParts.length-1].addComponent(sourceLine.clone())}else{sourceParts=[new OpenLayers.Geometry.MultiLineString(sourceLine.clone())]}}}if(sourceParts&&sourceParts.length>1){sourceSplit=true}else{sourceParts=[]}if(targetParts&&targetParts.length>1){targetSplit=true}else{targetParts=[]}if(sourceSplit||targetSplit){if(mutual){results=[sourceParts,targetParts]}else{results=targetParts}}return results},splitWith:function(geometry,options){var results=null;var mutual=options&&options.mutual;var splits,targetLine,sourceLines,sourceSplit,targetSplit,sourceParts,targetParts;if(geometry instanceof OpenLayers.Geometry.LineString){targetParts=[];sourceParts=[geometry];for(var i=0,len=this.components.length;i<len;++i){targetSplit=false;targetLine=this.components[i];for(var j=0;j<sourceParts.length;++j){splits=sourceParts[j].split(targetLine,options);if(splits){if(mutual){sourceLines=splits[0];if(sourceLines.length){sourceLines.unshift(j,1);Array.prototype.splice.apply(sourceParts,sourceLines);j+=sourceLines.length-2}splits=splits[1];if(splits.length===0){splits=[targetLine.clone()]}}for(var k=0,klen=splits.length;k<klen;++k){if(k===0&&targetParts.length){targetParts[targetParts.length-1].addComponent(splits[k])}else{targetParts.push(new OpenLayers.Geometry.MultiLineString([splits[k]]))}}targetSplit=true}}if(!targetSplit){if(targetParts.length){targetParts[targetParts.length-1].addComponent(targetLine.clone())}else{targetParts=[new OpenLayers.Geometry.MultiLineString([targetLine.clone()])]}}}}else{results=geometry.split(this)}if(sourceParts&&sourceParts.length>1){sourceSplit=true}else{sourceParts=[]}if(targetParts&&targetParts.length>1){targetSplit=true}else{targetParts=[]}if(sourceSplit||targetSplit){if(mutual){results=[sourceParts,targetParts]}else{results=targetParts}}return results},CLASS_NAME:"OpenLayers.Geometry.MultiLineString"});OpenLayers.Geometry.LinearRing=OpenLayers.Class(OpenLayers.Geometry.LineString,{componentTypes:["OpenLayers.Geometry.Point"],addComponent:function(point,index){var added=false;var lastPoint=this.components.pop();if(index!=null||!point.equals(lastPoint)){added=OpenLayers.Geometry.Collection.prototype.addComponent.apply(this,arguments)}var firstPoint=this.components[0];OpenLayers.Geometry.Collection.prototype.addComponent.apply(this,[firstPoint]);return added},removeComponent:function(point){var removed=this.components&&(this.components.length>3);if(removed){this.components.pop();OpenLayers.Geometry.Collection.prototype.removeComponent.apply(this,arguments);var firstPoint=this.components[0];OpenLayers.Geometry.Collection.prototype.addComponent.apply(this,[firstPoint])}return removed},move:function(x,y){for(var i=0,len=this.components.length;i<len-1;i++){this.components[i].move(x,y)}},rotate:function(angle,origin){for(var i=0,len=this.components.length;i<len-1;++i){this.components[i].rotate(angle,origin)}},resize:function(scale,origin,ratio){for(var i=0,len=this.components.length;i<len-1;++i){this.components[i].resize(scale,origin,ratio)}return this},transform:function(source,dest){if(source&&dest){for(var i=0,len=this.components.length;i<len-1;i++){var component=this.components[i];component.transform(source,dest)}this.bounds=null}return this},getCentroid:function(){if(this.components){var len=this.components.length;if(len>0&&len<=2){return this.components[0].clone()}else{if(len>2){var sumX=0;var sumY=0;var x0=this.components[0].x;var y0=this.components[0].y;var area=-1*this.getArea();if(area!=0){for(var i=0;i<len-1;i++){var b=this.components[i];var c=this.components[i+1];sumX+=(b.x+c.x-2*x0)*((b.x-x0)*(c.y-y0)-(c.x-x0)*(b.y-y0));sumY+=(b.y+c.y-2*y0)*((b.x-x0)*(c.y-y0)-(c.x-x0)*(b.y-y0))}var x=x0+sumX/(6*area);var y=y0+sumY/(6*area)}else{for(var i=0;i<len-1;i++){sumX+=this.components[i].x;sumY+=this.components[i].y}var x=sumX/(len-1);var y=sumY/(len-1)}return new OpenLayers.Geometry.Point(x,y)}else{return null}}}},getArea:function(){var area=0;if(this.components&&(this.components.length>2)){var sum=0;for(var i=0,len=this.components.length;i<len-1;i++){var b=this.components[i];var c=this.components[i+1];sum+=(b.x+c.x)*(c.y-b.y)}area=-sum/2}return area},getGeodesicArea:function(projection){var ring=this;if(projection){var gg=new OpenLayers.Projection("EPSG:4326");if(!gg.equals(projection)){ring=this.clone().transform(projection,gg)}}var area=0;var len=ring.components&&ring.components.length;if(len>2){var p1,p2;for(var i=0;i<len-1;i++){p1=ring.components[i];p2=ring.components[i+1];area+=OpenLayers.Util.rad(p2.x-p1.x)*(2+Math.sin(OpenLayers.Util.rad(p1.y))+Math.sin(OpenLayers.Util.rad(p2.y)))}area=area*6378137*6378137/2}return area},containsPoint:function(point){var approx=OpenLayers.Number.limitSigDigs;var digs=14;var px=approx(point.x,digs);var py=approx(point.y,digs);function getX(y,x1,y1,x2,y2){return(y-y2)*((x2-x1)/(y2-y1))+x2}var numSeg=this.components.length-1;var start,end,x1,y1,x2,y2,cx,cy;var crosses=0;for(var i=0;i<numSeg;++i){start=this.components[i];x1=approx(start.x,digs);y1=approx(start.y,digs);end=this.components[i+1];x2=approx(end.x,digs);y2=approx(end.y,digs);if(y1==y2){if(py==y1){if(x1<=x2&&(px>=x1&&px<=x2)||x1>=x2&&(px<=x1&&px>=x2)){crosses=-1;break}}continue}cx=approx(getX(py,x1,y1,x2,y2),digs);if(cx==px){if(y1<y2&&(py>=y1&&py<=y2)||y1>y2&&(py<=y1&&py>=y2)){crosses=-1;break}}if(cx<=px){continue}if(x1!=x2&&(cx<Math.min(x1,x2)||cx>Math.max(x1,x2))){continue}if(y1<y2&&(py>=y1&&py<y2)||y1>y2&&(py<y1&&py>=y2)){++crosses}}var contained=(crosses==-1)?1:!!(crosses&1);return contained},intersects:function(geometry){var intersect=false;if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){intersect=this.containsPoint(geometry)}else{if(geometry.CLASS_NAME=="OpenLayers.Geometry.LineString"){intersect=geometry.intersects(this)}else{if(geometry.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){intersect=OpenLayers.Geometry.LineString.prototype.intersects.apply(this,[geometry])}else{for(var i=0,len=geometry.components.length;i<len;++i){intersect=geometry.components[i].intersects(this);if(intersect){break}}}}}return intersect},getVertices:function(nodes){return(nodes===true)?[]:this.components.slice(0,this.components.length-1)},CLASS_NAME:"OpenLayers.Geometry.LinearRing"});OpenLayers.Geometry.Polygon=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.LinearRing"],getArea:function(){var area=0;if(this.components&&(this.components.length>0)){area+=Math.abs(this.components[0].getArea());for(var i=1,len=this.components.length;i<len;i++){area-=Math.abs(this.components[i].getArea())}}return area},getGeodesicArea:function(projection){var area=0;if(this.components&&(this.components.length>0)){area+=Math.abs(this.components[0].getGeodesicArea(projection));for(var i=1,len=this.components.length;i<len;i++){area-=Math.abs(this.components[i].getGeodesicArea(projection))}}return area},containsPoint:function(point){var numRings=this.components.length;var contained=false;if(numRings>0){contained=this.components[0].containsPoint(point);if(contained!==1){if(contained&&numRings>1){var hole;for(var i=1;i<numRings;++i){hole=this.components[i].containsPoint(point);if(hole){if(hole===1){contained=1}else{contained=false}break}}}}}return contained},intersects:function(geometry){var intersect=false;var i,len;if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){intersect=this.containsPoint(geometry)}else{if(geometry.CLASS_NAME=="OpenLayers.Geometry.LineString"||geometry.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){for(i=0,len=this.components.length;i<len;++i){intersect=geometry.intersects(this.components[i]);if(intersect){break}}if(!intersect){for(i=0,len=geometry.components.length;i<len;++i){intersect=this.containsPoint(geometry.components[i]);if(intersect){break}}}}else{for(i=0,len=geometry.components.length;i<len;++i){intersect=this.intersects(geometry.components[i]);if(intersect){break}}}}if(!intersect&&geometry.CLASS_NAME=="OpenLayers.Geometry.Polygon"){var ring=this.components[0];for(i=0,len=ring.components.length;i<len;++i){intersect=geometry.containsPoint(ring.components[i]);if(intersect){break}}}return intersect},distanceTo:function(geometry,options){var edge=!(options&&options.edge===false);var result;if(!edge&&this.intersects(geometry)){result=0}else{result=OpenLayers.Geometry.Collection.prototype.distanceTo.apply(this,[geometry,options])}return result},CLASS_NAME:"OpenLayers.Geometry.Polygon"});OpenLayers.Geometry.Polygon.createRegularPolygon=function(origin,radius,sides,rotation){var angle=Math.PI*((1/sides)-(1/2));if(rotation){angle+=(rotation/180)*Math.PI}var rotatedAngle,x,y;var points=[];for(var i=0;i<sides;++i){rotatedAngle=angle+(i*2*Math.PI/sides);x=origin.x+(radius*Math.cos(rotatedAngle));y=origin.y+(radius*Math.sin(rotatedAngle));points.push(new OpenLayers.Geometry.Point(x,y))}var ring=new OpenLayers.Geometry.LinearRing(points);return new OpenLayers.Geometry.Polygon([ring])};OpenLayers.Geometry.MultiPolygon=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.Polygon"],CLASS_NAME:"OpenLayers.Geometry.MultiPolygon"});OpenLayers.Format.GML=OpenLayers.Class(OpenLayers.Format.XML,{featureNS:"http://mapserver.gis.umn.edu/mapserver",featurePrefix:"feature",featureName:"featureMember",layerName:"features",geometryName:"geometry",collectionName:"FeatureCollection",gmlns:"http://www.opengis.net/gml",extractAttributes:true,xy:true,initialize:function(options){this.regExes={trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g)};OpenLayers.Format.XML.prototype.initialize.apply(this,[options])},read:function(data){if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}var featureNodes=this.getElementsByTagNameNS(data.documentElement,this.gmlns,this.featureName);var features=[];for(var i=0;i<featureNodes.length;i++){var feature=this.parseFeature(featureNodes[i]);if(feature){features.push(feature)}}return features},parseFeature:function(node){var order=["MultiPolygon","Polygon","MultiLineString","LineString","MultiPoint","Point","Envelope"];var type,nodeList,geometry,parser;for(var i=0;i<order.length;++i){type=order[i];nodeList=this.getElementsByTagNameNS(node,this.gmlns,type);if(nodeList.length>0){parser=this.parseGeometry[type.toLowerCase()];if(parser){geometry=parser.apply(this,[nodeList[0]]);if(this.internalProjection&&this.externalProjection){geometry.transform(this.externalProjection,this.internalProjection)}}else{throw new TypeError("Unsupported geometry type: "+type)}break}}var bounds;var boxNodes=this.getElementsByTagNameNS(node,this.gmlns,"Box");for(i=0;i<boxNodes.length;++i){var boxNode=boxNodes[i];var box=this.parseGeometry.box.apply(this,[boxNode]);var parentNode=boxNode.parentNode;var parentName=parentNode.localName||parentNode.nodeName.split(":").pop();if(parentName==="boundedBy"){bounds=box}else{geometry=box.toGeometry()}}var attributes;if(this.extractAttributes){attributes=this.parseAttributes(node)}var feature=new OpenLayers.Feature.Vector(geometry,attributes);feature.bounds=bounds;feature.gml={featureType:node.firstChild.nodeName.split(":")[1],featureNS:node.firstChild.namespaceURI,featureNSPrefix:node.firstChild.prefix};var childNode=node.firstChild;var fid;while(childNode){if(childNode.nodeType==1){fid=childNode.getAttribute("fid")||childNode.getAttribute("id");if(fid){break}}childNode=childNode.nextSibling}feature.fid=fid;return feature},parseGeometry:{point:function(node){var nodeList,coordString;var coords=[];var nodeList=this.getElementsByTagNameNS(node,this.gmlns,"pos");if(nodeList.length>0){coordString=nodeList[0].firstChild.nodeValue;coordString=coordString.replace(this.regExes.trimSpace,"");coords=coordString.split(this.regExes.splitSpace)}if(coords.length==0){nodeList=this.getElementsByTagNameNS(node,this.gmlns,"coordinates");if(nodeList.length>0){coordString=nodeList[0].firstChild.nodeValue;coordString=coordString.replace(this.regExes.removeSpace,"");coords=coordString.split(",")}}if(coords.length==0){nodeList=this.getElementsByTagNameNS(node,this.gmlns,"coord");if(nodeList.length>0){var xList=this.getElementsByTagNameNS(nodeList[0],this.gmlns,"X");var yList=this.getElementsByTagNameNS(nodeList[0],this.gmlns,"Y");if(xList.length>0&&yList.length>0){coords=[xList[0].firstChild.nodeValue,yList[0].firstChild.nodeValue]}}}if(coords.length==2){coords[2]=null}if(this.xy){return new OpenLayers.Geometry.Point(coords[0],coords[1],coords[2])}else{return new OpenLayers.Geometry.Point(coords[1],coords[0],coords[2])}},multipoint:function(node){var nodeList=this.getElementsByTagNameNS(node,this.gmlns,"Point");var components=[];if(nodeList.length>0){var point;for(var i=0;i<nodeList.length;++i){point=this.parseGeometry.point.apply(this,[nodeList[i]]);if(point){components.push(point)}}}return new OpenLayers.Geometry.MultiPoint(components)},linestring:function(node,ring){var nodeList,coordString;var coords=[];var points=[];nodeList=this.getElementsByTagNameNS(node,this.gmlns,"posList");if(nodeList.length>0){coordString=this.getChildValue(nodeList[0]);coordString=coordString.replace(this.regExes.trimSpace,"");coords=coordString.split(this.regExes.splitSpace);var dim=parseInt(nodeList[0].getAttribute("dimension"));var j,x,y,z;for(var i=0;i<coords.length/dim;++i){j=i*dim;x=coords[j];y=coords[j+1];z=(dim==2)?null:coords[j+2];if(this.xy){points.push(new OpenLayers.Geometry.Point(x,y,z))}else{points.push(new OpenLayers.Geometry.Point(y,x,z))}}}if(coords.length==0){nodeList=this.getElementsByTagNameNS(node,this.gmlns,"coordinates");if(nodeList.length>0){coordString=this.getChildValue(nodeList[0]);coordString=coordString.replace(this.regExes.trimSpace,"");coordString=coordString.replace(this.regExes.trimComma,",");var pointList=coordString.split(this.regExes.splitSpace);for(var i=0;i<pointList.length;++i){coords=pointList[i].split(",");if(coords.length==2){coords[2]=null}if(this.xy){points.push(new OpenLayers.Geometry.Point(coords[0],coords[1],coords[2]))}else{points.push(new OpenLayers.Geometry.Point(coords[1],coords[0],coords[2]))}}}}var line=null;if(points.length!=0){if(ring){line=new OpenLayers.Geometry.LinearRing(points)}else{line=new OpenLayers.Geometry.LineString(points)}}return line},multilinestring:function(node){var nodeList=this.getElementsByTagNameNS(node,this.gmlns,"LineString");var components=[];if(nodeList.length>0){var line;for(var i=0;i<nodeList.length;++i){line=this.parseGeometry.linestring.apply(this,[nodeList[i]]);if(line){components.push(line)}}}return new OpenLayers.Geometry.MultiLineString(components)},polygon:function(node){var nodeList=this.getElementsByTagNameNS(node,this.gmlns,"LinearRing");var components=[];if(nodeList.length>0){var ring;for(var i=0;i<nodeList.length;++i){ring=this.parseGeometry.linestring.apply(this,[nodeList[i],true]);if(ring){components.push(ring)}}}return new OpenLayers.Geometry.Polygon(components)},multipolygon:function(node){var nodeList=this.getElementsByTagNameNS(node,this.gmlns,"Polygon");var components=[];if(nodeList.length>0){var polygon;for(var i=0;i<nodeList.length;++i){polygon=this.parseGeometry.polygon.apply(this,[nodeList[i]]);if(polygon){components.push(polygon)}}}return new OpenLayers.Geometry.MultiPolygon(components)},envelope:function(node){var components=[];var coordString;var envelope;var lpoint=this.getElementsByTagNameNS(node,this.gmlns,"lowerCorner");if(lpoint.length>0){var coords=[];if(lpoint.length>0){coordString=lpoint[0].firstChild.nodeValue;coordString=coordString.replace(this.regExes.trimSpace,"");coords=coordString.split(this.regExes.splitSpace)}if(coords.length==2){coords[2]=null}if(this.xy){var lowerPoint=new OpenLayers.Geometry.Point(coords[0],coords[1],coords[2])}else{var lowerPoint=new OpenLayers.Geometry.Point(coords[1],coords[0],coords[2])}}var upoint=this.getElementsByTagNameNS(node,this.gmlns,"upperCorner");if(upoint.length>0){var coords=[];if(upoint.length>0){coordString=upoint[0].firstChild.nodeValue;coordString=coordString.replace(this.regExes.trimSpace,"");coords=coordString.split(this.regExes.splitSpace)}if(coords.length==2){coords[2]=null}if(this.xy){var upperPoint=new OpenLayers.Geometry.Point(coords[0],coords[1],coords[2])}else{var upperPoint=new OpenLayers.Geometry.Point(coords[1],coords[0],coords[2])}}if(lowerPoint&&upperPoint){components.push(new OpenLayers.Geometry.Point(lowerPoint.x,lowerPoint.y));components.push(new OpenLayers.Geometry.Point(upperPoint.x,lowerPoint.y));components.push(new OpenLayers.Geometry.Point(upperPoint.x,upperPoint.y));components.push(new OpenLayers.Geometry.Point(lowerPoint.x,upperPoint.y));components.push(new OpenLayers.Geometry.Point(lowerPoint.x,lowerPoint.y));var ring=new OpenLayers.Geometry.LinearRing(components);envelope=new OpenLayers.Geometry.Polygon([ring])}return envelope},box:function(node){var nodeList=this.getElementsByTagNameNS(node,this.gmlns,"coordinates");var coordString;var coords,beginPoint=null,endPoint=null;if(nodeList.length>0){coordString=nodeList[0].firstChild.nodeValue;coords=coordString.split(" ");if(coords.length==2){beginPoint=coords[0].split(",");endPoint=coords[1].split(",")}}if(beginPoint!==null&&endPoint!==null){return new OpenLayers.Bounds(parseFloat(beginPoint[0]),parseFloat(beginPoint[1]),parseFloat(endPoint[0]),parseFloat(endPoint[1]))}}},parseAttributes:function(node){var attributes={};var childNode=node.firstChild;var children,i,child,grandchildren,grandchild,name,value;while(childNode){if(childNode.nodeType==1){children=childNode.childNodes;for(i=0;i<children.length;++i){child=children[i];if(child.nodeType==1){grandchildren=child.childNodes;if(grandchildren.length==1){grandchild=grandchildren[0];if(grandchild.nodeType==3||grandchild.nodeType==4){name=(child.prefix)?child.nodeName.split(":")[1]:child.nodeName;value=grandchild.nodeValue.replace(this.regExes.trimSpace,"");attributes[name]=value}}else{attributes[child.nodeName.split(":").pop()]=null}}}break}childNode=childNode.nextSibling}return attributes},write:function(features){if(!(OpenLayers.Util.isArray(features))){features=[features]}var gml=this.createElementNS("http://www.opengis.net/wfs","wfs:"+this.collectionName);for(var i=0;i<features.length;i++){gml.appendChild(this.createFeatureXML(features[i]))}return OpenLayers.Format.XML.prototype.write.apply(this,[gml])},createFeatureXML:function(feature){var geometry=feature.geometry;var geometryNode=this.buildGeometryNode(geometry);var geomContainer=this.createElementNS(this.featureNS,this.featurePrefix+":"+this.geometryName);geomContainer.appendChild(geometryNode);var featureNode=this.createElementNS(this.gmlns,"gml:"+this.featureName);var featureContainer=this.createElementNS(this.featureNS,this.featurePrefix+":"+this.layerName);var fid=feature.fid||feature.id;featureContainer.setAttribute("fid",fid);featureContainer.appendChild(geomContainer);for(var attr in feature.attributes){var attrText=this.createTextNode(feature.attributes[attr]);var nodename=attr.substring(attr.lastIndexOf(":")+1);var attrContainer=this.createElementNS(this.featureNS,this.featurePrefix+":"+nodename);attrContainer.appendChild(attrText);featureContainer.appendChild(attrContainer)}featureNode.appendChild(featureContainer);return featureNode},buildGeometryNode:function(geometry){if(this.externalProjection&&this.internalProjection){geometry=geometry.clone();geometry.transform(this.internalProjection,this.externalProjection)}var className=geometry.CLASS_NAME;var type=className.substring(className.lastIndexOf(".")+1);var builder=this.buildGeometry[type.toLowerCase()];return builder.apply(this,[geometry])},buildGeometry:{point:function(geometry){var gml=this.createElementNS(this.gmlns,"gml:Point");gml.appendChild(this.buildCoordinatesNode(geometry));return gml},multipoint:function(geometry){var gml=this.createElementNS(this.gmlns,"gml:MultiPoint");var points=geometry.components;var pointMember,pointGeom;for(var i=0;i<points.length;i++){pointMember=this.createElementNS(this.gmlns,"gml:pointMember");pointGeom=this.buildGeometry.point.apply(this,[points[i]]);pointMember.appendChild(pointGeom);gml.appendChild(pointMember)}return gml},linestring:function(geometry){var gml=this.createElementNS(this.gmlns,"gml:LineString");gml.appendChild(this.buildCoordinatesNode(geometry));return gml},multilinestring:function(geometry){var gml=this.createElementNS(this.gmlns,"gml:MultiLineString");var lines=geometry.components;var lineMember,lineGeom;for(var i=0;i<lines.length;++i){lineMember=this.createElementNS(this.gmlns,"gml:lineStringMember");lineGeom=this.buildGeometry.linestring.apply(this,[lines[i]]);lineMember.appendChild(lineGeom);gml.appendChild(lineMember)}return gml},linearring:function(geometry){var gml=this.createElementNS(this.gmlns,"gml:LinearRing");gml.appendChild(this.buildCoordinatesNode(geometry));return gml},polygon:function(geometry){var gml=this.createElementNS(this.gmlns,"gml:Polygon");var rings=geometry.components;var ringMember,ringGeom,type;for(var i=0;i<rings.length;++i){type=(i==0)?"outerBoundaryIs":"innerBoundaryIs";ringMember=this.createElementNS(this.gmlns,"gml:"+type);ringGeom=this.buildGeometry.linearring.apply(this,[rings[i]]);ringMember.appendChild(ringGeom);gml.appendChild(ringMember)}return gml},multipolygon:function(geometry){var gml=this.createElementNS(this.gmlns,"gml:MultiPolygon");var polys=geometry.components;var polyMember,polyGeom;for(var i=0;i<polys.length;++i){polyMember=this.createElementNS(this.gmlns,"gml:polygonMember");polyGeom=this.buildGeometry.polygon.apply(this,[polys[i]]);polyMember.appendChild(polyGeom);gml.appendChild(polyMember)}return gml},bounds:function(bounds){var gml=this.createElementNS(this.gmlns,"gml:Box");gml.appendChild(this.buildCoordinatesNode(bounds));return gml}},buildCoordinatesNode:function(geometry){var coordinatesNode=this.createElementNS(this.gmlns,"gml:coordinates");coordinatesNode.setAttribute("decimal",".");coordinatesNode.setAttribute("cs",",");coordinatesNode.setAttribute("ts"," ");var parts=[];if(geometry instanceof OpenLayers.Bounds){parts.push(geometry.left+","+geometry.bottom);parts.push(geometry.right+","+geometry.top)}else{var points=(geometry.components)?geometry.components:[geometry];for(var i=0;i<points.length;i++){parts.push(points[i].x+","+points[i].y)}}var txtNode=this.createTextNode(parts.join(" "));coordinatesNode.appendChild(txtNode);return coordinatesNode},CLASS_NAME:"OpenLayers.Format.GML"});if(!OpenLayers.Format.GML){OpenLayers.Format.GML={}}OpenLayers.Format.GML.Base=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{gml:"http://www.opengis.net/gml",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance",wfs:"http://www.opengis.net/wfs"},defaultPrefix:"gml",schemaLocation:null,featureType:null,featureNS:null,geometryName:"geometry",extractAttributes:true,srsName:null,xy:true,geometryTypes:null,singleFeatureType:null,regExes:{trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g),featureMember:(/^(.*:)?featureMembers?$/)},initialize:function(options){OpenLayers.Format.XML.prototype.initialize.apply(this,[options]);this.setGeometryTypes();if(options&&options.featureNS){this.setNamespace("feature",options.featureNS)}this.singleFeatureType=!options||(typeof options.featureType==="string")},read:function(data){if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}if(data&&data.nodeType==9){data=data.documentElement}var features=[];this.readNode(data,{features:features},true);if(features.length==0){var elements=this.getElementsByTagNameNS(data,this.namespaces.gml,"featureMember");if(elements.length){for(var i=0,len=elements.length;i<len;++i){this.readNode(elements[i],{features:features},true)}}else{var elements=this.getElementsByTagNameNS(data,this.namespaces.gml,"featureMembers");if(elements.length){this.readNode(elements[0],{features:features},true)}}}return features},readNode:function(node,obj,first){if(first===true&&this.autoConfig===true){this.featureType=null;delete this.namespaceAlias[this.featureNS];delete this.namespaces.feature;this.featureNS=null}if(!this.featureNS&&(!(node.prefix in this.namespaces)&&node.parentNode.namespaceURI==this.namespaces.gml&&this.regExes.featureMember.test(node.parentNode.nodeName))){this.featureType=node.nodeName.split(":").pop();this.setNamespace("feature",node.namespaceURI);this.featureNS=node.namespaceURI;this.autoConfig=true}return OpenLayers.Format.XML.prototype.readNode.apply(this,[node,obj])},readers:{gml:{_inherit:function(node,obj,container){},featureMember:function(node,obj){this.readChildNodes(node,obj)},featureMembers:function(node,obj){this.readChildNodes(node,obj)},name:function(node,obj){obj.name=this.getChildValue(node)},boundedBy:function(node,obj){var container={};this.readChildNodes(node,container);if(container.components&&container.components.length>0){obj.bounds=container.components[0]}},Point:function(node,container){var obj={points:[]};this.readChildNodes(node,obj);if(!container.components){container.components=[]}container.components.push(obj.points[0])},coordinates:function(node,obj){var str=this.getChildValue(node).replace(this.regExes.trimSpace,"");str=str.replace(this.regExes.trimComma,",");var pointList=str.split(this.regExes.splitSpace);var coords;var numPoints=pointList.length;var points=new Array(numPoints);for(var i=0;i<numPoints;++i){coords=pointList[i].split(",");if(this.xy){points[i]=new OpenLayers.Geometry.Point(coords[0],coords[1],coords[2])}else{points[i]=new OpenLayers.Geometry.Point(coords[1],coords[0],coords[2])}}obj.points=points},coord:function(node,obj){var coord={};this.readChildNodes(node,coord);if(!obj.points){obj.points=[]}obj.points.push(new OpenLayers.Geometry.Point(coord.x,coord.y,coord.z))},X:function(node,coord){coord.x=this.getChildValue(node)},Y:function(node,coord){coord.y=this.getChildValue(node)},Z:function(node,coord){coord.z=this.getChildValue(node)},MultiPoint:function(node,container){var obj={components:[]};this.readers.gml._inherit.apply(this,[node,obj,container]);this.readChildNodes(node,obj);container.components=[new OpenLayers.Geometry.MultiPoint(obj.components)]},pointMember:function(node,obj){this.readChildNodes(node,obj)},LineString:function(node,container){var obj={};this.readers.gml._inherit.apply(this,[node,obj,container]);this.readChildNodes(node,obj);if(!container.components){container.components=[]}container.components.push(new OpenLayers.Geometry.LineString(obj.points))},MultiLineString:function(node,container){var obj={components:[]};this.readers.gml._inherit.apply(this,[node,obj,container]);this.readChildNodes(node,obj);container.components=[new OpenLayers.Geometry.MultiLineString(obj.components)]},lineStringMember:function(node,obj){this.readChildNodes(node,obj)},Polygon:function(node,container){var obj={outer:null,inner:[]};this.readers.gml._inherit.apply(this,[node,obj,container]);this.readChildNodes(node,obj);obj.inner.unshift(obj.outer);if(!container.components){container.components=[]}container.components.push(new OpenLayers.Geometry.Polygon(obj.inner))},LinearRing:function(node,obj){var container={};this.readers.gml._inherit.apply(this,[node,container]);this.readChildNodes(node,container);obj.components=[new OpenLayers.Geometry.LinearRing(container.points)]},MultiPolygon:function(node,container){var obj={components:[]};this.readers.gml._inherit.apply(this,[node,obj,container]);this.readChildNodes(node,obj);container.components=[new OpenLayers.Geometry.MultiPolygon(obj.components)]},polygonMember:function(node,obj){this.readChildNodes(node,obj)},GeometryCollection:function(node,container){var obj={components:[]};this.readers.gml._inherit.apply(this,[node,obj,container]);this.readChildNodes(node,obj);container.components=[new OpenLayers.Geometry.Collection(obj.components)]},geometryMember:function(node,obj){this.readChildNodes(node,obj)}},feature:{"*":function(node,obj){var name;var local=node.localName||node.nodeName.split(":").pop();if(obj.features){if(!this.singleFeatureType&&(OpenLayers.Util.indexOf(this.featureType,local)!==-1)){name="_typeName"}else{if(local===this.featureType){name="_typeName"}}}else{if(node.childNodes.length==0||(node.childNodes.length==1&&node.firstChild.nodeType==3)){if(this.extractAttributes){name="_attribute"}}else{name="_geometry"}}if(name){this.readers.feature[name].apply(this,[node,obj])}},_typeName:function(node,obj){var container={components:[],attributes:{}};this.readChildNodes(node,container);if(container.name){container.attributes.name=container.name}var feature=new OpenLayers.Feature.Vector(container.components[0],container.attributes);if(!this.singleFeatureType){feature.type=node.nodeName.split(":").pop();feature.namespace=node.namespaceURI}var fid=node.getAttribute("fid")||this.getAttributeNS(node,this.namespaces.gml,"id");if(fid){feature.fid=fid}if(this.internalProjection&&this.externalProjection&&feature.geometry){feature.geometry.transform(this.externalProjection,this.internalProjection)}if(container.bounds){feature.bounds=container.bounds}obj.features.push(feature)},_geometry:function(node,obj){if(!this.geometryName){this.geometryName=node.nodeName.split(":").pop()}this.readChildNodes(node,obj)},_attribute:function(node,obj){var local=node.localName||node.nodeName.split(":").pop();var value=this.getChildValue(node);obj.attributes[local]=value}},wfs:{FeatureCollection:function(node,obj){this.readChildNodes(node,obj)}}},write:function(features){var name;if(OpenLayers.Util.isArray(features)){name="featureMembers"}else{name="featureMember"}var root=this.writeNode("gml:"+name,features);this.setAttributeNS(root,this.namespaces.xsi,"xsi:schemaLocation",this.schemaLocation);return OpenLayers.Format.XML.prototype.write.apply(this,[root])},writers:{gml:{featureMember:function(feature){var node=this.createElementNSPlus("gml:featureMember");this.writeNode("feature:_typeName",feature,node);return node},MultiPoint:function(geometry){var node=this.createElementNSPlus("gml:MultiPoint");var components=geometry.components||[geometry];for(var i=0,ii=components.length;i<ii;++i){this.writeNode("pointMember",components[i],node)}return node},pointMember:function(geometry){var node=this.createElementNSPlus("gml:pointMember");this.writeNode("Point",geometry,node);return node},MultiLineString:function(geometry){var node=this.createElementNSPlus("gml:MultiLineString");var components=geometry.components||[geometry];for(var i=0,ii=components.length;i<ii;++i){this.writeNode("lineStringMember",components[i],node)}return node},lineStringMember:function(geometry){var node=this.createElementNSPlus("gml:lineStringMember");this.writeNode("LineString",geometry,node);return node},MultiPolygon:function(geometry){var node=this.createElementNSPlus("gml:MultiPolygon");var components=geometry.components||[geometry];for(var i=0,ii=components.length;i<ii;++i){this.writeNode("polygonMember",components[i],node)}return node},polygonMember:function(geometry){var node=this.createElementNSPlus("gml:polygonMember");this.writeNode("Polygon",geometry,node);return node},GeometryCollection:function(geometry){var node=this.createElementNSPlus("gml:GeometryCollection");for(var i=0,len=geometry.components.length;i<len;++i){this.writeNode("geometryMember",geometry.components[i],node)}return node},geometryMember:function(geometry){var node=this.createElementNSPlus("gml:geometryMember");var child=this.writeNode("feature:_geometry",geometry);node.appendChild(child.firstChild);return node}},feature:{_typeName:function(feature){var node=this.createElementNSPlus("feature:"+this.featureType,{attributes:{fid:feature.fid}});if(feature.geometry){this.writeNode("feature:_geometry",feature.geometry,node)}for(var name in feature.attributes){var value=feature.attributes[name];if(value!=null){this.writeNode("feature:_attribute",{name:name,value:value},node)}}return node},_geometry:function(geometry){if(this.externalProjection&&this.internalProjection){geometry=geometry.clone().transform(this.internalProjection,this.externalProjection)}var node=this.createElementNSPlus("feature:"+this.geometryName);var type=this.geometryTypes[geometry.CLASS_NAME];var child=this.writeNode("gml:"+type,geometry,node);if(this.srsName){child.setAttribute("srsName",this.srsName)}return node},_attribute:function(obj){return this.createElementNSPlus("feature:"+obj.name,{value:obj.value})}},wfs:{FeatureCollection:function(features){var node=this.createElementNSPlus("wfs:FeatureCollection");for(var i=0,len=features.length;i<len;++i){this.writeNode("gml:featureMember",features[i],node)}return node}}},setGeometryTypes:function(){this.geometryTypes={"OpenLayers.Geometry.Point":"Point","OpenLayers.Geometry.MultiPoint":"MultiPoint","OpenLayers.Geometry.LineString":"LineString","OpenLayers.Geometry.MultiLineString":"MultiLineString","OpenLayers.Geometry.Polygon":"Polygon","OpenLayers.Geometry.MultiPolygon":"MultiPolygon","OpenLayers.Geometry.Collection":"GeometryCollection"}},CLASS_NAME:"OpenLayers.Format.GML.Base"});OpenLayers.Format.GML.v2=OpenLayers.Class(OpenLayers.Format.GML.Base,{schemaLocation:"http://www.opengis.net/gml http://schemas.opengis.net/gml/2.1.2/feature.xsd",initialize:function(options){OpenLayers.Format.GML.Base.prototype.initialize.apply(this,[options])},readers:{gml:OpenLayers.Util.applyDefaults({outerBoundaryIs:function(node,container){var obj={};this.readChildNodes(node,obj);container.outer=obj.components[0]},innerBoundaryIs:function(node,container){var obj={};this.readChildNodes(node,obj);container.inner.push(obj.components[0])},Box:function(node,container){var obj={};this.readChildNodes(node,obj);if(!container.components){container.components=[]}var min=obj.points[0];var max=obj.points[1];container.components.push(new OpenLayers.Bounds(min.x,min.y,max.x,max.y))}},OpenLayers.Format.GML.Base.prototype.readers.gml),feature:OpenLayers.Format.GML.Base.prototype.readers.feature,wfs:OpenLayers.Format.GML.Base.prototype.readers.wfs},write:function(features){var name;if(OpenLayers.Util.isArray(features)){name="wfs:FeatureCollection"}else{name="gml:featureMember"}var root=this.writeNode(name,features);this.setAttributeNS(root,this.namespaces.xsi,"xsi:schemaLocation",this.schemaLocation);return OpenLayers.Format.XML.prototype.write.apply(this,[root])},writers:{gml:OpenLayers.Util.applyDefaults({Point:function(geometry){var node=this.createElementNSPlus("gml:Point");this.writeNode("coordinates",[geometry],node);return node},coordinates:function(points){var numPoints=points.length;var parts=new Array(numPoints);var point;for(var i=0;i<numPoints;++i){point=points[i];if(this.xy){parts[i]=point.x+","+point.y}else{parts[i]=point.y+","+point.x}if(point.z!=undefined){parts[i]+=","+point.z}}return this.createElementNSPlus("gml:coordinates",{attributes:{decimal:".",cs:",",ts:" "},value:(numPoints==1)?parts[0]:parts.join(" ")})},LineString:function(geometry){var node=this.createElementNSPlus("gml:LineString");this.writeNode("coordinates",geometry.components,node);return node},Polygon:function(geometry){var node=this.createElementNSPlus("gml:Polygon");this.writeNode("outerBoundaryIs",geometry.components[0],node);for(var i=1;i<geometry.components.length;++i){this.writeNode("innerBoundaryIs",geometry.components[i],node)}return node},outerBoundaryIs:function(ring){var node=this.createElementNSPlus("gml:outerBoundaryIs");this.writeNode("LinearRing",ring,node);return node},innerBoundaryIs:function(ring){var node=this.createElementNSPlus("gml:innerBoundaryIs");this.writeNode("LinearRing",ring,node);return node},LinearRing:function(ring){var node=this.createElementNSPlus("gml:LinearRing");this.writeNode("coordinates",ring.components,node);return node},Box:function(bounds){var node=this.createElementNSPlus("gml:Box");this.writeNode("coordinates",[{x:bounds.left,y:bounds.bottom},{x:bounds.right,y:bounds.top}],node);if(this.srsName){node.setAttribute("srsName",this.srsName)}return node}},OpenLayers.Format.GML.Base.prototype.writers.gml),feature:OpenLayers.Format.GML.Base.prototype.writers.feature,wfs:OpenLayers.Format.GML.Base.prototype.writers.wfs},CLASS_NAME:"OpenLayers.Format.GML.v2"});OpenLayers.Format.GML.v3=OpenLayers.Class(OpenLayers.Format.GML.Base,{schemaLocation:"http://www.opengis.net/gml http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/1.0.0/gmlsf.xsd",curve:false,multiCurve:true,surface:false,multiSurface:true,initialize:function(options){OpenLayers.Format.GML.Base.prototype.initialize.apply(this,[options])},readers:{gml:OpenLayers.Util.applyDefaults({_inherit:function(node,obj,container){var dim=parseInt(node.getAttribute("srsDimension"),10)||(container&&container.srsDimension);if(dim){obj.srsDimension=dim}},featureMembers:function(node,obj){this.readChildNodes(node,obj)},Curve:function(node,container){var obj={points:[]};this.readers.gml._inherit.apply(this,[node,obj,container]);this.readChildNodes(node,obj);if(!container.components){container.components=[]}container.components.push(new OpenLayers.Geometry.LineString(obj.points))},segments:function(node,obj){this.readChildNodes(node,obj)},LineStringSegment:function(node,container){var obj={};this.readChildNodes(node,obj);if(obj.points){Array.prototype.push.apply(container.points,obj.points)}},pos:function(node,obj){var str=this.getChildValue(node).replace(this.regExes.trimSpace,"");var coords=str.split(this.regExes.splitSpace);var point;if(this.xy){point=new OpenLayers.Geometry.Point(coords[0],coords[1],coords[2])}else{point=new OpenLayers.Geometry.Point(coords[1],coords[0],coords[2])}obj.points=[point]},posList:function(node,obj){var str=this.getChildValue(node).replace(this.regExes.trimSpace,"");var coords=str.split(this.regExes.splitSpace);var dim=obj.srsDimension||parseInt(node.getAttribute("srsDimension")||node.getAttribute("dimension"),10)||2;var j,x,y,z;var numPoints=coords.length/dim;var points=new Array(numPoints);for(var i=0,len=coords.length;i<len;i+=dim){x=coords[i];y=coords[i+1];z=(dim==2)?undefined:coords[i+2];if(this.xy){points[i/dim]=new OpenLayers.Geometry.Point(x,y,z)}else{points[i/dim]=new OpenLayers.Geometry.Point(y,x,z)}}obj.points=points},Surface:function(node,obj){this.readChildNodes(node,obj)},patches:function(node,obj){this.readChildNodes(node,obj)},PolygonPatch:function(node,obj){this.readers.gml.Polygon.apply(this,[node,obj])},exterior:function(node,container){var obj={};this.readChildNodes(node,obj);container.outer=obj.components[0]},interior:function(node,container){var obj={};this.readChildNodes(node,obj);container.inner.push(obj.components[0])},MultiCurve:function(node,container){var obj={components:[]};this.readers.gml._inherit.apply(this,[node,obj,container]);this.readChildNodes(node,obj);if(obj.components.length>0){container.components=[new OpenLayers.Geometry.MultiLineString(obj.components)]}},curveMember:function(node,obj){this.readChildNodes(node,obj)},MultiSurface:function(node,container){var obj={components:[]};this.readers.gml._inherit.apply(this,[node,obj,container]);this.readChildNodes(node,obj);if(obj.components.length>0){container.components=[new OpenLayers.Geometry.MultiPolygon(obj.components)]}},surfaceMember:function(node,obj){this.readChildNodes(node,obj)},surfaceMembers:function(node,obj){this.readChildNodes(node,obj)},pointMembers:function(node,obj){this.readChildNodes(node,obj)},lineStringMembers:function(node,obj){this.readChildNodes(node,obj)},polygonMembers:function(node,obj){this.readChildNodes(node,obj)},geometryMembers:function(node,obj){this.readChildNodes(node,obj)},Envelope:function(node,container){var obj={points:new Array(2)};this.readChildNodes(node,obj);if(!container.components){container.components=[]}var min=obj.points[0];var max=obj.points[1];container.components.push(new OpenLayers.Bounds(min.x,min.y,max.x,max.y))},lowerCorner:function(node,container){var obj={};this.readers.gml.pos.apply(this,[node,obj]);container.points[0]=obj.points[0]},upperCorner:function(node,container){var obj={};this.readers.gml.pos.apply(this,[node,obj]);container.points[1]=obj.points[0]}},OpenLayers.Format.GML.Base.prototype.readers.gml),feature:OpenLayers.Format.GML.Base.prototype.readers.feature,wfs:OpenLayers.Format.GML.Base.prototype.readers.wfs},write:function(features){var name;if(OpenLayers.Util.isArray(features)){name="featureMembers"}else{name="featureMember"}var root=this.writeNode("gml:"+name,features);this.setAttributeNS(root,this.namespaces.xsi,"xsi:schemaLocation",this.schemaLocation);return OpenLayers.Format.XML.prototype.write.apply(this,[root])},writers:{gml:OpenLayers.Util.applyDefaults({featureMembers:function(features){var node=this.createElementNSPlus("gml:featureMembers");for(var i=0,len=features.length;i<len;++i){this.writeNode("feature:_typeName",features[i],node)}return node},Point:function(geometry){var node=this.createElementNSPlus("gml:Point");this.writeNode("pos",geometry,node);return node},pos:function(point){var pos=(this.xy)?(point.x+" "+point.y):(point.y+" "+point.x);return this.createElementNSPlus("gml:pos",{value:pos})},LineString:function(geometry){var node=this.createElementNSPlus("gml:LineString");this.writeNode("posList",geometry.components,node);return node},Curve:function(geometry){var node=this.createElementNSPlus("gml:Curve");this.writeNode("segments",geometry,node);return node},segments:function(geometry){var node=this.createElementNSPlus("gml:segments");this.writeNode("LineStringSegment",geometry,node);return node},LineStringSegment:function(geometry){var node=this.createElementNSPlus("gml:LineStringSegment");this.writeNode("posList",geometry.components,node);return node},posList:function(points){var len=points.length;var parts=new Array(len);var point;for(var i=0;i<len;++i){point=points[i];if(this.xy){parts[i]=point.x+" "+point.y}else{parts[i]=point.y+" "+point.x}}return this.createElementNSPlus("gml:posList",{value:parts.join(" ")})},Surface:function(geometry){var node=this.createElementNSPlus("gml:Surface");this.writeNode("patches",geometry,node);return node},patches:function(geometry){var node=this.createElementNSPlus("gml:patches");this.writeNode("PolygonPatch",geometry,node);return node},PolygonPatch:function(geometry){var node=this.createElementNSPlus("gml:PolygonPatch",{attributes:{interpolation:"planar"}});this.writeNode("exterior",geometry.components[0],node);for(var i=1,len=geometry.components.length;i<len;++i){this.writeNode("interior",geometry.components[i],node)}return node},Polygon:function(geometry){var node=this.createElementNSPlus("gml:Polygon");this.writeNode("exterior",geometry.components[0],node);for(var i=1,len=geometry.components.length;i<len;++i){this.writeNode("interior",geometry.components[i],node)}return node},exterior:function(ring){var node=this.createElementNSPlus("gml:exterior");this.writeNode("LinearRing",ring,node);return node},interior:function(ring){var node=this.createElementNSPlus("gml:interior");this.writeNode("LinearRing",ring,node);return node},LinearRing:function(ring){var node=this.createElementNSPlus("gml:LinearRing");this.writeNode("posList",ring.components,node);return node},MultiCurve:function(geometry){var node=this.createElementNSPlus("gml:MultiCurve");var components=geometry.components||[geometry];for(var i=0,len=components.length;i<len;++i){this.writeNode("curveMember",components[i],node)}return node},curveMember:function(geometry){var node=this.createElementNSPlus("gml:curveMember");if(this.curve){this.writeNode("Curve",geometry,node)}else{this.writeNode("LineString",geometry,node)}return node},MultiSurface:function(geometry){var node=this.createElementNSPlus("gml:MultiSurface");var components=geometry.components||[geometry];for(var i=0,len=components.length;i<len;++i){this.writeNode("surfaceMember",components[i],node)}return node},surfaceMember:function(polygon){var node=this.createElementNSPlus("gml:surfaceMember");if(this.surface){this.writeNode("Surface",polygon,node)}else{this.writeNode("Polygon",polygon,node)}return node},Envelope:function(bounds){var node=this.createElementNSPlus("gml:Envelope");this.writeNode("lowerCorner",bounds,node);this.writeNode("upperCorner",bounds,node);if(this.srsName){node.setAttribute("srsName",this.srsName)}return node},lowerCorner:function(bounds){var pos=(this.xy)?(bounds.left+" "+bounds.bottom):(bounds.bottom+" "+bounds.left);return this.createElementNSPlus("gml:lowerCorner",{value:pos})},upperCorner:function(bounds){var pos=(this.xy)?(bounds.right+" "+bounds.top):(bounds.top+" "+bounds.right);return this.createElementNSPlus("gml:upperCorner",{value:pos})}},OpenLayers.Format.GML.Base.prototype.writers.gml),feature:OpenLayers.Format.GML.Base.prototype.writers.feature,wfs:OpenLayers.Format.GML.Base.prototype.writers.wfs},setGeometryTypes:function(){this.geometryTypes={"OpenLayers.Geometry.Point":"Point","OpenLayers.Geometry.MultiPoint":"MultiPoint","OpenLayers.Geometry.LineString":(this.curve===true)?"Curve":"LineString","OpenLayers.Geometry.MultiLineString":(this.multiCurve===false)?"MultiLineString":"MultiCurve","OpenLayers.Geometry.Polygon":(this.surface===true)?"Surface":"Polygon","OpenLayers.Geometry.MultiPolygon":(this.multiSurface===false)?"MultiPolygon":"MultiSurface","OpenLayers.Geometry.Collection":"GeometryCollection"}},CLASS_NAME:"OpenLayers.Format.GML.v3"});OpenLayers.Format.OGCExceptionReport=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{ogc:"http://www.opengis.net/ogc"},regExes:{trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g)},defaultPrefix:"ogc",read:function(data){var result;if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}var root=data.documentElement;var exceptionInfo={exceptionReport:null};if(root){this.readChildNodes(data,exceptionInfo);if(exceptionInfo.exceptionReport===null){exceptionInfo=new OpenLayers.Format.OWSCommon().read(data)}}return exceptionInfo},readers:{ogc:{ServiceExceptionReport:function(node,obj){obj.exceptionReport={exceptions:[]};this.readChildNodes(node,obj.exceptionReport)},ServiceException:function(node,exceptionReport){var exception={code:node.getAttribute("code"),locator:node.getAttribute("locator"),text:this.getChildValue(node)};exceptionReport.exceptions.push(exception)}}},CLASS_NAME:"OpenLayers.Format.OGCExceptionReport"});OpenLayers.Format.XML.VersionedOGC=OpenLayers.Class(OpenLayers.Format.XML,{defaultVersion:null,version:null,profile:null,allowFallback:false,name:null,stringifyOutput:false,parser:null,initialize:function(options){OpenLayers.Format.XML.prototype.initialize.apply(this,[options]);var className=this.CLASS_NAME;this.name=className.substring(className.lastIndexOf(".")+1)},getVersion:function(root,options){var version;if(root){version=this.version;if(!version){version=root.getAttribute("version");if(!version){version=this.defaultVersion}}}else{version=(options&&options.version)||this.version||this.defaultVersion}return version},getParser:function(version){version=version||this.defaultVersion;var profile=this.profile?"_"+this.profile:"";if(!this.parser||this.parser.VERSION!=version){var format=OpenLayers.Format[this.name]["v"+version.replace(/\./g,"_")+profile];if(!format){if(profile!==""&&this.allowFallback){profile="";format=OpenLayers.Format[this.name]["v"+version.replace(/\./g,"_")]}if(!format){throw"Can't find a "+this.name+" parser for version "+version+profile}}this.parser=new format(this.options)}return this.parser},write:function(obj,options){var version=this.getVersion(null,options);this.parser=this.getParser(version);var root=this.parser.write(obj,options);if(this.stringifyOutput===false){return root}else{return OpenLayers.Format.XML.prototype.write.apply(this,[root])}},read:function(data,options){if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}var root=data.documentElement;var version=this.getVersion(root);this.parser=this.getParser(version);var obj=this.parser.read(data,options);var errorProperty=this.parser.errorProperty||null;if(errorProperty!==null&&obj[errorProperty]===undefined){var format=new OpenLayers.Format.OGCExceptionReport();obj.error=format.read(data)}obj.version=version;return obj},CLASS_NAME:"OpenLayers.Format.XML.VersionedOGC"});OpenLayers.Format.WMSDescribeLayer=OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC,{defaultVersion:"1.1.1",CLASS_NAME:"OpenLayers.Format.WMSDescribeLayer"});OpenLayers.Format.WMSDescribeLayer.v1_1_1=OpenLayers.Class(OpenLayers.Format.WMSDescribeLayer,{initialize:function(options){OpenLayers.Format.WMSDescribeLayer.prototype.initialize.apply(this,[options])},read:function(data){if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}var root=data.documentElement;var children=root.childNodes;var describelayer={layerDescriptions:[]};var childNode,nodeName;for(var i=0;i<children.length;++i){childNode=children[i];nodeName=childNode.nodeName;if(nodeName=="LayerDescription"){var layerName=childNode.getAttribute("name");var owsType="";var owsURL="";var typeName="";if(childNode.getAttribute("owsType")){owsType=childNode.getAttribute("owsType");owsURL=childNode.getAttribute("owsURL")}else{if(childNode.getAttribute("wfs")!=""){owsType="WFS";owsURL=childNode.getAttribute("wfs")}else{if(childNode.getAttribute("wcs")!=""){owsType="WCS";owsURL=childNode.getAttribute("wcs")}}}var query=childNode.getElementsByTagName("Query");if(query.length>0){typeName=query[0].getAttribute("typeName");if(!typeName){typeName=query[0].getAttribute("typename")}}var layerDescription={layerName:layerName,owsType:owsType,owsURL:owsURL,typeName:typeName};describelayer.layerDescriptions.push(layerDescription);describelayer.length=describelayer.layerDescriptions.length;describelayer[describelayer.length-1]=layerDescription}else{if(nodeName=="ServiceException"){var parser=new OpenLayers.Format.OGCExceptionReport();return{error:parser.read(data)}}}}return describelayer},CLASS_NAME:"OpenLayers.Format.WMSDescribeLayer.v1_1_1"});OpenLayers.Format.WMSDescribeLayer.v1_1_0=OpenLayers.Format.WMSDescribeLayer.v1_1_1;OpenLayers.Format.WFSDescribeFeatureType=OpenLayers.Class(OpenLayers.Format.XML,{regExes:{trimSpace:(/^\s*|\s*$/g)},namespaces:{xsd:"http://www.w3.org/2001/XMLSchema"},readers:{xsd:{schema:function(node,obj){var complexTypes=[];var customTypes={};var schema={complexTypes:complexTypes,customTypes:customTypes};var i,len;this.readChildNodes(node,schema);var attributes=node.attributes;var attr,name;for(i=0,len=attributes.length;i<len;++i){attr=attributes[i];name=attr.name;if(name.indexOf("xmlns")===0){this.setNamespace(name.split(":")[1]||"",attr.value)}else{obj[name]=attr.value}}obj.featureTypes=complexTypes;obj.targetPrefix=this.namespaceAlias[obj.targetNamespace];var complexType,customType;for(i=0,len=complexTypes.length;i<len;++i){complexType=complexTypes[i];customType=customTypes[complexType.typeName];if(customTypes[complexType.typeName]){complexType.typeName=customType.name}}},complexType:function(node,obj){var complexType={typeName:node.getAttribute("name")};this.readChildNodes(node,complexType);obj.complexTypes.push(complexType)},complexContent:function(node,obj){this.readChildNodes(node,obj)},extension:function(node,obj){this.readChildNodes(node,obj)},sequence:function(node,obj){var sequence={elements:[]};this.readChildNodes(node,sequence);obj.properties=sequence.elements},element:function(node,obj){var type;if(obj.elements){var element={};var attributes=node.attributes;var attr;for(var i=0,len=attributes.length;i<len;++i){attr=attributes[i];element[attr.name]=attr.value}type=element.type;if(!type){type={};this.readChildNodes(node,type);element.restriction=type;element.type=type.base}var fullType=type.base||type;element.localType=fullType.split(":").pop();obj.elements.push(element);this.readChildNodes(node,element)}if(obj.complexTypes){type=node.getAttribute("type");var localType=type.split(":").pop();obj.customTypes[localType]={name:node.getAttribute("name"),type:type}}},annotation:function(node,obj){obj.annotation={};this.readChildNodes(node,obj.annotation)},appinfo:function(node,obj){if(!obj.appinfo){obj.appinfo=[]}obj.appinfo.push(this.getChildValue(node))},documentation:function(node,obj){if(!obj.documentation){obj.documentation=[]}var value=this.getChildValue(node);obj.documentation.push({lang:node.getAttribute("xml:lang"),textContent:value.replace(this.regExes.trimSpace,"")})},simpleType:function(node,obj){this.readChildNodes(node,obj)},restriction:function(node,obj){obj.base=node.getAttribute("base");this.readRestriction(node,obj)}}},readRestriction:function(node,obj){var children=node.childNodes;var child,nodeName,value;for(var i=0,len=children.length;i<len;++i){child=children[i];if(child.nodeType==1){nodeName=child.nodeName.split(":").pop();value=child.getAttribute("value");if(!obj[nodeName]){obj[nodeName]=value}else{if(typeof obj[nodeName]=="string"){obj[nodeName]=[obj[nodeName]]}obj[nodeName].push(value)}}}},read:function(data){if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}if(data&&data.nodeType==9){data=data.documentElement}var schema={};if(data.nodeName.split(":").pop()==="ExceptionReport"){var parser=new OpenLayers.Format.OGCExceptionReport();schema.error=parser.read(data)}else{this.readNode(data,schema)}return schema},CLASS_NAME:"OpenLayers.Format.WFSDescribeFeatureType"});OpenLayers.Filter=OpenLayers.Class({initialize:function(options){OpenLayers.Util.extend(this,options)},destroy:function(){},evaluate:function(context){return true},clone:function(){return null},toString:function(){var string;if(OpenLayers.Format&&OpenLayers.Format.CQL){string=OpenLayers.Format.CQL.prototype.write(this)}else{string=Object.prototype.toString.call(this)}return string},CLASS_NAME:"OpenLayers.Filter"});OpenLayers.Filter.FeatureId=OpenLayers.Class(OpenLayers.Filter,{fids:null,type:"FID",initialize:function(options){this.fids=[];OpenLayers.Filter.prototype.initialize.apply(this,[options])},evaluate:function(feature){for(var i=0,len=this.fids.length;i<len;i++){var fid=feature.fid||feature.id;if(fid==this.fids[i]){return true}}return false},clone:function(){var filter=new OpenLayers.Filter.FeatureId();OpenLayers.Util.extend(filter,this);filter.fids=this.fids.slice();return filter},CLASS_NAME:"OpenLayers.Filter.FeatureId"});OpenLayers.Filter.Logical=OpenLayers.Class(OpenLayers.Filter,{filters:null,type:null,initialize:function(options){this.filters=[];OpenLayers.Filter.prototype.initialize.apply(this,[options])},destroy:function(){this.filters=null;OpenLayers.Filter.prototype.destroy.apply(this)},evaluate:function(context){var i,len;switch(this.type){case OpenLayers.Filter.Logical.AND:for(i=0,len=this.filters.length;i<len;i++){if(this.filters[i].evaluate(context)==false){return false}}return true;case OpenLayers.Filter.Logical.OR:for(i=0,len=this.filters.length;i<len;i++){if(this.filters[i].evaluate(context)==true){return true}}return false;case OpenLayers.Filter.Logical.NOT:return(!this.filters[0].evaluate(context))}return undefined},clone:function(){var filters=[];for(var i=0,len=this.filters.length;i<len;++i){filters.push(this.filters[i].clone())}return new OpenLayers.Filter.Logical({type:this.type,filters:filters})},CLASS_NAME:"OpenLayers.Filter.Logical"});OpenLayers.Filter.Logical.AND="&&";OpenLayers.Filter.Logical.OR="||";OpenLayers.Filter.Logical.NOT="!";OpenLayers.Filter.Comparison=OpenLayers.Class(OpenLayers.Filter,{type:null,property:null,value:null,matchCase:true,lowerBoundary:null,upperBoundary:null,initialize:function(options){OpenLayers.Filter.prototype.initialize.apply(this,[options]);if(this.type===OpenLayers.Filter.Comparison.LIKE&&options.matchCase===undefined){this.matchCase=null}},evaluate:function(context){if(context instanceof OpenLayers.Feature.Vector){context=context.attributes}var result=false;var got=context[this.property];var exp;switch(this.type){case OpenLayers.Filter.Comparison.EQUAL_TO:exp=this.value;if(!this.matchCase&&typeof got=="string"&&typeof exp=="string"){result=(got.toUpperCase()==exp.toUpperCase())}else{result=(got==exp)}break;case OpenLayers.Filter.Comparison.NOT_EQUAL_TO:exp=this.value;if(!this.matchCase&&typeof got=="string"&&typeof exp=="string"){result=(got.toUpperCase()!=exp.toUpperCase())}else{result=(got!=exp)}break;case OpenLayers.Filter.Comparison.LESS_THAN:result=got<this.value;break;case OpenLayers.Filter.Comparison.GREATER_THAN:result=got>this.value;break;case OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO:result=got<=this.value;break;case OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO:result=got>=this.value;break;case OpenLayers.Filter.Comparison.BETWEEN:result=(got>=this.lowerBoundary)&&(got<=this.upperBoundary);break;case OpenLayers.Filter.Comparison.LIKE:var regexp=new RegExp(this.value,"gi");result=regexp.test(got);break;case OpenLayers.Filter.Comparison.IS_NULL:result=(got===null);break}return result},value2regex:function(wildCard,singleChar,escapeChar){if(wildCard=="."){throw new Error("'.' is an unsupported wildCard character for OpenLayers.Filter.Comparison")}wildCard=wildCard?wildCard:"*";singleChar=singleChar?singleChar:".";escapeChar=escapeChar?escapeChar:"!";this.value=this.value.replace(new RegExp("\\"+escapeChar+"(.|$)","g"),"\\$1");this.value=this.value.replace(new RegExp("\\"+singleChar,"g"),".");this.value=this.value.replace(new RegExp("\\"+wildCard,"g"),".*");this.value=this.value.replace(new RegExp("\\\\.\\*","g"),"\\"+wildCard);this.value=this.value.replace(new RegExp("\\\\\\.","g"),"\\"+singleChar);return this.value},regex2value:function(){var value=this.value;value=value.replace(/!/g,"!!");value=value.replace(/(\\)?\\\./g,function($0,$1){return $1?$0:"!."});value=value.replace(/(\\)?\\\*/g,function($0,$1){return $1?$0:"!*"});value=value.replace(/\\\\/g,"\\");value=value.replace(/\.\*/g,"*");return value},clone:function(){return OpenLayers.Util.extend(new OpenLayers.Filter.Comparison(),this)},CLASS_NAME:"OpenLayers.Filter.Comparison"});OpenLayers.Filter.Comparison.EQUAL_TO="==";OpenLayers.Filter.Comparison.NOT_EQUAL_TO="!=";OpenLayers.Filter.Comparison.LESS_THAN="<";OpenLayers.Filter.Comparison.GREATER_THAN=">";OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO="<=";OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO=">=";OpenLayers.Filter.Comparison.BETWEEN="..";OpenLayers.Filter.Comparison.LIKE="~";OpenLayers.Filter.Comparison.IS_NULL="NULL";OpenLayers.Filter.Spatial=OpenLayers.Class(OpenLayers.Filter,{type:null,property:null,value:null,distance:null,distanceUnits:null,evaluate:function(feature){var intersect=false;switch(this.type){case OpenLayers.Filter.Spatial.BBOX:case OpenLayers.Filter.Spatial.INTERSECTS:if(feature.geometry){var geom=this.value;if(this.value.CLASS_NAME=="OpenLayers.Bounds"){geom=this.value.toGeometry()}if(feature.geometry.intersects(geom)){intersect=true}}break;default:throw new Error("evaluate is not implemented for this filter type.")}return intersect},clone:function(){var options=OpenLayers.Util.applyDefaults({value:this.value&&this.value.clone&&this.value.clone()},this);return new OpenLayers.Filter.Spatial(options)},CLASS_NAME:"OpenLayers.Filter.Spatial"});OpenLayers.Filter.Spatial.BBOX="BBOX";OpenLayers.Filter.Spatial.INTERSECTS="INTERSECTS";OpenLayers.Filter.Spatial.DWITHIN="DWITHIN";OpenLayers.Filter.Spatial.WITHIN="WITHIN";OpenLayers.Filter.Spatial.CONTAINS="CONTAINS";OpenLayers.Format.SLD=OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC,{profile:null,defaultVersion:"1.0.0",stringifyOutput:true,namedLayersAsArray:false,CLASS_NAME:"OpenLayers.Format.SLD"});OpenLayers.Format.Filter=OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC,{defaultVersion:"1.0.0",CLASS_NAME:"OpenLayers.Format.Filter"});OpenLayers.Filter.Function=OpenLayers.Class(OpenLayers.Filter,{name:null,params:null,CLASS_NAME:"OpenLayers.Filter.Function"});OpenLayers.Date={dateRegEx:/^(?:(\d{4})(?:-(\d{2})(?:-(\d{2}))?)?)?(?:(?:T(\d{1,2}):(\d{2}):(\d{2}(?:\.\d+)?)(Z|(?:[+-]\d{1,2}(?::(\d{2}))?)))|Z)?$/,toISOString:(function(){if("toISOString" in Date.prototype){return function(date){return date.toISOString()}}else{return function(date){var str;if(isNaN(date.getTime())){str="Invalid Date"}else{str=date.getUTCFullYear()+"-"+OpenLayers.Number.zeroPad(date.getUTCMonth()+1,2)+"-"+OpenLayers.Number.zeroPad(date.getUTCDate(),2)+"T"+OpenLayers.Number.zeroPad(date.getUTCHours(),2)+":"+OpenLayers.Number.zeroPad(date.getUTCMinutes(),2)+":"+OpenLayers.Number.zeroPad(date.getUTCSeconds(),2)+"."+OpenLayers.Number.zeroPad(date.getUTCMilliseconds(),3)+"Z"}return str}}})(),parse:function(str){var date;var match=str.match(this.dateRegEx);if(match&&(match[1]||match[7])){var year=parseInt(match[1],10)||0;var month=(parseInt(match[2],10)-1)||0;var day=parseInt(match[3],10)||1;date=new Date(Date.UTC(year,month,day));var type=match[7];if(type){var hours=parseInt(match[4],10);var minutes=parseInt(match[5],10);var secFrac=parseFloat(match[6]);var seconds=secFrac|0;var milliseconds=Math.round(1000*(secFrac-seconds));date.setUTCHours(hours,minutes,seconds,milliseconds);if(type!=="Z"){var hoursOffset=parseInt(type,10);var minutesOffset=parseInt(match[8],10)||0;var offset=-1000*(60*(hoursOffset*60)+minutesOffset*60);date=new Date(date.getTime()+offset)}}}else{date=new Date("invalid")}return date}};OpenLayers.Format.Filter.v1=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{ogc:"http://www.opengis.net/ogc",gml:"http://www.opengis.net/gml",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance"},defaultPrefix:"ogc",schemaLocation:null,initialize:function(options){OpenLayers.Format.XML.prototype.initialize.apply(this,[options])},read:function(data){var obj={};this.readers.ogc.Filter.apply(this,[data,obj]);return obj.filter},readers:{ogc:{_expression:function(node){var obj,value="";for(var child=node.firstChild;child;child=child.nextSibling){switch(child.nodeType){case 1:obj=this.readNode(child);if(obj.property){value+="${"+obj.property+"}"}else{if(obj.value!==undefined){value+=obj.value}}break;case 3:case 4:value+=child.nodeValue}}return value},Filter:function(node,parent){var obj={fids:[],filters:[]};this.readChildNodes(node,obj);if(obj.fids.length>0){parent.filter=new OpenLayers.Filter.FeatureId({fids:obj.fids})}else{if(obj.filters.length>0){parent.filter=obj.filters[0]}}},FeatureId:function(node,obj){var fid=node.getAttribute("fid");if(fid){obj.fids.push(fid)}},And:function(node,obj){var filter=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND});this.readChildNodes(node,filter);obj.filters.push(filter)},Or:function(node,obj){var filter=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR});this.readChildNodes(node,filter);obj.filters.push(filter)},Not:function(node,obj){var filter=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.NOT});this.readChildNodes(node,filter);obj.filters.push(filter)},PropertyIsLessThan:function(node,obj){var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LESS_THAN});this.readChildNodes(node,filter);obj.filters.push(filter)},PropertyIsGreaterThan:function(node,obj){var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.GREATER_THAN});this.readChildNodes(node,filter);obj.filters.push(filter)},PropertyIsLessThanOrEqualTo:function(node,obj){var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO});this.readChildNodes(node,filter);obj.filters.push(filter)},PropertyIsGreaterThanOrEqualTo:function(node,obj){var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO});this.readChildNodes(node,filter);obj.filters.push(filter)},PropertyIsBetween:function(node,obj){var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.BETWEEN});this.readChildNodes(node,filter);obj.filters.push(filter)},Literal:function(node,obj){obj.value=OpenLayers.String.numericIf(this.getChildValue(node),true)},PropertyName:function(node,filter){filter.property=this.getChildValue(node)},LowerBoundary:function(node,filter){filter.lowerBoundary=OpenLayers.String.numericIf(this.readers.ogc._expression.call(this,node),true)},UpperBoundary:function(node,filter){filter.upperBoundary=OpenLayers.String.numericIf(this.readers.ogc._expression.call(this,node),true)},Intersects:function(node,obj){this.readSpatial(node,obj,OpenLayers.Filter.Spatial.INTERSECTS)},Within:function(node,obj){this.readSpatial(node,obj,OpenLayers.Filter.Spatial.WITHIN)},Contains:function(node,obj){this.readSpatial(node,obj,OpenLayers.Filter.Spatial.CONTAINS)},DWithin:function(node,obj){this.readSpatial(node,obj,OpenLayers.Filter.Spatial.DWITHIN)},Distance:function(node,obj){obj.distance=parseInt(this.getChildValue(node));obj.distanceUnits=node.getAttribute("units")},Function:function(node,obj){return},PropertyIsNull:function(node,obj){var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.IS_NULL});this.readChildNodes(node,filter);obj.filters.push(filter)}}},readSpatial:function(node,obj,type){var filter=new OpenLayers.Filter.Spatial({type:type});this.readChildNodes(node,filter);filter.value=filter.components[0];delete filter.components;obj.filters.push(filter)},encodeLiteral:function(value){if(value instanceof Date){value=OpenLayers.Date.toISOString(value)}return value},writeOgcExpression:function(value,node){if(value instanceof OpenLayers.Filter.Function){this.writeNode("Function",value,node)}else{this.writeNode("Literal",value,node)}return node},write:function(filter){return this.writers.ogc.Filter.apply(this,[filter])},writers:{ogc:{Filter:function(filter){var node=this.createElementNSPlus("ogc:Filter");this.writeNode(this.getFilterType(filter),filter,node);return node},_featureIds:function(filter){var node=this.createDocumentFragment();for(var i=0,ii=filter.fids.length;i<ii;++i){this.writeNode("ogc:FeatureId",filter.fids[i],node)}return node},FeatureId:function(fid){return this.createElementNSPlus("ogc:FeatureId",{attributes:{fid:fid}})},And:function(filter){var node=this.createElementNSPlus("ogc:And");var childFilter;for(var i=0,ii=filter.filters.length;i<ii;++i){childFilter=filter.filters[i];this.writeNode(this.getFilterType(childFilter),childFilter,node)}return node},Or:function(filter){var node=this.createElementNSPlus("ogc:Or");var childFilter;for(var i=0,ii=filter.filters.length;i<ii;++i){childFilter=filter.filters[i];this.writeNode(this.getFilterType(childFilter),childFilter,node)}return node},Not:function(filter){var node=this.createElementNSPlus("ogc:Not");var childFilter=filter.filters[0];this.writeNode(this.getFilterType(childFilter),childFilter,node);return node},PropertyIsLessThan:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsLessThan");this.writeNode("PropertyName",filter,node);this.writeOgcExpression(filter.value,node);return node},PropertyIsGreaterThan:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsGreaterThan");this.writeNode("PropertyName",filter,node);this.writeOgcExpression(filter.value,node);return node},PropertyIsLessThanOrEqualTo:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsLessThanOrEqualTo");this.writeNode("PropertyName",filter,node);this.writeOgcExpression(filter.value,node);return node},PropertyIsGreaterThanOrEqualTo:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsGreaterThanOrEqualTo");this.writeNode("PropertyName",filter,node);this.writeOgcExpression(filter.value,node);return node},PropertyIsBetween:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsBetween");this.writeNode("PropertyName",filter,node);this.writeNode("LowerBoundary",filter,node);this.writeNode("UpperBoundary",filter,node);return node},PropertyName:function(filter){return this.createElementNSPlus("ogc:PropertyName",{value:filter.property})},Literal:function(value){var encode=this.encodeLiteral||OpenLayers.Format.Filter.v1.prototype.encodeLiteral;return this.createElementNSPlus("ogc:Literal",{value:encode(value)})},LowerBoundary:function(filter){var node=this.createElementNSPlus("ogc:LowerBoundary");this.writeOgcExpression(filter.lowerBoundary,node);return node},UpperBoundary:function(filter){var node=this.createElementNSPlus("ogc:UpperBoundary");this.writeNode("Literal",filter.upperBoundary,node);return node},INTERSECTS:function(filter){return this.writeSpatial(filter,"Intersects")},WITHIN:function(filter){return this.writeSpatial(filter,"Within")},CONTAINS:function(filter){return this.writeSpatial(filter,"Contains")},DWITHIN:function(filter){var node=this.writeSpatial(filter,"DWithin");this.writeNode("Distance",filter,node);return node},Distance:function(filter){return this.createElementNSPlus("ogc:Distance",{attributes:{units:filter.distanceUnits},value:filter.distance})},Function:function(filter){var node=this.createElementNSPlus("ogc:Function",{attributes:{name:filter.name}});var params=filter.params;for(var i=0,len=params.length;i<len;i++){this.writeOgcExpression(params[i],node)}return node},PropertyIsNull:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsNull");this.writeNode("PropertyName",filter,node);return node}}},getFilterType:function(filter){var filterType=this.filterMap[filter.type];if(!filterType){throw"Filter writing not supported for rule type: "+filter.type}return filterType},filterMap:{"&&":"And","||":"Or","!":"Not","==":"PropertyIsEqualTo","!=":"PropertyIsNotEqualTo","<":"PropertyIsLessThan",">":"PropertyIsGreaterThan","<=":"PropertyIsLessThanOrEqualTo",">=":"PropertyIsGreaterThanOrEqualTo","..":"PropertyIsBetween","~":"PropertyIsLike",NULL:"PropertyIsNull",BBOX:"BBOX",DWITHIN:"DWITHIN",WITHIN:"WITHIN",CONTAINS:"CONTAINS",INTERSECTS:"INTERSECTS",FID:"_featureIds"},CLASS_NAME:"OpenLayers.Format.Filter.v1"});OpenLayers.Format.Filter.v1_0_0=OpenLayers.Class(OpenLayers.Format.GML.v2,OpenLayers.Format.Filter.v1,{VERSION:"1.0.0",schemaLocation:"http://www.opengis.net/ogc/filter/1.0.0/filter.xsd",initialize:function(options){OpenLayers.Format.GML.v2.prototype.initialize.apply(this,[options])},readers:{ogc:OpenLayers.Util.applyDefaults({PropertyIsEqualTo:function(node,obj){var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO});this.readChildNodes(node,filter);obj.filters.push(filter)},PropertyIsNotEqualTo:function(node,obj){var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.NOT_EQUAL_TO});this.readChildNodes(node,filter);obj.filters.push(filter)},PropertyIsLike:function(node,obj){var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE});this.readChildNodes(node,filter);var wildCard=node.getAttribute("wildCard");var singleChar=node.getAttribute("singleChar");var esc=node.getAttribute("escape");filter.value2regex(wildCard,singleChar,esc);obj.filters.push(filter)}},OpenLayers.Format.Filter.v1.prototype.readers.ogc),gml:OpenLayers.Format.GML.v2.prototype.readers.gml,feature:OpenLayers.Format.GML.v2.prototype.readers.feature},writers:{ogc:OpenLayers.Util.applyDefaults({PropertyIsEqualTo:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsEqualTo");this.writeNode("PropertyName",filter,node);this.writeOgcExpression(filter.value,node);return node},PropertyIsNotEqualTo:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsNotEqualTo");this.writeNode("PropertyName",filter,node);this.writeOgcExpression(filter.value,node);return node},PropertyIsLike:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsLike",{attributes:{wildCard:"*",singleChar:".",escape:"!"}});this.writeNode("PropertyName",filter,node);this.writeNode("Literal",filter.regex2value(),node);return node},BBOX:function(filter){var node=this.createElementNSPlus("ogc:BBOX");filter.property&&this.writeNode("PropertyName",filter,node);var box=this.writeNode("gml:Box",filter.value,node);if(filter.projection){box.setAttribute("srsName",filter.projection)}return node}},OpenLayers.Format.Filter.v1.prototype.writers.ogc),gml:OpenLayers.Format.GML.v2.prototype.writers.gml,feature:OpenLayers.Format.GML.v2.prototype.writers.feature},writeSpatial:function(filter,name){var node=this.createElementNSPlus("ogc:"+name);this.writeNode("PropertyName",filter,node);if(filter.value instanceof OpenLayers.Filter.Function){this.writeNode("Function",filter.value,node)}else{var child;if(filter.value instanceof OpenLayers.Geometry){child=this.writeNode("feature:_geometry",filter.value).firstChild}else{child=this.writeNode("gml:Box",filter.value)}if(filter.projection){child.setAttribute("srsName",filter.projection)}node.appendChild(child)}return node},CLASS_NAME:"OpenLayers.Format.Filter.v1_0_0"});OpenLayers.Format.SLD.v1=OpenLayers.Class(OpenLayers.Format.Filter.v1_0_0,{namespaces:{sld:"http://www.opengis.net/sld",ogc:"http://www.opengis.net/ogc",gml:"http://www.opengis.net/gml",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance"},defaultPrefix:"sld",schemaLocation:null,multipleSymbolizers:false,featureTypeCounter:null,defaultSymbolizer:{fillColor:"#808080",fillOpacity:1,strokeColor:"#000000",strokeOpacity:1,strokeWidth:1,strokeDashstyle:"solid",pointRadius:3,graphicName:"square"},read:function(data,options){options=OpenLayers.Util.applyDefaults(options,this.options);var sld={namedLayers:options.namedLayersAsArray===true?[]:{}};this.readChildNodes(data,sld);return sld},readers:OpenLayers.Util.applyDefaults({sld:{StyledLayerDescriptor:function(node,sld){sld.version=node.getAttribute("version");this.readChildNodes(node,sld)},Name:function(node,obj){obj.name=this.getChildValue(node)},Title:function(node,obj){obj.title=this.getChildValue(node)},Abstract:function(node,obj){obj.description=this.getChildValue(node)},NamedLayer:function(node,sld){var layer={userStyles:[],namedStyles:[]};this.readChildNodes(node,layer);for(var i=0,len=layer.userStyles.length;i<len;++i){layer.userStyles[i].layerName=layer.name}if(OpenLayers.Util.isArray(sld.namedLayers)){sld.namedLayers.push(layer)}else{sld.namedLayers[layer.name]=layer}},NamedStyle:function(node,layer){layer.namedStyles.push(this.getChildName(node.firstChild))},UserStyle:function(node,layer){var obj={defaultsPerSymbolizer:true,rules:[]};this.featureTypeCounter=-1;this.readChildNodes(node,obj);var style;if(this.multipleSymbolizers){delete obj.defaultsPerSymbolizer;style=new OpenLayers.Style2(obj)}else{style=new OpenLayers.Style(this.defaultSymbolizer,obj)}layer.userStyles.push(style)},IsDefault:function(node,style){if(this.getChildValue(node)=="1"){style.isDefault=true}},FeatureTypeStyle:function(node,style){++this.featureTypeCounter;var obj={rules:this.multipleSymbolizers?style.rules:[]};this.readChildNodes(node,obj);if(!this.multipleSymbolizers){style.rules=obj.rules}},Rule:function(node,obj){var config;if(this.multipleSymbolizers){config={symbolizers:[]}}var rule=new OpenLayers.Rule(config);this.readChildNodes(node,rule);obj.rules.push(rule)},ElseFilter:function(node,rule){rule.elseFilter=true},MinScaleDenominator:function(node,rule){rule.minScaleDenominator=parseFloat(this.getChildValue(node))},MaxScaleDenominator:function(node,rule){rule.maxScaleDenominator=parseFloat(this.getChildValue(node))},TextSymbolizer:function(node,rule){var config={};this.readChildNodes(node,config);if(this.multipleSymbolizers){config.zIndex=this.featureTypeCounter;rule.symbolizers.push(new OpenLayers.Symbolizer.Text(config))}else{rule.symbolizer.Text=OpenLayers.Util.applyDefaults(config,rule.symbolizer.Text)}},LabelPlacement:function(node,symbolizer){this.readChildNodes(node,symbolizer)},PointPlacement:function(node,symbolizer){var config={};this.readChildNodes(node,config);config.labelRotation=config.rotation;delete config.rotation;var labelAlign,x=symbolizer.labelAnchorPointX,y=symbolizer.labelAnchorPointY;if(x<=1/3){labelAlign="l"}else{if(x>1/3&&x<2/3){labelAlign="c"}else{if(x>=2/3){labelAlign="r"}}}if(y<=1/3){labelAlign+="b"}else{if(y>1/3&&y<2/3){labelAlign+="m"}else{if(y>=2/3){labelAlign+="t"}}}config.labelAlign=labelAlign;OpenLayers.Util.applyDefaults(symbolizer,config)},AnchorPoint:function(node,symbolizer){this.readChildNodes(node,symbolizer)},AnchorPointX:function(node,symbolizer){var labelAnchorPointX=this.readers.ogc._expression.call(this,node);if(labelAnchorPointX){symbolizer.labelAnchorPointX=labelAnchorPointX}},AnchorPointY:function(node,symbolizer){var labelAnchorPointY=this.readers.ogc._expression.call(this,node);if(labelAnchorPointY){symbolizer.labelAnchorPointY=labelAnchorPointY}},Displacement:function(node,symbolizer){this.readChildNodes(node,symbolizer)},DisplacementX:function(node,symbolizer){var labelXOffset=this.readers.ogc._expression.call(this,node);if(labelXOffset){symbolizer.labelXOffset=labelXOffset}},DisplacementY:function(node,symbolizer){var labelYOffset=this.readers.ogc._expression.call(this,node);if(labelYOffset){symbolizer.labelYOffset=labelYOffset}},LinePlacement:function(node,symbolizer){this.readChildNodes(node,symbolizer)},PerpendicularOffset:function(node,symbolizer){var labelPerpendicularOffset=this.readers.ogc._expression.call(this,node);if(labelPerpendicularOffset){symbolizer.labelPerpendicularOffset=labelPerpendicularOffset}},Label:function(node,symbolizer){var value=this.readers.ogc._expression.call(this,node);if(value){symbolizer.label=value}},Font:function(node,symbolizer){this.readChildNodes(node,symbolizer)},Halo:function(node,symbolizer){var obj={};this.readChildNodes(node,obj);symbolizer.haloRadius=obj.haloRadius;symbolizer.haloColor=obj.fillColor;symbolizer.haloOpacity=obj.fillOpacity},Radius:function(node,symbolizer){var radius=this.readers.ogc._expression.call(this,node);if(radius!=null){symbolizer.haloRadius=radius}},RasterSymbolizer:function(node,rule){var config={};this.readChildNodes(node,config);if(this.multipleSymbolizers){config.zIndex=this.featureTypeCounter;rule.symbolizers.push(new OpenLayers.Symbolizer.Raster(config))}else{rule.symbolizer.Raster=OpenLayers.Util.applyDefaults(config,rule.symbolizer.Raster)}},Geometry:function(node,obj){obj.geometry={};this.readChildNodes(node,obj.geometry)},ColorMap:function(node,symbolizer){symbolizer.colorMap=[];this.readChildNodes(node,symbolizer.colorMap)},ColorMapEntry:function(node,colorMap){var q=node.getAttribute("quantity");var o=node.getAttribute("opacity");colorMap.push({color:node.getAttribute("color"),quantity:q!==null?parseFloat(q):undefined,label:node.getAttribute("label")||undefined,opacity:o!==null?parseFloat(o):undefined})},LineSymbolizer:function(node,rule){var config={};this.readChildNodes(node,config);if(this.multipleSymbolizers){config.zIndex=this.featureTypeCounter;rule.symbolizers.push(new OpenLayers.Symbolizer.Line(config))}else{rule.symbolizer.Line=OpenLayers.Util.applyDefaults(config,rule.symbolizer.Line)}},PolygonSymbolizer:function(node,rule){var config={fill:false,stroke:false};if(!this.multipleSymbolizers){config=rule.symbolizer.Polygon||config}this.readChildNodes(node,config);if(this.multipleSymbolizers){config.zIndex=this.featureTypeCounter;rule.symbolizers.push(new OpenLayers.Symbolizer.Polygon(config))}else{rule.symbolizer.Polygon=config}},PointSymbolizer:function(node,rule){var config={fill:false,stroke:false,graphic:false};if(!this.multipleSymbolizers){config=rule.symbolizer.Point||config}this.readChildNodes(node,config);if(this.multipleSymbolizers){config.zIndex=this.featureTypeCounter;rule.symbolizers.push(new OpenLayers.Symbolizer.Point(config))}else{rule.symbolizer.Point=config}},Stroke:function(node,symbolizer){symbolizer.stroke=true;this.readChildNodes(node,symbolizer)},Fill:function(node,symbolizer){symbolizer.fill=true;this.readChildNodes(node,symbolizer)},CssParameter:function(node,symbolizer){var cssProperty=node.getAttribute("name");var symProperty=this.cssMap[cssProperty];if(symbolizer.label){if(cssProperty==="fill"){symProperty="fontColor"}else{if(cssProperty==="fill-opacity"){symProperty="fontOpacity"}}}if(symProperty){var value=this.readers.ogc._expression.call(this,node);if(value){symbolizer[symProperty]=value}}},Graphic:function(node,symbolizer){symbolizer.graphic=true;var graphic={};this.readChildNodes(node,graphic);var properties=["stroke","strokeColor","strokeWidth","strokeOpacity","strokeLinecap","fill","fillColor","fillOpacity","graphicName","rotation","graphicFormat"];var prop,value;for(var i=0,len=properties.length;i<len;++i){prop=properties[i];value=graphic[prop];if(value!=undefined){symbolizer[prop]=value}}if(graphic.opacity!=undefined){symbolizer.graphicOpacity=graphic.opacity}if(graphic.size!=undefined){var pointRadius=graphic.size/2;if(isNaN(pointRadius)){symbolizer.graphicWidth=graphic.size}else{symbolizer.pointRadius=graphic.size/2}}if(graphic.href!=undefined){symbolizer.externalGraphic=graphic.href}if(graphic.rotation!=undefined){symbolizer.rotation=graphic.rotation}},ExternalGraphic:function(node,graphic){this.readChildNodes(node,graphic)},Mark:function(node,graphic){this.readChildNodes(node,graphic)},WellKnownName:function(node,graphic){graphic.graphicName=this.getChildValue(node)},Opacity:function(node,obj){var opacity=this.readers.ogc._expression.call(this,node);if(opacity){obj.opacity=opacity}},Size:function(node,obj){var size=this.readers.ogc._expression.call(this,node);if(size){obj.size=size}},Rotation:function(node,obj){var rotation=this.readers.ogc._expression.call(this,node);if(rotation){obj.rotation=rotation}},OnlineResource:function(node,obj){obj.href=this.getAttributeNS(node,this.namespaces.xlink,"href")},Format:function(node,graphic){graphic.graphicFormat=this.getChildValue(node)}}},OpenLayers.Format.Filter.v1_0_0.prototype.readers),cssMap:{stroke:"strokeColor","stroke-opacity":"strokeOpacity","stroke-width":"strokeWidth","stroke-linecap":"strokeLinecap","stroke-dasharray":"strokeDashstyle",fill:"fillColor","fill-opacity":"fillOpacity","font-family":"fontFamily","font-size":"fontSize","font-weight":"fontWeight","font-style":"fontStyle"},getCssProperty:function(sym){var css=null;for(var prop in this.cssMap){if(this.cssMap[prop]==sym){css=prop;break}}return css},getGraphicFormat:function(href){var format,regex;for(var key in this.graphicFormats){if(this.graphicFormats[key].test(href)){format=key;break}}return format||this.defaultGraphicFormat},defaultGraphicFormat:"image/png",graphicFormats:{"image/jpeg":/\.jpe?g$/i,"image/gif":/\.gif$/i,"image/png":/\.png$/i},write:function(sld){return this.writers.sld.StyledLayerDescriptor.apply(this,[sld])},writers:OpenLayers.Util.applyDefaults({sld:{_OGCExpression:function(nodeName,value){var node=this.createElementNSPlus(nodeName);var tokens=typeof value=="string"?value.split("${"):[value];node.appendChild(this.createTextNode(tokens[0]));var item,last;for(var i=1,len=tokens.length;i<len;i++){item=tokens[i];last=item.indexOf("}");if(last>0){this.writeNode("ogc:PropertyName",{property:item.substring(0,last)},node);node.appendChild(this.createTextNode(item.substring(++last)))}else{node.appendChild(this.createTextNode("${"+item))}}return node},StyledLayerDescriptor:function(sld){var root=this.createElementNSPlus("sld:StyledLayerDescriptor",{attributes:{version:this.VERSION,"xsi:schemaLocation":this.schemaLocation}});root.setAttribute("xmlns:ogc",this.namespaces.ogc);root.setAttribute("xmlns:gml",this.namespaces.gml);if(sld.name){this.writeNode("Name",sld.name,root)}if(sld.title){this.writeNode("Title",sld.title,root)}if(sld.description){this.writeNode("Abstract",sld.description,root)}if(OpenLayers.Util.isArray(sld.namedLayers)){for(var i=0,len=sld.namedLayers.length;i<len;++i){this.writeNode("NamedLayer",sld.namedLayers[i],root)}}else{for(var name in sld.namedLayers){this.writeNode("NamedLayer",sld.namedLayers[name],root)}}return root},Name:function(name){return this.createElementNSPlus("sld:Name",{value:name})},Title:function(title){return this.createElementNSPlus("sld:Title",{value:title})},Abstract:function(description){return this.createElementNSPlus("sld:Abstract",{value:description})},NamedLayer:function(layer){var node=this.createElementNSPlus("sld:NamedLayer");this.writeNode("Name",layer.name,node);if(layer.namedStyles){for(var i=0,len=layer.namedStyles.length;i<len;++i){this.writeNode("NamedStyle",layer.namedStyles[i],node)}}if(layer.userStyles){for(var i=0,len=layer.userStyles.length;i<len;++i){this.writeNode("UserStyle",layer.userStyles[i],node)}}return node},NamedStyle:function(name){var node=this.createElementNSPlus("sld:NamedStyle");this.writeNode("Name",name,node);return node},UserStyle:function(style){var node=this.createElementNSPlus("sld:UserStyle");if(style.name){this.writeNode("Name",style.name,node)}if(style.title){this.writeNode("Title",style.title,node)}if(style.description){this.writeNode("Abstract",style.description,node)}if(style.isDefault){this.writeNode("IsDefault",style.isDefault,node)}if(this.multipleSymbolizers&&style.rules){var rulesByZ={0:[]};var zValues=[0];var rule,ruleMap,symbolizer,zIndex,clone;for(var i=0,ii=style.rules.length;i<ii;++i){rule=style.rules[i];if(rule.symbolizers){ruleMap={};for(var j=0,jj=rule.symbolizers.length;j<jj;++j){symbolizer=rule.symbolizers[j];zIndex=symbolizer.zIndex;if(!(zIndex in ruleMap)){clone=rule.clone();clone.symbolizers=[];ruleMap[zIndex]=clone}ruleMap[zIndex].symbolizers.push(symbolizer.clone())}for(zIndex in ruleMap){if(!(zIndex in rulesByZ)){zValues.push(zIndex);rulesByZ[zIndex]=[]}rulesByZ[zIndex].push(ruleMap[zIndex])}}else{rulesByZ[0].push(rule.clone())}}zValues.sort();var rules;for(var i=0,ii=zValues.length;i<ii;++i){rules=rulesByZ[zValues[i]];if(rules.length>0){clone=style.clone();clone.rules=rulesByZ[zValues[i]];this.writeNode("FeatureTypeStyle",clone,node)}}}else{this.writeNode("FeatureTypeStyle",style,node)}return node},IsDefault:function(bool){return this.createElementNSPlus("sld:IsDefault",{value:(bool)?"1":"0"})},FeatureTypeStyle:function(style){var node=this.createElementNSPlus("sld:FeatureTypeStyle");for(var i=0,len=style.rules.length;i<len;++i){this.writeNode("Rule",style.rules[i],node)}return node},Rule:function(rule){var node=this.createElementNSPlus("sld:Rule");if(rule.name){this.writeNode("Name",rule.name,node)}if(rule.title){this.writeNode("Title",rule.title,node)}if(rule.description){this.writeNode("Abstract",rule.description,node)}if(rule.elseFilter){this.writeNode("ElseFilter",null,node)}else{if(rule.filter){this.writeNode("ogc:Filter",rule.filter,node)}}if(rule.minScaleDenominator!=undefined){this.writeNode("MinScaleDenominator",rule.minScaleDenominator,node)}if(rule.maxScaleDenominator!=undefined){this.writeNode("MaxScaleDenominator",rule.maxScaleDenominator,node)}var type,symbolizer;if(this.multipleSymbolizers&&rule.symbolizers){var symbolizer;for(var i=0,ii=rule.symbolizers.length;i<ii;++i){symbolizer=rule.symbolizers[i];type=symbolizer.CLASS_NAME.split(".").pop();this.writeNode(type+"Symbolizer",symbolizer,node)}}else{var types=OpenLayers.Style.SYMBOLIZER_PREFIXES;for(var i=0,len=types.length;i<len;++i){type=types[i];symbolizer=rule.symbolizer[type];if(symbolizer){this.writeNode(type+"Symbolizer",symbolizer,node)}}}return node},ElseFilter:function(){return this.createElementNSPlus("sld:ElseFilter")},MinScaleDenominator:function(scale){return this.createElementNSPlus("sld:MinScaleDenominator",{value:scale})},MaxScaleDenominator:function(scale){return this.createElementNSPlus("sld:MaxScaleDenominator",{value:scale})},LineSymbolizer:function(symbolizer){var node=this.createElementNSPlus("sld:LineSymbolizer");this.writeNode("Stroke",symbolizer,node);return node},Stroke:function(symbolizer){var node=this.createElementNSPlus("sld:Stroke");if(symbolizer.strokeColor!=undefined){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"strokeColor"},node)}if(symbolizer.strokeOpacity!=undefined){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"strokeOpacity"},node)}if(symbolizer.strokeWidth!=undefined){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"strokeWidth"},node)}if(symbolizer.strokeDashstyle!=undefined&&symbolizer.strokeDashstyle!=="solid"){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"strokeDashstyle"},node)}if(symbolizer.strokeLinecap!=undefined){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"strokeLinecap"},node)}return node},CssParameter:function(obj){return this.createElementNSPlus("sld:CssParameter",{attributes:{name:this.getCssProperty(obj.key)},value:obj.symbolizer[obj.key]})},TextSymbolizer:function(symbolizer){var node=this.createElementNSPlus("sld:TextSymbolizer");if(symbolizer.label!=null){this.writeNode("Label",symbolizer.label,node)}if(symbolizer.fontFamily!=null||symbolizer.fontSize!=null||symbolizer.fontWeight!=null||symbolizer.fontStyle!=null){this.writeNode("Font",symbolizer,node)}if(symbolizer.labelAnchorPointX!=null||symbolizer.labelAnchorPointY!=null||symbolizer.labelAlign!=null||symbolizer.labelXOffset!=null||symbolizer.labelYOffset!=null||symbolizer.labelRotation!=null||symbolizer.labelPerpendicularOffset!=null){this.writeNode("LabelPlacement",symbolizer,node)}if(symbolizer.haloRadius!=null||symbolizer.haloColor!=null||symbolizer.haloOpacity!=null){this.writeNode("Halo",symbolizer,node)}if(symbolizer.fontColor!=null||symbolizer.fontOpacity!=null){this.writeNode("Fill",{fillColor:symbolizer.fontColor,fillOpacity:symbolizer.fontOpacity},node)}return node},LabelPlacement:function(symbolizer){var node=this.createElementNSPlus("sld:LabelPlacement");if((symbolizer.labelAnchorPointX!=null||symbolizer.labelAnchorPointY!=null||symbolizer.labelAlign!=null||symbolizer.labelXOffset!=null||symbolizer.labelYOffset!=null||symbolizer.labelRotation!=null)&&symbolizer.labelPerpendicularOffset==null){this.writeNode("PointPlacement",symbolizer,node)}if(symbolizer.labelPerpendicularOffset!=null){this.writeNode("LinePlacement",symbolizer,node)}return node},LinePlacement:function(symbolizer){var node=this.createElementNSPlus("sld:LinePlacement");this.writeNode("PerpendicularOffset",symbolizer.labelPerpendicularOffset,node);return node},PerpendicularOffset:function(value){return this.createElementNSPlus("sld:PerpendicularOffset",{value:value})},PointPlacement:function(symbolizer){var node=this.createElementNSPlus("sld:PointPlacement");if(symbolizer.labelAnchorPointX!=null||symbolizer.labelAnchorPointY!=null||symbolizer.labelAlign!=null){this.writeNode("AnchorPoint",symbolizer,node)}if(symbolizer.labelXOffset!=null||symbolizer.labelYOffset!=null){this.writeNode("Displacement",symbolizer,node)}if(symbolizer.labelRotation!=null){this.writeNode("Rotation",symbolizer.labelRotation,node)}return node},AnchorPoint:function(symbolizer){var node=this.createElementNSPlus("sld:AnchorPoint");var x=symbolizer.labelAnchorPointX,y=symbolizer.labelAnchorPointY;if(x!=null){this.writeNode("AnchorPointX",x,node)}if(y!=null){this.writeNode("AnchorPointY",y,node)}if(x==null&&y==null){var xAlign=symbolizer.labelAlign.substr(0,1),yAlign=symbolizer.labelAlign.substr(1,1);if(xAlign==="l"){x=0}else{if(xAlign==="c"){x=0.5}else{if(xAlign==="r"){x=1}}}if(yAlign==="b"){y=0}else{if(yAlign==="m"){y=0.5}else{if(yAlign==="t"){y=1}}}this.writeNode("AnchorPointX",x,node);this.writeNode("AnchorPointY",y,node)}return node},AnchorPointX:function(value){return this.createElementNSPlus("sld:AnchorPointX",{value:value})},AnchorPointY:function(value){return this.createElementNSPlus("sld:AnchorPointY",{value:value})},Displacement:function(symbolizer){var node=this.createElementNSPlus("sld:Displacement");if(symbolizer.labelXOffset!=null){this.writeNode("DisplacementX",symbolizer.labelXOffset,node)}if(symbolizer.labelYOffset!=null){this.writeNode("DisplacementY",symbolizer.labelYOffset,node)}return node},DisplacementX:function(value){return this.createElementNSPlus("sld:DisplacementX",{value:value})},DisplacementY:function(value){return this.createElementNSPlus("sld:DisplacementY",{value:value})},Font:function(symbolizer){var node=this.createElementNSPlus("sld:Font");if(symbolizer.fontFamily){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"fontFamily"},node)}if(symbolizer.fontSize){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"fontSize"},node)}if(symbolizer.fontWeight){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"fontWeight"},node)}if(symbolizer.fontStyle){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"fontStyle"},node)}return node},Label:function(label){return this.writers.sld._OGCExpression.call(this,"sld:Label",label)},Halo:function(symbolizer){var node=this.createElementNSPlus("sld:Halo");if(symbolizer.haloRadius){this.writeNode("Radius",symbolizer.haloRadius,node)}if(symbolizer.haloColor||symbolizer.haloOpacity){this.writeNode("Fill",{fillColor:symbolizer.haloColor,fillOpacity:symbolizer.haloOpacity},node)}return node},Radius:function(value){return this.createElementNSPlus("sld:Radius",{value:value})},RasterSymbolizer:function(symbolizer){var node=this.createElementNSPlus("sld:RasterSymbolizer");if(symbolizer.geometry){this.writeNode("Geometry",symbolizer.geometry,node)}if(symbolizer.opacity){this.writeNode("Opacity",symbolizer.opacity,node)}if(symbolizer.colorMap){this.writeNode("ColorMap",symbolizer.colorMap,node)}return node},Geometry:function(geometry){var node=this.createElementNSPlus("sld:Geometry");if(geometry.property){this.writeNode("ogc:PropertyName",geometry,node)}return node},ColorMap:function(colorMap){var node=this.createElementNSPlus("sld:ColorMap");for(var i=0,len=colorMap.length;i<len;++i){this.writeNode("ColorMapEntry",colorMap[i],node)}return node},ColorMapEntry:function(colorMapEntry){var node=this.createElementNSPlus("sld:ColorMapEntry");var a=colorMapEntry;node.setAttribute("color",a.color);a.opacity!==undefined&&node.setAttribute("opacity",parseFloat(a.opacity));a.quantity!==undefined&&node.setAttribute("quantity",parseFloat(a.quantity));a.label!==undefined&&node.setAttribute("label",a.label);return node},PolygonSymbolizer:function(symbolizer){var node=this.createElementNSPlus("sld:PolygonSymbolizer");if(symbolizer.fill!==false){this.writeNode("Fill",symbolizer,node)}if(symbolizer.stroke!==false){this.writeNode("Stroke",symbolizer,node)}return node},Fill:function(symbolizer){var node=this.createElementNSPlus("sld:Fill");if(symbolizer.fillColor){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"fillColor"},node)}if(symbolizer.fillOpacity!=null){this.writeNode("CssParameter",{symbolizer:symbolizer,key:"fillOpacity"},node)}return node},PointSymbolizer:function(symbolizer){var node=this.createElementNSPlus("sld:PointSymbolizer");this.writeNode("Graphic",symbolizer,node);return node},Graphic:function(symbolizer){var node=this.createElementNSPlus("sld:Graphic");if(symbolizer.externalGraphic!=undefined){this.writeNode("ExternalGraphic",symbolizer,node)}else{this.writeNode("Mark",symbolizer,node)}if(symbolizer.graphicOpacity!=undefined){this.writeNode("Opacity",symbolizer.graphicOpacity,node)}if(symbolizer.pointRadius!=undefined){this.writeNode("Size",symbolizer.pointRadius*2,node)}else{if(symbolizer.graphicWidth!=undefined){this.writeNode("Size",symbolizer.graphicWidth,node)}}if(symbolizer.rotation!=undefined){this.writeNode("Rotation",symbolizer.rotation,node)}return node},ExternalGraphic:function(symbolizer){var node=this.createElementNSPlus("sld:ExternalGraphic");this.writeNode("OnlineResource",symbolizer.externalGraphic,node);var format=symbolizer.graphicFormat||this.getGraphicFormat(symbolizer.externalGraphic);this.writeNode("Format",format,node);return node},Mark:function(symbolizer){var node=this.createElementNSPlus("sld:Mark");if(symbolizer.graphicName){this.writeNode("WellKnownName",symbolizer.graphicName,node)}if(symbolizer.fill!==false){this.writeNode("Fill",symbolizer,node)}if(symbolizer.stroke!==false){this.writeNode("Stroke",symbolizer,node)}return node},WellKnownName:function(name){return this.createElementNSPlus("sld:WellKnownName",{value:name})},Opacity:function(value){return this.createElementNSPlus("sld:Opacity",{value:value})},Size:function(value){return this.writers.sld._OGCExpression.call(this,"sld:Size",value)},Rotation:function(value){return this.createElementNSPlus("sld:Rotation",{value:value})},OnlineResource:function(href){return this.createElementNSPlus("sld:OnlineResource",{attributes:{"xlink:type":"simple","xlink:href":href}})},Format:function(format){return this.createElementNSPlus("sld:Format",{value:format})}}},OpenLayers.Format.Filter.v1_0_0.prototype.writers),CLASS_NAME:"OpenLayers.Format.SLD.v1"});OpenLayers.Format.SLD.v1_0_0=OpenLayers.Class(OpenLayers.Format.SLD.v1,{VERSION:"1.0.0",schemaLocation:"http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd",CLASS_NAME:"OpenLayers.Format.SLD.v1_0_0"});OpenLayers.Protocol=OpenLayers.Class({format:null,options:null,autoDestroy:true,defaultFilter:null,initialize:function(options){options=options||{};OpenLayers.Util.extend(this,options);this.options=options},mergeWithDefaultFilter:function(filter){var merged;if(filter&&this.defaultFilter){merged=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[this.defaultFilter,filter]})}else{merged=filter||this.defaultFilter||undefined}return merged},destroy:function(){this.options=null;this.format=null},read:function(options){options=options||{};options.filter=this.mergeWithDefaultFilter(options.filter)},create:function(){},update:function(){},"delete":function(){},commit:function(){},abort:function(response){},createCallback:function(method,response,options){return OpenLayers.Function.bind(function(){method.apply(this,[response,options])},this)},CLASS_NAME:"OpenLayers.Protocol"});OpenLayers.Protocol.Response=OpenLayers.Class({code:null,requestType:null,last:true,features:null,data:null,reqFeatures:null,priv:null,error:null,initialize:function(options){OpenLayers.Util.extend(this,options)},success:function(){return this.code>0},CLASS_NAME:"OpenLayers.Protocol.Response"});OpenLayers.Protocol.Response.SUCCESS=1;OpenLayers.Protocol.Response.FAILURE=0;OpenLayers.ProxyHost="";if(!OpenLayers.Request){OpenLayers.Request={}}OpenLayers.Util.extend(OpenLayers.Request,{DEFAULT_CONFIG:{method:"GET",url:window.location.href,async:true,user:undefined,password:undefined,params:null,proxy:OpenLayers.ProxyHost,headers:{},data:null,callback:function(){},success:null,failure:null,scope:null},URL_SPLIT_REGEX:/([^:]*:)\/\/([^:]*:?[^@]*@)?([^:\/\?]*):?([^\/\?]*)/,events:new OpenLayers.Events(this),makeSameOrigin:function(url,proxy){var sameOrigin=url.indexOf("http")!==0;var urlParts=!sameOrigin&&url.match(this.URL_SPLIT_REGEX);if(urlParts){var location=window.location;sameOrigin=urlParts[1]==location.protocol&&urlParts[3]==location.hostname;var uPort=urlParts[4],lPort=location.port;if(uPort!=80&&uPort!=""||lPort!="80"&&lPort!=""){sameOrigin=sameOrigin&&uPort==lPort}}if(!sameOrigin){if(proxy){if(typeof proxy=="function"){url=proxy(url)}else{url=proxy+encodeURIComponent(url)}}}return url},issue:function(config){var defaultConfig=OpenLayers.Util.extend(this.DEFAULT_CONFIG,{proxy:OpenLayers.ProxyHost});config=config||{};config.headers=config.headers||{};config=OpenLayers.Util.applyDefaults(config,defaultConfig);config.headers=OpenLayers.Util.applyDefaults(config.headers,defaultConfig.headers);var customRequestedWithHeader=false,headerKey;for(headerKey in config.headers){if(config.headers.hasOwnProperty(headerKey)){if(headerKey.toLowerCase()==="x-requested-with"){customRequestedWithHeader=true}}}if(customRequestedWithHeader===false){config.headers["X-Requested-With"]="XMLHttpRequest"}var request=new OpenLayers.Request.XMLHttpRequest();var url=OpenLayers.Util.urlAppend(config.url,OpenLayers.Util.getParameterString(config.params||{}));url=OpenLayers.Request.makeSameOrigin(url,config.proxy);request.open(config.method,url,config.async,config.user,config.password);for(var header in config.headers){request.setRequestHeader(header,config.headers[header])}var events=this.events;var self=this;request.onreadystatechange=function(){if(request.readyState==OpenLayers.Request.XMLHttpRequest.DONE){var proceed=events.triggerEvent("complete",{request:request,config:config,requestUrl:url});if(proceed!==false){self.runCallbacks({request:request,config:config,requestUrl:url})}}};if(config.async===false){request.send(config.data)}else{window.setTimeout(function(){if(request.readyState!==0){request.send(config.data)}},0)}return request},runCallbacks:function(options){var request=options.request;var config=options.config;var complete=(config.scope)?OpenLayers.Function.bind(config.callback,config.scope):config.callback;var success;if(config.success){success=(config.scope)?OpenLayers.Function.bind(config.success,config.scope):config.success}var failure;if(config.failure){failure=(config.scope)?OpenLayers.Function.bind(config.failure,config.scope):config.failure}if(OpenLayers.Util.createUrlObject(config.url).protocol=="file:"&&request.responseText){request.status=200}complete(request);if(!request.status||(request.status>=200&&request.status<300)){this.events.triggerEvent("success",options);if(success){success(request)}}if(request.status&&(request.status<200||request.status>=300)){this.events.triggerEvent("failure",options);if(failure){failure(request)}}},GET:function(config){config=OpenLayers.Util.extend(config,{method:"GET"});return OpenLayers.Request.issue(config)},POST:function(config){config=OpenLayers.Util.extend(config,{method:"POST"});config.headers=config.headers?config.headers:{};if(!("CONTENT-TYPE" in OpenLayers.Util.upperCaseObject(config.headers))){config.headers["Content-Type"]="application/xml"}return OpenLayers.Request.issue(config)},PUT:function(config){config=OpenLayers.Util.extend(config,{method:"PUT"});config.headers=config.headers?config.headers:{};if(!("CONTENT-TYPE" in OpenLayers.Util.upperCaseObject(config.headers))){config.headers["Content-Type"]="application/xml"}return OpenLayers.Request.issue(config)},DELETE:function(config){config=OpenLayers.Util.extend(config,{method:"DELETE"});return OpenLayers.Request.issue(config)},HEAD:function(config){config=OpenLayers.Util.extend(config,{method:"HEAD"});return OpenLayers.Request.issue(config)},OPTIONS:function(config){config=OpenLayers.Util.extend(config,{method:"OPTIONS"});return OpenLayers.Request.issue(config)}});(function(){var oXMLHttpRequest=window.XMLHttpRequest;var bGecko=!!window.controllers,bIE=window.document.all&&!window.opera,bIE7=bIE&&window.navigator.userAgent.match(/MSIE 7.0/);function fXMLHttpRequest(){this._object=oXMLHttpRequest&&!bIE7?new oXMLHttpRequest:new window.ActiveXObject("Microsoft.XMLHTTP");this._listeners=[]}function cXMLHttpRequest(){return new fXMLHttpRequest}cXMLHttpRequest.prototype=fXMLHttpRequest.prototype;if(bGecko&&oXMLHttpRequest.wrapped){cXMLHttpRequest.wrapped=oXMLHttpRequest.wrapped}cXMLHttpRequest.UNSENT=0;cXMLHttpRequest.OPENED=1;cXMLHttpRequest.HEADERS_RECEIVED=2;cXMLHttpRequest.LOADING=3;cXMLHttpRequest.DONE=4;cXMLHttpRequest.prototype.readyState=cXMLHttpRequest.UNSENT;cXMLHttpRequest.prototype.responseText="";cXMLHttpRequest.prototype.responseXML=null;cXMLHttpRequest.prototype.status=0;cXMLHttpRequest.prototype.statusText="";cXMLHttpRequest.prototype.priority="NORMAL";cXMLHttpRequest.prototype.onreadystatechange=null;cXMLHttpRequest.onreadystatechange=null;cXMLHttpRequest.onopen=null;cXMLHttpRequest.onsend=null;cXMLHttpRequest.onabort=null;cXMLHttpRequest.prototype.open=function(sMethod,sUrl,bAsync,sUser,sPassword){delete this._headers;if(arguments.length<3){bAsync=true}this._async=bAsync;var oRequest=this,nState=this.readyState,fOnUnload;if(bIE&&bAsync){fOnUnload=function(){if(nState!=cXMLHttpRequest.DONE){fCleanTransport(oRequest);oRequest.abort()}};window.attachEvent("onunload",fOnUnload)}if(cXMLHttpRequest.onopen){cXMLHttpRequest.onopen.apply(this,arguments)}if(arguments.length>4){this._object.open(sMethod,sUrl,bAsync,sUser,sPassword)}else{if(arguments.length>3){this._object.open(sMethod,sUrl,bAsync,sUser)}else{this._object.open(sMethod,sUrl,bAsync)}}this.readyState=cXMLHttpRequest.OPENED;fReadyStateChange(this);this._object.onreadystatechange=function(){if(bGecko&&!bAsync){return}oRequest.readyState=oRequest._object.readyState;fSynchronizeValues(oRequest);if(oRequest._aborted){oRequest.readyState=cXMLHttpRequest.UNSENT;return}if(oRequest.readyState==cXMLHttpRequest.DONE){delete oRequest._data;fCleanTransport(oRequest);if(bIE&&bAsync){window.detachEvent("onunload",fOnUnload)}}if(nState!=oRequest.readyState){fReadyStateChange(oRequest)}nState=oRequest.readyState}};function fXMLHttpRequest_send(oRequest){oRequest._object.send(oRequest._data);if(bGecko&&!oRequest._async){oRequest.readyState=cXMLHttpRequest.OPENED;fSynchronizeValues(oRequest);while(oRequest.readyState<cXMLHttpRequest.DONE){oRequest.readyState++;fReadyStateChange(oRequest);if(oRequest._aborted){return}}}}cXMLHttpRequest.prototype.send=function(vData){if(cXMLHttpRequest.onsend){cXMLHttpRequest.onsend.apply(this,arguments)}if(!arguments.length){vData=null}if(vData&&vData.nodeType){vData=window.XMLSerializer?new window.XMLSerializer().serializeToString(vData):vData.xml;if(!this._headers["Content-Type"]){this._object.setRequestHeader("Content-Type","application/xml")}}this._data=vData;fXMLHttpRequest_send(this)};cXMLHttpRequest.prototype.abort=function(){if(cXMLHttpRequest.onabort){cXMLHttpRequest.onabort.apply(this,arguments)}if(this.readyState>cXMLHttpRequest.UNSENT){this._aborted=true}this._object.abort();fCleanTransport(this);this.readyState=cXMLHttpRequest.UNSENT;delete this._data};cXMLHttpRequest.prototype.getAllResponseHeaders=function(){return this._object.getAllResponseHeaders()};cXMLHttpRequest.prototype.getResponseHeader=function(sName){return this._object.getResponseHeader(sName)};cXMLHttpRequest.prototype.setRequestHeader=function(sName,sValue){if(!this._headers){this._headers={}}this._headers[sName]=sValue;return this._object.setRequestHeader(sName,sValue)};cXMLHttpRequest.prototype.addEventListener=function(sName,fHandler,bUseCapture){for(var nIndex=0,oListener;oListener=this._listeners[nIndex];nIndex++){if(oListener[0]==sName&&oListener[1]==fHandler&&oListener[2]==bUseCapture){return}}this._listeners.push([sName,fHandler,bUseCapture])};cXMLHttpRequest.prototype.removeEventListener=function(sName,fHandler,bUseCapture){for(var nIndex=0,oListener;oListener=this._listeners[nIndex];nIndex++){if(oListener[0]==sName&&oListener[1]==fHandler&&oListener[2]==bUseCapture){break}}if(oListener){this._listeners.splice(nIndex,1)}};cXMLHttpRequest.prototype.dispatchEvent=function(oEvent){var oEventPseudo={type:oEvent.type,target:this,currentTarget:this,eventPhase:2,bubbles:oEvent.bubbles,cancelable:oEvent.cancelable,timeStamp:oEvent.timeStamp,stopPropagation:function(){},preventDefault:function(){},initEvent:function(){}};if(oEventPseudo.type=="readystatechange"&&this.onreadystatechange){(this.onreadystatechange.handleEvent||this.onreadystatechange).apply(this,[oEventPseudo])}for(var nIndex=0,oListener;oListener=this._listeners[nIndex];nIndex++){if(oListener[0]==oEventPseudo.type&&!oListener[2]){(oListener[1].handleEvent||oListener[1]).apply(this,[oEventPseudo])}}};cXMLHttpRequest.prototype.toString=function(){return"[object XMLHttpRequest]"};cXMLHttpRequest.toString=function(){return"[XMLHttpRequest]"};function fReadyStateChange(oRequest){if(cXMLHttpRequest.onreadystatechange){cXMLHttpRequest.onreadystatechange.apply(oRequest)}oRequest.dispatchEvent({type:"readystatechange",bubbles:false,cancelable:false,timeStamp:new Date+0})}function fGetDocument(oRequest){var oDocument=oRequest.responseXML,sResponse=oRequest.responseText;if(bIE&&sResponse&&oDocument&&!oDocument.documentElement&&oRequest.getResponseHeader("Content-Type").match(/[^\/]+\/[^\+]+\+xml/)){oDocument=new window.ActiveXObject("Microsoft.XMLDOM");oDocument.async=false;oDocument.validateOnParse=false;oDocument.loadXML(sResponse)}if(oDocument){if((bIE&&oDocument.parseError!=0)||!oDocument.documentElement||(oDocument.documentElement&&oDocument.documentElement.tagName=="parsererror")){return null}}return oDocument}function fSynchronizeValues(oRequest){try{oRequest.responseText=oRequest._object.responseText}catch(e){}try{oRequest.responseXML=fGetDocument(oRequest._object)}catch(e){}try{oRequest.status=oRequest._object.status}catch(e){}try{oRequest.statusText=oRequest._object.statusText}catch(e){}}function fCleanTransport(oRequest){oRequest._object.onreadystatechange=new window.Function}if(!window.Function.prototype.apply){window.Function.prototype.apply=function(oRequest,oArguments){if(!oArguments){oArguments=[]}oRequest.__func=this;oRequest.__func(oArguments[0],oArguments[1],oArguments[2],oArguments[3],oArguments[4]);delete oRequest.__func}}if(!OpenLayers.Request){OpenLayers.Request={}}OpenLayers.Request.XMLHttpRequest=cXMLHttpRequest})();OpenLayers.Protocol.HTTP=OpenLayers.Class(OpenLayers.Protocol,{url:null,headers:null,params:null,callback:null,scope:null,readWithPOST:false,updateWithPOST:false,deleteWithPOST:false,wildcarded:false,srsInBBOX:false,initialize:function(options){options=options||{};this.params={};this.headers={};OpenLayers.Protocol.prototype.initialize.apply(this,arguments);if(!this.filterToParams&&OpenLayers.Format.QueryStringFilter){var format=new OpenLayers.Format.QueryStringFilter({wildcarded:this.wildcarded,srsInBBOX:this.srsInBBOX});this.filterToParams=function(filter,params){return format.write(filter,params)}}},destroy:function(){this.params=null;this.headers=null;OpenLayers.Protocol.prototype.destroy.apply(this)},read:function(options){OpenLayers.Protocol.prototype.read.apply(this,arguments);options=options||{};options.params=OpenLayers.Util.applyDefaults(options.params,this.options.params);options=OpenLayers.Util.applyDefaults(options,this.options);if(options.filter&&this.filterToParams){options.params=this.filterToParams(options.filter,options.params)}var readWithPOST=(options.readWithPOST!==undefined)?options.readWithPOST:this.readWithPOST;var resp=new OpenLayers.Protocol.Response({requestType:"read"});if(readWithPOST){var headers=options.headers||{};headers["Content-Type"]="application/x-www-form-urlencoded";resp.priv=OpenLayers.Request.POST({url:options.url,callback:this.createCallback(this.handleRead,resp,options),data:OpenLayers.Util.getParameterString(options.params),headers:headers})}else{resp.priv=OpenLayers.Request.GET({url:options.url,callback:this.createCallback(this.handleRead,resp,options),params:options.params,headers:options.headers})}return resp},handleRead:function(resp,options){this.handleResponse(resp,options)},create:function(features,options){options=OpenLayers.Util.applyDefaults(options,this.options);var resp=new OpenLayers.Protocol.Response({reqFeatures:features,requestType:"create"});resp.priv=OpenLayers.Request.POST({url:options.url,callback:this.createCallback(this.handleCreate,resp,options),headers:options.headers,data:this.format.write(features)});return resp},handleCreate:function(resp,options){this.handleResponse(resp,options)},update:function(feature,options){options=options||{};var url=options.url||feature.url||this.options.url+"/"+feature.fid;options=OpenLayers.Util.applyDefaults(options,this.options);var resp=new OpenLayers.Protocol.Response({reqFeatures:feature,requestType:"update"});var method=this.updateWithPOST?"POST":"PUT";resp.priv=OpenLayers.Request[method]({url:url,callback:this.createCallback(this.handleUpdate,resp,options),headers:options.headers,data:this.format.write(feature)});return resp},handleUpdate:function(resp,options){this.handleResponse(resp,options)},"delete":function(feature,options){options=options||{};var url=options.url||feature.url||this.options.url+"/"+feature.fid;options=OpenLayers.Util.applyDefaults(options,this.options);var resp=new OpenLayers.Protocol.Response({reqFeatures:feature,requestType:"delete"});var method=this.deleteWithPOST?"POST":"DELETE";var requestOptions={url:url,callback:this.createCallback(this.handleDelete,resp,options),headers:options.headers};if(this.deleteWithPOST){requestOptions.data=this.format.write(feature)}resp.priv=OpenLayers.Request[method](requestOptions);return resp},handleDelete:function(resp,options){this.handleResponse(resp,options)},handleResponse:function(resp,options){var request=resp.priv;if(options.callback){if(request.status>=200&&request.status<300){if(resp.requestType!="delete"){resp.features=this.parseFeatures(request)}resp.code=OpenLayers.Protocol.Response.SUCCESS}else{resp.code=OpenLayers.Protocol.Response.FAILURE}options.callback.call(options.scope,resp)}},parseFeatures:function(request){var doc=request.responseXML;if(!doc||!doc.documentElement){doc=request.responseText}if(!doc||doc.length<=0){return null}return this.format.read(doc)},commit:function(features,options){options=OpenLayers.Util.applyDefaults(options,this.options);var resp=[],nResponses=0;var types={};types[OpenLayers.State.INSERT]=[];types[OpenLayers.State.UPDATE]=[];types[OpenLayers.State.DELETE]=[];var feature,list,requestFeatures=[];for(var i=0,len=features.length;i<len;++i){feature=features[i];list=types[feature.state];if(list){list.push(feature);requestFeatures.push(feature)}}var nRequests=(types[OpenLayers.State.INSERT].length>0?1:0)+types[OpenLayers.State.UPDATE].length+types[OpenLayers.State.DELETE].length;var success=true;var finalResponse=new OpenLayers.Protocol.Response({reqFeatures:requestFeatures});function insertCallback(response){var len=response.features?response.features.length:0;var fids=new Array(len);for(var i=0;i<len;++i){fids[i]=response.features[i].fid}finalResponse.insertIds=fids;callback.apply(this,[response])}function callback(response){this.callUserCallback(response,options);success=success&&response.success();nResponses++;if(nResponses>=nRequests){if(options.callback){finalResponse.code=success?OpenLayers.Protocol.Response.SUCCESS:OpenLayers.Protocol.Response.FAILURE;options.callback.apply(options.scope,[finalResponse])}}}var queue=types[OpenLayers.State.INSERT];if(queue.length>0){resp.push(this.create(queue,OpenLayers.Util.applyDefaults({callback:insertCallback,scope:this},options.create)))}queue=types[OpenLayers.State.UPDATE];for(var i=queue.length-1;i>=0;--i){resp.push(this.update(queue[i],OpenLayers.Util.applyDefaults({callback:callback,scope:this},options.update)))}queue=types[OpenLayers.State.DELETE];for(var i=queue.length-1;i>=0;--i){resp.push(this["delete"](queue[i],OpenLayers.Util.applyDefaults({callback:callback,scope:this},options["delete"])))}return resp},abort:function(response){if(response){response.priv.abort()}},callUserCallback:function(resp,options){var opt=options[resp.requestType];if(opt&&opt.callback){opt.callback.call(opt.scope,resp)}},CLASS_NAME:"OpenLayers.Protocol.HTTP"});OpenLayers.Protocol.WFS=function(options){options=OpenLayers.Util.applyDefaults(options,OpenLayers.Protocol.WFS.DEFAULTS);var cls=OpenLayers.Protocol.WFS["v"+options.version.replace(/\./g,"_")];if(!cls){throw"Unsupported WFS version: "+options.version}return new cls(options)};OpenLayers.Protocol.WFS.fromWMSLayer=function(layer,options){var typeName,featurePrefix;var param=layer.params.LAYERS;var parts=(OpenLayers.Util.isArray(param)?param[0]:param).split(":");if(parts.length>1){featurePrefix=parts[0]}typeName=parts.pop();var protocolOptions={url:layer.url,featureType:typeName,featurePrefix:featurePrefix,srsName:layer.projection&&layer.projection.getCode()||layer.map&&layer.map.getProjectionObject().getCode(),version:"1.1.0"};return new OpenLayers.Protocol.WFS(OpenLayers.Util.applyDefaults(options,protocolOptions))};OpenLayers.Protocol.WFS.DEFAULTS={version:"1.0.0"};OpenLayers.Protocol.WFS.v1=OpenLayers.Class(OpenLayers.Protocol,{version:null,srsName:"EPSG:4326",featureType:null,featureNS:null,geometryName:"the_geom",schema:null,featurePrefix:"feature",formatOptions:null,readFormat:null,readOptions:null,initialize:function(options){OpenLayers.Protocol.prototype.initialize.apply(this,[options]);if(!options.format){this.format=OpenLayers.Format.WFST(OpenLayers.Util.extend({version:this.version,featureType:this.featureType,featureNS:this.featureNS,featurePrefix:this.featurePrefix,geometryName:this.geometryName,srsName:this.srsName,schema:this.schema},this.formatOptions))}if(!options.geometryName&&parseFloat(this.format.version)>1){this.setGeometryName(null)}},destroy:function(){if(this.options&&!this.options.format){this.format.destroy()}this.format=null;OpenLayers.Protocol.prototype.destroy.apply(this)},read:function(options){OpenLayers.Protocol.prototype.read.apply(this,arguments);options=OpenLayers.Util.extend({},options);OpenLayers.Util.applyDefaults(options,this.options||{});var response=new OpenLayers.Protocol.Response({requestType:"read"});var data=OpenLayers.Format.XML.prototype.write.apply(this.format,[this.format.writeNode("wfs:GetFeature",options)]);response.priv=OpenLayers.Request.POST({url:options.url,callback:this.createCallback(this.handleRead,response,options),params:options.params,headers:options.headers,data:data});return response},setFeatureType:function(featureType){this.featureType=featureType;this.format.featureType=featureType},setGeometryName:function(geometryName){this.geometryName=geometryName;this.format.geometryName=geometryName},handleRead:function(response,options){options=OpenLayers.Util.extend({},options);OpenLayers.Util.applyDefaults(options,this.options);if(options.callback){var request=response.priv;if(request.status>=200&&request.status<300){var result=this.parseResponse(request,options.readOptions);if(result&&result.success!==false){if(options.readOptions&&options.readOptions.output=="object"){OpenLayers.Util.extend(response,result)}else{response.features=result}response.code=OpenLayers.Protocol.Response.SUCCESS}else{response.code=OpenLayers.Protocol.Response.FAILURE;response.error=result}}else{response.code=OpenLayers.Protocol.Response.FAILURE}options.callback.call(options.scope,response)}},parseResponse:function(request,options){var doc=request.responseXML;if(!doc||!doc.documentElement){doc=request.responseText}if(!doc||doc.length<=0){return null}var result=(this.readFormat!==null)?this.readFormat.read(doc):this.format.read(doc,options);if(!this.featureNS){var format=this.readFormat||this.format;this.featureNS=format.featureNS;format.autoConfig=false;if(!this.geometryName){this.setGeometryName(format.geometryName)}}return result},commit:function(features,options){options=OpenLayers.Util.extend({},options);OpenLayers.Util.applyDefaults(options,this.options);var response=new OpenLayers.Protocol.Response({requestType:"commit",reqFeatures:features});response.priv=OpenLayers.Request.POST({url:options.url,headers:options.headers,data:this.format.write(features,options),callback:this.createCallback(this.handleCommit,response,options)});return response},handleCommit:function(response,options){if(options.callback){var request=response.priv;var data=request.responseXML;if(!data||!data.documentElement){data=request.responseText}var obj=this.format.read(data)||{};response.insertIds=obj.insertIds||[];if(obj.success){response.code=OpenLayers.Protocol.Response.SUCCESS}else{response.code=OpenLayers.Protocol.Response.FAILURE;response.error=obj}options.callback.call(options.scope,response)}},filterDelete:function(filter,options){options=OpenLayers.Util.extend({},options);OpenLayers.Util.applyDefaults(options,this.options);var response=new OpenLayers.Protocol.Response({requestType:"commit"});var root=this.format.createElementNSPlus("wfs:Transaction",{attributes:{service:"WFS",version:this.version}});var deleteNode=this.format.createElementNSPlus("wfs:Delete",{attributes:{typeName:(options.featureNS?this.featurePrefix+":":"")+options.featureType}});if(options.featureNS){deleteNode.setAttribute("xmlns:"+this.featurePrefix,options.featureNS)}var filterNode=this.format.writeNode("ogc:Filter",filter);deleteNode.appendChild(filterNode);root.appendChild(deleteNode);var data=OpenLayers.Format.XML.prototype.write.apply(this.format,[root]);return OpenLayers.Request.POST({url:this.url,callback:options.callback||function(){},data:data})},abort:function(response){if(response){response.priv.abort()}},CLASS_NAME:"OpenLayers.Protocol.WFS.v1"});OpenLayers.Format.WFST=function(options){options=OpenLayers.Util.applyDefaults(options,OpenLayers.Format.WFST.DEFAULTS);var cls=OpenLayers.Format.WFST["v"+options.version.replace(/\./g,"_")];if(!cls){throw"Unsupported WFST version: "+options.version}return new cls(options)};OpenLayers.Format.WFST.DEFAULTS={version:"1.0.0"};OpenLayers.Format.WFST.v1=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance",wfs:"http://www.opengis.net/wfs",gml:"http://www.opengis.net/gml",ogc:"http://www.opengis.net/ogc",ows:"http://www.opengis.net/ows",xmlns:"http://www.w3.org/2000/xmlns/"},defaultPrefix:"wfs",version:null,schemaLocations:null,srsName:null,extractAttributes:true,xy:true,stateName:null,initialize:function(options){this.stateName={};this.stateName[OpenLayers.State.INSERT]="wfs:Insert";this.stateName[OpenLayers.State.UPDATE]="wfs:Update";this.stateName[OpenLayers.State.DELETE]="wfs:Delete";OpenLayers.Format.XML.prototype.initialize.apply(this,[options])},getSrsName:function(feature,options){var srsName=options&&options.srsName;if(!srsName){if(feature&&feature.layer){srsName=feature.layer.projection.getCode()}else{srsName=this.srsName}}return srsName},read:function(data,options){options=options||{};OpenLayers.Util.applyDefaults(options,{output:"features"});if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}if(data&&data.nodeType==9){data=data.documentElement}var obj={};if(data){this.readNode(data,obj,true)}if(obj.features&&options.output==="features"){obj=obj.features}return obj},readers:{wfs:{FeatureCollection:function(node,obj){obj.features=[];this.readChildNodes(node,obj)}}},write:function(features,options){var node=this.writeNode("wfs:Transaction",{features:features,options:options});var value=this.schemaLocationAttr();if(value){this.setAttributeNS(node,this.namespaces.xsi,"xsi:schemaLocation",value)}return OpenLayers.Format.XML.prototype.write.apply(this,[node])},writers:{wfs:{GetFeature:function(options){var node=this.createElementNSPlus("wfs:GetFeature",{attributes:{service:"WFS",version:this.version,handle:options&&options.handle,outputFormat:options&&options.outputFormat,maxFeatures:options&&options.maxFeatures,"xsi:schemaLocation":this.schemaLocationAttr(options)}});if(typeof this.featureType=="string"){this.writeNode("Query",options,node)}else{for(var i=0,len=this.featureType.length;i<len;i++){options.featureType=this.featureType[i];this.writeNode("Query",options,node)}}return node},Transaction:function(obj){obj=obj||{};var options=obj.options||{};var node=this.createElementNSPlus("wfs:Transaction",{attributes:{service:"WFS",version:this.version,handle:options.handle}});var i,len;var features=obj.features;if(features){if(options.multi===true){OpenLayers.Util.extend(this.geometryTypes,{"OpenLayers.Geometry.Point":"MultiPoint","OpenLayers.Geometry.LineString":(this.multiCurve===true)?"MultiCurve":"MultiLineString","OpenLayers.Geometry.Polygon":(this.multiSurface===true)?"MultiSurface":"MultiPolygon"})}var name,feature;for(i=0,len=features.length;i<len;++i){feature=features[i];name=this.stateName[feature.state];if(name){this.writeNode(name,{feature:feature,options:options},node)}}if(options.multi===true){this.setGeometryTypes()}}if(options.nativeElements){for(i=0,len=options.nativeElements.length;i<len;++i){this.writeNode("wfs:Native",options.nativeElements[i],node)}}return node},Native:function(nativeElement){var node=this.createElementNSPlus("wfs:Native",{attributes:{vendorId:nativeElement.vendorId,safeToIgnore:nativeElement.safeToIgnore},value:nativeElement.value});return node},Insert:function(obj){var feature=obj.feature;var options=obj.options;var node=this.createElementNSPlus("wfs:Insert",{attributes:{handle:options&&options.handle}});this.srsName=this.getSrsName(feature);this.writeNode("feature:_typeName",feature,node);return node},Update:function(obj){var feature=obj.feature;var options=obj.options;var node=this.createElementNSPlus("wfs:Update",{attributes:{handle:options&&options.handle,typeName:(this.featureNS?this.featurePrefix+":":"")+this.featureType}});if(this.featureNS){this.setAttributeNS(node,this.namespaces.xmlns,"xmlns:"+this.featurePrefix,this.featureNS)}var modified=feature.modified;if(this.geometryName!==null&&(!modified||modified.geometry!==undefined)){this.srsName=this.getSrsName(feature);this.writeNode("Property",{name:this.geometryName,value:feature.geometry},node)}for(var key in feature.attributes){if(feature.attributes[key]!==undefined&&(!modified||!modified.attributes||(modified.attributes&&modified.attributes[key]!==undefined))){this.writeNode("Property",{name:key,value:feature.attributes[key]},node)}}this.writeNode("ogc:Filter",new OpenLayers.Filter.FeatureId({fids:[feature.fid]}),node);return node},Property:function(obj){var node=this.createElementNSPlus("wfs:Property");this.writeNode("Name",obj.name,node);if(obj.value!==null){this.writeNode("Value",obj.value,node)}return node},Name:function(name){return this.createElementNSPlus("wfs:Name",{value:name})},Value:function(obj){var node;if(obj instanceof OpenLayers.Geometry){node=this.createElementNSPlus("wfs:Value");var geom=this.writeNode("feature:_geometry",obj).firstChild;node.appendChild(geom)}else{node=this.createElementNSPlus("wfs:Value",{value:obj})}return node},Delete:function(obj){var feature=obj.feature;var options=obj.options;var node=this.createElementNSPlus("wfs:Delete",{attributes:{handle:options&&options.handle,typeName:(this.featureNS?this.featurePrefix+":":"")+this.featureType}});if(this.featureNS){this.setAttributeNS(node,this.namespaces.xmlns,"xmlns:"+this.featurePrefix,this.featureNS)}this.writeNode("ogc:Filter",new OpenLayers.Filter.FeatureId({fids:[feature.fid]}),node);return node}}},schemaLocationAttr:function(options){options=OpenLayers.Util.extend({featurePrefix:this.featurePrefix,schema:this.schema},options);var schemaLocations=OpenLayers.Util.extend({},this.schemaLocations);if(options.schema){schemaLocations[options.featurePrefix]=options.schema}var parts=[];var uri;for(var key in schemaLocations){uri=this.namespaces[key];if(uri){parts.push(uri+" "+schemaLocations[key])}}var value=parts.join(" ")||undefined;return value},setFilterProperty:function(filter){if(filter.filters){for(var i=0,len=filter.filters.length;i<len;++i){OpenLayers.Format.WFST.v1.prototype.setFilterProperty.call(this,filter.filters[i])}}else{if(filter instanceof OpenLayers.Filter.Spatial&&!filter.property){filter.property=this.geometryName}}},CLASS_NAME:"OpenLayers.Format.WFST.v1"});OpenLayers.Format.Filter.v1_1_0=OpenLayers.Class(OpenLayers.Format.GML.v3,OpenLayers.Format.Filter.v1,{VERSION:"1.1.0",schemaLocation:"http://www.opengis.net/ogc/filter/1.1.0/filter.xsd",initialize:function(options){OpenLayers.Format.GML.v3.prototype.initialize.apply(this,[options])},readers:{ogc:OpenLayers.Util.applyDefaults({PropertyIsEqualTo:function(node,obj){var matchCase=node.getAttribute("matchCase");var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,matchCase:!(matchCase==="false"||matchCase==="0")});this.readChildNodes(node,filter);obj.filters.push(filter)},PropertyIsNotEqualTo:function(node,obj){var matchCase=node.getAttribute("matchCase");var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.NOT_EQUAL_TO,matchCase:!(matchCase==="false"||matchCase==="0")});this.readChildNodes(node,filter);obj.filters.push(filter)},PropertyIsLike:function(node,obj){var filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE});this.readChildNodes(node,filter);var wildCard=node.getAttribute("wildCard");var singleChar=node.getAttribute("singleChar");var esc=node.getAttribute("escapeChar");filter.value2regex(wildCard,singleChar,esc);obj.filters.push(filter)}},OpenLayers.Format.Filter.v1.prototype.readers.ogc),gml:OpenLayers.Format.GML.v3.prototype.readers.gml,feature:OpenLayers.Format.GML.v3.prototype.readers.feature},writers:{ogc:OpenLayers.Util.applyDefaults({PropertyIsEqualTo:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsEqualTo",{attributes:{matchCase:filter.matchCase}});this.writeNode("PropertyName",filter,node);this.writeOgcExpression(filter.value,node);return node},PropertyIsNotEqualTo:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsNotEqualTo",{attributes:{matchCase:filter.matchCase}});this.writeNode("PropertyName",filter,node);this.writeOgcExpression(filter.value,node);return node},PropertyIsLike:function(filter){var node=this.createElementNSPlus("ogc:PropertyIsLike",{attributes:{matchCase:filter.matchCase,wildCard:"*",singleChar:".",escapeChar:"!"}});this.writeNode("PropertyName",filter,node);this.writeNode("Literal",filter.regex2value(),node);return node},BBOX:function(filter){var node=this.createElementNSPlus("ogc:BBOX");filter.property&&this.writeNode("PropertyName",filter,node);var box=this.writeNode("gml:Envelope",filter.value);if(filter.projection){box.setAttribute("srsName",filter.projection)}node.appendChild(box);return node},SortBy:function(sortProperties){var node=this.createElementNSPlus("ogc:SortBy");for(var i=0,l=sortProperties.length;i<l;i++){this.writeNode("ogc:SortProperty",sortProperties[i],node)}return node},SortProperty:function(sortProperty){var node=this.createElementNSPlus("ogc:SortProperty");this.writeNode("ogc:PropertyName",sortProperty,node);this.writeNode("ogc:SortOrder",(sortProperty.order=="DESC")?"DESC":"ASC",node);return node},SortOrder:function(value){var node=this.createElementNSPlus("ogc:SortOrder",{value:value});return node}},OpenLayers.Format.Filter.v1.prototype.writers.ogc),gml:OpenLayers.Format.GML.v3.prototype.writers.gml,feature:OpenLayers.Format.GML.v3.prototype.writers.feature},writeSpatial:function(filter,name){var node=this.createElementNSPlus("ogc:"+name);this.writeNode("PropertyName",filter,node);if(filter.value instanceof OpenLayers.Filter.Function){this.writeNode("Function",filter.value,node)}else{var child;if(filter.value instanceof OpenLayers.Geometry){child=this.writeNode("feature:_geometry",filter.value).firstChild}else{child=this.writeNode("gml:Envelope",filter.value)}if(filter.projection){child.setAttribute("srsName",filter.projection)}node.appendChild(child)}return node},CLASS_NAME:"OpenLayers.Format.Filter.v1_1_0"});OpenLayers.Format.OWSCommon=OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC,{defaultVersion:"1.0.0",getVersion:function(root,options){var version=this.version;if(!version){var uri=root.getAttribute("xmlns:ows");if(uri&&uri.substring(uri.lastIndexOf("/")+1)==="1.1"){version="1.1.0"}if(!version){version=this.defaultVersion}}return version},CLASS_NAME:"OpenLayers.Format.OWSCommon"});OpenLayers.Format.OWSCommon.v1=OpenLayers.Class(OpenLayers.Format.XML,{regExes:{trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g)},read:function(data,options){options=OpenLayers.Util.applyDefaults(options,this.options);var ows={};this.readChildNodes(data,ows);return ows},readers:{ows:{Exception:function(node,exceptionReport){var exception={code:node.getAttribute("exceptionCode"),locator:node.getAttribute("locator"),texts:[]};exceptionReport.exceptions.push(exception);this.readChildNodes(node,exception)},ExceptionText:function(node,exception){var text=this.getChildValue(node);exception.texts.push(text)},ServiceIdentification:function(node,obj){obj.serviceIdentification={};this.readChildNodes(node,obj.serviceIdentification)},Title:function(node,obj){obj.title=this.getChildValue(node)},Abstract:function(node,serviceIdentification){serviceIdentification["abstract"]=this.getChildValue(node)},Keywords:function(node,serviceIdentification){serviceIdentification.keywords={};this.readChildNodes(node,serviceIdentification.keywords)},Keyword:function(node,keywords){keywords[this.getChildValue(node)]=true},ServiceType:function(node,serviceIdentification){serviceIdentification.serviceType={codeSpace:node.getAttribute("codeSpace"),value:this.getChildValue(node)}},ServiceTypeVersion:function(node,serviceIdentification){serviceIdentification.serviceTypeVersion=this.getChildValue(node)},Fees:function(node,serviceIdentification){serviceIdentification.fees=this.getChildValue(node)},AccessConstraints:function(node,serviceIdentification){serviceIdentification.accessConstraints=this.getChildValue(node)},ServiceProvider:function(node,obj){obj.serviceProvider={};this.readChildNodes(node,obj.serviceProvider)},ProviderName:function(node,serviceProvider){serviceProvider.providerName=this.getChildValue(node)},ProviderSite:function(node,serviceProvider){serviceProvider.providerSite=this.getAttributeNS(node,this.namespaces.xlink,"href")},ServiceContact:function(node,serviceProvider){serviceProvider.serviceContact={};this.readChildNodes(node,serviceProvider.serviceContact)},IndividualName:function(node,serviceContact){serviceContact.individualName=this.getChildValue(node)},PositionName:function(node,serviceContact){serviceContact.positionName=this.getChildValue(node)},ContactInfo:function(node,serviceContact){serviceContact.contactInfo={};this.readChildNodes(node,serviceContact.contactInfo)},Phone:function(node,contactInfo){contactInfo.phone={};this.readChildNodes(node,contactInfo.phone)},Voice:function(node,phone){phone.voice=this.getChildValue(node)},Address:function(node,contactInfo){contactInfo.address={};this.readChildNodes(node,contactInfo.address)},DeliveryPoint:function(node,address){address.deliveryPoint=this.getChildValue(node)},City:function(node,address){address.city=this.getChildValue(node)},AdministrativeArea:function(node,address){address.administrativeArea=this.getChildValue(node)},PostalCode:function(node,address){address.postalCode=this.getChildValue(node)},Country:function(node,address){address.country=this.getChildValue(node)},ElectronicMailAddress:function(node,address){address.electronicMailAddress=this.getChildValue(node)},Role:function(node,serviceContact){serviceContact.role=this.getChildValue(node)},OperationsMetadata:function(node,obj){obj.operationsMetadata={};this.readChildNodes(node,obj.operationsMetadata)},Operation:function(node,operationsMetadata){var name=node.getAttribute("name");operationsMetadata[name]={};this.readChildNodes(node,operationsMetadata[name])},DCP:function(node,operation){operation.dcp={};this.readChildNodes(node,operation.dcp)},HTTP:function(node,dcp){dcp.http={};this.readChildNodes(node,dcp.http)},Get:function(node,http){if(!http.get){http.get=[]}var obj={url:this.getAttributeNS(node,this.namespaces.xlink,"href")};this.readChildNodes(node,obj);http.get.push(obj)},Post:function(node,http){if(!http.post){http.post=[]}var obj={url:this.getAttributeNS(node,this.namespaces.xlink,"href")};this.readChildNodes(node,obj);http.post.push(obj)},Parameter:function(node,operation){if(!operation.parameters){operation.parameters={}}var name=node.getAttribute("name");operation.parameters[name]={};this.readChildNodes(node,operation.parameters[name])},Constraint:function(node,obj){if(!obj.constraints){obj.constraints={}}var name=node.getAttribute("name");obj.constraints[name]={};this.readChildNodes(node,obj.constraints[name])},Value:function(node,allowedValues){allowedValues[this.getChildValue(node)]=true},OutputFormat:function(node,obj){obj.formats.push({value:this.getChildValue(node)});this.readChildNodes(node,obj)},WGS84BoundingBox:function(node,obj){var boundingBox={};boundingBox.crs=node.getAttribute("crs");if(obj.BoundingBox){obj.BoundingBox.push(boundingBox)}else{obj.projection=boundingBox.crs;boundingBox=obj}this.readChildNodes(node,boundingBox)},BoundingBox:function(node,obj){this.readers.ows["WGS84BoundingBox"].apply(this,[node,obj])},LowerCorner:function(node,obj){var str=this.getChildValue(node).replace(this.regExes.trimSpace,"");str=str.replace(this.regExes.trimComma,",");var pointList=str.split(this.regExes.splitSpace);obj.left=pointList[0];obj.bottom=pointList[1]},UpperCorner:function(node,obj){var str=this.getChildValue(node).replace(this.regExes.trimSpace,"");str=str.replace(this.regExes.trimComma,",");var pointList=str.split(this.regExes.splitSpace);obj.right=pointList[0];obj.top=pointList[1];obj.bounds=new OpenLayers.Bounds(obj.left,obj.bottom,obj.right,obj.top);delete obj.left;delete obj.bottom;delete obj.right;delete obj.top},Language:function(node,obj){obj.language=this.getChildValue(node)}}},writers:{ows:{BoundingBox:function(options,nodeName){var node=this.createElementNSPlus(nodeName||"ows:BoundingBox",{attributes:{crs:options.projection}});this.writeNode("ows:LowerCorner",options,node);this.writeNode("ows:UpperCorner",options,node);return node},LowerCorner:function(options){var node=this.createElementNSPlus("ows:LowerCorner",{value:options.bounds.left+" "+options.bounds.bottom});return node},UpperCorner:function(options){var node=this.createElementNSPlus("ows:UpperCorner",{value:options.bounds.right+" "+options.bounds.top});return node},Identifier:function(identifier){var node=this.createElementNSPlus("ows:Identifier",{value:identifier});return node},Title:function(title){var node=this.createElementNSPlus("ows:Title",{value:title});return node},Abstract:function(abstractValue){var node=this.createElementNSPlus("ows:Abstract",{value:abstractValue});return node},OutputFormat:function(format){var node=this.createElementNSPlus("ows:OutputFormat",{value:format});return node}}},CLASS_NAME:"OpenLayers.Format.OWSCommon.v1"});OpenLayers.Format.OWSCommon.v1_0_0=OpenLayers.Class(OpenLayers.Format.OWSCommon.v1,{namespaces:{ows:"http://www.opengis.net/ows",xlink:"http://www.w3.org/1999/xlink"},readers:{ows:OpenLayers.Util.applyDefaults({ExceptionReport:function(node,obj){obj.success=false;obj.exceptionReport={version:node.getAttribute("version"),language:node.getAttribute("language"),exceptions:[]};this.readChildNodes(node,obj.exceptionReport)}},OpenLayers.Format.OWSCommon.v1.prototype.readers.ows)},writers:{ows:OpenLayers.Format.OWSCommon.v1.prototype.writers.ows},CLASS_NAME:"OpenLayers.Format.OWSCommon.v1_0_0"});OpenLayers.Format.WFST.v1_1_0=OpenLayers.Class(OpenLayers.Format.Filter.v1_1_0,OpenLayers.Format.WFST.v1,{version:"1.1.0",schemaLocations:{wfs:"http://schemas.opengis.net/wfs/1.1.0/wfs.xsd"},initialize:function(options){OpenLayers.Format.Filter.v1_1_0.prototype.initialize.apply(this,[options]);OpenLayers.Format.WFST.v1.prototype.initialize.apply(this,[options])},readNode:function(node,obj,first){return OpenLayers.Format.GML.v3.prototype.readNode.apply(this,arguments)},readers:{wfs:OpenLayers.Util.applyDefaults({FeatureCollection:function(node,obj){obj.numberOfFeatures=parseInt(node.getAttribute("numberOfFeatures"));OpenLayers.Format.WFST.v1.prototype.readers.wfs["FeatureCollection"].apply(this,arguments)},TransactionResponse:function(node,obj){obj.insertIds=[];obj.success=false;this.readChildNodes(node,obj)},TransactionSummary:function(node,obj){obj.success=true},InsertResults:function(node,obj){this.readChildNodes(node,obj)},Feature:function(node,container){var obj={fids:[]};this.readChildNodes(node,obj);container.insertIds.push(obj.fids[0])}},OpenLayers.Format.WFST.v1.prototype.readers.wfs),gml:OpenLayers.Format.GML.v3.prototype.readers.gml,feature:OpenLayers.Format.GML.v3.prototype.readers.feature,ogc:OpenLayers.Format.Filter.v1_1_0.prototype.readers.ogc,ows:OpenLayers.Format.OWSCommon.v1_0_0.prototype.readers.ows},writers:{wfs:OpenLayers.Util.applyDefaults({GetFeature:function(options){var node=OpenLayers.Format.WFST.v1.prototype.writers.wfs["GetFeature"].apply(this,arguments);options&&this.setAttributes(node,{resultType:options.resultType,startIndex:options.startIndex,count:options.count});return node},Query:function(options){options=OpenLayers.Util.extend({featureNS:this.featureNS,featurePrefix:this.featurePrefix,featureType:this.featureType,srsName:this.srsName},options);var prefix=options.featurePrefix;var node=this.createElementNSPlus("wfs:Query",{attributes:{typeName:(prefix?prefix+":":"")+options.featureType,srsName:options.srsName}});if(options.featureNS){this.setAttributeNS(node,this.namespaces.xmlns,"xmlns:"+prefix,options.featureNS)}if(options.propertyNames){for(var i=0,len=options.propertyNames.length;i<len;i++){this.writeNode("wfs:PropertyName",{property:options.propertyNames[i]},node)}}if(options.filter){OpenLayers.Format.WFST.v1_1_0.prototype.setFilterProperty.call(this,options.filter);this.writeNode("ogc:Filter",options.filter,node)}return node},PropertyName:function(obj){return this.createElementNSPlus("wfs:PropertyName",{value:obj.property})}},OpenLayers.Format.WFST.v1.prototype.writers.wfs),gml:OpenLayers.Format.GML.v3.prototype.writers.gml,feature:OpenLayers.Format.GML.v3.prototype.writers.feature,ogc:OpenLayers.Format.Filter.v1_1_0.prototype.writers.ogc},CLASS_NAME:"OpenLayers.Format.WFST.v1_1_0"});OpenLayers.Protocol.WFS.v1_1_0=OpenLayers.Class(OpenLayers.Protocol.WFS.v1,{version:"1.1.0",initialize:function(options){OpenLayers.Protocol.WFS.v1.prototype.initialize.apply(this,arguments);if(this.outputFormat&&!this.readFormat){if(this.outputFormat.toLowerCase()=="gml2"){this.readFormat=new OpenLayers.Format.GML.v2({featureType:this.featureType,featureNS:this.featureNS,geometryName:this.geometryName})}else{if(this.outputFormat.toLowerCase()=="json"){this.readFormat=new OpenLayers.Format.GeoJSON()}}}},CLASS_NAME:"OpenLayers.Protocol.WFS.v1_1_0"});Ext.namespace("GeoExt.data");GeoExt.data.LayerRecord=Ext.data.Record.create([{name:"layer"},{name:"title",type:"string",mapping:"name"}]);GeoExt.data.LayerRecord.prototype.getLayer=function(){return this.get("layer")};GeoExt.data.LayerRecord.prototype.setLayer=function(layer){if(layer!==this.data.layer){this.dirty=true;if(!this.modified){this.modified={}}if(this.modified.layer===undefined){this.modified.layer=this.data.layer}this.data.layer=layer;if(!this.editing){this.afterEdit()}}};GeoExt.data.LayerRecord.prototype.clone=function(id){var layer=this.getLayer()&&this.getLayer().clone();return new this.constructor(Ext.applyIf({layer:layer},this.data),id||layer.id)};GeoExt.data.LayerRecord.create=function(o){var f=Ext.extend(GeoExt.data.LayerRecord,{});var p=f.prototype;p.fields=new Ext.util.MixedCollection(false,function(field){return field.name});GeoExt.data.LayerRecord.prototype.fields.each(function(f){p.fields.add(f)});if(o){for(var i=0,len=o.length;i<len;i++){p.fields.add(new Ext.data.Field(o[i]))}}f.getField=function(name){return p.fields.get(name)};return f};Ext.namespace("GeoExt.data");GeoExt.data.AttributeStoreMixin=function(){return{constructor:function(c){c=c||{};arguments.callee.superclass.constructor.call(this,Ext.apply(c,{proxy:c.proxy||(!c.data?new Ext.data.HttpProxy({url:c.url,disableCaching:false,method:"GET"}):undefined),reader:new GeoExt.data.AttributeReader(c,c.fields||["name","type","restriction",{name:"nillable",type:"boolean"},"annotation"])}));if(this.feature){this.bind()}},bind:function(){this.on({update:this.onUpdate,load:this.onLoad,add:this.onAdd,scope:this});var records=[];this.each(function(record){records.push(record)});this.updateFeature(records)},onUpdate:function(store,record,operation){this.updateFeature([record])},onLoad:function(store,records,options){if(!options||options.add!==true){this.updateFeature(records)}},onAdd:function(store,records,index){this.updateFeature(records)},updateFeature:function(records){var feature=this.feature,layer=feature.layer;var i,len,record,name,value,oldValue,dirty;for(i=0,len=records.length;i<len;i++){record=records[i];name=record.get("name");value=record.get("value");oldValue=feature.attributes[name];if(oldValue!==value){dirty=true}}if(dirty&&layer&&layer.events&&layer.events.triggerEvent("beforefeaturemodified",{feature:feature})!==false){for(i=0,len=records.length;i<len;i++){record=records[i];name=record.get("name");value=record.get("value");feature.attributes[name]=value}layer.events.triggerEvent("featuremodified",{feature:feature});layer.drawFeature(feature)}}}};GeoExt.data.AttributeStore=Ext.extend(Ext.data.Store,GeoExt.data.AttributeStoreMixin());Ext.namespace("GeoExt.data");GeoExt.data.AttributeReader=function(meta,recordType){meta=meta||{};if(!meta.format){meta.format=new OpenLayers.Format.WFSDescribeFeatureType()}GeoExt.data.AttributeReader.superclass.constructor.call(this,meta,recordType||meta.fields);if(meta.feature){this.recordType.prototype.fields.add(new Ext.data.Field("value"))}};Ext.extend(GeoExt.data.AttributeReader,Ext.data.DataReader,{read:function(request){var data=request.responseXML;if(!data||!data.documentElement){data=request.responseText}return this.readRecords(data)},readRecords:function(data){var attributes;if(data instanceof Array){attributes=data}else{var output=this.meta.format.read(data);if(!!output.error){throw new Ext.data.DataReader.Error("invalid-response",output.error)}attributes=output.featureTypes[0].properties}var feature=this.meta.feature;var recordType=this.recordType;var fields=recordType.prototype.fields;var numFields=fields.length;var attr,values,name,record,ignore,value,field,records=[];for(var i=0,len=attributes.length;i<len;++i){ignore=false;attr=attributes[i];values={};for(var j=0;j<numFields;++j){field=fields.items[j];name=field.name;value=field.convert(attr[name]);if(this.ignoreAttribute(name,value)){ignore=true;break}values[name]=value}if(feature){value=feature.attributes[values.name];if(value!==undefined){if(this.ignoreAttribute("value",value)){ignore=true}else{values.value=value}}}if(!ignore){records[records.length]=new recordType(values)}}return{success:true,records:records,totalRecords:records.length}},ignoreAttribute:function(name,value){var ignore=false;if(this.meta.ignore&&this.meta.ignore[name]){var matches=this.meta.ignore[name];if(typeof matches=="string"){ignore=(matches===value)}else{if(matches instanceof Array){ignore=(matches.indexOf(value)>-1)}else{if(matches instanceof RegExp){ignore=(matches.test(value))}}}}return ignore}});Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.ProtocolProxy=function(config){Ext.apply(this,config);GeoExt.data.ProtocolProxy.superclass.constructor.apply(this,arguments)};Ext.extend(GeoExt.data.ProtocolProxy,Ext.data.DataProxy,{protocol:null,abortPrevious:true,setParamsAsOptions:false,response:null,load:function(params,reader,callback,scope,arg){if(this.fireEvent("beforeload",this,params)!==false){var o={params:params||{},request:{callback:callback,scope:scope,arg:arg},reader:reader};var cb=OpenLayers.Function.bind(this.loadResponse,this,o);if(this.abortPrevious){this.abortRequest()}var options={params:params,callback:cb,scope:this};Ext.applyIf(options,arg);if(this.setParamsAsOptions===true){Ext.applyIf(options,options.params);delete options.params}this.response=this.protocol.read(options)}else{callback.call(scope||this,null,arg,false)}},abortRequest:function(){if(this.response){this.protocol.abort(this.response);this.response=null}},loadResponse:function(o,response){if(response.success()){var result;try{result=o.reader.read(response)}catch(e){this.fireEvent("loadexception",this,o,response,e);this.fireEvent("exception",this,"response",null,o,response,e);o.request.callback.call(o.request.scope,null,o.request.arg,false);return}this.fireEvent("load",this,o,o.request.arg);o.request.callback.call(o.request.scope,result,o.request.arg,true)}else{this.fireEvent("loadexception",this,o,response);o.request.callback.call(o.request.scope,null,o.request.arg,false)}}});Ext.namespace("GeoExt.data");GeoExt.data.FeatureStoreMixin=function(){return{layer:null,reader:null,featureFilter:null,constructor:function(config){config=config||{};config.reader=config.reader||new GeoExt.data.FeatureReader({},config.fields);var layer=config.layer;delete config.layer;if(config.features){config.data=config.features}delete config.features;var options={initDir:config.initDir};delete config.initDir;arguments.callee.superclass.constructor.call(this,config);if(layer){this.bind(layer,options)}},bind:function(layer,options){if(this.layer){return}this.layer=layer;options=options||{};var initDir=options.initDir;if(options.initDir==undefined){initDir=GeoExt.data.FeatureStore.LAYER_TO_STORE|GeoExt.data.FeatureStore.STORE_TO_LAYER}var features=layer.features.slice(0);if(initDir&GeoExt.data.FeatureStore.STORE_TO_LAYER){var records=this.getRange();for(var i=records.length-1;i>=0;i--){this.layer.addFeatures([records[i].getFeature()])}}if(initDir&GeoExt.data.FeatureStore.LAYER_TO_STORE){this.loadData(features,true)}layer.events.on({featuresadded:this.onFeaturesAdded,featuresremoved:this.onFeaturesRemoved,featuremodified:this.onFeatureModified,scope:this});this.on({load:this.onLoad,clear:this.onClear,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,scope:this})},unbind:function(){if(this.layer){this.layer.events.un({featuresadded:this.onFeaturesAdded,featuresremoved:this.onFeaturesRemoved,featuremodified:this.onFeatureModified,scope:this});this.un("load",this.onLoad,this);this.un("clear",this.onClear,this);this.un("add",this.onAdd,this);this.un("remove",this.onRemove,this);this.un("update",this.onUpdate,this);this.layer=null}},getRecordFromFeature:function(feature){return this.getByFeature(feature)||null},getByFeature:function(feature){var record;if(feature.state!==OpenLayers.State.INSERT){record=this.getById(feature.id)}else{var index=this.findBy(function(r){return r.getFeature()===feature});if(index>-1){record=this.getAt(index)}}return record},onFeaturesAdded:function(evt){if(!this._adding){var features=evt.features,toAdd=features;if(this.featureFilter){toAdd=[];var i,len,feature;for(var i=0,len=features.length;i<len;i++){feature=features[i];if(this.featureFilter.evaluate(feature)!==false){toAdd.push(feature)}}}this._adding=true;this.loadData(toAdd,true);delete this._adding}},onFeaturesRemoved:function(evt){if(!this._removing){var features=evt.features,feature,record,i;for(i=features.length-1;i>=0;i--){feature=features[i];record=this.getByFeature(feature);if(record!==undefined){this._removing=true;this.remove(record);delete this._removing}}}},onFeatureModified:function(evt){if(!this._updating){var feature=evt.feature;var record=this.getByFeature(feature);if(record!==undefined){record.beginEdit();var attributes=feature.attributes;if(attributes){var fields=this.recordType.prototype.fields;for(var i=0,len=fields.length;i<len;i++){var field=fields.items[i];var key=field.mapping||field.name;if(key in attributes){record.set(field.name,field.convert(attributes[key]))}}}record.set("state",feature.state);record.set("fid",feature.fid);record.setFeature(feature);this._updating=true;record.endEdit();delete this._updating}}},addFeaturesToLayer:function(records){var i,len,features;features=new Array((len=records.length));for(i=0;i<len;i++){features[i]=records[i].getFeature()}if(features.length>0){this._adding=true;this.layer.addFeatures(features);delete this._adding}},onLoad:function(store,records,options){if(!options||options.add!==true){this._removing=true;this.layer.removeFeatures(this.layer.features);delete this._removing;this.addFeaturesToLayer(records)}},onClear:function(store){this._removing=true;this.layer.removeFeatures(this.layer.features);delete this._removing},onAdd:function(store,records,index){if(!this._adding){this.addFeaturesToLayer(records)}},onRemove:function(store,record,index){if(!this._removing){var feature=record.getFeature();if(this.layer.getFeatureById(feature.id)!=null){this._removing=true;this.layer.removeFeatures([record.getFeature()]);delete this._removing}}},onUpdate:function(store,record,operation){if(!this._updating){var defaultFields=new GeoExt.data.FeatureRecord().fields;var feature=record.getFeature();if(feature.state!==OpenLayers.State.INSERT){feature.state=OpenLayers.State.UPDATE}if(record.fields){var cont=this.layer.events.triggerEvent("beforefeaturemodified",{feature:feature});if(cont!==false){var attributes=feature.attributes;record.fields.each(function(field){var key=field.mapping||field.name;if(!defaultFields.containsKey(key)){attributes[key]=record.get(field.name)}});this._updating=true;this.layer.events.triggerEvent("featuremodified",{feature:feature});delete this._updating;if(this.layer.getFeatureById(feature.id)!=null){this.layer.drawFeature(feature)}}}}},destroy:function(){this.unbind();GeoExt.data.FeatureStore.superclass.destroy.call(this)}}};GeoExt.data.FeatureStore=Ext.extend(Ext.data.Store,new GeoExt.data.FeatureStoreMixin);GeoExt.data.FeatureStore.LAYER_TO_STORE=1;GeoExt.data.FeatureStore.STORE_TO_LAYER=2;Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.FeatureReader=function(meta,recordType){meta=meta||{};if(!(recordType instanceof Function)){recordType=GeoExt.data.FeatureRecord.create(recordType||meta.fields||{})}GeoExt.data.FeatureReader.superclass.constructor.call(this,meta,recordType)};Ext.extend(GeoExt.data.FeatureReader,Ext.data.DataReader,{totalRecords:null,read:function(response){return this.readRecords(response.features)},readRecords:function(features){var records=[];if(features){var recordType=this.recordType,fields=recordType.prototype.fields;var i,lenI,j,lenJ,feature,values,field,v;for(i=0,lenI=features.length;i<lenI;i++){feature=features[i];values={};if(feature.attributes){for(j=0,lenJ=fields.length;j<lenJ;j++){field=fields.items[j];if(/[\[\.]/.test(field.mapping)){try{v=new Function("obj","return obj."+field.mapping)(feature.attributes)}catch(e){v=field.defaultValue}}else{v=feature.attributes[field.mapping||field.name]||field.defaultValue}if(field.convert){v=field.convert(v,feature)}values[field.name]=v}}values.feature=feature;values.state=feature.state;values.fid=feature.fid;var id=(feature.state===OpenLayers.State.INSERT)?undefined:feature.id;records[records.length]=new recordType(values,id)}}return{records:records,totalRecords:this.totalRecords!=null?this.totalRecords:records.length}}});Ext.namespace("GeoExt.data");GeoExt.data.FeatureRecord=Ext.data.Record.create([{name:"feature"},{name:"state"},{name:"fid"}]);GeoExt.data.FeatureRecord.prototype.getFeature=function(){return this.get("feature")};GeoExt.data.FeatureRecord.prototype.setFeature=function(feature){if(feature!==this.data.feature){this.dirty=true;if(!this.modified){this.modified={}}if(this.modified.feature===undefined){this.modified.feature=this.data.feature}this.data.feature=feature;if(!this.editing){this.afterEdit()}}};GeoExt.data.FeatureRecord.create=function(o){var f=Ext.extend(GeoExt.data.FeatureRecord,{});var p=f.prototype;p.fields=new Ext.util.MixedCollection(false,function(field){return field.name});GeoExt.data.FeatureRecord.prototype.fields.each(function(f){p.fields.add(f)});if(o){for(var i=0,len=o.length;i<len;i++){p.fields.add(new Ext.data.Field(o[i]))}}f.getField=function(name){return p.fields.get(name)};return f};Ext.namespace("GeoExt.plugins");GeoExt.plugins.PrintPageField=Ext.extend(Ext.util.Observable,{printPage:null,target:null,constructor:function(config){this.initialConfig=config;Ext.apply(this,config);GeoExt.plugins.PrintPageField.superclass.constructor.apply(this,arguments)},init:function(target){this.target=target;var onCfg={beforedestroy:this.onBeforeDestroy,scope:this};var eventName=target instanceof Ext.form.ComboBox?"select":target instanceof Ext.form.Checkbox?"check":"valid";onCfg[eventName]=this.onFieldChange;target.on(onCfg);this.printPage.on({change:this.onPageChange,scope:this});this.printPage.printProvider.on({layoutchange:this.onLayoutChange,scope:this});this.setValue(this.printPage)},onFieldChange:function(field,record){var printProvider=this.printPage.printProvider;var value=field.getValue();this._updating=true;if(field.store===printProvider.scales||field.name==="scale"){this.printPage.setScale(record)}else{if(field.name=="rotation"){!isNaN(value)&&this.printPage.setRotation(value)}else{this.printPage.customParams[field.name]=value}}delete this._updating},onPageChange:function(printPage){if(!this._updating){this.setValue(printPage)}},onLayoutChange:function(printProvider,layout){var t=this.target;t.name=="rotation"&&t.setDisabled(!layout.get("rotation"))},setValue:function(printPage){var t=this.target;t.suspendEvents();if(t.store===printPage.printProvider.scales||t.name==="scale"){if(printPage.scale){t.setValue(printPage.scale.get(t.displayField))}}else{if(t.name=="rotation"){t.setValue(printPage.rotation)}}t.resumeEvents()},onBeforeDestroy:function(){this.target.un("beforedestroy",this.onBeforeDestroy,this);this.target.un("select",this.onFieldChange,this);this.target.un("valid",this.onFieldChange,this);this.printPage.un("change",this.onPageChange,this);this.printPage.printProvider.un("layoutchange",this.onLayoutChange,this)}});Ext.preg("gx_printpagefield",GeoExt.plugins.PrintPageField);Ext.namespace("GeoExt.plugins");GeoExt.plugins.PrintProviderField=Ext.extend(Ext.util.Observable,{target:null,constructor:function(config){this.initialConfig=config;Ext.apply(this,config);GeoExt.plugins.PrintProviderField.superclass.constructor.apply(this,arguments)},init:function(target){this.target=target;var onCfg={scope:this,render:this.onRender,beforedestroy:this.onBeforeDestroy};onCfg[target instanceof Ext.form.ComboBox?"select":"valid"]=this.onFieldChange;target.on(onCfg)},onRender:function(field){var printProvider=this.printProvider||field.ownerCt.printProvider;if(field.store===printProvider.layouts){field.setValue(printProvider.layout.get(field.displayField));printProvider.on({layoutchange:this.onProviderChange,scope:this})}else{if(field.store===printProvider.dpis){field.setValue(printProvider.dpi.get(field.displayField));printProvider.on({dpichange:this.onProviderChange,scope:this})}else{if(field.initialConfig.value===undefined){field.setValue(printProvider.customParams[field.name])}}}},onFieldChange:function(field,record){var printProvider=this.printProvider||field.ownerCt.printProvider;var value=field.getValue();this._updating=true;if(record){switch(field.store){case printProvider.layouts:printProvider.setLayout(record);break;case printProvider.dpis:printProvider.setDpi(record)}}else{printProvider.customParams[field.name]=value}delete this._updating},onProviderChange:function(printProvider,rec){if(!this._updating){this.target.setValue(rec.get(this.target.displayField))}},onBeforeDestroy:function(){var target=this.target;target.un("beforedestroy",this.onBeforeDestroy,this);target.un("render",this.onRender,this);target.un("select",this.onFieldChange,this);target.un("valid",this.onFieldChange,this);var printProvider=this.printProvider||target.ownerCt.printProvider;printProvider.un("layoutchange",this.onProviderChange,this);printProvider.un("dpichange",this.onProviderChange,this)}});Ext.preg("gx_printproviderfield",GeoExt.plugins.PrintProviderField);OpenLayers.Control=OpenLayers.Class({id:null,map:null,div:null,type:null,allowSelection:false,displayClass:"",title:"",autoActivate:false,active:null,handlerOptions:null,handler:null,eventListeners:null,events:null,initialize:function(options){this.displayClass=this.CLASS_NAME.replace("OpenLayers.","ol").replace(/\./g,"");OpenLayers.Util.extend(this,options);this.events=new OpenLayers.Events(this);if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)}if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")}},destroy:function(){if(this.events){if(this.eventListeners){this.events.un(this.eventListeners)}this.events.destroy();this.events=null}this.eventListeners=null;if(this.handler){this.handler.destroy();this.handler=null}if(this.handlers){for(var key in this.handlers){if(this.handlers.hasOwnProperty(key)&&typeof this.handlers[key].destroy=="function"){this.handlers[key].destroy()}}this.handlers=null}if(this.map){this.map.removeControl(this);this.map=null}this.div=null},setMap:function(map){this.map=map;if(this.handler){this.handler.setMap(map)}},draw:function(px){if(this.div==null){this.div=OpenLayers.Util.createDiv(this.id);this.div.className=this.displayClass;if(!this.allowSelection){this.div.className+=" olControlNoSelect";this.div.setAttribute("unselectable","on",0);this.div.onselectstart=OpenLayers.Function.False}if(this.title!=""){this.div.title=this.title}}if(px!=null){this.position=px.clone()}this.moveTo(this.position);return this.div},moveTo:function(px){if((px!=null)&&(this.div!=null)){this.div.style.left=px.x+"px";this.div.style.top=px.y+"px"}},activate:function(){if(this.active){return false}if(this.handler){this.handler.activate()}this.active=true;if(this.map){OpenLayers.Element.addClass(this.map.viewPortDiv,this.displayClass.replace(/ /g,"")+"Active")}this.events.triggerEvent("activate");return true},deactivate:function(){if(this.active){if(this.handler){this.handler.deactivate()}this.active=false;if(this.map){OpenLayers.Element.removeClass(this.map.viewPortDiv,this.displayClass.replace(/ /g,"")+"Active")}this.events.triggerEvent("deactivate");return true}return false},CLASS_NAME:"OpenLayers.Control"});OpenLayers.Control.TYPE_BUTTON=1;OpenLayers.Control.TYPE_TOGGLE=2;OpenLayers.Control.TYPE_TOOL=3;Ext.namespace("GeoExt");GeoExt.Action=Ext.extend(Ext.Action,{control:null,activateOnEnable:false,deactivateOnDisable:false,map:null,uScope:null,uHandler:null,uToggleHandler:null,uCheckHandler:null,constructor:function(config){this.uScope=config.scope;this.uHandler=config.handler;this.uToggleHandler=config.toggleHandler;this.uCheckHandler=config.checkHandler;config.scope=this;config.handler=this.pHandler;config.toggleHandler=this.pToggleHandler;config.checkHandler=this.pCheckHandler;var ctrl=this.control=config.control;delete config.control;this.activateOnEnable=!!config.activateOnEnable;delete config.activateOnEnable;this.deactivateOnDisable=!!config.deactivateOnDisable;delete config.deactivateOnDisable;if(ctrl){if(config.map){config.map.addControl(ctrl);delete config.map}if((config.pressed||config.checked)&&ctrl.map){ctrl.activate()}if(ctrl.active){config.pressed=true;config.checked=true}ctrl.events.on({activate:this.onCtrlActivate,deactivate:this.onCtrlDeactivate,scope:this})}arguments.callee.superclass.constructor.call(this,config)},pHandler:function(cmp){var ctrl=this.control;if(ctrl&&ctrl.type==OpenLayers.Control.TYPE_BUTTON){ctrl.trigger()}if(this.uHandler){this.uHandler.apply(this.uScope,arguments)}},pToggleHandler:function(cmp,state){this.changeControlState(state);if(this.uToggleHandler){this.uToggleHandler.apply(this.uScope,arguments)}},pCheckHandler:function(cmp,state){this.changeControlState(state);if(this.uCheckHandler){this.uCheckHandler.apply(this.uScope,arguments)}},changeControlState:function(state){if(state){if(!this._activating){this._activating=true;this.control.activate();this.initialConfig.pressed=true;this.initialConfig.checked=true;this._activating=false}}else{if(!this._deactivating){this._deactivating=true;this.control.deactivate();this.initialConfig.pressed=false;this.initialConfig.checked=false;this._deactivating=false}}},onCtrlActivate:function(){var ctrl=this.control;if(ctrl.type==OpenLayers.Control.TYPE_BUTTON){this.enable()}else{this.safeCallEach("toggle",[true]);this.safeCallEach("setChecked",[true])}},onCtrlDeactivate:function(){var ctrl=this.control;if(ctrl.type==OpenLayers.Control.TYPE_BUTTON){this.disable()}else{this.safeCallEach("toggle",[false]);this.safeCallEach("setChecked",[false])}},safeCallEach:function(fnName,args){var cs=this.items;for(var i=0,len=cs.length;i<len;i++){if(cs[i][fnName]){cs[i].rendered?cs[i][fnName].apply(cs[i],args):cs[i].on({render:cs[i][fnName].createDelegate(cs[i],args),single:true})}}},setDisabled:function(v){if(!v&&this.activateOnEnable&&this.control&&!this.control.active){this.control.activate()}if(v&&this.deactivateOnDisable&&this.control&&this.control.active){this.control.deactivate()}return GeoExt.Action.superclass.setDisabled.apply(this,arguments)}});Ext.namespace("GeoExt.tree");GeoExt.tree.LayerContainer=Ext.extend(Ext.tree.AsyncTreeNode,{text:"Layers",constructor:function(config){config=Ext.applyIf(config||{},{text:this.text});this.loader=config.loader instanceof GeoExt.tree.LayerLoader?config.loader:new GeoExt.tree.LayerLoader(Ext.applyIf(config.loader||{},{store:config.layerStore}));GeoExt.tree.LayerContainer.superclass.constructor.call(this,config)},recordIndexToNodeIndex:function(index){var store=this.loader.store;var count=store.getCount();var nodeCount=this.childNodes.length;var nodeIndex=-1;for(var i=count-1;i>=0;--i){if(this.loader.filter(store.getAt(i))===true){++nodeIndex;if(index===i||nodeIndex>nodeCount-1){break}}}return nodeIndex},destroy:function(){delete this.layerStore;GeoExt.tree.LayerContainer.superclass.destroy.apply(this,arguments)}});Ext.tree.TreePanel.nodeTypes.gx_layercontainer=GeoExt.tree.LayerContainer;Ext.namespace("GeoExt.tree");GeoExt.tree.LayerLoader=function(config){Ext.apply(this,config);this.addEvents("beforeload","load");this.iconCls={};GeoExt.tree.LayerLoader.superclass.constructor.call(this)};Ext.extend(GeoExt.tree.LayerLoader,Ext.util.Observable,{store:null,filter:function(record){return record.getLayer().displayInLayerSwitcher==true},baseAttrs:null,uiProviders:null,load:function(node,callback){if(this.fireEvent("beforeload",this,node)){this.removeStoreHandlers();while(node.firstChild){node.removeChild(node.firstChild)}if(!this.uiProviders){this.uiProviders=node.getOwnerTree().getLoader().uiProviders}if(!this.store){this.store=GeoExt.MapPanel.guess().layers}this.store.each(function(record){this.addLayerNode(node,record)},this);this.addStoreHandlers(node);if(typeof callback=="function"){callback()}this.fireEvent("load",this,node)}},onStoreAdd:function(store,records,index,node){if(!this._reordering){var nodeIndex=node.recordIndexToNodeIndex(index+records.length-1);for(var i=0;i<records.length;++i){this.addLayerNode(node,records[i],nodeIndex)}}},onStoreRemove:function(store,record,index,node){if(!this._reordering){this.removeLayerNode(node,record)}},addLayerNode:function(node,layerRecord,index){index=index||0;if(this.filter(layerRecord)===true){var child=this.createNode({nodeType:"gx_layer",layer:layerRecord.getLayer(),layerStore:this.store,iconCls:this.iconCls[layerRecord.id]});var sibling=node.item(index);if(sibling){node.insertBefore(child,sibling)}else{node.appendChild(child)}child.on("move",this.onChildMove,this)}},removeLayerNode:function(node,layerRecord){if(this.filter(layerRecord)===true){var child=node.findChildBy(function(node){return node.layer==layerRecord.getLayer()});if(child){child.un("move",this.onChildMove,this);child.remove();node.reload()}}},onChildMove:function(tree,node,oldParent,newParent,index){this._reordering=true;var record=this.store.getByLayer(node.layer);delete oldParent.loader.iconCls[record.id];if(newParent instanceof GeoExt.tree.LayerContainer&&this.store===newParent.loader.store){newParent.loader._reordering=true;newParent.loader.iconCls[record.id]=node.attributes.iconCls;this.store.remove(record);var newRecordIndex;if(newParent.childNodes.length>1){var searchIndex=(index===0)?index+1:index-1;newRecordIndex=this.store.findBy(function(r){return newParent.childNodes[searchIndex].layer===r.getLayer()});index===0&&newRecordIndex++}else{if(oldParent.parentNode===newParent.parentNode){var prev=newParent;do{prev=prev.previousSibling}while(prev&&!(prev instanceof GeoExt.tree.LayerContainer&&prev.lastChild));if(prev){newRecordIndex=this.store.findBy(function(r){return prev.lastChild.layer===r.getLayer()})}else{var next=newParent;do{next=next.nextSibling}while(next&&!(next instanceof GeoExt.tree.LayerContainer&&next.firstChild));if(next){newRecordIndex=this.store.findBy(function(r){return next.firstChild.layer===r.getLayer()})}newRecordIndex++}}}if(newRecordIndex!==undefined){this.store.insert(newRecordIndex,[record]);window.setTimeout(function(){newParent.reload();oldParent.reload()})}else{this.store.insert(oldRecordIndex,[record])}delete newParent.loader._reordering}delete this._reordering},addStoreHandlers:function(node){if(!this._storeHandlers){this._storeHandlers={add:this.onStoreAdd.createDelegate(this,[node],true),remove:this.onStoreRemove.createDelegate(this,[node],true)};for(var evt in this._storeHandlers){this.store.on(evt,this._storeHandlers[evt],this)}}},removeStoreHandlers:function(){if(this._storeHandlers){for(var evt in this._storeHandlers){this.store.un(evt,this._storeHandlers[evt],this)}delete this._storeHandlers}},createNode:function(attr){if(this.baseAttrs){Ext.apply(attr,this.baseAttrs)}if(typeof attr.uiProvider=="string"){attr.uiProvider=this.uiProviders[attr.uiProvider]||eval(attr.uiProvider)}attr.nodeType=attr.nodeType||"gx_layer";return new Ext.tree.TreePanel.nodeTypes[attr.nodeType](attr)},destroy:function(){this.removeStoreHandlers();this.iconCls=null}});OpenLayers.Layer=OpenLayers.Class({id:null,name:null,div:null,opacity:1,alwaysInRange:null,RESOLUTION_PROPERTIES:["scales","resolutions","maxScale","minScale","maxResolution","minResolution","numZoomLevels","maxZoomLevel"],events:null,map:null,isBaseLayer:false,alpha:false,displayInLayerSwitcher:true,visibility:true,attribution:null,inRange:false,imageSize:null,options:null,eventListeners:null,gutter:0,projection:null,units:null,scales:null,resolutions:null,maxExtent:null,minExtent:null,maxResolution:null,minResolution:null,numZoomLevels:null,minScale:null,maxScale:null,displayOutsideMaxExtent:false,wrapDateLine:false,metadata:null,initialize:function(name,options){this.metadata={};options=OpenLayers.Util.extend({},options);if(this.alwaysInRange!=null){options.alwaysInRange=this.alwaysInRange}this.addOptions(options);this.name=name;if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");this.div=OpenLayers.Util.createDiv(this.id);this.div.style.width="100%";this.div.style.height="100%";this.div.dir="ltr";this.events=new OpenLayers.Events(this,this.div);if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)}}},destroy:function(setNewBaseLayer){if(setNewBaseLayer==null){setNewBaseLayer=true}if(this.map!=null){this.map.removeLayer(this,setNewBaseLayer)}this.projection=null;this.map=null;this.name=null;this.div=null;this.options=null;if(this.events){if(this.eventListeners){this.events.un(this.eventListeners)}this.events.destroy()}this.eventListeners=null;this.events=null},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer(this.name,this.getOptions())}OpenLayers.Util.applyDefaults(obj,this);obj.map=null;return obj},getOptions:function(){var options={};for(var o in this.options){options[o]=this[o]}return options},setName:function(newName){if(newName!=this.name){this.name=newName;if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"name"})}}},addOptions:function(newOptions,reinitialize){if(this.options==null){this.options={}}if(newOptions){if(typeof newOptions.projection=="string"){newOptions.projection=new OpenLayers.Projection(newOptions.projection)}if(newOptions.projection){OpenLayers.Util.applyDefaults(newOptions,OpenLayers.Projection.defaults[newOptions.projection.getCode()])}if(newOptions.maxExtent&&!(newOptions.maxExtent instanceof OpenLayers.Bounds)){newOptions.maxExtent=new OpenLayers.Bounds(newOptions.maxExtent)}if(newOptions.minExtent&&!(newOptions.minExtent instanceof OpenLayers.Bounds)){newOptions.minExtent=new OpenLayers.Bounds(newOptions.minExtent)}}OpenLayers.Util.extend(this.options,newOptions);OpenLayers.Util.extend(this,newOptions);if(this.projection&&this.projection.getUnits()){this.units=this.projection.getUnits()}if(this.map){var resolution=this.map.getResolution();var properties=this.RESOLUTION_PROPERTIES.concat(["projection","units","minExtent","maxExtent"]);for(var o in newOptions){if(newOptions.hasOwnProperty(o)&&OpenLayers.Util.indexOf(properties,o)>=0){this.initResolutions();if(reinitialize&&this.map.baseLayer===this){this.map.setCenter(this.map.getCenter(),this.map.getZoomForResolution(resolution),false,true);this.map.events.triggerEvent("changebaselayer",{layer:this})}break}}}},onMapResize:function(){},redraw:function(){var redrawn=false;if(this.map){this.inRange=this.calculateInRange();var extent=this.getExtent();if(extent&&this.inRange&&this.visibility){var zoomChanged=true;this.moveTo(extent,zoomChanged,false);this.events.triggerEvent("moveend",{zoomChanged:zoomChanged});redrawn=true}}return redrawn},moveTo:function(bounds,zoomChanged,dragging){var display=this.visibility;if(!this.isBaseLayer){display=display&&this.inRange}this.display(display)},moveByPx:function(dx,dy){},setMap:function(map){if(this.map==null){this.map=map;this.maxExtent=this.maxExtent||this.map.maxExtent;this.minExtent=this.minExtent||this.map.minExtent;this.projection=this.projection||this.map.projection;if(typeof this.projection=="string"){this.projection=new OpenLayers.Projection(this.projection)}this.units=this.projection.getUnits()||this.units||this.map.units;this.initResolutions();if(!this.isBaseLayer){this.inRange=this.calculateInRange();var show=((this.visibility)&&(this.inRange));this.div.style.display=show?"":"none"}this.setTileSize()}},afterAdd:function(){},removeMap:function(map){},getImageSize:function(bounds){return(this.imageSize||this.tileSize)},setTileSize:function(size){var tileSize=(size)?size:((this.tileSize)?this.tileSize:this.map.getTileSize());this.tileSize=tileSize;if(this.gutter){this.imageSize=new OpenLayers.Size(tileSize.w+(2*this.gutter),tileSize.h+(2*this.gutter))}},getVisibility:function(){return this.visibility},setVisibility:function(visibility){if(visibility!=this.visibility){this.visibility=visibility;this.display(visibility);this.redraw();if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"visibility"})}this.events.triggerEvent("visibilitychanged")}},display:function(display){if(display!=(this.div.style.display!="none")){this.div.style.display=(display&&this.calculateInRange())?"block":"none"}},calculateInRange:function(){var inRange=false;if(this.alwaysInRange){inRange=true}else{if(this.map){var resolution=this.map.getResolution();inRange=((resolution>=this.minResolution)&&(resolution<=this.maxResolution))}}return inRange},setIsBaseLayer:function(isBaseLayer){if(isBaseLayer!=this.isBaseLayer){this.isBaseLayer=isBaseLayer;if(this.map!=null){this.map.events.triggerEvent("changebaselayer",{layer:this})}}},initResolutions:function(){var i,len,p;var props={},alwaysInRange=true;for(i=0,len=this.RESOLUTION_PROPERTIES.length;i<len;i++){p=this.RESOLUTION_PROPERTIES[i];props[p]=this.options[p];if(alwaysInRange&&this.options[p]){alwaysInRange=false}}if(this.options.alwaysInRange==null){this.alwaysInRange=alwaysInRange}if(props.resolutions==null){props.resolutions=this.resolutionsFromScales(props.scales)}if(props.resolutions==null){props.resolutions=this.calculateResolutions(props)}if(props.resolutions==null){for(i=0,len=this.RESOLUTION_PROPERTIES.length;i<len;i++){p=this.RESOLUTION_PROPERTIES[i];props[p]=this.options[p]!=null?this.options[p]:this.map[p]}if(props.resolutions==null){props.resolutions=this.resolutionsFromScales(props.scales)}if(props.resolutions==null){props.resolutions=this.calculateResolutions(props)}}var maxResolution;if(this.options.maxResolution&&this.options.maxResolution!=="auto"){maxResolution=this.options.maxResolution}if(this.options.minScale){maxResolution=OpenLayers.Util.getResolutionFromScale(this.options.minScale,this.units)}var minResolution;if(this.options.minResolution&&this.options.minResolution!=="auto"){minResolution=this.options.minResolution}if(this.options.maxScale){minResolution=OpenLayers.Util.getResolutionFromScale(this.options.maxScale,this.units)}if(props.resolutions){props.resolutions.sort(function(a,b){return(b-a)});if(!maxResolution){maxResolution=props.resolutions[0]}if(!minResolution){var lastIdx=props.resolutions.length-1;minResolution=props.resolutions[lastIdx]}}this.resolutions=props.resolutions;if(this.resolutions){len=this.resolutions.length;this.scales=new Array(len);for(i=0;i<len;i++){this.scales[i]=OpenLayers.Util.getScaleFromResolution(this.resolutions[i],this.units)}this.numZoomLevels=len}this.minResolution=minResolution;if(minResolution){this.maxScale=OpenLayers.Util.getScaleFromResolution(minResolution,this.units)}this.maxResolution=maxResolution;if(maxResolution){this.minScale=OpenLayers.Util.getScaleFromResolution(maxResolution,this.units)}},resolutionsFromScales:function(scales){if(scales==null){return}var resolutions,i,len;len=scales.length;resolutions=new Array(len);for(i=0;i<len;i++){resolutions[i]=OpenLayers.Util.getResolutionFromScale(scales[i],this.units)}return resolutions},calculateResolutions:function(props){var viewSize,wRes,hRes;var maxResolution=props.maxResolution;if(props.minScale!=null){maxResolution=OpenLayers.Util.getResolutionFromScale(props.minScale,this.units)}else{if(maxResolution=="auto"&&this.maxExtent!=null){viewSize=this.map.getSize();wRes=this.maxExtent.getWidth()/viewSize.w;hRes=this.maxExtent.getHeight()/viewSize.h;maxResolution=Math.max(wRes,hRes)}}var minResolution=props.minResolution;if(props.maxScale!=null){minResolution=OpenLayers.Util.getResolutionFromScale(props.maxScale,this.units)}else{if(props.minResolution=="auto"&&this.minExtent!=null){viewSize=this.map.getSize();wRes=this.minExtent.getWidth()/viewSize.w;hRes=this.minExtent.getHeight()/viewSize.h;minResolution=Math.max(wRes,hRes)}}if(typeof maxResolution!=="number"&&typeof minResolution!=="number"&&this.maxExtent!=null){var tileSize=this.map.getTileSize();maxResolution=Math.max(this.maxExtent.getWidth()/tileSize.w,this.maxExtent.getHeight()/tileSize.h)}var maxZoomLevel=props.maxZoomLevel;var numZoomLevels=props.numZoomLevels;if(typeof minResolution==="number"&&typeof maxResolution==="number"&&numZoomLevels===undefined){var ratio=maxResolution/minResolution;numZoomLevels=Math.floor(Math.log(ratio)/Math.log(2))+1}else{if(numZoomLevels===undefined&&maxZoomLevel!=null){numZoomLevels=maxZoomLevel+1}}if(typeof numZoomLevels!=="number"||numZoomLevels<=0||(typeof maxResolution!=="number"&&typeof minResolution!=="number")){return}var resolutions=new Array(numZoomLevels);var base=2;if(typeof minResolution=="number"&&typeof maxResolution=="number"){base=Math.pow((maxResolution/minResolution),(1/(numZoomLevels-1)))}var i;if(typeof maxResolution==="number"){for(i=0;i<numZoomLevels;i++){resolutions[i]=maxResolution/Math.pow(base,i)}}else{for(i=0;i<numZoomLevels;i++){resolutions[numZoomLevels-1-i]=minResolution*Math.pow(base,i)}}return resolutions},getResolution:function(){var zoom=this.map.getZoom();return this.getResolutionForZoom(zoom)},getExtent:function(){return this.map.calculateBounds()},getZoomForExtent:function(extent,closest){var viewSize=this.map.getSize();var idealResolution=Math.max(extent.getWidth()/viewSize.w,extent.getHeight()/viewSize.h);return this.getZoomForResolution(idealResolution,closest)},getDataExtent:function(){},getResolutionForZoom:function(zoom){zoom=Math.max(0,Math.min(zoom,this.resolutions.length-1));var resolution;if(this.map.fractionalZoom){var low=Math.floor(zoom);var high=Math.ceil(zoom);resolution=this.resolutions[low]-((zoom-low)*(this.resolutions[low]-this.resolutions[high]))}else{resolution=this.resolutions[Math.round(zoom)]}return resolution},getZoomForResolution:function(resolution,closest){var zoom,i,len;if(this.map.fractionalZoom){var lowZoom=0;var highZoom=this.resolutions.length-1;var highRes=this.resolutions[lowZoom];var lowRes=this.resolutions[highZoom];var res;for(i=0,len=this.resolutions.length;i<len;++i){res=this.resolutions[i];if(res>=resolution){highRes=res;lowZoom=i}if(res<=resolution){lowRes=res;highZoom=i;break}}var dRes=highRes-lowRes;if(dRes>0){zoom=lowZoom+((highRes-resolution)/dRes)}else{zoom=lowZoom}}else{var diff;var minDiff=Number.POSITIVE_INFINITY;for(i=0,len=this.resolutions.length;i<len;i++){if(closest){diff=Math.abs(this.resolutions[i]-resolution);if(diff>minDiff){break}minDiff=diff}else{if(this.resolutions[i]<resolution){break}}}zoom=Math.max(0,i-1)}return zoom},getLonLatFromViewPortPx:function(viewPortPx){var lonlat=null;var map=this.map;if(viewPortPx!=null&&map.minPx){var res=map.getResolution();var maxExtent=map.getMaxExtent({restricted:true});var lon=(viewPortPx.x-map.minPx.x)*res+maxExtent.left;var lat=(map.minPx.y-viewPortPx.y)*res+maxExtent.top;lonlat=new OpenLayers.LonLat(lon,lat);if(this.wrapDateLine){lonlat=lonlat.wrapDateLine(this.maxExtent)}}return lonlat},getViewPortPxFromLonLat:function(lonlat,resolution){var px=null;if(lonlat!=null){resolution=resolution||this.map.getResolution();var extent=this.map.calculateBounds(null,resolution);px=new OpenLayers.Pixel((1/resolution*(lonlat.lon-extent.left)),(1/resolution*(extent.top-lonlat.lat)))}return px},setOpacity:function(opacity){if(opacity!=this.opacity){this.opacity=opacity;var childNodes=this.div.childNodes;for(var i=0,len=childNodes.length;i<len;++i){var element=childNodes[i].firstChild||childNodes[i];var lastChild=childNodes[i].lastChild;if(lastChild&&lastChild.nodeName.toLowerCase()==="iframe"){element=lastChild.parentNode}OpenLayers.Util.modifyDOMElement(element,null,null,null,null,null,null,opacity)}if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"opacity"})}}},getZIndex:function(){return this.div.style.zIndex},setZIndex:function(zIndex){this.div.style.zIndex=zIndex},adjustBounds:function(bounds){if(this.gutter){var mapGutter=this.gutter*this.map.getResolution();bounds=new OpenLayers.Bounds(bounds.left-mapGutter,bounds.bottom-mapGutter,bounds.right+mapGutter,bounds.top+mapGutter)}if(this.wrapDateLine){var wrappingOptions={rightTolerance:this.getResolution(),leftTolerance:this.getResolution()};bounds=bounds.wrapDateLine(this.maxExtent,wrappingOptions)}return bounds},CLASS_NAME:"OpenLayers.Layer"});Ext.namespace("GeoExt.tree");GeoExt.tree.LayerNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{constructor:function(config){GeoExt.tree.LayerNodeUI.superclass.constructor.apply(this,arguments)},render:function(bulkRender){var a=this.node.attributes;if(a.checked===undefined){a.checked=this.node.layer.getVisibility()}if(a.disabled===undefined&&this.node.autoDisable){this.node.disabled=this.node.layer.inRange===false||!this.node.layer.calculateInRange()}GeoExt.tree.LayerNodeUI.superclass.render.apply(this,arguments);var cb=this.checkbox;if(a.checkedGroup){var radio=Ext.DomHelper.insertAfter(cb,['<input type="radio" name="',a.checkedGroup,'_checkbox" class="',cb.className,cb.checked?'" checked="checked"':"",'"></input>'].join(""));radio.defaultChecked=cb.defaultChecked;Ext.get(cb).remove();this.checkbox=radio}this.enforceOneVisible()},onClick:function(e){if(e.getTarget(".x-tree-node-cb",1)){this.toggleCheck(this.isChecked())}else{GeoExt.tree.LayerNodeUI.superclass.onClick.apply(this,arguments)}},toggleCheck:function(value){value=(value===undefined?!this.isChecked():value);GeoExt.tree.LayerNodeUI.superclass.toggleCheck.call(this,value);this.enforceOneVisible()},enforceOneVisible:function(){var attributes=this.node.attributes;var group=attributes.checkedGroup;if(group&&group!=="gx_baselayer"){var layer=this.node.layer;var checkedNodes=this.node.getOwnerTree().getChecked();var checkedCount=0;Ext.each(checkedNodes,function(n){var l=n.layer;if(!n.hidden&&n.attributes.checkedGroup===group){checkedCount++;if(l!=layer&&attributes.checked){l.setVisibility(false)}}});if(checkedCount===0&&attributes.checked==false){layer.setVisibility(true)}}},appendDDGhost:function(ghostNode){var n=this.elNode.cloneNode(true);var radio=Ext.DomQuery.select("input[type='radio']",n);Ext.each(radio,function(r){r.name=r.name+"_clone"});ghostNode.appendChild(n)}});GeoExt.tree.LayerNode=Ext.extend(Ext.tree.AsyncTreeNode,{layer:null,autoDisable:null,layerStore:null,constructor:function(config){config.leaf=config.leaf||!(config.children||config.loader);if(!config.iconCls&&!config.children){config.iconCls="gx-tree-layer-icon"}if(config.loader&&!(config.loader instanceof Ext.tree.TreeLoader)){config.loader=new GeoExt.tree.LayerParamLoader(config.loader)}this.defaultUI=this.defaultUI||GeoExt.tree.LayerNodeUI;Ext.apply(this,{layer:config.layer,layerStore:config.layerStore,autoDisable:config.autoDisable});if(config.text){this.fixedText=true}GeoExt.tree.LayerNode.superclass.constructor.apply(this,arguments)},render:function(bulkRender){var layer=this.layer instanceof OpenLayers.Layer&&this.layer;if(!layer){if(!this.layerStore||this.layerStore=="auto"){this.layerStore=GeoExt.MapPanel.guess().layers}var i=this.layerStore.findBy(function(o){return o.get("title")==this.layer},this);if(i!=-1){layer=this.layerStore.getAt(i).getLayer()}}if(!this.rendered||!layer){var ui=this.getUI();if(layer){this.layer=layer;if(layer.isBaseLayer){this.draggable=false;Ext.applyIf(this.attributes,{checkedGroup:"gx_baselayer"})}this.autoDisable=!(this.autoDisable===false||this.layer.isBaseLayer||this.layer.alwaysInRange);if(!this.text){this.text=layer.name}ui.show();this.addVisibilityEventHandlers()}else{ui.hide()}if(this.layerStore instanceof GeoExt.data.LayerStore){this.addStoreEventHandlers(layer)}}GeoExt.tree.LayerNode.superclass.render.apply(this,arguments)},addVisibilityEventHandlers:function(){this.layer.events.on({visibilitychanged:this.onLayerVisibilityChanged,scope:this});this.on({checkchange:this.onCheckChange,scope:this});if(this.autoDisable){if(this.layer.map){this.layer.map.events.register("moveend",this,this.onMapMoveend)}else{this.layer.events.register("added",this,function added(){this.layer.events.unregister("added",this,added);this.layer.map.events.register("moveend",this,this.onMapMoveend)})}}},onLayerVisibilityChanged:function(){if(!this._visibilityChanging){this.getUI().toggleCheck(this.layer.getVisibility())}},onCheckChange:function(node,checked){if(checked!=this.layer.getVisibility()){this._visibilityChanging=true;var layer=this.layer;if(checked&&layer.isBaseLayer&&layer.map){layer.map.setBaseLayer(layer)}else{layer.setVisibility(checked)}delete this._visibilityChanging}},onMapMoveend:function(evt){if(this.autoDisable){if(this.layer.inRange===false){this.disable()}else{this.enable()}}},addStoreEventHandlers:function(){this.layerStore.on({add:this.onStoreAdd,remove:this.onStoreRemove,update:this.onStoreUpdate,scope:this})},onStoreAdd:function(store,records,index){var l;for(var i=0;i<records.length;++i){l=records[i].getLayer();if(this.layer==l){this.getUI().show();break}else{if(this.layer==l.name){this.render();break}}}},onStoreRemove:function(store,record,index){if(this.layer==record.getLayer()){this.getUI().hide()}},onStoreUpdate:function(store,record,operation){var layer=record.getLayer();if(!this.fixedText&&(this.layer==layer&&this.text!==layer.name)){this.setText(layer.name)}},destroy:function(){var layer=this.layer;if(layer instanceof OpenLayers.Layer){if(layer.map){layer.map.events.unregister("moveend",this,this.onMapMoveend)}layer.events.un({visibilitychanged:this.onLayerVisibilityChanged,scope:this})}delete this.layer;var layerStore=this.layerStore;if(layerStore){layerStore.un("add",this.onStoreAdd,this);layerStore.un("remove",this.onStoreRemove,this);layerStore.un("update",this.onStoreUpdate,this)}delete this.layerStore;this.un("checkchange",this.onCheckChange,this);GeoExt.tree.LayerNode.superclass.destroy.apply(this,arguments)}});Ext.tree.TreePanel.nodeTypes.gx_layer=GeoExt.tree.LayerNode;Ext.namespace("GeoExt.tree");GeoExt.tree.BaseLayerContainer=Ext.extend(GeoExt.tree.LayerContainer,{text:"Base Layer",constructor:function(config){config=Ext.applyIf(config||{},{text:this.text,loader:{}});config.loader=Ext.applyIf(config.loader,{baseAttrs:Ext.applyIf(config.loader.baseAttrs||{},{iconCls:"gx-tree-baselayer-icon",checkedGroup:"baselayer"}),filter:function(record){var layer=record.getLayer();return layer.displayInLayerSwitcher===true&&layer.isBaseLayer===true}});GeoExt.tree.BaseLayerContainer.superclass.constructor.call(this,config)}});Ext.tree.TreePanel.nodeTypes.gx_baselayercontainer=GeoExt.tree.BaseLayerContainer;Ext.namespace("GeoExt.tree");GeoExt.tree.OverlayLayerContainer=Ext.extend(GeoExt.tree.LayerContainer,{text:"Overlays",constructor:function(config){config=Ext.applyIf(config||{},{text:this.text});config.loader=Ext.applyIf(config.loader||{},{filter:function(record){var layer=record.getLayer();return layer.displayInLayerSwitcher===true&&layer.isBaseLayer===false}});GeoExt.tree.OverlayLayerContainer.superclass.constructor.call(this,config)}});Ext.tree.TreePanel.nodeTypes.gx_overlaylayercontainer=GeoExt.tree.OverlayLayerContainer;Ext.namespace("GeoExt.tree");GeoExt.tree.TreeNodeUIEventMixin=function(){return{constructor:function(node){node.addEvents("rendernode","rawclicknode");this.superclass=arguments.callee.superclass;this.superclass.constructor.apply(this,arguments)},render:function(bulkRender){if(!this.rendered){this.superclass.render.apply(this,arguments);this.fireEvent("rendernode",this.node)}},onClick:function(e){if(this.fireEvent("rawclicknode",this.node,e)!==false){this.superclass.onClick.apply(this,arguments)}}}};Ext.namespace("GeoExt");GeoExt.Popup=Ext.extend(Ext.Window,{anchored:true,map:null,panIn:true,unpinnable:true,location:null,insideViewport:null,animCollapse:false,draggable:false,shadow:false,popupCls:"gx-popup",ancCls:null,anchorPosition:"auto",initComponent:function(){if(this.map instanceof GeoExt.MapPanel){this.map=this.map.map}if(!this.map&&this.location instanceof OpenLayers.Feature.Vector&&this.location.layer){this.map=this.location.layer.map}if(this.location instanceof OpenLayers.Feature.Vector){this.location=this.location.geometry}if(this.location instanceof OpenLayers.Geometry){if(typeof this.location.getCentroid=="function"){this.location=this.location.getCentroid()}this.location=this.location.getBounds().getCenterLonLat()}else{if(this.location instanceof OpenLayers.Pixel){this.location=this.map.getLonLatFromViewPortPx(this.location)}}if(!(this.location instanceof OpenLayers.LonLat)){this.anchored=false}var mapExtent=this.map.getExtent();if(mapExtent&&this.location){this.insideViewport=mapExtent.containsLonLat(this.location)}if(this.anchored){this.addAnchorEvents();this.elements+=",anc"}else{this.unpinnable=false}this.baseCls=this.popupCls+" "+this.baseCls;GeoExt.Popup.superclass.initComponent.call(this)},onRender:function(ct,position){GeoExt.Popup.superclass.onRender.call(this,ct,position);if(this.anchored){this.ancCls=this.popupCls+"-anc";this.createElement("anc",this.el.dom)}else{this.makeDraggable()}},initTools:function(){if(this.unpinnable){this.addTool({id:"unpin",handler:this.unanchorPopup.createDelegate(this,[])})}GeoExt.Popup.superclass.initTools.call(this)},show:function(){GeoExt.Popup.superclass.show.apply(this,arguments);if(this.anchored){this.position();if(this.panIn&&!this._mapMove){this.panIntoView()}}},maximize:function(){if(!this.maximized&&this.anc){this.unanchorPopup()}GeoExt.Popup.superclass.maximize.apply(this,arguments)},setSize:function(w,h){if(this.anc){var ancSize=this.anc.getSize();if(typeof w=="object"){h=w.height-ancSize.height;w=w.width}else{if(!isNaN(h)){h=h-ancSize.height}}}GeoExt.Popup.superclass.setSize.call(this,w,h)},position:function(){var me=this;if(me._mapMove===true){me.insideViewport=me.map.getExtent().containsLonLat(me.location);if(me.insideViewport!==me.isVisible()){me.setVisible(me.insideViewport)}}if(me.isVisible()){var locationPx=me.map.getPixelFromLonLat(me.location),mapBox=Ext.fly(me.map.div).getBox(true),y=locationPx.y+mapBox.y,x=locationPx.x+mapBox.x,elSize=me.el.getSize(),ancSize=me.anc.getSize(),ancPos=me.anchorPosition;if(ancPos.indexOf("right")>-1||locationPx.x>mapBox.width/2){me.anc.addClass("right");var ancRight=me.el.getX(true)+elSize.width-me.anc.getX(true)-ancSize.width;x-=elSize.width-ancRight-ancSize.width/2}else{me.anc.removeClass("right");var ancX=me.anc.getLeft(true);x-=ancX+ancSize.width/2}if(ancPos.indexOf("bottom")>-1||locationPx.y>mapBox.height/2){me.anc.removeClass("top");y-=elSize.height+ancSize.height}else{me.anc.addClass("top");y+=ancSize.height}me.setPagePosition(x,y);window.setTimeout(function(){if(me.el.dom){me.setPagePosition(x,y)}},0)}},makeDraggable:function(){this.draggable=true;this.header.addClass("x-window-draggable");this.dd=new Ext.Window.DD(this)},unanchorPopup:function(){this.removeAnchorEvents();this.makeDraggable();this.anc.remove();this.anc=null;this.tools.unpin.hide()},panIntoView:function(){var mapBox=Ext.fly(this.map.div).getBox(true);var popupPos=this.getPosition(true);popupPos[0]-=mapBox.x;popupPos[1]-=mapBox.y;var panelSize=[mapBox.width,mapBox.height];var popupSize=this.getSize();var newPos=[popupPos[0],popupPos[1]];var padding=this.map.paddingForPopups;if(popupPos[0]<padding.left){newPos[0]=padding.left}else{if(popupPos[0]+popupSize.width>panelSize[0]-padding.right){newPos[0]=panelSize[0]-padding.right-popupSize.width}}if(popupPos[1]<padding.top){newPos[1]=padding.top}else{if(popupPos[1]+popupSize.height>panelSize[1]-padding.bottom){newPos[1]=panelSize[1]-padding.bottom-popupSize.height}}var dx=popupPos[0]-newPos[0];var dy=popupPos[1]-newPos[1];this.map.pan(dx,dy)},onMapMove:function(){if(!(this.hidden&&this.insideViewport)){this._mapMove=true;this.position();delete this._mapMove}},addAnchorEvents:function(){this.map.events.on({move:this.onMapMove,scope:this});this.on({resize:this.position,collapse:this.position,expand:this.position,scope:this})},removeAnchorEvents:function(){this.map.events.un({move:this.onMapMove,scope:this});this.un("resize",this.position,this);this.un("collapse",this.position,this);this.un("expand",this.position,this)},beforeDestroy:function(){if(this.anchored){this.removeAnchorEvents()}GeoExt.Popup.superclass.beforeDestroy.call(this)}});Ext.reg("gx_popup",GeoExt.Popup);Ext.namespace("GeoExt");GeoExt.MapPanel=Ext.extend(Ext.Panel,{map:null,layers:null,center:null,zoom:null,extent:null,prettyStateKeys:false,stateEvents:["aftermapmove","afterlayervisibilitychange","afterlayeropacitychange","afterlayerorderchange","afterlayernamechange","afterlayeradd","afterlayerremove"],initComponent:function(){if(!(this.map instanceof OpenLayers.Map)){this.map=new OpenLayers.Map(Ext.applyIf(this.map||{},{allOverlays:true,fallThrough:true}))}var layers=this.layers;if(!layers||layers instanceof Array){this.layers=new GeoExt.data.LayerStore({layers:layers,map:this.map.layers.length>0?this.map:null})}if(typeof this.center=="string"){this.center=OpenLayers.LonLat.fromString(this.center)}else{if(this.center instanceof Array){this.center=new OpenLayers.LonLat(this.center[0],this.center[1])}}if(typeof this.extent=="string"){this.extent=OpenLayers.Bounds.fromString(this.extent)}else{if(this.extent instanceof Array){this.extent=OpenLayers.Bounds.fromArray(this.extent)}}GeoExt.MapPanel.superclass.initComponent.call(this);this.addEvents("aftermapmove","afterlayervisibilitychange","afterlayeropacitychange","afterlayerorderchange","afterlayernamechange","afterlayeradd","afterlayerremove");this.map.events.on({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this});this.on("afterlayout",function(){if(typeof this.map.getViewport==="function"){this.items.each(function(cmp){if(typeof cmp.addToMapPanel==="function"){cmp.getEl().appendTo(this.map.getViewport())}},this)}},this)},onMoveend:function(){this.fireEvent("aftermapmove")},onChangelayer:function(e){if(e.property){if(e.property==="visibility"){this.fireEvent("afterlayervisibilitychange")}else{if(e.property==="order"){this.fireEvent("afterlayerorderchange")}else{if(e.property==="name"){this.fireEvent("afterlayernamechange")}else{if(e.property==="opacity"){this.fireEvent("afterlayeropacitychange")}}}}}},onAddlayer:function(){this.fireEvent("afterlayeradd")},onRemovelayer:function(){this.fireEvent("afterlayerremove")},applyState:function(state){this.center=new OpenLayers.LonLat(state.x,state.y);this.zoom=state.zoom;var i,l,layer,layerId,visibility,opacity;var layers=this.map.layers;for(i=0,l=layers.length;i<l;i++){layer=layers[i];layerId=this.prettyStateKeys?layer.name:layer.id;visibility=state["visibility_"+layerId];if(visibility!==undefined){visibility=(/^true$/i).test(visibility);if(layer.isBaseLayer){if(visibility){this.map.setBaseLayer(layer)}}else{layer.setVisibility(visibility)}}opacity=state["opacity_"+layerId];if(opacity!==undefined){layer.setOpacity(opacity)}}},getState:function(){var state;if(!this.map){return}var center=this.map.getCenter();state=center?{x:center.lon,y:center.lat,zoom:this.map.getZoom()}:{};var i,l,layer,layerId,layers=this.map.layers;for(i=0,l=layers.length;i<l;i++){layer=layers[i];layerId=this.prettyStateKeys?layer.name:layer.id;state["visibility_"+layerId]=layer.getVisibility();state["opacity_"+layerId]=layer.opacity==null?1:layer.opacity}return state},updateMapSize:function(){if(this.map){this.map.updateSize()}},renderMap:function(){var map=this.map;map.render(this.body.dom);this.layers.bind(map);if(map.layers.length>0){this.setInitialExtent()}else{this.layers.on("add",this.setInitialExtent,this,{single:true})}},setInitialExtent:function(){var map=this.map;if(this.center||this.zoom!=null){map.setCenter(this.center,this.zoom)}else{if(this.extent){map.zoomToExtent(this.extent)}else{map.zoomToMaxExtent()}}},afterRender:function(){GeoExt.MapPanel.superclass.afterRender.apply(this,arguments);if(!this.ownerCt){this.renderMap()}else{this.ownerCt.on("move",this.updateMapSize,this);this.ownerCt.on({afterlayout:this.afterLayout,scope:this})}},afterLayout:function(){var width=this.getInnerWidth()-this.body.getBorderWidth("lr");var height=this.getInnerHeight()-this.body.getBorderWidth("tb");if(width>0&&height>0){this.ownerCt.un("afterlayout",this.afterLayout,this);this.renderMap()}},onResize:function(){GeoExt.MapPanel.superclass.onResize.apply(this,arguments);this.updateMapSize()},onBeforeAdd:function(item){if(typeof item.addToMapPanel==="function"){item.addToMapPanel(this)}GeoExt.MapPanel.superclass.onBeforeAdd.apply(this,arguments)},remove:function(item,autoDestroy){if(typeof item.removeFromMapPanel==="function"){item.removeFromMapPanel(this)}GeoExt.MapPanel.superclass.remove.apply(this,arguments)},beforeDestroy:function(){if(this.ownerCt){this.ownerCt.un("move",this.updateMapSize,this)}if(this.map&&this.map.events){this.map.events.un({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this})}if(!this.initialConfig.map||!(this.initialConfig.map instanceof OpenLayers.Map)){if(this.map&&this.map.destroy){this.map.destroy()}}delete this.map;GeoExt.MapPanel.superclass.beforeDestroy.apply(this,arguments)}});GeoExt.MapPanel.guess=function(){return Ext.ComponentMgr.all.find(function(o){return o instanceof GeoExt.MapPanel})};Ext.reg("gx_mappanel",GeoExt.MapPanel);Ext.namespace("GeoExt.data");GeoExt.data.LayerStoreMixin=function(){return{map:null,reader:null,constructor:function(config){config=config||{};config.reader=config.reader||new GeoExt.data.LayerReader({},config.fields);delete config.fields;var map=config.map instanceof GeoExt.MapPanel?config.map.map:config.map;delete config.map;if(config.layers){config.data=config.layers}delete config.layers;var options={initDir:config.initDir};delete config.initDir;arguments.callee.superclass.constructor.call(this,config);this.addEvents("bind");if(map){this.bind(map,options)}},bind:function(map,options){if(this.map){return}this.map=map;options=options||{};var initDir=options.initDir;if(options.initDir==undefined){initDir=GeoExt.data.LayerStore.MAP_TO_STORE|GeoExt.data.LayerStore.STORE_TO_MAP}var layers=map.layers.slice(0);if(initDir&GeoExt.data.LayerStore.STORE_TO_MAP){this.each(function(record){this.map.addLayer(record.getLayer())},this)}if(initDir&GeoExt.data.LayerStore.MAP_TO_STORE){this.loadData(layers,true)}map.events.on({changelayer:this.onChangeLayer,addlayer:this.onAddLayer,removelayer:this.onRemoveLayer,scope:this});this.on({load:this.onLoad,clear:this.onClear,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,scope:this});this.data.on({replace:this.onReplace,scope:this});this.fireEvent("bind",this,map)},unbind:function(){if(this.map){this.map.events.un({changelayer:this.onChangeLayer,addlayer:this.onAddLayer,removelayer:this.onRemoveLayer,scope:this});this.un("load",this.onLoad,this);this.un("clear",this.onClear,this);this.un("add",this.onAdd,this);this.un("remove",this.onRemove,this);this.data.un("replace",this.onReplace,this);this.map=null}},onChangeLayer:function(evt){var layer=evt.layer;var recordIndex=this.findBy(function(rec,id){return rec.getLayer()===layer});if(recordIndex>-1){var record=this.getAt(recordIndex);if(evt.property==="order"){if(!this._adding&&!this._removing){var layerIndex=this.map.getLayerIndex(layer);if(layerIndex!==recordIndex){this._removing=true;this.remove(record);delete this._removing;this._adding=true;this.insert(layerIndex,[record]);delete this._adding}}}else{if(evt.property==="name"){record.set("title",layer.name)}else{this.fireEvent("update",this,record,Ext.data.Record.EDIT)}}}},onAddLayer:function(evt){if(!this._adding){var layer=evt.layer;this._adding=true;this.loadData([layer],true);delete this._adding}},onRemoveLayer:function(evt){if(this.map.unloadDestroy){if(!this._removing){var layer=evt.layer;this._removing=true;this.remove(this.getById(layer.id));delete this._removing}}else{this.unbind()}},onLoad:function(store,records,options){if(!Ext.isArray(records)){records=[records]}if(options&&!options.add){this._removing=true;for(var i=this.map.layers.length-1;i>=0;i--){this.map.removeLayer(this.map.layers[i])}delete this._removing;var len=records.length;if(len>0){var layers=new Array(len);for(var j=0;j<len;j++){layers[j]=records[j].getLayer()}this._adding=true;this.map.addLayers(layers);delete this._adding}}},onClear:function(store){this._removing=true;for(var i=this.map.layers.length-1;i>=0;i--){this.map.removeLayer(this.map.layers[i])}delete this._removing},onAdd:function(store,records,index){if(!this._adding){this._adding=true;var layer;for(var i=records.length-1;i>=0;--i){layer=records[i].getLayer();this.map.addLayer(layer);if(index!==this.map.layers.length-1){this.map.setLayerIndex(layer,index)}}delete this._adding}},onRemove:function(store,record,index){if(!this._removing){var layer=record.getLayer();if(this.map.getLayer(layer.id)!=null){this._removing=true;this.removeMapLayer(record);delete this._removing}}},onUpdate:function(store,record,operation){if(operation===Ext.data.Record.EDIT){if(record.modified&&record.modified.title){var layer=record.getLayer();var title=record.get("title");if(title!==layer.name){layer.setName(title)}}}},removeMapLayer:function(record){this.map.removeLayer(record.getLayer())},onReplace:function(key,oldRecord,newRecord){this.removeMapLayer(oldRecord)},getByLayer:function(layer){var index=this.findBy(function(r){return r.getLayer()===layer});if(index>-1){return this.getAt(index)}},destroy:function(){this.unbind();GeoExt.data.LayerStore.superclass.destroy.call(this)}}};GeoExt.data.LayerStore=Ext.extend(Ext.data.Store,new GeoExt.data.LayerStoreMixin);GeoExt.data.LayerStore.MAP_TO_STORE=1;GeoExt.data.LayerStore.STORE_TO_MAP=2;Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.LayerReader=function(meta,recordType){meta=meta||{};if(!(recordType instanceof Function)){recordType=GeoExt.data.LayerRecord.create(recordType||meta.fields||{})}GeoExt.data.LayerReader.superclass.constructor.call(this,meta,recordType)};Ext.extend(GeoExt.data.LayerReader,Ext.data.DataReader,{totalRecords:null,readRecords:function(layers){var records=[];if(layers){var recordType=this.recordType,fields=recordType.prototype.fields;var i,lenI,j,lenJ,layer,values,field,v;for(i=0,lenI=layers.length;i<lenI;i++){layer=layers[i];values={};for(j=0,lenJ=fields.length;j<lenJ;j++){field=fields.items[j];v=layer[field.mapping||field.name]||field.defaultValue;v=field.convert(v);values[field.name]=v}values.layer=layer;records[records.length]=new recordType(values,layer.id)}}return{records:records,totalRecords:this.totalRecords!=null?this.totalRecords:records.length}}});Ext.namespace("GeoExt.data");GeoExt.data.ScaleStore=Ext.extend(Ext.data.Store,{map:null,constructor:function(config){var map=(config.map instanceof GeoExt.MapPanel?config.map.map:config.map);delete config.map;config=Ext.applyIf(config,{reader:new Ext.data.JsonReader({},["level","resolution","scale"])});GeoExt.data.ScaleStore.superclass.constructor.call(this,config);if(map){this.bind(map)}},bind:function(map,options){this.map=(map instanceof GeoExt.MapPanel?map.map:map);this.map.events.register("changebaselayer",this,this.populateFromMap);if(this.map.baseLayer){this.populateFromMap()}else{this.map.events.register("addlayer",this,this.populateOnAdd)}},unbind:function(){if(this.map){this.map.events.unregister("addlayer",this,this.populateOnAdd);this.map.events.unregister("changebaselayer",this,this.populateFromMap);delete this.map}},populateOnAdd:function(evt){if(evt.layer.isBaseLayer){this.populateFromMap();this.map.events.unregister("addlayer",this,this.populateOnAdd)}},populateFromMap:function(){var zooms=[];var resolutions=this.map.baseLayer.resolutions;var units=this.map.baseLayer.units;for(var i=resolutions.length-1;i>=0;i--){var res=resolutions[i];zooms.push({level:i,resolution:res,scale:OpenLayers.Util.getScaleFromResolution(res,units)})}this.loadData(zooms)},destroy:function(){this.unbind();GeoExt.data.ScaleStore.superclass.destroy.apply(this,arguments)}});Ext.namespace("GeoExt.form");GeoExt.form.toFilter=function(form,logicalOp,wildcard){if(form instanceof Ext.form.FormPanel){form=form.getForm()}var filters=[],values=form.getValues(false);for(var prop in values){var s=prop.split("__");var value=values[prop],type;if(s.length>1&&(type=GeoExt.form.toFilter.FILTER_MAP[s[1]])!==undefined){prop=s[0]}else{type=OpenLayers.Filter.Comparison.EQUAL_TO}if(type===OpenLayers.Filter.Comparison.LIKE){switch(wildcard){case GeoExt.form.ENDS_WITH:value=".*"+value;break;case GeoExt.form.STARTS_WITH:value+=".*";break;case GeoExt.form.CONTAINS:value=".*"+value+".*";break;default:break}}filters.push(new OpenLayers.Filter.Comparison({type:type,value:value,property:prop}))}return filters.length==1&&logicalOp!=OpenLayers.Filter.Logical.NOT?filters[0]:new OpenLayers.Filter.Logical({type:logicalOp||OpenLayers.Filter.Logical.AND,filters:filters})};GeoExt.form.toFilter.FILTER_MAP={eq:OpenLayers.Filter.Comparison.EQUAL_TO,ne:OpenLayers.Filter.Comparison.NOT_EQUAL_TO,lt:OpenLayers.Filter.Comparison.LESS_THAN,le:OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,gt:OpenLayers.Filter.Comparison.GREATER_THAN,ge:OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,like:OpenLayers.Filter.Comparison.LIKE};GeoExt.form.ENDS_WITH=1;GeoExt.form.STARTS_WITH=2;GeoExt.form.CONTAINS=3;GeoExt.form.recordToField=function(record,options){options=options||{};var type=record.get("type");if(typeof type==="object"&&type.xtype){return type}type=type.split(":").pop();var field;var name=record.get("name");var restriction=record.get("restriction")||{};var nillable=record.get("nillable")||false;var label=record.get("label");var labelTpl=options.labelTpl;if(labelTpl){var tpl=(labelTpl instanceof Ext.Template)?labelTpl:new Ext.XTemplate(labelTpl);label=tpl.apply(record.data)}else{if(label==null){label=name}}var baseOptions={name:name,labelStyle:nillable?"":options.mandatoryFieldLabelStyle!=null?options.mandatoryFieldLabelStyle:"font-weight:bold;"};var r=GeoExt.form.recordToField.REGEXES;if(restriction.enumeration){field=Ext.apply({xtype:"combo",fieldLabel:label,mode:"local",forceSelection:true,triggerAction:"all",editable:false,store:restriction.enumeration},baseOptions)}else{if(type.match(r.text)){var maxLength=restriction.maxLength!==undefined?parseFloat(restriction.maxLength):undefined;var minLength=restriction.minLength!==undefined?parseFloat(restriction.minLength):undefined;field=Ext.apply({xtype:"textfield",fieldLabel:label,maxLength:maxLength,minLength:minLength},baseOptions)}else{if(type.match(r.number)){var maxValue=restriction.maxInclusive!==undefined?parseFloat(restriction.maxInclusive):undefined;var minValue=restriction.minInclusive!==undefined?parseFloat(restriction.minInclusive):undefined;field=Ext.apply({xtype:"numberfield",fieldLabel:label,maxValue:maxValue,minValue:minValue},baseOptions)}else{if(type.match(r["boolean"])){field=Ext.apply({xtype:"checkbox"},baseOptions);var labelProperty=options.checkboxLabelProperty||"boxLabel";field[labelProperty]=label}else{if(type.match(r.date)){field=Ext.apply({xtype:"datefield",fieldLabel:label,format:"c"},baseOptions)}}}}}return field};GeoExt.form.recordToField.REGEXES={text:new RegExp("^(text|string)$","i"),number:new RegExp("^(number|float|decimal|double|int|long|integer|short)$","i"),"boolean":new RegExp("^(boolean)$","i"),date:new RegExp("^(date|dateTime)$","i")};Ext.namespace("GeoExt");GeoExt.LegendPanel=Ext.extend(Ext.Panel,{dynamic:true,layerStore:null,preferredTypes:null,filter:function(record){return true},onRender:function(){GeoExt.LegendPanel.superclass.onRender.apply(this,arguments);if(!this.layerStore){this.layerStore=GeoExt.MapPanel.guess().layers}this.layerStore.each(function(record){this.addLegend(record)},this);if(this.dynamic){this.layerStore.on({add:this.onStoreAdd,remove:this.onStoreRemove,clear:this.onStoreClear,scope:this})}},recordIndexToPanelIndex:function(index){var store=this.layerStore;var count=store.getCount();var panelIndex=-1;var legendCount=this.items?this.items.length:0;var record,layer;for(var i=count-1;i>=0;--i){record=store.getAt(i);layer=record.getLayer();var types=GeoExt.LayerLegend.getTypes(record);if(layer.displayInLayerSwitcher&&types.length>0&&(store.getAt(i).get("hideInLegend")!==true)){++panelIndex;if(index===i||panelIndex>legendCount-1){break}}}return panelIndex},getIdForLayer:function(layer){return this.id+"-"+layer.id},onStoreAdd:function(store,records,index){var panelIndex=this.recordIndexToPanelIndex(index+records.length-1);for(var i=0,len=records.length;i<len;i++){this.addLegend(records[i],panelIndex)}this.doLayout()},onStoreRemove:function(store,record,index){this.removeLegend(record)},removeLegend:function(record){if(this.items){var legend=this.getComponent(this.getIdForLayer(record.getLayer()));if(legend){this.remove(legend,true);this.doLayout()}}},onStoreClear:function(store){this.removeAllLegends()},removeAllLegends:function(){this.removeAll(true);this.doLayout()},addLegend:function(record,index){if(this.filter(record)===true){var layer=record.getLayer();index=index||0;var legend;var types=GeoExt.LayerLegend.getTypes(record,this.preferredTypes);if(layer.displayInLayerSwitcher&&!record.get("hideInLegend")&&types.length>0){this.insert(index,{xtype:types[0],id:this.getIdForLayer(layer),layerRecord:record,hidden:!((!layer.map&&layer.visibility)||(layer.getVisibility()&&layer.calculateInRange()))})}}},onDestroy:function(){if(this.layerStore){this.layerStore.un("add",this.onStoreAdd,this);this.layerStore.un("remove",this.onStoreRemove,this);this.layerStore.un("clear",this.onStoreClear,this)}GeoExt.LegendPanel.superclass.onDestroy.apply(this,arguments)}});Ext.reg("gx_legendpanel",GeoExt.LegendPanel);Ext.namespace("GeoExt");GeoExt.LayerLegend=Ext.extend(Ext.Container,{layerRecord:null,showTitle:true,legendTitle:null,labelCls:null,layerStore:null,initComponent:function(){GeoExt.LayerLegend.superclass.initComponent.call(this);this.autoEl={};this.add({xtype:"label",html:this.getLayerTitle(this.layerRecord),cls:"x-form-item x-form-item-label"+(this.labelCls?" "+this.labelCls:"")});if(this.layerRecord&&this.layerRecord.store){this.layerStore=this.layerRecord.store;this.layerStore.on("update",this.onStoreUpdate,this);this.layerStore.on("add",this.onStoreAdd,this);this.layerStore.on("remove",this.onStoreRemove,this)}},getLabel:function(){var label=this.items.get(0);return label.rendered?label.el.dom.innerHTML:label.html},onStoreRemove:function(store,record,index){},onStoreAdd:function(store,record,index){},onStoreUpdate:function(store,record,operation){if(record===this.layerRecord&&this.items.getCount()>0){var layer=record.getLayer();this.setVisible(layer.getVisibility()&&layer.calculateInRange()&&layer.displayInLayerSwitcher&&!record.get("hideInLegend"));this.update()}},update:function(){var title=this.getLayerTitle(this.layerRecord);var item=this.items.itemAt(0);if(item instanceof Ext.form.Label&&this.getLabel()!==title){item.setText(title,false)}},getLayerTitle:function(record){var title=this.legendTitle||"";if(this.showTitle&&!title){if(record&&!record.get("hideTitle")){title=record.get("title")||record.get("name")||record.getLayer().name||""}}return title},beforeDestroy:function(){if(this.layerStore){this.layerStore.un("update",this.onStoreUpdate,this);this.layerStore.un("remove",this.onStoreRemove,this);this.layerStore.un("add",this.onStoreAdd,this)}GeoExt.LayerLegend.superclass.beforeDestroy.apply(this,arguments)},onDestroy:function(){this.layerRecord=null;this.layerStore=null;GeoExt.LayerLegend.superclass.onDestroy.apply(this,arguments)}});GeoExt.LayerLegend.getTypes=function(layerRecord,preferredTypes){var types=(preferredTypes||[]).concat(),scoredTypes=[],score,type;for(type in GeoExt.LayerLegend.types){score=GeoExt.LayerLegend.types[type].supports(layerRecord);if(score>0){if(types.indexOf(type)==-1){scoredTypes.push({type:type,score:score})}}else{types.remove(type)}}scoredTypes.sort(function(a,b){return a.score<b.score?1:(a.score==b.score?0:-1)});var len=scoredTypes.length,goodTypes=new Array(len);for(var i=0;i<len;++i){goodTypes[i]=scoredTypes[i].type}return types.concat(goodTypes)};GeoExt.LayerLegend.supports=function(layerRecord){};GeoExt.LayerLegend.types={};Ext.namespace("GeoExt");GeoExt.LegendImage=Ext.extend(Ext.BoxComponent,{url:null,defaultImgSrc:null,imgCls:null,noImgCls:"gx-legend-noimage",initComponent:function(){GeoExt.LegendImage.superclass.initComponent.call(this);if(this.defaultImgSrc===null){this.defaultImgSrc=Ext.BLANK_IMAGE_URL}this.autoEl={tag:"img","class":(this.imgCls?this.imgCls+" "+this.noImgCls:this.noImgCls),src:this.defaultImgSrc}},getImgEl:function(){return this.getEl()},setUrl:function(url){this.url=url;var el=this.getImgEl();if(el){el.un("load",this.onImageLoad,this);el.on("load",this.onImageLoad,this,{single:true});el.un("error",this.onImageLoadError,this);el.on("error",this.onImageLoadError,this,{single:true});el.dom.src=url}},onRender:function(ct,position){GeoExt.LegendImage.superclass.onRender.call(this,ct,position);if(this.url){this.setUrl(this.url)}},onDestroy:function(){var el=this.getImgEl();if(el){el.un("load",this.onImageLoad,this);el.un("error",this.onImageLoadError,this)}GeoExt.LegendImage.superclass.onDestroy.apply(this,arguments)},onImageLoadError:function(){var el=this.getImgEl();el.addClass(this.noImgCls);el.dom.src=this.defaultImgSrc},onImageLoad:function(){var el=this.getImgEl();if(!OpenLayers.Util.isEquivalentUrl(el.dom.src,this.defaultImgSrc)){el.removeClass(this.noImgCls)}}});Ext.reg("gx_legendimage",GeoExt.LegendImage);Ext.namespace("GeoExt");GeoExt.PrintMapPanel=Ext.extend(GeoExt.MapPanel,{sourceMap:null,printProvider:null,printPage:null,previewScales:null,center:null,zoom:null,extent:null,currentZoom:null,initComponent:function(){if(this.sourceMap instanceof GeoExt.MapPanel){this.sourceMap=this.sourceMap.map}if(!this.map){this.map={}}Ext.applyIf(this.map,{projection:this.sourceMap.getProjection(),maxExtent:this.sourceMap.getMaxExtent(),maxResolution:this.sourceMap.getMaxResolution(),units:this.sourceMap.getUnits()});if(!(this.printProvider instanceof GeoExt.data.PrintProvider)){this.printProvider=new GeoExt.data.PrintProvider(this.printProvider)}this.printPage=new GeoExt.data.PrintPage({printProvider:this.printProvider});this.previewScales=new Ext.data.Store();this.previewScales.add(this.printProvider.scales.getRange());this.layers=[];var layer;Ext.each(this.sourceMap.layers,function(layer){if(layer.getVisibility()===true){if(layer instanceof OpenLayers.Layer.Vector){var features=layer.features,clonedFeatures=new Array(features.length),vector=new OpenLayers.Layer.Vector(layer.name);for(var i=0,ii=features.length;i<ii;++i){clonedFeatures[i]=features[i].clone()}vector.addFeatures(clonedFeatures,{silent:true});this.layers.push(vector)}else{this.layers.push(layer.clone())}}},this);this.extent=this.sourceMap.getExtent();GeoExt.PrintMapPanel.superclass.initComponent.call(this)},bind:function(){this.printPage.on("change",this.fitZoom,this);this.printProvider.on("layoutchange",this.syncSize,this);this.map.events.register("moveend",this,this.updatePage);this.printPage.fit(this.sourceMap);if(this.initialConfig.limitScales===true){this.on("resize",this.calculatePreviewScales,this);this.calculatePreviewScales()}},afterRender:function(){GeoExt.PrintMapPanel.superclass.afterRender.apply(this,arguments);this.syncSize();if(!this.ownerCt){this.bind()}else{this.ownerCt.on({afterlayout:{fn:this.bind,scope:this,single:true}})}},adjustSize:function(width,height){var printSize=this.printProvider.layout.get("size");var ratio=printSize.width/printSize.height;var ownerCt=this.ownerCt;var targetWidth=(ownerCt&&ownerCt.autoWidth)?0:(width||this.initialConfig.width);var targetHeight=(ownerCt&&ownerCt.autoHeight)?0:(height||this.initialConfig.height);if(targetWidth){height=targetWidth/ratio;if(targetHeight&&height>targetHeight){height=targetHeight;width=height*ratio}else{width=targetWidth}}else{if(targetHeight){width=targetHeight*ratio;height=targetHeight}}return{width:width,height:height}},fitZoom:function(){if(!this._updating&&this.printPage.scale){this._updating=true;var printBounds=this.printPage.getPrintExtent(this.map);this.currentZoom=this.map.getZoomForExtent(printBounds);this.map.zoomToExtent(printBounds);delete this._updating}},updatePage:function(){if(!this._updating){var zoom=this.map.getZoom();this._updating=true;if(zoom===this.currentZoom){this.printPage.setCenter(this.map.getCenter())}else{this.printPage.fit(this.map)}delete this._updating;this.currentZoom=zoom}},calculatePreviewScales:function(){this.previewScales.removeAll();this.printPage.suspendEvents();var scale=this.printPage.scale;var viewSize=this.map.getSize();var scalesByZoom={};var zooms=[];this.printProvider.scales.each(function(rec){this.printPage.setScale(rec);var extent=this.printPage.getPrintExtent(this.map);var zoom=this.map.getZoomForExtent(extent);var idealResolution=Math.max(extent.getWidth()/viewSize.w,extent.getHeight()/viewSize.h);var resolution=this.map.getResolutionForZoom(zoom);var diff=Math.abs(idealResolution-resolution);if(!(zoom in scalesByZoom)||scalesByZoom[zoom].diff>diff){scalesByZoom[zoom]={rec:rec,diff:diff};zooms.indexOf(zoom)==-1&&zooms.push(zoom)}},this);for(var i=0,ii=zooms.length;i<ii;++i){this.previewScales.add(scalesByZoom[zooms[i]].rec)}scale&&this.printPage.setScale(scale);this.printPage.resumeEvents();if(scale&&this.previewScales.getCount()>0){var maxScale=this.previewScales.getAt(0);var minScale=this.previewScales.getAt(this.previewScales.getCount()-1);if(scale.get("value")<minScale.get("value")){this.printPage.setScale(minScale)}else{if(scale.get("value")>maxScale.get("value")){this.printPage.setScale(maxScale)}}}this.fitZoom()},print:function(options){this.printProvider.print(this.map,[this.printPage],options)},beforeDestroy:function(){this.map.events.unregister("moveend",this,this.updatePage);this.printPage.un("change",this.fitZoom,this);this.printProvider.un("layoutchange",this.syncSize,this);GeoExt.PrintMapPanel.superclass.beforeDestroy.apply(this,arguments)}});Ext.reg("gx_printmappanel",GeoExt.PrintMapPanel);OpenLayers.Format.JSON=OpenLayers.Class(OpenLayers.Format,{indent:"    ",space:" ",newline:"\n",level:0,pretty:false,nativeJSON:(function(){return !!(window.JSON&&typeof JSON.parse=="function"&&typeof JSON.stringify=="function")})(),read:function(json,filter){var object;if(this.nativeJSON){object=JSON.parse(json,filter)}else{try{if(/^[\],:{}\s]*$/.test(json.replace(/\\["\\\/bfnrtu]/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){object=eval("("+json+")");if(typeof filter==="function"){function walk(k,v){if(v&&typeof v==="object"){for(var i in v){if(v.hasOwnProperty(i)){v[i]=walk(i,v[i])}}}return filter(k,v)}object=walk("",object)}}}catch(e){}}if(this.keepData){this.data=object}return object},write:function(value,pretty){this.pretty=!!pretty;var json=null;var type=typeof value;if(this.serialize[type]){try{json=(!this.pretty&&this.nativeJSON)?JSON.stringify(value):this.serialize[type].apply(this,[value])}catch(err){OpenLayers.Console.error("Trouble serializing: "+err)}}return json},writeIndent:function(){var pieces=[];if(this.pretty){for(var i=0;i<this.level;++i){pieces.push(this.indent)}}return pieces.join("")},writeNewline:function(){return(this.pretty)?this.newline:""},writeSpace:function(){return(this.pretty)?this.space:""},serialize:{object:function(object){if(object==null){return"null"}if(object.constructor==Date){return this.serialize.date.apply(this,[object])}if(object.constructor==Array){return this.serialize.array.apply(this,[object])}var pieces=["{"];this.level+=1;var key,keyJSON,valueJSON;var addComma=false;for(key in object){if(object.hasOwnProperty(key)){keyJSON=OpenLayers.Format.JSON.prototype.write.apply(this,[key,this.pretty]);valueJSON=OpenLayers.Format.JSON.prototype.write.apply(this,[object[key],this.pretty]);if(keyJSON!=null&&valueJSON!=null){if(addComma){pieces.push(",")}pieces.push(this.writeNewline(),this.writeIndent(),keyJSON,":",this.writeSpace(),valueJSON);addComma=true}}}this.level-=1;pieces.push(this.writeNewline(),this.writeIndent(),"}");return pieces.join("")},array:function(array){var json;var pieces=["["];this.level+=1;for(var i=0,len=array.length;i<len;++i){json=OpenLayers.Format.JSON.prototype.write.apply(this,[array[i],this.pretty]);if(json!=null){if(i>0){pieces.push(",")}pieces.push(this.writeNewline(),this.writeIndent(),json)}}this.level-=1;pieces.push(this.writeNewline(),this.writeIndent(),"]");return pieces.join("")},string:function(string){var m={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};if(/["\\\x00-\x1f]/.test(string)){return'"'+string.replace(/([\x00-\x1f\\"])/g,function(a,b){var c=m[b];if(c){return c}c=b.charCodeAt();return"\\u00"+Math.floor(c/16).toString(16)+(c%16).toString(16)})+'"'}return'"'+string+'"'},number:function(number){return isFinite(number)?String(number):"null"},"boolean":function(bool){return String(bool)},date:function(date){function format(number){return(number<10)?"0"+number:number}return'"'+date.getFullYear()+"-"+format(date.getMonth()+1)+"-"+format(date.getDate())+"T"+format(date.getHours())+":"+format(date.getMinutes())+":"+format(date.getSeconds())+'"'}},CLASS_NAME:"OpenLayers.Format.JSON"});OpenLayers.Format.GeoJSON=OpenLayers.Class(OpenLayers.Format.JSON,{ignoreExtraDims:false,read:function(json,type,filter){type=(type)?type:"FeatureCollection";var results=null;var obj=null;if(typeof json=="string"){obj=OpenLayers.Format.JSON.prototype.read.apply(this,[json,filter])}else{obj=json}if(!obj){OpenLayers.Console.error("Bad JSON: "+json)}else{if(typeof(obj.type)!="string"){OpenLayers.Console.error("Bad GeoJSON - no type: "+json)}else{if(this.isValidType(obj,type)){switch(type){case"Geometry":try{results=this.parseGeometry(obj)}catch(err){OpenLayers.Console.error(err)}break;case"Feature":try{results=this.parseFeature(obj);results.type="Feature"}catch(err){OpenLayers.Console.error(err)}break;case"FeatureCollection":results=[];switch(obj.type){case"Feature":try{results.push(this.parseFeature(obj))}catch(err){results=null;OpenLayers.Console.error(err)}break;case"FeatureCollection":for(var i=0,len=obj.features.length;i<len;++i){try{results.push(this.parseFeature(obj.features[i]))}catch(err){results=null;OpenLayers.Console.error(err)}}break;default:try{var geom=this.parseGeometry(obj);results.push(new OpenLayers.Feature.Vector(geom))}catch(err){results=null;OpenLayers.Console.error(err)}}break}}}}return results},isValidType:function(obj,type){var valid=false;switch(type){case"Geometry":if(OpenLayers.Util.indexOf(["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","Box","GeometryCollection"],obj.type)==-1){OpenLayers.Console.error("Unsupported geometry type: "+obj.type)}else{valid=true}break;case"FeatureCollection":valid=true;break;default:if(obj.type==type){valid=true}else{OpenLayers.Console.error("Cannot convert types from "+obj.type+" to "+type)}}return valid},parseFeature:function(obj){var feature,geometry,attributes,bbox;attributes=(obj.properties)?obj.properties:{};bbox=(obj.geometry&&obj.geometry.bbox)||obj.bbox;try{geometry=this.parseGeometry(obj.geometry)}catch(err){throw err}feature=new OpenLayers.Feature.Vector(geometry,attributes);if(bbox){feature.bounds=OpenLayers.Bounds.fromArray(bbox)}if(obj.id){feature.fid=obj.id}return feature},parseGeometry:function(obj){if(obj==null){return null}var geometry,collection=false;if(obj.type=="GeometryCollection"){if(!(OpenLayers.Util.isArray(obj.geometries))){throw"GeometryCollection must have geometries array: "+obj}var numGeom=obj.geometries.length;var components=new Array(numGeom);for(var i=0;i<numGeom;++i){components[i]=this.parseGeometry.apply(this,[obj.geometries[i]])}geometry=new OpenLayers.Geometry.Collection(components);collection=true}else{if(!(OpenLayers.Util.isArray(obj.coordinates))){throw"Geometry must have coordinates array: "+obj}if(!this.parseCoords[obj.type.toLowerCase()]){throw"Unsupported geometry type: "+obj.type}try{geometry=this.parseCoords[obj.type.toLowerCase()].apply(this,[obj.coordinates])}catch(err){throw err}}if(this.internalProjection&&this.externalProjection&&!collection){geometry.transform(this.externalProjection,this.internalProjection)}return geometry},parseCoords:{point:function(array){if(this.ignoreExtraDims==false&&array.length!=2){throw"Only 2D points are supported: "+array}return new OpenLayers.Geometry.Point(array[0],array[1])},multipoint:function(array){var points=[];var p=null;for(var i=0,len=array.length;i<len;++i){try{p=this.parseCoords.point.apply(this,[array[i]])}catch(err){throw err}points.push(p)}return new OpenLayers.Geometry.MultiPoint(points)},linestring:function(array){var points=[];var p=null;for(var i=0,len=array.length;i<len;++i){try{p=this.parseCoords.point.apply(this,[array[i]])}catch(err){throw err}points.push(p)}return new OpenLayers.Geometry.LineString(points)},multilinestring:function(array){var lines=[];var l=null;for(var i=0,len=array.length;i<len;++i){try{l=this.parseCoords.linestring.apply(this,[array[i]])}catch(err){throw err}lines.push(l)}return new OpenLayers.Geometry.MultiLineString(lines)},polygon:function(array){var rings=[];var r,l;for(var i=0,len=array.length;i<len;++i){try{l=this.parseCoords.linestring.apply(this,[array[i]])}catch(err){throw err}r=new OpenLayers.Geometry.LinearRing(l.components);rings.push(r)}return new OpenLayers.Geometry.Polygon(rings)},multipolygon:function(array){var polys=[];var p=null;for(var i=0,len=array.length;i<len;++i){try{p=this.parseCoords.polygon.apply(this,[array[i]])}catch(err){throw err}polys.push(p)}return new OpenLayers.Geometry.MultiPolygon(polys)},box:function(array){if(array.length!=2){throw"GeoJSON box coordinates must have 2 elements"}return new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(array[0][0],array[0][1]),new OpenLayers.Geometry.Point(array[1][0],array[0][1]),new OpenLayers.Geometry.Point(array[1][0],array[1][1]),new OpenLayers.Geometry.Point(array[0][0],array[1][1]),new OpenLayers.Geometry.Point(array[0][0],array[0][1])])])}},write:function(obj,pretty){var geojson={type:null};if(OpenLayers.Util.isArray(obj)){geojson.type="FeatureCollection";var numFeatures=obj.length;geojson.features=new Array(numFeatures);for(var i=0;i<numFeatures;++i){var element=obj[i];if(!element instanceof OpenLayers.Feature.Vector){var msg="FeatureCollection only supports collections of features: "+element;throw msg}geojson.features[i]=this.extract.feature.apply(this,[element])}}else{if(obj.CLASS_NAME.indexOf("OpenLayers.Geometry")==0){geojson=this.extract.geometry.apply(this,[obj])}else{if(obj instanceof OpenLayers.Feature.Vector){geojson=this.extract.feature.apply(this,[obj]);if(obj.layer&&obj.layer.projection){geojson.crs=this.createCRSObject(obj)}}}}return OpenLayers.Format.JSON.prototype.write.apply(this,[geojson,pretty])},createCRSObject:function(object){var proj=object.layer.projection.toString();var crs={};if(proj.match(/epsg:/i)){var code=parseInt(proj.substring(proj.indexOf(":")+1));if(code==4326){crs={type:"name",properties:{name:"urn:ogc:def:crs:OGC:1.3:CRS84"}}}else{crs={type:"name",properties:{name:"EPSG:"+code}}}}return crs},extract:{feature:function(feature){var geom=this.extract.geometry.apply(this,[feature.geometry]);var json={type:"Feature",properties:feature.attributes,geometry:geom};if(feature.fid!=null){json.id=feature.fid}return json},geometry:function(geometry){if(geometry==null){return null}if(this.internalProjection&&this.externalProjection){geometry=geometry.clone();geometry.transform(this.internalProjection,this.externalProjection)}var geometryType=geometry.CLASS_NAME.split(".")[2];var data=this.extract[geometryType.toLowerCase()].apply(this,[geometry]);var json;if(geometryType=="Collection"){json={type:"GeometryCollection",geometries:data}}else{json={type:geometryType,coordinates:data}}return json},point:function(point){return[point.x,point.y]},multipoint:function(multipoint){var array=[];for(var i=0,len=multipoint.components.length;i<len;++i){array.push(this.extract.point.apply(this,[multipoint.components[i]]))}return array},linestring:function(linestring){var array=[];for(var i=0,len=linestring.components.length;i<len;++i){array.push(this.extract.point.apply(this,[linestring.components[i]]))}return array},multilinestring:function(multilinestring){var array=[];for(var i=0,len=multilinestring.components.length;i<len;++i){array.push(this.extract.linestring.apply(this,[multilinestring.components[i]]))}return array},polygon:function(polygon){var array=[];for(var i=0,len=polygon.components.length;i<len;++i){array.push(this.extract.linestring.apply(this,[polygon.components[i]]))}return array},multipolygon:function(multipolygon){var array=[];for(var i=0,len=multipolygon.components.length;i<len;++i){array.push(this.extract.polygon.apply(this,[multipolygon.components[i]]))}return array},collection:function(collection){var len=collection.components.length;var array=new Array(len);for(var i=0;i<len;++i){array[i]=this.extract.geometry.apply(this,[collection.components[i]])}return array}},CLASS_NAME:"OpenLayers.Format.GeoJSON"});Ext.namespace("GeoExt.data");GeoExt.data.PrintProvider=Ext.extend(Ext.util.Observable,{url:null,capabilities:null,method:"POST",encoding:document.charset||document.characterSet||"UTF-8",timeout:30000,customParams:null,scales:null,dpis:null,layouts:null,dpi:null,layout:null,constructor:function(config){this.initialConfig=config;Ext.apply(this,config);if(!this.customParams){this.customParams={}}this.addEvents("loadcapabilities","layoutchange","dpichange","beforeprint","print","printexception","beforeencodelayer","encodelayer","beforedownload","beforeencodelegend");GeoExt.data.PrintProvider.superclass.constructor.apply(this,arguments);this.scales=new Ext.data.JsonStore({root:"scales",sortInfo:{field:"value",direction:"DESC"},fields:["name",{name:"value",type:"float"}]});this.dpis=new Ext.data.JsonStore({root:"dpis",fields:["name",{name:"value",type:"float"}]});this.layouts=new Ext.data.JsonStore({root:"layouts",fields:["name",{name:"size",mapping:"map"},{name:"rotation",type:"boolean"}]});if(config.capabilities){this.loadStores()}else{if(this.url.split("/").pop()){this.url+="/"}this.initialConfig.autoLoad&&this.loadCapabilities()}},setLayout:function(layout){this.layout=layout;this.fireEvent("layoutchange",this,layout)},setDpi:function(dpi){this.dpi=dpi;this.fireEvent("dpichange",this,dpi)},print:function(map,pages,options){if(map instanceof GeoExt.MapPanel){map=map.map}pages=pages instanceof Array?pages:[pages];options=options||{};if(this.fireEvent("beforeprint",this,map,pages,options)===false){return}var jsonData=Ext.apply({units:map.getUnits(),srs:map.baseLayer.projection.getCode(),layout:this.layout.get("name"),dpi:this.dpi.get("value")},this.customParams);var pagesLayer=pages[0].feature.layer;var encodedLayers=[];var layers=map.layers.concat();layers.remove(map.baseLayer);layers.unshift(map.baseLayer);Ext.each(layers,function(layer){if(layer!==pagesLayer&&layer.getVisibility()===true){var enc=this.encodeLayer(layer);enc&&encodedLayers.push(enc)}},this);jsonData.layers=encodedLayers;var encodedPages=[];Ext.each(pages,function(page){encodedPages.push(Ext.apply({center:[page.center.lon,page.center.lat],scale:page.scale.get("value"),rotation:page.rotation},page.customParams))},this);jsonData.pages=encodedPages;if(options.overview){var encodedOverviewLayers=[];Ext.each(options.overview.layers,function(layer){var enc=this.encodeLayer(layer);enc&&encodedOverviewLayers.push(enc)},this);jsonData.overviewLayers=encodedOverviewLayers}if(options.legend&&!(this.fireEvent("beforeencodelegend",this,jsonData,options.legend)===false)){var legend=options.legend;var rendered=legend.rendered;if(!rendered){legend=legend.cloneConfig({renderTo:document.body,hidden:true})}var encodedLegends=[];legend.items&&legend.items.each(function(cmp){if(!cmp.hidden){var encFn=this.encoders.legends[cmp.getXType()];encodedLegends=encodedLegends.concat(encFn.call(this,cmp,jsonData.pages[0].scale))}},this);if(!rendered){legend.destroy()}jsonData.legends=encodedLegends}if(this.method==="GET"){var url=Ext.urlAppend(this.capabilities.printURL,"spec="+encodeURIComponent(Ext.encode(jsonData)));this.download(url)}else{Ext.Ajax.request({url:this.capabilities.createURL,timeout:this.timeout,jsonData:jsonData,headers:{"Content-Type":"application/json; charset="+this.encoding},success:function(response){var url=Ext.decode(response.responseText).getURL;this.download(url)},failure:function(response){this.fireEvent("printexception",this,response)},params:this.initialConfig.baseParams,scope:this})}},download:function(url){if(this.fireEvent("beforedownload",this,url)!==false){if(Ext.isOpera){window.open(url)}else{window.location.href=url}}this.fireEvent("print",this,url)},loadCapabilities:function(){if(!this.url){return}var url=this.url+"info.json";Ext.Ajax.request({url:url,method:"GET",disableCaching:false,success:function(response){this.capabilities=Ext.decode(response.responseText);this.loadStores()},params:this.initialConfig.baseParams,scope:this})},loadStores:function(){this.scales.loadData(this.capabilities);this.dpis.loadData(this.capabilities);this.layouts.loadData(this.capabilities);this.setLayout(this.layouts.getAt(0));this.setDpi(this.dpis.getAt(0));this.fireEvent("loadcapabilities",this,this.capabilities)},encodeLayer:function(layer){var encLayer;for(var c in this.encoders.layers){if(OpenLayers.Layer[c]&&layer instanceof OpenLayers.Layer[c]){if(this.fireEvent("beforeencodelayer",this,layer)===false){return}encLayer=this.encoders.layers[c].call(this,layer);this.fireEvent("encodelayer",this,layer,encLayer);break}}return(encLayer&&encLayer.type)?encLayer:null},getAbsoluteUrl:function(url){if(Ext.isSafari){url=url.replace(/{/g,"%7B");url=url.replace(/}/g,"%7D")}var a;if(Ext.isIE6||Ext.isIE7||Ext.isIE8){a=document.createElement("<a href='"+url+"'/>");a.style.display="none";document.body.appendChild(a);a.href=a.href;document.body.removeChild(a)}else{a=document.createElement("a");a.href=url}return a.href},encoders:{layers:{Layer:function(layer){var enc={};if(layer.options&&layer.options.maxScale){enc.minScaleDenominator=layer.options.maxScale}if(layer.options&&layer.options.minScale){enc.maxScaleDenominator=layer.options.minScale}return enc},WMS:function(layer){var enc=this.encoders.layers.HTTPRequest.call(this,layer);enc.singleTile=layer.singleTile;Ext.apply(enc,{type:"WMS",layers:[layer.params.LAYERS].join(",").split(","),format:layer.params.FORMAT,styles:[layer.params.STYLES].join(",").split(","),singleTile:layer.singleTile});var param;for(var p in layer.params){param=p.toLowerCase();if(layer.params[p]!=null&&!layer.DEFAULT_PARAMS[param]&&"layers,styles,width,height,srs".indexOf(param)==-1){if(!enc.customParams){enc.customParams={}}enc.customParams[p]=layer.params[p]}}return enc},OSM:function(layer){var enc=this.encoders.layers.TileCache.call(this,layer);return Ext.apply(enc,{type:"OSM",baseURL:enc.baseURL.substr(0,enc.baseURL.indexOf("$")),extension:"png"})},TMS:function(layer){var enc=this.encoders.layers.TileCache.call(this,layer);return Ext.apply(enc,{type:"TMS",format:layer.type})},TileCache:function(layer){var enc=this.encoders.layers.HTTPRequest.call(this,layer);return Ext.apply(enc,{type:"TileCache",layer:layer.layername,maxExtent:layer.maxExtent.toArray(),tileSize:[layer.tileSize.w,layer.tileSize.h],extension:layer.extension,resolutions:layer.serverResolutions||layer.resolutions})},WMTS:function(layer){var enc=this.encoders.layers.HTTPRequest.call(this,layer);enc=Ext.apply(enc,{type:"WMTS",layer:layer.layer,version:layer.version,requestEncoding:layer.requestEncoding,style:layer.style,dimensions:layer.dimensions,params:layer.params,matrixSet:layer.matrixSet});if(layer.matrixIds){if(layer.requestEncoding=="KVP"){enc.format=layer.format}enc.matrixIds=[];Ext.each(layer.matrixIds,function(matrixId){enc.matrixIds.push({identifier:matrixId.identifier,matrixSize:[matrixId.matrixWidth,matrixId.matrixHeight],resolution:matrixId.scaleDenominator*0.00028/OpenLayers.METERS_PER_INCH/OpenLayers.INCHES_PER_UNIT[layer.units],tileSize:[matrixId.tileWidth,matrixId.tileHeight],topLeftCorner:[matrixId.topLeftCorner.lon,matrixId.topLeftCorner.lat]})});return enc}else{return Ext.apply(enc,{formatSuffix:layer.formatSuffix,tileOrigin:[layer.tileOrigin.lon,layer.tileOrigin.lat],tileSize:[layer.tileSize.w,layer.tileSize.h],maxExtent:(layer.tileFullExtent!=null)?layer.tileFullExtent.toArray():layer.maxExtent.toArray(),zoomOffset:layer.zoomOffset,resolutions:layer.serverResolutions||layer.resolutions})}},KaMapCache:function(layer){var enc=this.encoders.layers.KaMap.call(this,layer);return Ext.apply(enc,{type:"KaMapCache",group:layer.params.g,metaTileWidth:layer.params.metaTileSize["w"],metaTileHeight:layer.params.metaTileSize["h"]})},KaMap:function(layer){var enc=this.encoders.layers.HTTPRequest.call(this,layer);return Ext.apply(enc,{type:"KaMap",map:layer.params.map,extension:layer.params.i,group:layer.params.g||"",maxExtent:layer.maxExtent.toArray(),tileSize:[layer.tileSize.w,layer.tileSize.h],resolutions:layer.serverResolutions||layer.resolutions})},HTTPRequest:function(layer){var enc=this.encoders.layers.Layer.call(this,layer);return Ext.apply(enc,{baseURL:this.getAbsoluteUrl(layer.url instanceof Array?layer.url[0]:layer.url),opacity:(layer.opacity!=null)?layer.opacity:1})},Image:function(layer){var enc=this.encoders.layers.Layer.call(this,layer);return Ext.apply(enc,{type:"Image",baseURL:this.getAbsoluteUrl(layer.getURL(layer.extent)),opacity:(layer.opacity!=null)?layer.opacity:1,extent:layer.extent.toArray(),pixelSize:[layer.size.w,layer.size.h],name:layer.name})},Vector:function(layer){if(!layer.features.length){return}var encFeatures=[];var encStyles={};var features=layer.features;var featureFormat=new OpenLayers.Format.GeoJSON();var styleFormat=new OpenLayers.Format.JSON();var nextId=1;var styleDict={};var feature,style,dictKey,dictItem,styleName;for(var i=0,len=features.length;i<len;++i){feature=features[i];style=feature.style||layer.style||layer.styleMap.createSymbolizer(feature,feature.renderIntent);if(style.display=="none"){continue}dictKey=styleFormat.write(style);dictItem=styleDict[dictKey];if(dictItem){styleName=dictItem}else{styleDict[dictKey]=styleName=nextId++;if(style.externalGraphic){encStyles[styleName]=Ext.applyIf({externalGraphic:this.getAbsoluteUrl(style.externalGraphic)},style)}else{encStyles[styleName]=style}}var featureGeoJson=featureFormat.extract.feature.call(featureFormat,feature);featureGeoJson.properties=OpenLayers.Util.extend({_gx_style:styleName},featureGeoJson.properties);encFeatures.push(featureGeoJson)}var enc=this.encoders.layers.Layer.call(this,layer);return Ext.apply(enc,{type:"Vector",styles:encStyles,styleProperty:"_gx_style",geoJson:{type:"FeatureCollection",features:encFeatures},name:layer.name,opacity:(layer.opacity!=null)?layer.opacity:1})},Markers:function(layer){var features=[];for(var i=0,len=layer.markers.length;i<len;i++){var marker=layer.markers[i];var geometry=new OpenLayers.Geometry.Point(marker.lonlat.lon,marker.lonlat.lat);var style={externalGraphic:marker.icon.url,graphicWidth:marker.icon.size.w,graphicHeight:marker.icon.size.h,graphicXOffset:marker.icon.offset.x,graphicYOffset:marker.icon.offset.y};var feature=new OpenLayers.Feature.Vector(geometry,{},style);features.push(feature)}var vector=new OpenLayers.Layer.Vector(layer.name);vector.addFeatures(features);var output=this.encoders.layers.Vector.call(this,vector);vector.destroy();return output}},legends:{gx_wmslegend:function(legend,scale){var enc=this.encoders.legends.base.call(this,legend);var icons=[];for(var i=1,len=legend.items.getCount();i<len;++i){var url=legend.items.get(i).url;var itemTitle=legend.layerRecord.data.title;if(legend.useScaleParameter===true&&url.toLowerCase().indexOf("request=getlegendgraphic")!=-1){var split=url.split("?");var params=Ext.urlDecode(split[1]);params.SCALE=scale;url=split[0]+"?"+Ext.urlEncode(params)}icons.push(this.getAbsoluteUrl(url))}enc[0].name=itemTitle;enc[0].classes[0]={name:"",icons:icons};return enc},gx_wmtslegend:function(legend,scale){return this.encoders.legends.gx_urllegend.call(this,legend)},gx_urllegend:function(legend){var enc=this.encoders.legends.base.call(this,legend);enc[0].classes.push({name:"",icon:this.getAbsoluteUrl(legend.items.get(1).url)});return enc},base:function(legend){return[{name:legend.getLabel(),classes:[]}]}}}});Ext.namespace("GeoExt.data");GeoExt.data.PrintPage=Ext.extend(Ext.util.Observable,{printProvider:null,feature:null,center:null,scale:null,rotation:0,customParams:null,constructor:function(config){this.initialConfig=config;Ext.apply(this,config);if(!this.customParams){this.customParams={}}this.addEvents("change");GeoExt.data.PrintPage.superclass.constructor.apply(this,arguments);this.feature=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(-1,-1),new OpenLayers.Geometry.Point(1,-1),new OpenLayers.Geometry.Point(1,1),new OpenLayers.Geometry.Point(-1,1)])]));if(this.printProvider.capabilities){this.setScale(this.printProvider.scales.getAt(0))}else{this.printProvider.on({loadcapabilities:function(){this.setScale(this.printProvider.scales.getAt(0))},scope:this,single:true})}this.printProvider.on({layoutchange:this.onLayoutChange,scope:this})},getPrintExtent:function(map){map=map instanceof GeoExt.MapPanel?map.map:map;return this.calculatePageBounds(this.scale,map.getUnits())},setScale:function(scale,units){var bounds=this.calculatePageBounds(scale,units);var geom=bounds.toGeometry();var rotation=this.rotation;if(rotation!=0){geom.rotate(-rotation,geom.getCentroid())}this.updateFeature(geom,{scale:scale})},setCenter:function(center){var geom=this.feature.geometry;var oldCenter=geom.getBounds().getCenterLonLat();var dx=center.lon-oldCenter.lon;var dy=center.lat-oldCenter.lat;geom.move(dx,dy);this.updateFeature(geom,{center:center})},setRotation:function(rotation,force){if(force||this.printProvider.layout.get("rotation")===true){var geom=this.feature.geometry;geom.rotate(this.rotation-rotation,geom.getCentroid());this.updateFeature(geom,{rotation:rotation})}},fit:function(fitTo,options){options=options||{};var map=fitTo,extent;if(fitTo instanceof GeoExt.MapPanel){map=fitTo.map}else{if(fitTo instanceof OpenLayers.Feature.Vector){map=fitTo.layer.map;extent=fitTo.geometry.getBounds()}}if(!extent){extent=map.getExtent();if(!extent){return}}this._updating=true;var center=extent.getCenterLonLat();this.setCenter(center);var units=map.getUnits();var scale=this.printProvider.scales.getAt(0);var closest=Number.POSITIVE_INFINITY;var mapWidth=extent.getWidth();var mapHeight=extent.getHeight();this.printProvider.scales.each(function(rec){var bounds=this.calculatePageBounds(rec,units);if(options.mode=="closest"){var diff=Math.abs(bounds.getWidth()-mapWidth)+Math.abs(bounds.getHeight()-mapHeight);if(diff<closest){closest=diff;scale=rec}}else{var contains=options.mode=="screen"?!extent.containsBounds(bounds):bounds.containsBounds(extent);if(contains||(options.mode=="screen"&&!contains)){scale=rec}return contains}},this);this.setScale(scale,units);delete this._updating;this.updateFeature(this.feature.geometry,{center:center,scale:scale})},updateFeature:function(geometry,mods){var f=this.feature;var modified=f.geometry!==geometry;geometry.id=f.geometry.id;f.geometry=geometry;if(!this._updating){for(var property in mods){if(mods[property]===this[property]){delete mods[property]}else{this[property]=mods[property];modified=true}}Ext.apply(this,mods);f.layer&&f.layer.drawFeature(f);modified&&this.fireEvent("change",this,mods)}},calculatePageBounds:function(scale,units){var s=scale.get("value");var f=this.feature;var geom=this.feature.geometry;var center=geom.getBounds().getCenterLonLat();var size=this.printProvider.layout.get("size");var units=units||(f.layer&&f.layer.map&&f.layer.map.getUnits())||"dd";var unitsRatio=OpenLayers.INCHES_PER_UNIT[units];var w=size.width/72/unitsRatio*s/2;var h=size.height/72/unitsRatio*s/2;return new OpenLayers.Bounds(center.lon-w,center.lat-h,center.lon+w,center.lat+h)},onLayoutChange:function(){if(this.printProvider.layout.get("rotation")===false){this.setRotation(0,true)}this.scale&&this.setScale(this.scale)},destroy:function(){this.printProvider.un("layoutchange",this.onLayoutChange,this)}});OpenLayers.Layer.HTTPRequest=OpenLayers.Class(OpenLayers.Layer,{URL_HASH_FACTOR:(Math.sqrt(5)-1)/2,url:null,params:null,reproject:false,initialize:function(name,url,params,options){OpenLayers.Layer.prototype.initialize.apply(this,[name,options]);this.url=url;if(!this.params){this.params=OpenLayers.Util.extend({},params)}},destroy:function(){this.url=null;this.params=null;OpenLayers.Layer.prototype.destroy.apply(this,arguments)},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.HTTPRequest(this.name,this.url,this.params,this.getOptions())}obj=OpenLayers.Layer.prototype.clone.apply(this,[obj]);return obj},setUrl:function(newUrl){this.url=newUrl},mergeNewParams:function(newParams){this.params=OpenLayers.Util.extend(this.params,newParams);var ret=this.redraw();if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"params"})}return ret},redraw:function(force){if(force){return this.mergeNewParams({_olSalt:Math.random()})}else{return OpenLayers.Layer.prototype.redraw.apply(this,[])}},selectUrl:function(paramString,urls){var product=1;for(var i=0,len=paramString.length;i<len;i++){product*=paramString.charCodeAt(i)*this.URL_HASH_FACTOR;product-=Math.floor(product)}return urls[Math.floor(product*urls.length)]},getFullRequestString:function(newParams,altUrl){var url=altUrl||this.url;var allParams=OpenLayers.Util.extend({},this.params);allParams=OpenLayers.Util.extend(allParams,newParams);var paramsString=OpenLayers.Util.getParameterString(allParams);if(OpenLayers.Util.isArray(url)){url=this.selectUrl(paramsString,url)}var urlParams=OpenLayers.Util.upperCaseObject(OpenLayers.Util.getParameters(url));for(var key in allParams){if(key.toUpperCase() in urlParams){delete allParams[key]}}paramsString=OpenLayers.Util.getParameterString(allParams);return OpenLayers.Util.urlAppend(url,paramsString)},CLASS_NAME:"OpenLayers.Layer.HTTPRequest"});OpenLayers.Tile=OpenLayers.Class({events:null,eventListeners:null,id:null,layer:null,url:null,bounds:null,size:null,position:null,isLoading:false,initialize:function(layer,position,bounds,url,size,options){this.layer=layer;this.position=position.clone();this.setBounds(bounds);this.url=url;if(size){this.size=size.clone()}this.id=OpenLayers.Util.createUniqueID("Tile_");OpenLayers.Util.extend(this,options);this.events=new OpenLayers.Events(this);if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)}},unload:function(){if(this.isLoading){this.isLoading=false;this.events.triggerEvent("unload")}},destroy:function(){this.layer=null;this.bounds=null;this.size=null;this.position=null;if(this.eventListeners){this.events.un(this.eventListeners)}this.events.destroy();this.eventListeners=null;this.events=null},draw:function(force){if(!force){this.clear()}var draw=this.shouldDraw();if(draw&&!force&&this.events.triggerEvent("beforedraw")===false){draw=null}return draw},shouldDraw:function(){var withinMaxExtent=false,maxExtent=this.layer.maxExtent;if(maxExtent){var map=this.layer.map;var worldBounds=map.baseLayer.wrapDateLine&&map.getMaxExtent();if(this.bounds.intersectsBounds(maxExtent,{inclusive:false,worldBounds:worldBounds})){withinMaxExtent=true}}return withinMaxExtent||this.layer.displayOutsideMaxExtent},setBounds:function(bounds){bounds=bounds.clone();if(this.layer.map.baseLayer.wrapDateLine){var worldExtent=this.layer.map.getMaxExtent(),tolerance=this.layer.map.getResolution();bounds=bounds.wrapDateLine(worldExtent,{leftTolerance:tolerance,rightTolerance:tolerance})}this.bounds=bounds},moveTo:function(bounds,position,redraw){if(redraw==null){redraw=true}this.setBounds(bounds);this.position=position.clone();if(redraw){this.draw()}},clear:function(draw){},CLASS_NAME:"OpenLayers.Tile"});OpenLayers.Tile.Image=OpenLayers.Class(OpenLayers.Tile,{url:null,imgDiv:null,frame:null,imageReloadAttempts:null,layerAlphaHack:null,asyncRequestId:null,maxGetUrlLength:null,canvasContext:null,crossOriginKeyword:null,initialize:function(layer,position,bounds,url,size,options){OpenLayers.Tile.prototype.initialize.apply(this,arguments);this.url=url;this.layerAlphaHack=this.layer.alpha&&OpenLayers.Util.alphaHack();if(this.maxGetUrlLength!=null||this.layer.gutter||this.layerAlphaHack){this.frame=document.createElement("div");this.frame.style.position="absolute";this.frame.style.overflow="hidden"}if(this.maxGetUrlLength!=null){OpenLayers.Util.extend(this,OpenLayers.Tile.Image.IFrame)}},destroy:function(){if(this.imgDiv){this.clear();this.imgDiv=null;this.frame=null}this.asyncRequestId=null;OpenLayers.Tile.prototype.destroy.apply(this,arguments)},draw:function(){var shouldDraw=OpenLayers.Tile.prototype.draw.apply(this,arguments);if(shouldDraw){if(this.layer!=this.layer.map.baseLayer&&this.layer.reproject){this.bounds=this.getBoundsFromBaseLayer(this.position)}if(this.isLoading){this._loadEvent="reload"}else{this.isLoading=true;this._loadEvent="loadstart"}this.renderTile();this.positionTile()}else{if(shouldDraw===false){this.unload()}}return shouldDraw},renderTile:function(){if(this.layer.async){var id=this.asyncRequestId=(this.asyncRequestId||0)+1;this.layer.getURLasync(this.bounds,function(url){if(id==this.asyncRequestId){this.url=url;this.initImage()}},this)}else{this.url=this.layer.getURL(this.bounds);this.initImage()}},positionTile:function(){var style=this.getTile().style,size=this.frame?this.size:this.layer.getImageSize(this.bounds),ratio=1;if(this.layer instanceof OpenLayers.Layer.Grid){ratio=this.layer.getServerResolution()/this.layer.map.getResolution()}style.left=this.position.x+"px";style.top=this.position.y+"px";style.width=Math.round(ratio*size.w)+"px";style.height=Math.round(ratio*size.h)+"px"},clear:function(){OpenLayers.Tile.prototype.clear.apply(this,arguments);var img=this.imgDiv;if(img){var tile=this.getTile();if(tile.parentNode===this.layer.div){this.layer.div.removeChild(tile)}this.setImgSrc();if(this.layerAlphaHack===true){img.style.filter=""}OpenLayers.Element.removeClass(img,"olImageLoadError")}this.canvasContext=null},getImage:function(){if(!this.imgDiv){this.imgDiv=OpenLayers.Tile.Image.IMAGE.cloneNode(false);var style=this.imgDiv.style;if(this.frame){var left=0,top=0;if(this.layer.gutter){left=this.layer.gutter/this.layer.tileSize.w*100;top=this.layer.gutter/this.layer.tileSize.h*100}style.left=-left+"%";style.top=-top+"%";style.width=(2*left+100)+"%";style.height=(2*top+100)+"%"}style.visibility="hidden";style.opacity=0;if(this.layer.opacity<1){style.filter="alpha(opacity="+(this.layer.opacity*100)+")"}style.position="absolute";if(this.layerAlphaHack){style.paddingTop=style.height;style.height="0";style.width="100%"}if(this.frame){this.frame.appendChild(this.imgDiv)}}return this.imgDiv},setImage:function(img){this.imgDiv=img},initImage:function(){this.events.triggerEvent("beforeload");this.layer.div.appendChild(this.getTile());this.events.triggerEvent(this._loadEvent);var img=this.getImage();if(this.url&&OpenLayers.Util.isEquivalentUrl(img.src,this.url)){this._loadTimeout=window.setTimeout(OpenLayers.Function.bind(this.onImageLoad,this),0)}else{this.stopLoading();if(this.crossOriginKeyword){img.removeAttribute("crossorigin")}OpenLayers.Event.observe(img,"load",OpenLayers.Function.bind(this.onImageLoad,this));OpenLayers.Event.observe(img,"error",OpenLayers.Function.bind(this.onImageError,this));this.imageReloadAttempts=0;this.setImgSrc(this.url)}},setImgSrc:function(url){var img=this.imgDiv;if(url){img.style.visibility="hidden";img.style.opacity=0;if(this.crossOriginKeyword){if(url.substr(0,5)!=="data:"){img.setAttribute("crossorigin",this.crossOriginKeyword)}else{img.removeAttribute("crossorigin")}}img.src=url}else{this.stopLoading();this.imgDiv=null;if(img.parentNode){img.parentNode.removeChild(img)}}},getTile:function(){return this.frame?this.frame:this.getImage()},createBackBuffer:function(){if(!this.imgDiv||this.isLoading){return}var backBuffer;if(this.frame){backBuffer=this.frame.cloneNode(false);backBuffer.appendChild(this.imgDiv)}else{backBuffer=this.imgDiv}this.imgDiv=null;return backBuffer},onImageLoad:function(){var img=this.imgDiv;this.stopLoading();img.style.visibility="inherit";img.style.opacity=this.layer.opacity;this.isLoading=false;this.canvasContext=null;this.events.triggerEvent("loadend");if(this.layerAlphaHack===true){img.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+img.src+"', sizingMethod='scale')"}},onImageError:function(){var img=this.imgDiv;if(img.src!=null){this.imageReloadAttempts++;if(this.imageReloadAttempts<=OpenLayers.IMAGE_RELOAD_ATTEMPTS){this.setImgSrc(this.layer.getURL(this.bounds))}else{OpenLayers.Element.addClass(img,"olImageLoadError");this.events.triggerEvent("loaderror");this.onImageLoad()}}},stopLoading:function(){OpenLayers.Event.stopObservingElement(this.imgDiv);window.clearTimeout(this._loadTimeout);delete this._loadTimeout},getCanvasContext:function(){if(OpenLayers.CANVAS_SUPPORTED&&this.imgDiv&&!this.isLoading){if(!this.canvasContext){var canvas=document.createElement("canvas");canvas.width=this.size.w;canvas.height=this.size.h;this.canvasContext=canvas.getContext("2d");this.canvasContext.drawImage(this.imgDiv,0,0)}return this.canvasContext}},CLASS_NAME:"OpenLayers.Tile.Image"});OpenLayers.Tile.Image.IMAGE=(function(){var img=new Image();img.className="olTileImage";img.galleryImg="no";return img}());OpenLayers.Layer.Grid=OpenLayers.Class(OpenLayers.Layer.HTTPRequest,{tileSize:null,tileOriginCorner:"bl",tileOrigin:null,tileOptions:null,tileClass:OpenLayers.Tile.Image,grid:null,singleTile:false,ratio:1.5,buffer:0,transitionEffect:"resize",numLoadingTiles:0,serverResolutions:null,loading:false,backBuffer:null,gridResolution:null,backBufferResolution:null,backBufferLonLat:null,backBufferTimerId:null,removeBackBufferDelay:null,className:null,gridLayout:null,rowSign:null,transitionendEvents:["transitionend","webkitTransitionEnd","otransitionend","oTransitionEnd"],initialize:function(name,url,params,options){OpenLayers.Layer.HTTPRequest.prototype.initialize.apply(this,arguments);this.grid=[];this._removeBackBuffer=OpenLayers.Function.bind(this.removeBackBuffer,this);this.initProperties();this.rowSign=this.tileOriginCorner.substr(0,1)==="t"?1:-1},initProperties:function(){if(this.options.removeBackBufferDelay===undefined){this.removeBackBufferDelay=this.singleTile?0:2500}if(this.options.className===undefined){this.className=this.singleTile?"olLayerGridSingleTile":"olLayerGrid"}},setMap:function(map){OpenLayers.Layer.HTTPRequest.prototype.setMap.call(this,map);OpenLayers.Element.addClass(this.div,this.className)},removeMap:function(map){this.removeBackBuffer()},destroy:function(){this.removeBackBuffer();this.clearGrid();this.grid=null;this.tileSize=null;OpenLayers.Layer.HTTPRequest.prototype.destroy.apply(this,arguments)},clearGrid:function(){if(this.grid){for(var iRow=0,len=this.grid.length;iRow<len;iRow++){var row=this.grid[iRow];for(var iCol=0,clen=row.length;iCol<clen;iCol++){var tile=row[iCol];this.destroyTile(tile)}}this.grid=[];this.gridResolution=null;this.gridLayout=null}},addOptions:function(newOptions,reinitialize){var singleTileChanged=newOptions.singleTile!==undefined&&newOptions.singleTile!==this.singleTile;OpenLayers.Layer.HTTPRequest.prototype.addOptions.apply(this,arguments);if(this.map&&singleTileChanged){this.initProperties();this.clearGrid();this.tileSize=this.options.tileSize;this.setTileSize();this.moveTo(null,true)}},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.Grid(this.name,this.url,this.params,this.getOptions())}obj=OpenLayers.Layer.HTTPRequest.prototype.clone.apply(this,[obj]);if(this.tileSize!=null){obj.tileSize=this.tileSize.clone()}obj.grid=[];obj.gridResolution=null;obj.backBuffer=null;obj.backBufferTimerId=null;obj.loading=false;obj.numLoadingTiles=0;return obj},moveTo:function(bounds,zoomChanged,dragging){OpenLayers.Layer.HTTPRequest.prototype.moveTo.apply(this,arguments);bounds=bounds||this.map.getExtent();if(bounds!=null){var forceReTile=!this.grid.length||zoomChanged;var tilesBounds=this.getTilesBounds();var resolution=this.map.getResolution();var serverResolution=this.getServerResolution(resolution);if(this.singleTile){if(forceReTile||(!dragging&&!tilesBounds.containsBounds(bounds))){if(zoomChanged&&this.transitionEffect!=="resize"){this.removeBackBuffer()}if(!zoomChanged||this.transitionEffect==="resize"){this.applyBackBuffer(resolution)}this.initSingleTile(bounds)}}else{forceReTile=forceReTile||!tilesBounds.intersectsBounds(bounds,{worldBounds:this.map.baseLayer.wrapDateLine&&this.map.getMaxExtent()});if(forceReTile){if(zoomChanged&&(this.transitionEffect==="resize"||this.gridResolution===resolution)){this.applyBackBuffer(resolution)}this.initGriddedTiles(bounds)}else{this.moveGriddedTiles()}}}},getTileData:function(loc){var data=null,x=loc.lon,y=loc.lat,numRows=this.grid.length;if(this.map&&numRows){var res=this.map.getResolution(),tileWidth=this.tileSize.w,tileHeight=this.tileSize.h,bounds=this.grid[0][0].bounds,left=bounds.left,top=bounds.top;if(x<left){if(this.map.baseLayer.wrapDateLine){var worldWidth=this.map.getMaxExtent().getWidth();var worldsAway=Math.ceil((left-x)/worldWidth);x+=worldWidth*worldsAway}}var dtx=(x-left)/(res*tileWidth);var dty=(top-y)/(res*tileHeight);var col=Math.floor(dtx);var row=Math.floor(dty);if(row>=0&&row<numRows){var tile=this.grid[row][col];if(tile){data={tile:tile,i:Math.floor((dtx-col)*tileWidth),j:Math.floor((dty-row)*tileHeight)}}}}return data},destroyTile:function(tile){this.removeTileMonitoringHooks(tile);tile.destroy()},getServerResolution:function(resolution){var distance=Number.POSITIVE_INFINITY;resolution=resolution||this.map.getResolution();if(this.serverResolutions&&OpenLayers.Util.indexOf(this.serverResolutions,resolution)===-1){var i,newDistance,newResolution,serverResolution;for(i=this.serverResolutions.length-1;i>=0;i--){newResolution=this.serverResolutions[i];newDistance=Math.abs(newResolution-resolution);if(newDistance>distance){break}distance=newDistance;serverResolution=newResolution}resolution=serverResolution}return resolution},getServerZoom:function(){var resolution=this.getServerResolution();return this.serverResolutions?OpenLayers.Util.indexOf(this.serverResolutions,resolution):this.map.getZoomForResolution(resolution)+(this.zoomOffset||0)},applyBackBuffer:function(resolution){if(this.backBufferTimerId!==null){this.removeBackBuffer()}var backBuffer=this.backBuffer;if(!backBuffer){backBuffer=this.createBackBuffer();if(!backBuffer){return}if(resolution===this.gridResolution){this.div.insertBefore(backBuffer,this.div.firstChild)}else{this.map.baseLayer.div.parentNode.insertBefore(backBuffer,this.map.baseLayer.div)}this.backBuffer=backBuffer;var topLeftTileBounds=this.grid[0][0].bounds;this.backBufferLonLat={lon:topLeftTileBounds.left,lat:topLeftTileBounds.top};this.backBufferResolution=this.gridResolution}var ratio=this.backBufferResolution/resolution;var tiles=backBuffer.childNodes,tile;for(var i=tiles.length-1;i>=0;--i){tile=tiles[i];tile.style.top=((ratio*tile._i*tile._h)|0)+"px";tile.style.left=((ratio*tile._j*tile._w)|0)+"px";tile.style.width=Math.round(ratio*tile._w)+"px";tile.style.height=Math.round(ratio*tile._h)+"px"}var position=this.getViewPortPxFromLonLat(this.backBufferLonLat,resolution);var leftOffset=this.map.layerContainerOriginPx.x;var topOffset=this.map.layerContainerOriginPx.y;backBuffer.style.left=Math.round(position.x-leftOffset)+"px";backBuffer.style.top=Math.round(position.y-topOffset)+"px"},createBackBuffer:function(){var backBuffer;if(this.grid.length>0){backBuffer=document.createElement("div");backBuffer.id=this.div.id+"_bb";backBuffer.className="olBackBuffer";backBuffer.style.position="absolute";var map=this.map;backBuffer.style.zIndex=this.transitionEffect==="resize"?this.getZIndex()-1:map.Z_INDEX_BASE.BaseLayer-(map.getNumLayers()-map.getLayerIndex(this));for(var i=0,lenI=this.grid.length;i<lenI;i++){for(var j=0,lenJ=this.grid[i].length;j<lenJ;j++){var tile=this.grid[i][j],markup=this.grid[i][j].createBackBuffer();if(markup){markup._i=i;markup._j=j;markup._w=tile.size.w;markup._h=tile.size.h;markup.id=tile.id+"_bb";backBuffer.appendChild(markup)}}}}return backBuffer},removeBackBuffer:function(){if(this._transitionElement){for(var i=this.transitionendEvents.length-1;i>=0;--i){OpenLayers.Event.stopObserving(this._transitionElement,this.transitionendEvents[i],this._removeBackBuffer)}delete this._transitionElement}if(this.backBuffer){if(this.backBuffer.parentNode){this.backBuffer.parentNode.removeChild(this.backBuffer)}this.backBuffer=null;this.backBufferResolution=null;if(this.backBufferTimerId!==null){window.clearTimeout(this.backBufferTimerId);this.backBufferTimerId=null}}},moveByPx:function(dx,dy){if(!this.singleTile){this.moveGriddedTiles()}},setTileSize:function(size){if(this.singleTile){size=this.map.getSize();size.h=parseInt(size.h*this.ratio,10);size.w=parseInt(size.w*this.ratio,10)}OpenLayers.Layer.HTTPRequest.prototype.setTileSize.apply(this,[size])},getTilesBounds:function(){var bounds=null;var length=this.grid.length;if(length){var bottomLeftTileBounds=this.grid[length-1][0].bounds,width=this.grid[0].length*bottomLeftTileBounds.getWidth(),height=this.grid.length*bottomLeftTileBounds.getHeight();bounds=new OpenLayers.Bounds(bottomLeftTileBounds.left,bottomLeftTileBounds.bottom,bottomLeftTileBounds.left+width,bottomLeftTileBounds.bottom+height)}return bounds},initSingleTile:function(bounds){this.events.triggerEvent("retile");var center=bounds.getCenterLonLat();var tileWidth=bounds.getWidth()*this.ratio;var tileHeight=bounds.getHeight()*this.ratio;var tileBounds=new OpenLayers.Bounds(center.lon-(tileWidth/2),center.lat-(tileHeight/2),center.lon+(tileWidth/2),center.lat+(tileHeight/2));var px=this.map.getLayerPxFromLonLat({lon:tileBounds.left,lat:tileBounds.top});if(!this.grid.length){this.grid[0]=[]}var tile=this.grid[0][0];if(!tile){tile=this.addTile(tileBounds,px);this.addTileMonitoringHooks(tile);tile.draw();this.grid[0][0]=tile}else{tile.moveTo(tileBounds,px)}this.removeExcessTiles(1,1);this.gridResolution=this.getServerResolution()},calculateGridLayout:function(bounds,origin,resolution){var tilelon=resolution*this.tileSize.w;var tilelat=resolution*this.tileSize.h;var offsetlon=bounds.left-origin.lon;var tilecol=Math.floor(offsetlon/tilelon)-this.buffer;var rowSign=this.rowSign;var offsetlat=rowSign*(origin.lat-bounds.top+tilelat);var tilerow=Math[~rowSign?"floor":"ceil"](offsetlat/tilelat)-this.buffer*rowSign;return{tilelon:tilelon,tilelat:tilelat,startcol:tilecol,startrow:tilerow}},getTileOrigin:function(){var origin=this.tileOrigin;if(!origin){var extent=this.getMaxExtent();var edges=({tl:["left","top"],tr:["right","top"],bl:["left","bottom"],br:["right","bottom"]})[this.tileOriginCorner];origin=new OpenLayers.LonLat(extent[edges[0]],extent[edges[1]])}return origin},getTileBoundsForGridIndex:function(row,col){var origin=this.getTileOrigin();var tileLayout=this.gridLayout;var tilelon=tileLayout.tilelon;var tilelat=tileLayout.tilelat;var startcol=tileLayout.startcol;var startrow=tileLayout.startrow;var rowSign=this.rowSign;return new OpenLayers.Bounds(origin.lon+(startcol+col)*tilelon,origin.lat-(startrow+row*rowSign)*tilelat*rowSign,origin.lon+(startcol+col+1)*tilelon,origin.lat-(startrow+(row-1)*rowSign)*tilelat*rowSign)},initGriddedTiles:function(bounds){this.events.triggerEvent("retile");var viewSize=this.map.getSize();var origin=this.getTileOrigin();var resolution=this.map.getResolution(),serverResolution=this.getServerResolution(),ratio=resolution/serverResolution,tileSize={w:this.tileSize.w/ratio,h:this.tileSize.h/ratio};var minRows=Math.ceil(viewSize.h/tileSize.h)+2*this.buffer+1;var minCols=Math.ceil(viewSize.w/tileSize.w)+2*this.buffer+1;var tileLayout=this.calculateGridLayout(bounds,origin,serverResolution);this.gridLayout=tileLayout;var tilelon=tileLayout.tilelon;var tilelat=tileLayout.tilelat;var layerContainerDivLeft=this.map.layerContainerOriginPx.x;var layerContainerDivTop=this.map.layerContainerOriginPx.y;var tileBounds=this.getTileBoundsForGridIndex(0,0);var startPx=this.map.getViewPortPxFromLonLat(new OpenLayers.LonLat(tileBounds.left,tileBounds.top));startPx.x=Math.round(startPx.x)-layerContainerDivLeft;startPx.y=Math.round(startPx.y)-layerContainerDivTop;var tileData=[],center=this.map.getCenter();var rowidx=0;do{var row=this.grid[rowidx];if(!row){row=[];this.grid.push(row)}var colidx=0;do{tileBounds=this.getTileBoundsForGridIndex(rowidx,colidx);var px=startPx.clone();px.x=px.x+colidx*Math.round(tileSize.w);px.y=px.y+rowidx*Math.round(tileSize.h);var tile=row[colidx];if(!tile){tile=this.addTile(tileBounds,px);this.addTileMonitoringHooks(tile);row.push(tile)}else{tile.moveTo(tileBounds,px,false)}var tileCenter=tileBounds.getCenterLonLat();tileData.push({tile:tile,distance:Math.pow(tileCenter.lon-center.lon,2)+Math.pow(tileCenter.lat-center.lat,2)});colidx+=1}while((tileBounds.right<=bounds.right+tilelon*this.buffer)||colidx<minCols);rowidx+=1}while((tileBounds.bottom>=bounds.bottom-tilelat*this.buffer)||rowidx<minRows);this.removeExcessTiles(rowidx,colidx);var resolution=this.getServerResolution();this.gridResolution=resolution;tileData.sort(function(a,b){return a.distance-b.distance});for(var i=0,ii=tileData.length;i<ii;++i){tileData[i].tile.draw()}},getMaxExtent:function(){return this.maxExtent},addTile:function(bounds,position){var tile=new this.tileClass(this,position,bounds,null,this.tileSize,this.tileOptions);this.events.triggerEvent("addtile",{tile:tile});return tile},addTileMonitoringHooks:function(tile){var replacingCls="olTileReplacing";tile.onLoadStart=function(){if(this.loading===false){this.loading=true;this.events.triggerEvent("loadstart")}this.events.triggerEvent("tileloadstart",{tile:tile});this.numLoadingTiles++;if(!this.singleTile&&this.backBuffer&&this.gridResolution===this.backBufferResolution){OpenLayers.Element.addClass(tile.getTile(),replacingCls)}};tile.onLoadEnd=function(evt){this.numLoadingTiles--;var aborted=evt.type==="unload";this.events.triggerEvent("tileloaded",{tile:tile,aborted:aborted});if(!this.singleTile&&!aborted&&this.backBuffer&&this.gridResolution===this.backBufferResolution){var tileDiv=tile.getTile();if(OpenLayers.Element.getStyle(tileDiv,"display")==="none"){var bufferTile=document.getElementById(tile.id+"_bb");if(bufferTile){bufferTile.parentNode.removeChild(bufferTile)}}OpenLayers.Element.removeClass(tileDiv,replacingCls)}if(this.numLoadingTiles===0){if(this.backBuffer){if(this.backBuffer.childNodes.length===0){this.removeBackBuffer()}else{this._transitionElement=aborted?this.div.lastChild:tile.imgDiv;var transitionendEvents=this.transitionendEvents;for(var i=transitionendEvents.length-1;i>=0;--i){OpenLayers.Event.observe(this._transitionElement,transitionendEvents[i],this._removeBackBuffer)}this.backBufferTimerId=window.setTimeout(this._removeBackBuffer,this.removeBackBufferDelay)}}this.loading=false;this.events.triggerEvent("loadend")}};tile.onLoadError=function(){this.events.triggerEvent("tileerror",{tile:tile})};tile.events.on({loadstart:tile.onLoadStart,loadend:tile.onLoadEnd,unload:tile.onLoadEnd,loaderror:tile.onLoadError,scope:this})},removeTileMonitoringHooks:function(tile){tile.unload();tile.events.un({loadstart:tile.onLoadStart,loadend:tile.onLoadEnd,unload:tile.onLoadEnd,loaderror:tile.onLoadError,scope:this})},moveGriddedTiles:function(){var buffer=this.buffer+1;while(true){var tlTile=this.grid[0][0];var tlViewPort={x:tlTile.position.x+this.map.layerContainerOriginPx.x,y:tlTile.position.y+this.map.layerContainerOriginPx.y};var ratio=this.getServerResolution()/this.map.getResolution();var tileSize={w:Math.round(this.tileSize.w*ratio),h:Math.round(this.tileSize.h*ratio)};if(tlViewPort.x>-tileSize.w*(buffer-1)){this.shiftColumn(true,tileSize)}else{if(tlViewPort.x<-tileSize.w*buffer){this.shiftColumn(false,tileSize)}else{if(tlViewPort.y>-tileSize.h*(buffer-1)){this.shiftRow(true,tileSize)}else{if(tlViewPort.y<-tileSize.h*buffer){this.shiftRow(false,tileSize)}else{break}}}}}},shiftRow:function(prepend,tileSize){var grid=this.grid;var rowIndex=prepend?0:(grid.length-1);var sign=prepend?-1:1;var rowSign=this.rowSign;var tileLayout=this.gridLayout;tileLayout.startrow+=sign*rowSign;var modelRow=grid[rowIndex];var row=grid[prepend?"pop":"shift"]();for(var i=0,len=row.length;i<len;i++){var tile=row[i];var position=modelRow[i].position.clone();position.y+=tileSize.h*sign;tile.moveTo(this.getTileBoundsForGridIndex(rowIndex,i),position)}grid[prepend?"unshift":"push"](row)},shiftColumn:function(prepend,tileSize){var grid=this.grid;var colIndex=prepend?0:(grid[0].length-1);var sign=prepend?-1:1;var tileLayout=this.gridLayout;tileLayout.startcol+=sign;for(var i=0,len=grid.length;i<len;i++){var row=grid[i];var position=row[colIndex].position.clone();var tile=row[prepend?"pop":"shift"]();position.x+=tileSize.w*sign;tile.moveTo(this.getTileBoundsForGridIndex(i,colIndex),position);row[prepend?"unshift":"push"](tile)}},removeExcessTiles:function(rows,columns){var i,l;while(this.grid.length>rows){var row=this.grid.pop();for(i=0,l=row.length;i<l;i++){var tile=row[i];this.destroyTile(tile)}}for(i=0,l=this.grid.length;i<l;i++){while(this.grid[i].length>columns){var row=this.grid[i];var tile=row.pop();this.destroyTile(tile)}}},onMapResize:function(){if(this.singleTile){this.clearGrid();this.setTileSize()}},getTileBounds:function(viewPortPx){var maxExtent=this.maxExtent;var resolution=this.getResolution();var tileMapWidth=resolution*this.tileSize.w;var tileMapHeight=resolution*this.tileSize.h;var mapPoint=this.getLonLatFromViewPortPx(viewPortPx);var tileLeft=maxExtent.left+(tileMapWidth*Math.floor((mapPoint.lon-maxExtent.left)/tileMapWidth));var tileBottom=maxExtent.bottom+(tileMapHeight*Math.floor((mapPoint.lat-maxExtent.bottom)/tileMapHeight));return new OpenLayers.Bounds(tileLeft,tileBottom,tileLeft+tileMapWidth,tileBottom+tileMapHeight)},CLASS_NAME:"OpenLayers.Layer.Grid"});OpenLayers.Layer.WMS=OpenLayers.Class(OpenLayers.Layer.Grid,{DEFAULT_PARAMS:{service:"WMS",version:"1.1.1",request:"GetMap",styles:"",format:"image/jpeg"},isBaseLayer:true,encodeBBOX:false,noMagic:false,yx:{},initialize:function(name,url,params,options){var newArguments=[];params=OpenLayers.Util.upperCaseObject(params);if(parseFloat(params.VERSION)>=1.3&&!params.EXCEPTIONS){params.EXCEPTIONS="INIMAGE"}newArguments.push(name,url,params,options);OpenLayers.Layer.Grid.prototype.initialize.apply(this,newArguments);OpenLayers.Util.applyDefaults(this.params,OpenLayers.Util.upperCaseObject(this.DEFAULT_PARAMS));if(!this.noMagic&&this.params.TRANSPARENT&&this.params.TRANSPARENT.toString().toLowerCase()=="true"){if((options==null)||(!options.isBaseLayer)){this.isBaseLayer=false}if(this.params.FORMAT=="image/jpeg"){this.params.FORMAT=OpenLayers.Util.alphaHack()?"image/gif":"image/png"}}},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.WMS(this.name,this.url,this.params,this.getOptions())}obj=OpenLayers.Layer.Grid.prototype.clone.apply(this,[obj]);return obj},reverseAxisOrder:function(){var projCode=this.projection.getCode();return parseFloat(this.params.VERSION)>=1.3&&!!(this.yx[projCode]||(OpenLayers.Projection.defaults[projCode]&&OpenLayers.Projection.defaults[projCode].yx))},getURL:function(bounds){bounds=this.adjustBounds(bounds);var imageSize=this.getImageSize();var newParams={};var reverseAxisOrder=this.reverseAxisOrder();newParams.BBOX=this.encodeBBOX?bounds.toBBOX(null,reverseAxisOrder):bounds.toArray(reverseAxisOrder);newParams.WIDTH=imageSize.w;newParams.HEIGHT=imageSize.h;var requestString=this.getFullRequestString(newParams);return requestString},mergeNewParams:function(newParams){var upperParams=OpenLayers.Util.upperCaseObject(newParams);var newArguments=[upperParams];return OpenLayers.Layer.Grid.prototype.mergeNewParams.apply(this,newArguments)},getFullRequestString:function(newParams,altUrl){var mapProjection=this.map.getProjectionObject();var projectionCode=this.projection&&this.projection.equals(mapProjection)?this.projection.getCode():mapProjection.getCode();var value=(projectionCode=="none")?null:projectionCode;if(parseFloat(this.params.VERSION)>=1.3){this.params.CRS=value}else{this.params.SRS=value}if(typeof this.params.TRANSPARENT=="boolean"){newParams.TRANSPARENT=this.params.TRANSPARENT?"TRUE":"FALSE"}return OpenLayers.Layer.Grid.prototype.getFullRequestString.apply(this,arguments)},CLASS_NAME:"OpenLayers.Layer.WMS"});Ext.namespace("GeoExt");GeoExt.WMSLegend=Ext.extend(GeoExt.LayerLegend,{defaultStyleIsFirst:true,useScaleParameter:true,baseParams:null,itemXType:"gx_legendimage",initComponent:function(){GeoExt.WMSLegend.superclass.initComponent.call(this);var layer=this.layerRecord.getLayer();this._noMap=!layer.map;layer.events.register("moveend",this,this.onLayerMoveend);this.update()},onLayerMoveend:function(e){if((e.zoomChanged===true&&this.useScaleParameter===true)||this._noMap){delete this._noMap;this.update()}},getLegendUrl:function(layerName,layerNames){var rec=this.layerRecord;var url;var styles=rec&&rec.get("styles");var layer=rec.getLayer();layerNames=layerNames||[layer.params.LAYERS].join(",").split(",");var styleNames=layer.params.STYLES&&[layer.params.STYLES].join(",").split(",");var idx=layerNames.indexOf(layerName);var styleName=styleNames&&styleNames[idx];if(styles&&styles.length>0){if(styleName){Ext.each(styles,function(s){url=(s.name==styleName&&s.legend)&&s.legend.href;return !url})}else{if(!styleNames&&!layer.params.SLD&&!layer.params.SLD_BODY){Ext.each(styles,function(s){url=(s.layerName==layerName&&s.legend)&&s.legend.href;return !url});if(!url&&this.defaultStyleIsFirst===true){url=styles[0].legend&&styles[0].legend.href}}}if(url){url=decodeURIComponent(url)}}if(!url){url=layer.getFullRequestString({REQUEST:"GetLegendGraphic",WIDTH:null,HEIGHT:null,EXCEPTIONS:"application/vnd.ogc.se_xml",LAYER:layerName,LAYERS:null,STYLE:(styleName!=="")?styleName:null,STYLES:null,SRS:null,FORMAT:null,TIME:null})}var params=Ext.apply({},this.baseParams);if(layer.params._OLSALT){params._OLSALT=layer.params._OLSALT}var appendParams=Ext.urlEncode(params);var formatRegEx=/([&\?]?)format=[^&]*&?/i;if(formatRegEx.test(appendParams)&&formatRegEx.test(url)){url=url.replace(formatRegEx,"$1")}url=OpenLayers.Util.urlAppend(url,appendParams);if(url.toLowerCase().indexOf("request=getlegendgraphic")!=-1){if(url.toLowerCase().indexOf("format=")==-1){url=Ext.urlAppend(url,"FORMAT=image%2Fgif")}if(this.useScaleParameter===true){var scale=layer.map.getScale();url=Ext.urlAppend(url,"SCALE="+scale)}}return url},update:function(){var layer=this.layerRecord.getLayer();if(!(layer&&layer.map)){return}GeoExt.WMSLegend.superclass.update.apply(this,arguments);var layerNames,layerName,i,len;layerNames=[layer.params.LAYERS].join(",").split(",");var destroyList=[];var textCmp=this.items.find(function(item){return item.isXType("label")});this.items.each(function(cmp){i=layerNames.indexOf(cmp.itemId);if(i<0&&cmp!=textCmp){destroyList.push(cmp)}else{if(cmp!==textCmp){layerName=layerNames[i];var newUrl=this.getLegendUrl(layerName,layerNames);if(!OpenLayers.Util.isEquivalentUrl(newUrl,cmp.url)){cmp.setUrl(newUrl)}}}},this);for(i=0,len=destroyList.length;i<len;i++){var cmp=destroyList[i];this.remove(cmp);cmp.destroy()}for(i=0,len=layerNames.length;i<len;i++){layerName=layerNames[i];if(!this.items||!this.getComponent(layerName)){this.add({xtype:this.itemXType,url:this.getLegendUrl(layerName,layerNames),itemId:layerName})}}this.doLayout()},beforeDestroy:function(){if(this.useScaleParameter===true){var layer=this.layerRecord.getLayer();layer&&layer.events&&layer.events.unregister("moveend",this,this.onLayerMoveend)}GeoExt.WMSLegend.superclass.beforeDestroy.apply(this,arguments)}});GeoExt.WMSLegend.supports=function(layerRecord){return layerRecord.getLayer() instanceof OpenLayers.Layer.WMS?1:0};GeoExt.LayerLegend.types.gx_wmslegend=GeoExt.WMSLegend;Ext.reg("gx_wmslegend",GeoExt.WMSLegend);OpenLayers.Renderer=OpenLayers.Class({container:null,root:null,extent:null,locked:false,size:null,resolution:null,map:null,featureDx:0,initialize:function(containerID,options){this.container=OpenLayers.Util.getElement(containerID);OpenLayers.Util.extend(this,options)},destroy:function(){this.container=null;this.extent=null;this.size=null;this.resolution=null;this.map=null},supported:function(){return false},setExtent:function(extent,resolutionChanged){this.extent=extent.clone();if(this.map.baseLayer&&this.map.baseLayer.wrapDateLine){var ratio=extent.getWidth()/this.map.getExtent().getWidth(),extent=extent.scale(1/ratio);this.extent=extent.wrapDateLine(this.map.getMaxExtent()).scale(ratio)}if(resolutionChanged){this.resolution=null}return true},setSize:function(size){this.size=size.clone();this.resolution=null},getResolution:function(){this.resolution=this.resolution||this.map.getResolution();return this.resolution},drawFeature:function(feature,style){if(style==null){style=feature.style}if(feature.geometry){var bounds=feature.geometry.getBounds();if(bounds){var worldBounds;if(this.map.baseLayer&&this.map.baseLayer.wrapDateLine){worldBounds=this.map.getMaxExtent()}if(!bounds.intersectsBounds(this.extent,{worldBounds:worldBounds})){style={display:"none"}}else{this.calculateFeatureDx(bounds,worldBounds)}var rendered=this.drawGeometry(feature.geometry,style,feature.id);if(style.display!="none"&&style.label&&rendered!==false){var location=feature.geometry.getCentroid();if(style.labelXOffset||style.labelYOffset){var xOffset=isNaN(style.labelXOffset)?0:style.labelXOffset;var yOffset=isNaN(style.labelYOffset)?0:style.labelYOffset;var res=this.getResolution();location.move(xOffset*res,yOffset*res)}this.drawText(feature.id,style,location)}else{this.removeText(feature.id)}return rendered}}},calculateFeatureDx:function(bounds,worldBounds){this.featureDx=0;if(worldBounds){var worldWidth=worldBounds.getWidth(),rendererCenterX=(this.extent.left+this.extent.right)/2,featureCenterX=(bounds.left+bounds.right)/2,worldsAway=Math.round((featureCenterX-rendererCenterX)/worldWidth);this.featureDx=worldsAway*worldWidth}},drawGeometry:function(geometry,style,featureId){},drawText:function(featureId,style,location){},removeText:function(featureId){},clear:function(){},getFeatureIdFromEvent:function(evt){},eraseFeatures:function(features){if(!(OpenLayers.Util.isArray(features))){features=[features]}for(var i=0,len=features.length;i<len;++i){var feature=features[i];this.eraseGeometry(feature.geometry,feature.id);this.removeText(feature.id)}},eraseGeometry:function(geometry,featureId){},moveRoot:function(renderer){},getRenderLayerId:function(){return this.container.id},applyDefaultSymbolizer:function(symbolizer){var result=OpenLayers.Util.extend({},OpenLayers.Renderer.defaultSymbolizer);if(symbolizer.stroke===false){delete result.strokeWidth;delete result.strokeColor}if(symbolizer.fill===false){delete result.fillColor}OpenLayers.Util.extend(result,symbolizer);return result},CLASS_NAME:"OpenLayers.Renderer"});OpenLayers.Renderer.defaultSymbolizer={fillColor:"#000000",strokeColor:"#000000",strokeWidth:2,fillOpacity:1,strokeOpacity:1,pointRadius:0,labelAlign:"cm"};OpenLayers.Renderer.symbol={star:[350,75,379,161,469,161,397,215,423,301,350,250,277,301,303,215,231,161,321,161,350,75],cross:[4,0,6,0,6,4,10,4,10,6,6,6,6,10,4,10,4,6,0,6,0,4,4,4,4,0],x:[0,0,25,0,50,35,75,0,100,0,65,50,100,100,75,100,50,65,25,100,0,100,35,50,0,0],square:[0,0,0,1,1,1,1,0,0,0],triangle:[0,10,10,10,5,0,0,10]};OpenLayers.StyleMap=OpenLayers.Class({styles:null,extendDefault:true,initialize:function(style,options){this.styles={"default":new OpenLayers.Style(OpenLayers.Feature.Vector.style["default"]),select:new OpenLayers.Style(OpenLayers.Feature.Vector.style.select),temporary:new OpenLayers.Style(OpenLayers.Feature.Vector.style.temporary),"delete":new OpenLayers.Style(OpenLayers.Feature.Vector.style["delete"])};if(style instanceof OpenLayers.Style){this.styles["default"]=style;this.styles.select=style;this.styles.temporary=style;this.styles["delete"]=style}else{if(typeof style=="object"){for(var key in style){if(style[key] instanceof OpenLayers.Style){this.styles[key]=style[key]}else{if(typeof style[key]=="object"){this.styles[key]=new OpenLayers.Style(style[key])}else{this.styles["default"]=new OpenLayers.Style(style);this.styles.select=new OpenLayers.Style(style);this.styles.temporary=new OpenLayers.Style(style);this.styles["delete"]=new OpenLayers.Style(style);break}}}}}OpenLayers.Util.extend(this,options)},destroy:function(){for(var key in this.styles){this.styles[key].destroy()}this.styles=null},createSymbolizer:function(feature,intent){if(!feature){feature=new OpenLayers.Feature.Vector()}if(!this.styles[intent]){intent="default"}feature.renderIntent=intent;var defaultSymbolizer={};if(this.extendDefault&&intent!="default"){defaultSymbolizer=this.styles["default"].createSymbolizer(feature)}return OpenLayers.Util.extend(defaultSymbolizer,this.styles[intent].createSymbolizer(feature))},addUniqueValueRules:function(renderIntent,property,symbolizers,context){var rules=[];for(var value in symbolizers){rules.push(new OpenLayers.Rule({symbolizer:symbolizers[value],context:context,filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:property,value:value})}))}this.styles[renderIntent].addRules(rules)},CLASS_NAME:"OpenLayers.StyleMap"});OpenLayers.Layer.Vector=OpenLayers.Class(OpenLayers.Layer,{isBaseLayer:false,isFixed:false,features:null,filter:null,selectedFeatures:null,unrenderedFeatures:null,reportError:true,style:null,styleMap:null,strategies:null,protocol:null,renderers:["SVG","VML","Canvas"],renderer:null,rendererOptions:null,geometryType:null,drawn:false,ratio:1,initialize:function(name,options){OpenLayers.Layer.prototype.initialize.apply(this,arguments);if(!this.renderer||!this.renderer.supported()){this.assignRenderer()}if(!this.renderer||!this.renderer.supported()){this.renderer=null;this.displayError()}if(!this.styleMap){this.styleMap=new OpenLayers.StyleMap()}this.features=[];this.selectedFeatures=[];this.unrenderedFeatures={};if(this.strategies){for(var i=0,len=this.strategies.length;i<len;i++){this.strategies[i].setLayer(this)}}},destroy:function(){if(this.strategies){var strategy,i,len;for(i=0,len=this.strategies.length;i<len;i++){strategy=this.strategies[i];if(strategy.autoDestroy){strategy.destroy()}}this.strategies=null}if(this.protocol){if(this.protocol.autoDestroy){this.protocol.destroy()}this.protocol=null}this.destroyFeatures();this.features=null;this.selectedFeatures=null;this.unrenderedFeatures=null;if(this.renderer){this.renderer.destroy()}this.renderer=null;this.geometryType=null;this.drawn=null;OpenLayers.Layer.prototype.destroy.apply(this,arguments)},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.Vector(this.name,this.getOptions())}obj=OpenLayers.Layer.prototype.clone.apply(this,[obj]);var features=this.features;var len=features.length;var clonedFeatures=new Array(len);for(var i=0;i<len;++i){clonedFeatures[i]=features[i].clone()}obj.features=clonedFeatures;return obj},refresh:function(obj){if(this.calculateInRange()&&this.visibility){this.events.triggerEvent("refresh",obj)}},assignRenderer:function(){for(var i=0,len=this.renderers.length;i<len;i++){var rendererClass=this.renderers[i];var renderer=(typeof rendererClass=="function")?rendererClass:OpenLayers.Renderer[rendererClass];if(renderer&&renderer.prototype.supported()){this.renderer=new renderer(this.div,this.rendererOptions);break}}},displayError:function(){if(this.reportError){OpenLayers.Console.userError(OpenLayers.i18n("browserNotSupported",{renderers:this.renderers.join("\n")}))}},setMap:function(map){OpenLayers.Layer.prototype.setMap.apply(this,arguments);if(!this.renderer){this.map.removeLayer(this)}else{this.renderer.map=this.map;var newSize=this.map.getSize();newSize.w=newSize.w*this.ratio;newSize.h=newSize.h*this.ratio;this.renderer.setSize(newSize)}},afterAdd:function(){if(this.strategies){var strategy,i,len;for(i=0,len=this.strategies.length;i<len;i++){strategy=this.strategies[i];if(strategy.autoActivate){strategy.activate()}}}},removeMap:function(map){this.drawn=false;if(this.strategies){var strategy,i,len;for(i=0,len=this.strategies.length;i<len;i++){strategy=this.strategies[i];if(strategy.autoActivate){strategy.deactivate()}}}},onMapResize:function(){OpenLayers.Layer.prototype.onMapResize.apply(this,arguments);var newSize=this.map.getSize();newSize.w=newSize.w*this.ratio;newSize.h=newSize.h*this.ratio;this.renderer.setSize(newSize)},moveTo:function(bounds,zoomChanged,dragging){OpenLayers.Layer.prototype.moveTo.apply(this,arguments);var coordSysUnchanged=true;if(!dragging){this.renderer.root.style.visibility="hidden";var viewSize=this.map.getSize(),viewWidth=viewSize.w,viewHeight=viewSize.h,offsetLeft=(viewWidth/2*this.ratio)-viewWidth/2,offsetTop=(viewHeight/2*this.ratio)-viewHeight/2;offsetLeft+=this.map.layerContainerOriginPx.x;offsetLeft=-Math.round(offsetLeft);offsetTop+=this.map.layerContainerOriginPx.y;offsetTop=-Math.round(offsetTop);this.div.style.left=offsetLeft+"px";this.div.style.top=offsetTop+"px";var extent=this.map.getExtent().scale(this.ratio);coordSysUnchanged=this.renderer.setExtent(extent,zoomChanged);this.renderer.root.style.visibility="visible";if(OpenLayers.IS_GECKO===true){this.div.scrollLeft=this.div.scrollLeft}if(!zoomChanged&&coordSysUnchanged){for(var i in this.unrenderedFeatures){var feature=this.unrenderedFeatures[i];this.drawFeature(feature)}}}if(!this.drawn||zoomChanged||!coordSysUnchanged){this.drawn=true;var feature;for(var i=0,len=this.features.length;i<len;i++){this.renderer.locked=(i!==(len-1));feature=this.features[i];this.drawFeature(feature)}}},display:function(display){OpenLayers.Layer.prototype.display.apply(this,arguments);var currentDisplay=this.div.style.display;if(currentDisplay!=this.renderer.root.style.display){this.renderer.root.style.display=currentDisplay}},addFeatures:function(features,options){if(!(OpenLayers.Util.isArray(features))){features=[features]}var notify=!options||!options.silent;if(notify){var event={features:features};var ret=this.events.triggerEvent("beforefeaturesadded",event);if(ret===false){return}features=event.features}var featuresAdded=[];for(var i=0,len=features.length;i<len;i++){if(i!=(features.length-1)){this.renderer.locked=true}else{this.renderer.locked=false}var feature=features[i];if(this.geometryType&&!(feature.geometry instanceof this.geometryType)){throw new TypeError("addFeatures: component should be an "+this.geometryType.prototype.CLASS_NAME)}feature.layer=this;if(!feature.style&&this.style){feature.style=OpenLayers.Util.extend({},this.style)}if(notify){if(this.events.triggerEvent("beforefeatureadded",{feature:feature})===false){continue}this.preFeatureInsert(feature)}featuresAdded.push(feature);this.features.push(feature);this.drawFeature(feature);if(notify){this.events.triggerEvent("featureadded",{feature:feature});this.onFeatureInsert(feature)}}if(notify){this.events.triggerEvent("featuresadded",{features:featuresAdded})}},removeFeatures:function(features,options){if(!features||features.length===0){return}if(features===this.features){return this.removeAllFeatures(options)}if(!(OpenLayers.Util.isArray(features))){features=[features]}if(features===this.selectedFeatures){features=features.slice()}var notify=!options||!options.silent;if(notify){this.events.triggerEvent("beforefeaturesremoved",{features:features})}for(var i=features.length-1;i>=0;i--){if(i!=0&&features[i-1].geometry){this.renderer.locked=true}else{this.renderer.locked=false}var feature=features[i];delete this.unrenderedFeatures[feature.id];if(notify){this.events.triggerEvent("beforefeatureremoved",{feature:feature})}this.features=OpenLayers.Util.removeItem(this.features,feature);feature.layer=null;if(feature.geometry){this.renderer.eraseFeatures(feature)}if(OpenLayers.Util.indexOf(this.selectedFeatures,feature)!=-1){OpenLayers.Util.removeItem(this.selectedFeatures,feature)}if(notify){this.events.triggerEvent("featureremoved",{feature:feature})}}if(notify){this.events.triggerEvent("featuresremoved",{features:features})}},removeAllFeatures:function(options){var notify=!options||!options.silent;var features=this.features;if(notify){this.events.triggerEvent("beforefeaturesremoved",{features:features})}var feature;for(var i=features.length-1;i>=0;i--){feature=features[i];if(notify){this.events.triggerEvent("beforefeatureremoved",{feature:feature})}feature.layer=null;if(notify){this.events.triggerEvent("featureremoved",{feature:feature})}}this.renderer.clear();this.features=[];this.unrenderedFeatures={};this.selectedFeatures=[];if(notify){this.events.triggerEvent("featuresremoved",{features:features})}},destroyFeatures:function(features,options){var all=(features==undefined);if(all){features=this.features}if(features){this.removeFeatures(features,options);for(var i=features.length-1;i>=0;i--){features[i].destroy()}}},drawFeature:function(feature,style){if(!this.drawn){return}if(typeof style!="object"){if(!style&&feature.state===OpenLayers.State.DELETE){style="delete"}var renderIntent=style||feature.renderIntent;style=feature.style||this.style;if(!style){style=this.styleMap.createSymbolizer(feature,renderIntent)}}var drawn=this.renderer.drawFeature(feature,style);if(drawn===false||drawn===null){this.unrenderedFeatures[feature.id]=feature}else{delete this.unrenderedFeatures[feature.id]}},eraseFeatures:function(features){this.renderer.eraseFeatures(features)},getFeatureFromEvent:function(evt){if(!this.renderer){throw new Error("getFeatureFromEvent called on layer with no renderer. This usually means you destroyed a layer, but not some handler which is associated with it.")}var feature=null;var featureId=this.renderer.getFeatureIdFromEvent(evt);if(featureId){if(typeof featureId==="string"){feature=this.getFeatureById(featureId)}else{feature=featureId}}return feature},getFeatureBy:function(property,value){var feature=null;for(var i=0,len=this.features.length;i<len;++i){if(this.features[i][property]==value){feature=this.features[i];break}}return feature},getFeatureById:function(featureId){return this.getFeatureBy("id",featureId)},getFeatureByFid:function(featureFid){return this.getFeatureBy("fid",featureFid)},getFeaturesByAttribute:function(attrName,attrValue){var i,feature,len=this.features.length,foundFeatures=[];for(i=0;i<len;i++){feature=this.features[i];if(feature&&feature.attributes){if(feature.attributes[attrName]===attrValue){foundFeatures.push(feature)}}}return foundFeatures},onFeatureInsert:function(feature){},preFeatureInsert:function(feature){},getDataExtent:function(){var maxExtent=null;var features=this.features;if(features&&(features.length>0)){var geometry=null;for(var i=0,len=features.length;i<len;i++){geometry=features[i].geometry;if(geometry){if(maxExtent===null){maxExtent=new OpenLayers.Bounds()}maxExtent.extend(geometry.getBounds())}}}return maxExtent},CLASS_NAME:"OpenLayers.Layer.Vector"});Ext.namespace("GeoExt");GeoExt.VectorLegend=Ext.extend(GeoExt.LayerLegend,{layerRecord:null,layer:null,rules:null,symbolType:null,untitledPrefix:"Untitled ",clickableSymbol:false,clickableTitle:false,selectOnClick:false,enableDD:false,bodyBorder:false,feature:null,selectedRule:null,currentScaleDenominator:null,initComponent:function(){GeoExt.VectorLegend.superclass.initComponent.call(this);if(this.layerRecord){this.layer=this.layerRecord.getLayer();if(this.layer.map){this.map=this.layer.map;this.currentScaleDenominator=this.layer.map.getScale();this.layer.map.events.on({zoomend:this.onMapZoom,scope:this})}}if(!this.symbolType){if(this.feature){this.symbolType=this.symbolTypeFromFeature(this.feature)}else{if(this.layer){if(this.layer.features.length>0){var feature;for(var i=0,ii=this.layer.features.length;i<ii;i++){if(this.layer.features[i].geometry!==null){feature=this.layer.features[i].clone();break}}feature.attributes={};this.feature=feature;this.symbolType=this.symbolTypeFromFeature(this.feature)}else{this.layer.events.on({featuresadded:this.onFeaturesAdded,scope:this})}}}}if(this.layer&&this.feature&&!this.rules){this.setRules()}this.rulesContainer=new Ext.Container({autoEl:{}});this.add(this.rulesContainer);this.addEvents("titleclick","symbolclick","ruleclick","ruleselected","ruleunselected","rulemoved");this.update()},onMapZoom:function(){this.setCurrentScaleDenominator(this.layer.map.getScale())},symbolTypeFromFeature:function(feature){var match=feature.geometry.CLASS_NAME.match(/Point|Line|Polygon/);return(match&&match[0])||"Point"},onFeaturesAdded:function(evt){for(var i=0,ii=evt.features.length;i<ii;++i){if(evt.features[i].geometry!==null){this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this});var feature=evt.features[i].clone();feature.attributes={};this.feature=feature;this.symbolType=this.symbolTypeFromFeature(this.feature);if(!this.rules){this.setRules()}this.update();break}}},setRules:function(){var style=this.layer.styleMap&&this.layer.styleMap.styles["default"];if(!style){style=new OpenLayers.Style()}if(style.rules.length===0){this.rules=[new OpenLayers.Rule({title:style.title,symbolizer:style.createSymbolizer(this.feature)})]}else{this.rules=style.rules}},setCurrentScaleDenominator:function(scale){if(scale!==this.currentScaleDenominator){this.currentScaleDenominator=scale;this.update()}},getRuleEntry:function(rule){return this.rulesContainer.items.get(this.rules.indexOf(rule))},addRuleEntry:function(rule,noDoLayout){this.rulesContainer.add(this.createRuleEntry(rule));if(!noDoLayout){this.doLayout()}},removeRuleEntry:function(rule,noDoLayout){var ruleEntry=this.getRuleEntry(rule);if(ruleEntry){this.rulesContainer.remove(ruleEntry);if(!noDoLayout){this.doLayout()}}},selectRuleEntry:function(rule){var newSelection=rule!=this.selectedRule;if(this.selectedRule){this.unselect()}if(newSelection){var ruleEntry=this.getRuleEntry(rule);ruleEntry.body.addClass("x-grid3-row-selected");this.selectedRule=rule;this.fireEvent("ruleselected",this,rule)}},unselect:function(){this.rulesContainer.items.each(function(item,i){if(this.rules[i]==this.selectedRule){item.body.removeClass("x-grid3-row-selected");this.selectedRule=null;this.fireEvent("ruleunselected",this,this.rules[i])}},this)},createRuleEntry:function(rule){var applies=true;if(this.currentScaleDenominator!=null){if(rule.minScaleDenominator){applies=applies&&(this.currentScaleDenominator>=rule.minScaleDenominator)}if(rule.maxScaleDenominator){applies=applies&&(this.currentScaleDenominator<rule.maxScaleDenominator)}}return{xtype:"panel",layout:"column",border:false,hidden:!applies,bodyStyle:this.selectOnClick?{cursor:"pointer"}:undefined,defaults:{border:false},items:[this.createRuleRenderer(rule),this.createRuleTitle(rule)],listeners:{render:function(comp){this.selectOnClick&&comp.getEl().on({click:function(comp){this.selectRuleEntry(rule)},scope:this});if(this.enableDD==true){this.addDD(comp)}},scope:this}}},createRuleRenderer:function(rule){var types=[this.symbolType,"Point","Line","Polygon"];var type,haveType,i,len,ii;var symbolizers=rule.symbolizers;if(!symbolizers){var symbolizer=rule.symbolizer;for(i=0,len=types.length;i<len;++i){type=types[i];if(symbolizer[type]){symbolizer=symbolizer[type];haveType=true;break}}symbolizers=[symbolizer]}else{var Type;outer:for(i=0,ii=types.length;i<ii;++i){type=types[i];Type=OpenLayers.Symbolizer[type];if(Type){for(var j=0,jj=symbolizers.length;j<jj;++j){if(symbolizers[j] instanceof Type){haveType=true;break outer}}}}}return{xtype:"gx_renderer",labelText:"Ab",symbolType:haveType?type:this.symbolType,symbolizers:symbolizers,style:this.clickableSymbol?{cursor:"pointer"}:undefined,listeners:{click:function(){if(this.clickableSymbol){this.fireEvent("symbolclick",this,rule);this.fireEvent("ruleclick",this,rule)}},scope:this}}},createRuleTitle:function(rule){return{cls:"x-form-item",style:"padding: 0.2em 0.5em 0;",bodyStyle:Ext.applyIf({background:"transparent"},this.clickableTitle?{cursor:"pointer"}:undefined),html:this.getRuleTitle(rule),listeners:{render:function(comp){this.clickableTitle&&comp.getEl().on({click:function(){this.fireEvent("titleclick",this,rule);this.fireEvent("ruleclick",this,rule)},scope:this})},scope:this}}},addDD:function(component){var ct=component.ownerCt;var panel=this;new Ext.dd.DragSource(component.getEl(),{ddGroup:ct.id,onDragOut:function(e,targetId){var target=Ext.getCmp(targetId);target.removeClass("gx-ruledrag-insert-above");target.removeClass("gx-ruledrag-insert-below");return Ext.dd.DragZone.prototype.onDragOut.apply(this,arguments)},onDragEnter:function(e,targetId){var target=Ext.getCmp(targetId);var cls;var sourcePos=ct.items.indexOf(component);var targetPos=ct.items.indexOf(target);if(sourcePos>targetPos){cls="gx-ruledrag-insert-above"}else{if(sourcePos<targetPos){cls="gx-ruledrag-insert-below"}}cls&&target.addClass(cls);return Ext.dd.DragZone.prototype.onDragEnter.apply(this,arguments)},onDragDrop:function(e,targetId){panel.moveRule(ct.items.indexOf(component),ct.items.indexOf(Ext.getCmp(targetId)));return Ext.dd.DragZone.prototype.onDragDrop.apply(this,arguments)},getDragData:function(e){var sourceEl=e.getTarget(".x-column-inner");if(sourceEl){var d=sourceEl.cloneNode(true);d.id=Ext.id();return{sourceEl:sourceEl,repairXY:Ext.fly(sourceEl).getXY(),ddel:d}}}});new Ext.dd.DropTarget(component.getEl(),{ddGroup:ct.id,notifyDrop:function(){return true}})},update:function(){GeoExt.VectorLegend.superclass.update.apply(this,arguments);var i,ii;if(this.symbolType&&this.rules){if(this.rulesContainer.items){var comp;for(i=this.rulesContainer.items.length-1;i>=0;--i){comp=this.rulesContainer.getComponent(i);this.rulesContainer.remove(comp,true)}}for(i=0,ii=this.rules.length;i<ii;++i){this.addRuleEntry(this.rules[i],true)}this.doLayout();if(this.selectedRule){this.getRuleEntry(this.selectedRule).body.addClass("x-grid3-row-selected")}}},updateRuleEntry:function(rule){var ruleEntry=this.getRuleEntry(rule);if(ruleEntry){ruleEntry.removeAll();ruleEntry.add(this.createRuleRenderer(rule));ruleEntry.add(this.createRuleTitle(rule));ruleEntry.doLayout()}},moveRule:function(sourcePos,targetPos){var srcRule=this.rules[sourcePos];this.rules.splice(sourcePos,1);this.rules.splice(targetPos,0,srcRule);this.update();this.fireEvent("rulemoved",this,srcRule)},getRuleTitle:function(rule){var title=rule.title||rule.name||"";if(!title&&this.untitledPrefix){title=this.untitledPrefix+(this.rules.indexOf(rule)+1)}return title},beforeDestroy:function(){if(this.layer){if(this.layer.events){this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this})}if(this.layer.map&&this.layer.map.events){this.layer.map.events.un({zoomend:this.onMapZoom,scope:this})}}delete this.layer;delete this.map;delete this.rules;GeoExt.VectorLegend.superclass.beforeDestroy.apply(this,arguments)},onStoreRemove:function(store,record,index){if(record.getLayer()===this.layer){if(this.map&&this.map.events){this.map.events.un({zoomend:this.onMapZoom,scope:this})}}},onStoreAdd:function(store,records,index){for(var i=0,len=records.length;i<len;i++){var record=records[i];if(record.getLayer()===this.layer){if(this.layer.map&&this.layer.map.events){this.layer.map.events.on({zoomend:this.onMapZoom,scope:this})}}}}});GeoExt.VectorLegend.supports=function(layerRecord){return layerRecord.getLayer() instanceof OpenLayers.Layer.Vector?1:0};GeoExt.LayerLegend.types.gx_vectorlegend=GeoExt.VectorLegend;Ext.reg("gx_vectorlegend",GeoExt.VectorLegend);Ext.namespace("GeoExt");GeoExt.FeatureRenderer=Ext.extend(Ext.BoxComponent,{feature:undefined,symbolizers:[OpenLayers.Feature.Vector.style["default"]],symbolType:"Polygon",labelText:null,resolution:1,minWidth:20,minHeight:20,renderers:["SVG","VML","Canvas"],rendererOptions:null,pointFeature:undefined,lineFeature:undefined,polygonFeature:undefined,textFeature:undefined,renderer:null,initComponent:function(){GeoExt.FeatureRenderer.superclass.initComponent.apply(this,arguments);Ext.applyIf(this,{pointFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(0,0)),lineFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([new OpenLayers.Geometry.Point(-8,-3),new OpenLayers.Geometry.Point(-3,3),new OpenLayers.Geometry.Point(3,-3),new OpenLayers.Geometry.Point(8,3)])),polygonFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(-8,-4),new OpenLayers.Geometry.Point(-6,-6),new OpenLayers.Geometry.Point(6,-6),new OpenLayers.Geometry.Point(8,-4),new OpenLayers.Geometry.Point(8,4),new OpenLayers.Geometry.Point(6,6),new OpenLayers.Geometry.Point(-6,6),new OpenLayers.Geometry.Point(-8,4)])])),textFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(0,0))});if(!this.feature){this.setFeature(null,{draw:false})}this.addEvents("click")},initCustomEvents:function(){this.clearCustomEvents();this.el.on("click",this.onClick,this)},clearCustomEvents:function(){if(this.el&&this.el.removeAllListeners){this.el.removeAllListeners()}},onClick:function(){this.fireEvent("click",this)},onRender:function(ct,position){if(!this.el){this.el=document.createElement("div");this.el.id=this.getId()}if(!this.renderer||!this.renderer.supported()){this.assignRenderer()}this.renderer.map={getResolution:(function(){return this.resolution}).createDelegate(this)};GeoExt.FeatureRenderer.superclass.onRender.apply(this,arguments);this.drawFeature()},afterRender:function(){GeoExt.FeatureRenderer.superclass.afterRender.apply(this,arguments);this.initCustomEvents()},onResize:function(w,h){this.setRendererDimensions();GeoExt.FeatureRenderer.superclass.onResize.apply(this,arguments)},setRendererDimensions:function(){var gb=this.feature.geometry.getBounds();var gw=gb.getWidth();var gh=gb.getHeight();var resolution=this.initialConfig.resolution;if(!resolution){resolution=Math.max(gw/this.width||0,gh/this.height||0)||1}this.resolution=resolution;var width=Math.max(this.width||this.minWidth,gw/resolution);var height=Math.max(this.height||this.minHeight,gh/resolution);var center=gb.getCenterPixel();var bhalfw=width*resolution/2;var bhalfh=height*resolution/2;var bounds=new OpenLayers.Bounds(center.x-bhalfw,center.y-bhalfh,center.x+bhalfw,center.y+bhalfh);this.renderer.setSize(new OpenLayers.Size(Math.round(width),Math.round(height)));this.renderer.setExtent(bounds,true)},assignRenderer:function(){for(var i=0,len=this.renderers.length;i<len;++i){var Renderer=OpenLayers.Renderer[this.renderers[i]];if(Renderer&&Renderer.prototype.supported()){this.renderer=new Renderer(this.el,this.rendererOptions);break}}},setSymbolizers:function(symbolizers,options){this.symbolizers=symbolizers;if(!options||options.draw){this.drawFeature()}},setSymbolType:function(type,options){this.symbolType=type;this.setFeature(null,options)},setFeature:function(feature,options){this.feature=feature||this[this.symbolType.toLowerCase()+"Feature"];if(!options||options.draw){this.drawFeature()}},drawFeature:function(){this.renderer.clear();this.setRendererDimensions();var symbolizer,feature,geomType;for(var i=0,len=this.symbolizers.length;i<len;++i){symbolizer=this.symbolizers[i];feature=this.feature;if(symbolizer instanceof OpenLayers.Symbolizer){symbolizer=symbolizer.clone();if(OpenLayers.Symbolizer.Text&&symbolizer instanceof OpenLayers.Symbolizer.Text&&symbolizer.graphic===false){symbolizer.fill=symbolizer.stroke=false}if(!this.initialConfig.feature){geomType=symbolizer.CLASS_NAME.split(".").pop().toLowerCase();feature=this[geomType+"Feature"]}}else{symbolizer=Ext.apply({},symbolizer)}if(symbolizer.label!==undefined&&this.labelText!==null){symbolizer.label=this.labelText}this.renderer.drawFeature(feature.clone(),symbolizer)}},update:function(options){options=options||{};if(options.feature){this.setFeature(options.feature,{draw:false})}else{if(options.symbolType){this.setSymbolType(options.symbolType,{draw:false})}}if(options.symbolizers){this.setSymbolizers(options.symbolizers,{draw:false})}this.drawFeature()},beforeDestroy:function(){this.clearCustomEvents();if(this.renderer){this.renderer.destroy()}}});Ext.reg("gx_renderer",GeoExt.FeatureRenderer);(function(){var createComplete=function(fn,cb){return function(request){if(cb&&cb[fn]){cb[fn].call(cb.scope||window,Ext.applyIf({argument:cb.argument},request))}}};Ext.apply(Ext.lib.Ajax,{request:function(method,uri,cb,data,options){options=options||{};method=method||options.method;var hs=options.headers;if(options.xmlData){if(!hs||!hs["Content-Type"]){hs=hs||{};hs["Content-Type"]="text/xml"}method=method||"POST";data=options.xmlData}else{if(options.jsonData){if(!hs||!hs["Content-Type"]){hs=hs||{};hs["Content-Type"]="application/json"}method=method||"POST";data=typeof options.jsonData=="object"?Ext.encode(options.jsonData):options.jsonData}}if((method&&method.toLowerCase()=="post")&&(options.form||options.params)&&(!hs||!hs["Content-Type"])){hs=hs||{};hs["Content-Type"]="application/x-www-form-urlencoded"}return OpenLayers.Request.issue({success:createComplete("success",cb),failure:createComplete("failure",cb),method:method,headers:hs,data:data,url:uri})},isCallInProgress:function(request){return true},abort:function(request){request.abort()}})})();(function(){Ext.util.Observable.observeClass(Ext.form.TextField);Ext.form.TextField.on("specialkey",function(f,e){if(f.hasFocus&&e.getKey()===e.ENTER){f.blur.defer(10,f)}})}());Ext.namespace("gxp");gxp.util={_uniqueNames:{},getOGCExceptionText:function(report){var msg;if(report&&report.exceptions){msg=[];Ext.each(report.exceptions,function(obj){Ext.each(obj.texts,function(text){msg.push(text)})});msg=msg.join("\n")}else{msg="Unknown error (no exception report)."}return msg},dispatch:function(functions,complete,scope){complete=complete||Ext.emptyFn;scope=scope||this;var requests=functions.length;var responses=0;var storage={};function respond(){++responses;if(responses===requests){complete.call(scope,storage)}}function trigger(index){window.setTimeout(function(){functions[index].apply(scope,[respond,storage])})}for(var i=0;i<requests;++i){trigger(i)}},uniqueName:function(name,delimiter){delimiter=delimiter||" ";var regEx=new RegExp(delimiter+"[0-9]*$");var key=name.replace(regEx,"");var regExResult=regEx.exec(name);var count=this._uniqueNames[key]!==undefined?this._uniqueNames[key]:(regExResult instanceof Array?Number(regExResult[0]):undefined);var newName=key;if(count!==undefined){count++;newName+=delimiter+count}this._uniqueNames[key]=count||0;return newName},getAbsoluteUrl:function(url){var a;if(Ext.isIE6||Ext.isIE7||Ext.isIE8){a=document.createElement("<a href='"+url+"'/>");a.style.display="none";document.body.appendChild(a);a.href=a.href;document.body.removeChild(a)}else{a=document.createElement("a");a.href=url}return a.href},throttle:(function(){var createThrottled=function(fn,interval,scope){var lastCallTime,elapsed,lastArgs,timer,execute=function(){fn.apply(scope||this,lastArgs);lastCallTime=new Date().getTime()};return function(){elapsed=new Date().getTime()-lastCallTime;lastArgs=arguments;clearTimeout(timer);if(!lastCallTime||(elapsed>=interval)){execute()}else{timer=setTimeout(execute,interval-elapsed)}}};return function(func,interval,scope){return createThrottled(func,interval,scope)}})(),md5:(function(){var MD5_T=[0,3614090360,3905402710,606105819,3250441966,4118548399,1200080426,2821735955,4249261313,1770035416,2336552879,4294925233,2304563134,1804603682,4254626195,2792965006,1236535329,4129170786,3225465664,643717713,3921069994,3593408605,38016083,3634488961,3889429448,568446438,3275163606,4107603335,1163531501,2850285829,4243563512,1735328473,2368359562,4294588738,2272392833,1839030562,4259657740,2763975236,1272893353,4139469664,3200236656,681279174,3936430074,3572445317,76029189,3654602809,3873151461,530742520,3299628645,4096336452,1126891415,2878612391,4237533241,1700485571,2399980690,4293915773,2240044497,1873313359,4264355552,2734768916,1309151649,4149444226,3174756917,718787259,3951481745];var MD5_round1=[[0,7,1],[1,12,2],[2,17,3],[3,22,4],[4,7,5],[5,12,6],[6,17,7],[7,22,8],[8,7,9],[9,12,10],[10,17,11],[11,22,12],[12,7,13],[13,12,14],[14,17,15],[15,22,16]];var MD5_round2=[[1,5,17],[6,9,18],[11,14,19],[0,20,20],[5,5,21],[10,9,22],[15,14,23],[4,20,24],[9,5,25],[14,9,26],[3,14,27],[8,20,28],[13,5,29],[2,9,30],[7,14,31],[12,20,32]];var MD5_round3=[[5,4,33],[8,11,34],[11,16,35],[14,23,36],[1,4,37],[4,11,38],[7,16,39],[10,23,40],[13,4,41],[0,11,42],[3,16,43],[6,23,44],[9,4,45],[12,11,46],[15,16,47],[2,23,48]];var MD5_round4=[[0,6,49],[7,10,50],[14,15,51],[5,21,52],[12,6,53],[3,10,54],[10,15,55],[1,21,56],[8,6,57],[15,10,58],[6,15,59],[13,21,60],[4,6,61],[11,10,62],[2,15,63],[9,21,64]];function MD5_F(x,y,z){return(x&y)|(~x&z)}function MD5_G(x,y,z){return(x&z)|(y&~z)}function MD5_H(x,y,z){return x^y^z}function MD5_I(x,y,z){return y^(x|~z)}var MD5_round=[[MD5_F,MD5_round1],[MD5_G,MD5_round2],[MD5_H,MD5_round3],[MD5_I,MD5_round4]];function MD5_pack(n32){return String.fromCharCode(n32&255)+String.fromCharCode((n32>>>8)&255)+String.fromCharCode((n32>>>16)&255)+String.fromCharCode((n32>>>24)&255)}function MD5_unpack(s4){return s4.charCodeAt(0)|(s4.charCodeAt(1)<<8)|(s4.charCodeAt(2)<<16)|(s4.charCodeAt(3)<<24)}function MD5_number(n){while(n<0){n+=4294967296}while(n>4294967295){n-=4294967296}return n}function MD5_apply_round(x,s,f,abcd,r){var a,b,c,d;var kk,ss,ii;var t,u;a=abcd[0];b=abcd[1];c=abcd[2];d=abcd[3];kk=r[0];ss=r[1];ii=r[2];u=f(s[b],s[c],s[d]);t=s[a]+u+x[kk]+MD5_T[ii];t=MD5_number(t);t=((t<<ss)|(t>>>(32-ss)));t+=s[b];s[a]=MD5_number(t)}function MD5_hash(data){var abcd,x,state,s;var len,index,padLen,f,r;var i,j,k;var tmp;state=[1732584193,4023233417,2562383102,271733878];len=data.length;index=len&63;padLen=(index<56)?(56-index):(120-index);if(padLen>0){data+="\x80";for(i=0;i<padLen-1;i++){data+="\x00"}}data+=MD5_pack(len*8);data+=MD5_pack(0);len+=padLen+8;abcd=[0,1,2,3];x=[16];s=[4];for(k=0;k<len;k+=64){for(i=0,j=k;i<16;i++,j+=4){x[i]=data.charCodeAt(j)|(data.charCodeAt(j+1)<<8)|(data.charCodeAt(j+2)<<16)|(data.charCodeAt(j+3)<<24)}for(i=0;i<4;i++){s[i]=state[i]}for(i=0;i<4;i++){f=MD5_round[i][0];r=MD5_round[i][1];for(j=0;j<16;j++){MD5_apply_round(x,s,f,abcd,r[j]);tmp=abcd[0];abcd[0]=abcd[3];abcd[3]=abcd[2];abcd[2]=abcd[1];abcd[1]=tmp}}for(i=0;i<4;i++){state[i]+=s[i];state[i]=MD5_number(state[i])}}return MD5_pack(state[0])+MD5_pack(state[1])+MD5_pack(state[2])+MD5_pack(state[3])}function MD5_hexhash(data){var i,out,c;var bit128;bit128=MD5_hash(data);out="";for(i=0;i<16;i++){c=bit128.charCodeAt(i);out+="0123456789abcdef".charAt((c>>4)&15);out+="0123456789abcdef".charAt(c&15)}return out}return function(data){return MD5_hexhash(data)}})()};Ext.namespace("gxp.menu");gxp.menu.LayerMenu=Ext.extend(Ext.menu.Menu,{layerText:"Layer",layers:null,initComponent:function(){gxp.menu.LayerMenu.superclass.initComponent.apply(this,arguments);this.layers.on("add",this.onLayerAdd,this);this.onLayerAdd()},onRender:function(ct,position){gxp.menu.LayerMenu.superclass.onRender.apply(this,arguments)},beforeDestroy:function(){if(this.layers&&this.layers.on){this.layers.un("add",this.onLayerAdd,this)}delete this.layers;gxp.menu.LayerMenu.superclass.beforeDestroy.apply(this,arguments)},onLayerAdd:function(){this.removeAll();this.add({iconCls:"gxp-layer-visibility",text:this.layerText,canActivate:false},"-");this.layers.each(function(record){var layer=record.getLayer();if(layer.displayInLayerSwitcher){var item=new Ext.menu.CheckItem({text:record.get("title"),checked:record.getLayer().getVisibility(),group:record.get("group"),listeners:{checkchange:function(item,checked){record.getLayer().setVisibility(checked)}}});if(this.items.getCount()>2){this.insert(2,item)}else{this.add(item)}}},this)}});Ext.reg("gxp_layermenu",gxp.menu.LayerMenu);Ext.namespace("gxp");gxp.CrumbPanel=Ext.extend(Ext.TabPanel,{widths:null,enableTabScroll:true,initComponent:function(){gxp.CrumbPanel.superclass.initComponent.apply(this,arguments);this.widths={}},onBeforeAdd:function(cmp){gxp.CrumbPanel.superclass.onBeforeAdd.apply(this,arguments);if(cmp.shortTitle){cmp.title=cmp.shortTitle}},onAdd:function(cmp){gxp.CrumbPanel.superclass.onAdd.apply(this,arguments);this.setActiveTab(this.items.getCount()-1);cmp.on("hide",this.onCmpHide,this);cmp.getEl().dom.style.display=""},onRemove:function(cmp){gxp.CrumbPanel.superclass.onRemove.apply(this,arguments);cmp.un("hide",this.onCmpHide,this);var previousWidth=this.widths[this.get(this.items.getCount()-1).id];if(previousWidth&&previousWidth<this.getWidth()){this.setWidth(previousWidth);if(this.ownerCt){this.ownerCt.syncSize()}}cmp.getEl().dom.style.display="none";this.activeTab.doLayout()},onRender:function(cmp){if(!this.initialConfig.itemTpl){this.itemTpl=new Ext.Template('<li class="{cls} gxp-crumb" id="{id}"><div class="gxp-crumb-separator">\u00BB</div>','<a class="x-tab-right" href="#"><em class="x-tab-left">','<span class="x-tab-strip-inner"><span class="x-tab-strip-text {iconCls}">{text}</span></span>',"</em></a></li>")}gxp.CrumbPanel.superclass.onRender.apply(this,arguments);this.getEl().down("div").addClass("gxp-crumbpanel-header")},onCmpHide:function(cmp){var lastIndex=this.items.getCount()-1;if(this.items.indexOf(cmp)===lastIndex){this.setActiveTab(this.get(--lastIndex))}},setActiveTab:function(item){var index;if(Ext.isNumber(item)){index=item;item=this.get(index)}else{index=this.items.indexOf(item)}if(~index){var cmp,i;for(i=this.items.getCount()-1;i>index;--i){cmp=this.get(i);this.remove(cmp,cmp.closeAction!=="hide")}}var width=item.initialConfig.minWidth||item.initialConfig.width,previousWidth=this.getWidth();if(width>previousWidth){this.widths[this.get(index-1).id]=previousWidth;this.setWidth(width);if(this.ownerCt){this.ownerCt.syncSize()}}gxp.CrumbPanel.superclass.setActiveTab.apply(this,arguments)}});Ext.reg("gxp_crumbpanel",gxp.CrumbPanel);Ext.namespace("gxp");gxp.LayerUploadPanel=Ext.extend(Ext.FormPanel,{titleLabel:"Title",titleEmptyText:"Layer title",abstractLabel:"Description",abstractEmptyText:"Layer description",fileLabel:"Data",fieldEmptyText:"Browse for data archive...",uploadText:"Upload",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Uploading your data...",invalidFileExtensionText:"File extension must be one of: ",optionsText:"Options",workspaceLabel:"Workspace",workspaceEmptyText:"Default workspace",dataStoreLabel:"Store",dataStoreEmptyText:"Choose a store",dataStoreNewText:"Create new store",crsLabel:"CRS",crsEmptyText:"Coordinate Reference System ID",invalidCrsText:"CRS identifier should be an EPSG code (e.g. EPSG:4326)",fileUpload:true,validFileExtensions:[".zip",".tif",".tiff",".gz",".tar.bz2",".tar",".tgz",".tbz2"],defaultDataStore:null,constructor:function(config){config.errorReader={read:config.handleUploadResponse||this.handleUploadResponse.createDelegate(this)};gxp.LayerUploadPanel.superclass.constructor.call(this,config)},selectedWorkspace:null,initComponent:function(){this.items=[{xtype:"textfield",name:"title",fieldLabel:this.titleLabel,emptyText:this.titleEmptyText,allowBlank:true},{xtype:"textarea",name:"abstract",fieldLabel:this.abstractLabel,emptyText:this.abstractEmptyText,allowBlank:true},{xtype:"fileuploadfield",id:"file",anchor:"90%",emptyText:this.fieldEmptyText,fieldLabel:this.fileLabel,name:"file",buttonText:"",buttonCfg:{iconCls:"gxp-icon-filebrowse"},listeners:{fileselected:function(cmp,value){cmp.setValue(value.split(/[/\\]/).pop())}},validator:this.fileNameValidator.createDelegate(this)},{xtype:"fieldset",ref:"optionsFieldset",title:this.optionsText,checkboxToggle:true,collapsed:true,hidden:this.workspace!=undefined&&this.store!=undefined&&this.crs!=undefined,hideMode:"offsets",defaults:{anchor:"97%"},items:[this.createWorkspacesCombo(),this.createDataStoresCombo(),{xtype:"textfield",name:"nativeCRS",fieldLabel:this.crsLabel,emptyText:this.crsEmptyText,allowBlank:true,regex:/^epsg:\d+$/i,regexText:this.invalidCrsText}],listeners:{collapse:function(fieldset){fieldset.items.each(function(item){item.reset()})}}}];this.buttons=[{text:this.uploadText,handler:function(){var form=this.getForm();if(form.isValid()){var fields=form.getFieldValues(),jsonData={"import":{}};if(fields.workspace){jsonData["import"].targetWorkspace={workspace:{name:fields.workspace}}}if(Ext.isEmpty(fields.store)&&this.defaultDataStore){jsonData["import"].targetStore={dataStore:{name:this.defaultDataStore}}}else{if(!Ext.isEmpty(fields.store)&&fields.store!==this.dataStoreNewText){jsonData["import"].targetStore={dataStore:{name:fields.store}}}}Ext.Ajax.request({url:this.getUploadUrl(),method:"POST",jsonData:jsonData,success:function(response){this._import=response.getResponseHeader("Location");this.optionsFieldset.expand();form.submit({url:this._import+"/tasks?expand=all",waitMsg:this.waitMsgText,waitMsgTarget:true,reset:true,scope:this})},scope:this})}},scope:this}];this.addEvents("workspaceselected","datastoreselected","uploadcomplete");this.getDefaultDataStore("default");gxp.LayerUploadPanel.superclass.initComponent.call(this)},fileNameValidator:function(name){var valid=false;var ext,len=name.length;for(var i=0,ii=this.validFileExtensions.length;i<ii;++i){ext=this.validFileExtensions[i];if(name.slice(-ext.length).toLowerCase()===ext){valid=true;break}}return valid||this.invalidFileExtensionText+"<br/>"+this.validFileExtensions.join(", ")},createWorkspacesCombo:function(){return{xtype:"combo",name:"workspace",ref:"../workspace",fieldLabel:this.workspaceLabel,store:new Ext.data.JsonStore({url:this.getWorkspacesUrl(),autoLoad:true,root:"workspaces.workspace",fields:["name","href"]}),displayField:"name",valueField:"name",mode:"local",allowBlank:true,triggerAction:"all",forceSelection:true,listeners:{select:function(combo,record,index){this.getDefaultDataStore(record.get("name"));this.fireEvent("workspaceselected",this,record)},scope:this}}},createDataStoresCombo:function(){var store=new Ext.data.JsonStore({autoLoad:false,root:"dataStores.dataStore",fields:["name","href"]});this.on({workspaceselected:function(panel,record){combo.reset();var workspaceUrl=record.get("href");store.removeAll();store.proxy=new Ext.data.HttpProxy({url:workspaceUrl.split(".json").shift()+"/datastores.json"});store.proxy.on("loadexception",addDefault,this);store.load()},scope:this});var addDefault=function(){var defaultData={name:this.dataStoreNewText};var r=new store.recordType(defaultData);store.insert(0,r);store.proxy&&store.proxy.un("loadexception",addDefault,this)};store.on("load",addDefault,this);var combo=new Ext.form.ComboBox({name:"store",ref:"../dataStore",emptyText:this.dataStoreEmptyText,fieldLabel:this.dataStoreLabel,store:store,displayField:"name",valueField:"name",mode:"local",allowBlank:true,triggerAction:"all",forceSelection:true,listeners:{select:function(combo,record,index){this.fireEvent("datastoreselected",this,record)},scope:this}});return combo},getDefaultDataStore:function(workspace){Ext.Ajax.request({url:this.url+"/workspaces/"+workspace+"/datastores/default.json",callback:function(options,success,response){this.defaultDataStore=null;if(response.status===200){var json=Ext.decode(response.responseText);if(workspace==="default"&&json.dataStore&&json.dataStore.workspace){this.workspace.setValue(json.dataStore.workspace.name);var store=this.workspace.store;var data={name:json.dataStore.workspace.name,href:json.dataStore.workspace.href};var r=new store.recordType(data);this.fireEvent("workspaceselected",this,r)}if(json.dataStore&&json.dataStore.enabled===true&&!/file/i.test(json.dataStore.type)){this.defaultDataStore=json.dataStore.name;this.dataStore.setValue(this.defaultDataStore)}}},scope:this})},getUploadUrl:function(){return this.url+"/imports"},getWorkspacesUrl:function(){return this.url+"/workspaces.json"},handleUploadResponse:function(response){var obj=this.parseResponseText(response.responseText),records,tasks,task,msg,i,formData=this.getForm().getFieldValues(),success=!!obj;if(obj){if(typeof obj==="string"){success=false;msg=obj}else{tasks=obj.tasks||[obj.task];if(tasks.length===0){success=false;msg="Upload contains no suitable files."}else{for(i=tasks.length-1;i>=0;--i){task=tasks[i];if(!task){success=false;msg="Unknown upload error"}else{if(task.state==="NO_FORMAT"){success=false;msg="Upload contains no suitable files."}else{if(task.state==="NO_CRS"&&!formData.nativeCRS){success=false;msg="Coordinate Reference System (CRS) of source file "+task.data.file+" could not be determined. Please specify manually."}}}}}}}if(!success){records=[{data:{id:"file",msg:msg||this.uploadFailedText}}]}else{var itemModified=!!(formData.title||formData["abstract"]||formData.nativeCRS);if(itemModified&&tasks[0].target.dataStore){this.waitMsg=new Ext.LoadMask((this.ownerCt||this).getEl(),{msg:this.processingUploadText});this.waitMsg.show();var payload={title:formData.title||undefined,"abstract":formData["abstract"]||undefined,srs:formData.nativeCRS||undefined};Ext.Ajax.request({method:"PUT",url:tasks[0].layer.href,jsonData:payload,success:this.finishUpload,failure:function(response){if(this.waitMsg){this.waitMsg.hide()}var errors=[];try{var json=Ext.decode(response.responseText);if(json.errors){for(var i=0,ii=json.errors.length;i<ii;++i){errors.push({id:~json.errors[i].indexOf("SRS")?"nativeCRS":"file",msg:json.errors[i]})}}}catch(e){errors.push({id:"file",msg:response.responseText})}this.getForm().markInvalid(errors)},scope:this})}else{this.finishUpload()}}return{success:false,records:records}},finishUpload:function(){Ext.Ajax.request({method:"POST",url:this._import,failure:this.handleFailure,success:this.handleUploadSuccess,scope:this})},parseResponseText:function(text){var obj;try{obj=Ext.decode(text)}catch(err){var match=text.match(/^\s*<pre[^>]*>(.*)<\/pre>\s*/);if(match){try{obj=Ext.decode(match[1])}catch(err){obj=match[1]}}}return obj},handleUploadSuccess:function(response){Ext.Ajax.request({method:"GET",url:this._import+"?expand=all",failure:this.handleFailure,success:function(response){if(this.waitMsg){this.waitMsg.hide()}this.getForm().reset();var details=Ext.decode(response.responseText);this.fireEvent("uploadcomplete",this,details);delete this._import},scope:this})},handleFailure:function(response){if(response&&response.status===1223){this.handleUploadSuccess(response)}else{if(this.waitMsg){this.waitMsg.hide()}this.getForm().markInvalid([{file:this.uploadFailedText}])}}});Ext.reg("gxp_layeruploadpanel",gxp.LayerUploadPanel);OpenLayers.Format.WKT=OpenLayers.Class(OpenLayers.Format,{initialize:function(options){this.regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,spaces:/\s+/,parenComma:/\)\s*,\s*\(/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/};OpenLayers.Format.prototype.initialize.apply(this,[options])},read:function(wkt){var features,type,str;wkt=wkt.replace(/[\n\r]/g," ");var matches=this.regExes.typeStr.exec(wkt);if(matches){type=matches[1].toLowerCase();str=matches[2];if(this.parse[type]){features=this.parse[type].apply(this,[str])}if(this.internalProjection&&this.externalProjection){if(features&&features.CLASS_NAME=="OpenLayers.Feature.Vector"){features.geometry.transform(this.externalProjection,this.internalProjection)}else{if(features&&type!="geometrycollection"&&typeof features=="object"){for(var i=0,len=features.length;i<len;i++){var component=features[i];component.geometry.transform(this.externalProjection,this.internalProjection)}}}}}return features},write:function(features){var collection,geometry,isCollection;if(features.constructor==Array){collection=features;isCollection=true}else{collection=[features];isCollection=false}var pieces=[];if(isCollection){pieces.push("GEOMETRYCOLLECTION(")}for(var i=0,len=collection.length;i<len;++i){if(isCollection&&i>0){pieces.push(",")}geometry=collection[i].geometry;pieces.push(this.extractGeometry(geometry))}if(isCollection){pieces.push(")")}return pieces.join("")},extractGeometry:function(geometry){var type=geometry.CLASS_NAME.split(".")[2].toLowerCase();if(!this.extract[type]){return null}if(this.internalProjection&&this.externalProjection){geometry=geometry.clone();geometry.transform(this.internalProjection,this.externalProjection)}var wktType=type=="collection"?"GEOMETRYCOLLECTION":type.toUpperCase();var data=wktType+"("+this.extract[type].apply(this,[geometry])+")";return data},extract:{point:function(point){return point.x+" "+point.y},multipoint:function(multipoint){var array=[];for(var i=0,len=multipoint.components.length;i<len;++i){array.push("("+this.extract.point.apply(this,[multipoint.components[i]])+")")}return array.join(",")},linestring:function(linestring){var array=[];for(var i=0,len=linestring.components.length;i<len;++i){array.push(this.extract.point.apply(this,[linestring.components[i]]))}return array.join(",")},multilinestring:function(multilinestring){var array=[];for(var i=0,len=multilinestring.components.length;i<len;++i){array.push("("+this.extract.linestring.apply(this,[multilinestring.components[i]])+")")}return array.join(",")},polygon:function(polygon){var array=[];for(var i=0,len=polygon.components.length;i<len;++i){array.push("("+this.extract.linestring.apply(this,[polygon.components[i]])+")")}return array.join(",")},multipolygon:function(multipolygon){var array=[];for(var i=0,len=multipolygon.components.length;i<len;++i){array.push("("+this.extract.polygon.apply(this,[multipolygon.components[i]])+")")}return array.join(",")},collection:function(collection){var array=[];for(var i=0,len=collection.components.length;i<len;++i){array.push(this.extractGeometry.apply(this,[collection.components[i]]))}return array.join(",")}},parse:{point:function(str){var coords=OpenLayers.String.trim(str).split(this.regExes.spaces);return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(coords[0],coords[1]))},multipoint:function(str){var point;var points=OpenLayers.String.trim(str).split(",");var components=[];for(var i=0,len=points.length;i<len;++i){point=points[i].replace(this.regExes.trimParens,"$1");components.push(this.parse.point.apply(this,[point]).geometry)}return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiPoint(components))},linestring:function(str){var points=OpenLayers.String.trim(str).split(",");var components=[];for(var i=0,len=points.length;i<len;++i){components.push(this.parse.point.apply(this,[points[i]]).geometry)}return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString(components))},multilinestring:function(str){var line;var lines=OpenLayers.String.trim(str).split(this.regExes.parenComma);var components=[];for(var i=0,len=lines.length;i<len;++i){line=lines[i].replace(this.regExes.trimParens,"$1");components.push(this.parse.linestring.apply(this,[line]).geometry)}return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiLineString(components))},polygon:function(str){var ring,linestring,linearring;var rings=OpenLayers.String.trim(str).split(this.regExes.parenComma);var components=[];for(var i=0,len=rings.length;i<len;++i){ring=rings[i].replace(this.regExes.trimParens,"$1");linestring=this.parse.linestring.apply(this,[ring]).geometry;linearring=new OpenLayers.Geometry.LinearRing(linestring.components);components.push(linearring)}return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon(components))},multipolygon:function(str){var polygon;var polygons=OpenLayers.String.trim(str).split(this.regExes.doubleParenComma);var components=[];for(var i=0,len=polygons.length;i<len;++i){polygon=polygons[i].replace(this.regExes.trimParens,"$1");components.push(this.parse.polygon.apply(this,[polygon]).geometry)}return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiPolygon(components))},geometrycollection:function(str){str=str.replace(/,\s*([A-Za-z])/g,"|$1");var wktArray=OpenLayers.String.trim(str).split("|");var components=[];for(var i=0,len=wktArray.length;i<len;++i){components.push(OpenLayers.Format.WKT.prototype.read.apply(this,[wktArray[i]]))}return components}},CLASS_NAME:"OpenLayers.Format.WKT"});OpenLayers.Format.CQL=(function(){var tokens=["PROPERTY","COMPARISON","VALUE","LOGICAL"],patterns={PROPERTY:/^[_a-zA-Z]\w*/,COMPARISON:/^(=|<>|<=|<|>=|>|LIKE)/i,IS_NULL:/^IS NULL/i,COMMA:/^,/,LOGICAL:/^(AND|OR)/i,VALUE:/^('([^']|'')*'|\d+(\.\d*)?|\.\d+)/,LPAREN:/^\(/,RPAREN:/^\)/,SPATIAL:/^(BBOX|INTERSECTS|DWITHIN|WITHIN|CONTAINS)/i,NOT:/^NOT/i,BETWEEN:/^BETWEEN/i,GEOMETRY:function(text){var type=/^(POINT|LINESTRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION)/.exec(text);if(type){var len=text.length;var idx=text.indexOf("(",type[0].length);if(idx>-1){var depth=1;while(idx<len&&depth>0){idx++;switch(text.charAt(idx)){case"(":depth++;break;case")":depth--;break;default:}}}return[text.substr(0,idx+1)]}},END:/^$/},follows={LPAREN:["GEOMETRY","SPATIAL","PROPERTY","VALUE","LPAREN"],RPAREN:["NOT","LOGICAL","END","RPAREN"],PROPERTY:["COMPARISON","BETWEEN","COMMA","IS_NULL"],BETWEEN:["VALUE"],IS_NULL:["END"],COMPARISON:["VALUE"],COMMA:["GEOMETRY","VALUE","PROPERTY"],VALUE:["LOGICAL","COMMA","RPAREN","END"],SPATIAL:["LPAREN"],LOGICAL:["NOT","VALUE","SPATIAL","PROPERTY","LPAREN"],NOT:["PROPERTY","LPAREN"],GEOMETRY:["COMMA","RPAREN"]},operators={"=":OpenLayers.Filter.Comparison.EQUAL_TO,"<>":OpenLayers.Filter.Comparison.NOT_EQUAL_TO,"<":OpenLayers.Filter.Comparison.LESS_THAN,"<=":OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,">":OpenLayers.Filter.Comparison.GREATER_THAN,">=":OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,LIKE:OpenLayers.Filter.Comparison.LIKE,BETWEEN:OpenLayers.Filter.Comparison.BETWEEN,"IS NULL":OpenLayers.Filter.Comparison.IS_NULL},operatorReverse={},logicals={AND:OpenLayers.Filter.Logical.AND,OR:OpenLayers.Filter.Logical.OR},logicalReverse={},precedence={RPAREN:3,LOGICAL:2,COMPARISON:1};var i;for(i in operators){if(operators.hasOwnProperty(i)){operatorReverse[operators[i]]=i}}for(i in logicals){if(logicals.hasOwnProperty(i)){logicalReverse[logicals[i]]=i}}function tryToken(text,pattern){if(pattern instanceof RegExp){return pattern.exec(text)}else{return pattern(text)}}function nextToken(text,tokens){var i,token,len=tokens.length;for(i=0;i<len;i++){token=tokens[i];var pat=patterns[token];var matches=tryToken(text,pat);if(matches){var match=matches[0];var remainder=text.substr(match.length).replace(/^\s*/,"");return{type:token,text:match,remainder:remainder}}}var msg="ERROR: In parsing: ["+text+"], expected one of: ";for(i=0;i<len;i++){token=tokens[i];msg+="\n    "+token+": "+patterns[token]}throw new Error(msg)}function tokenize(text){var results=[];var token,expect=["NOT","GEOMETRY","SPATIAL","PROPERTY","LPAREN"];do{token=nextToken(text,expect);text=token.remainder;expect=follows[token.type];if(token.type!="END"&&!expect){throw new Error("No follows list for "+token.type)}results.push(token)}while(token.type!="END");return results}function buildAst(tokens){var operatorStack=[],postfix=[];while(tokens.length){var tok=tokens.shift();switch(tok.type){case"PROPERTY":case"GEOMETRY":case"VALUE":postfix.push(tok);break;case"COMPARISON":case"BETWEEN":case"IS_NULL":case"LOGICAL":var p=precedence[tok.type];while(operatorStack.length>0&&(precedence[operatorStack[operatorStack.length-1].type]<=p)){postfix.push(operatorStack.pop())}operatorStack.push(tok);break;case"SPATIAL":case"NOT":case"LPAREN":operatorStack.push(tok);break;case"RPAREN":while(operatorStack.length>0&&(operatorStack[operatorStack.length-1].type!="LPAREN")){postfix.push(operatorStack.pop())}operatorStack.pop();if(operatorStack.length>0&&operatorStack[operatorStack.length-1].type=="SPATIAL"){postfix.push(operatorStack.pop())}case"COMMA":case"END":break;default:throw new Error("Unknown token type "+tok.type)}}while(operatorStack.length>0){postfix.push(operatorStack.pop())}function buildTree(){var tok=postfix.pop();switch(tok.type){case"LOGICAL":var rhs=buildTree(),lhs=buildTree();return new OpenLayers.Filter.Logical({filters:[lhs,rhs],type:logicals[tok.text.toUpperCase()]});case"NOT":var operand=buildTree();return new OpenLayers.Filter.Logical({filters:[operand],type:OpenLayers.Filter.Logical.NOT});case"BETWEEN":var min,max,property;postfix.pop();max=buildTree();min=buildTree();property=buildTree();return new OpenLayers.Filter.Comparison({property:property,lowerBoundary:min,upperBoundary:max,type:OpenLayers.Filter.Comparison.BETWEEN});case"COMPARISON":var value=buildTree(),property=buildTree();return new OpenLayers.Filter.Comparison({property:property,value:value,type:operators[tok.text.toUpperCase()]});case"IS_NULL":var property=buildTree();return new OpenLayers.Filter.Comparison({property:property,type:operators[tok.text.toUpperCase()]});case"VALUE":var match=tok.text.match(/^'(.*)'$/);if(match){return match[1].replace(/''/g,"'")}else{return Number(tok.text)}case"SPATIAL":switch(tok.text.toUpperCase()){case"BBOX":var maxy=buildTree(),maxx=buildTree(),miny=buildTree(),minx=buildTree(),prop=buildTree();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:prop,value:OpenLayers.Bounds.fromArray([minx,miny,maxx,maxy])});case"INTERSECTS":var value=buildTree(),property=buildTree();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.INTERSECTS,property:property,value:value});case"WITHIN":var value=buildTree(),property=buildTree();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.WITHIN,property:property,value:value});case"CONTAINS":var value=buildTree(),property=buildTree();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.CONTAINS,property:property,value:value});case"DWITHIN":var distance=buildTree(),value=buildTree(),property=buildTree();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.DWITHIN,value:value,property:property,distance:Number(distance)})}case"GEOMETRY":return OpenLayers.Geometry.fromWKT(tok.text);default:return tok.text}}var result=buildTree();if(postfix.length>0){var msg="Remaining tokens after building AST: \n";for(var i=postfix.length-1;i>=0;i--){msg+=postfix[i].type+": "+postfix[i].text+"\n"}throw new Error(msg)}return result}return OpenLayers.Class(OpenLayers.Format,{read:function(text){var result=buildAst(tokenize(text));if(this.keepData){this.data=result}return result},write:function(filter){if(filter instanceof OpenLayers.Geometry){return filter.toString()}switch(filter.CLASS_NAME){case"OpenLayers.Filter.Spatial":switch(filter.type){case OpenLayers.Filter.Spatial.BBOX:return"BBOX("+filter.property+","+filter.value.toBBOX()+")";case OpenLayers.Filter.Spatial.DWITHIN:return"DWITHIN("+filter.property+", "+this.write(filter.value)+", "+filter.distance+")";case OpenLayers.Filter.Spatial.WITHIN:return"WITHIN("+filter.property+", "+this.write(filter.value)+")";case OpenLayers.Filter.Spatial.INTERSECTS:return"INTERSECTS("+filter.property+", "+this.write(filter.value)+")";case OpenLayers.Filter.Spatial.CONTAINS:return"CONTAINS("+filter.property+", "+this.write(filter.value)+")";default:throw new Error("Unknown spatial filter type: "+filter.type)}case"OpenLayers.Filter.Logical":if(filter.type==OpenLayers.Filter.Logical.NOT){return"NOT ("+this.write(filter.filters[0])+")"}else{var res="(";var first=true;for(var i=0;i<filter.filters.length;i++){if(first){first=false}else{res+=") "+logicalReverse[filter.type]+" ("}res+=this.write(filter.filters[i])}return res+")"}case"OpenLayers.Filter.Comparison":if(filter.type==OpenLayers.Filter.Comparison.BETWEEN){return filter.property+" BETWEEN "+this.write(filter.lowerBoundary)+" AND "+this.write(filter.upperBoundary)}else{return(filter.value!==null)?filter.property+" "+operatorReverse[filter.type]+" "+this.write(filter.value):filter.property+" "+operatorReverse[filter.type]}case undefined:if(typeof filter==="string"){return"'"+filter.replace(/'/g,"''")+"'"}else{if(typeof filter==="number"){return String(filter)}}default:throw new Error("Can't encode: "+filter.CLASS_NAME+" "+filter)}},CLASS_NAME:"OpenLayers.Format.CQL"})})();Ext.namespace("gxp");gxp.FilterBuilder=Ext.extend(Ext.Container,{builderTypeNames:["any","all","none","not all"],allowedBuilderTypes:null,allowBlank:false,caseInsensitiveMatch:false,preComboText:"Match",postComboText:"of the following:",cls:"gxp-filterbuilder",builderType:null,childFilterContainer:null,customizeFilterOnInit:true,addConditionText:"add condition",addGroupText:"add group",removeConditionText:"remove condition",allowGroups:true,initComponent:function(){var defConfig={defaultBuilderType:gxp.FilterBuilder.ANY_OF};Ext.applyIf(this,defConfig);if(this.customizeFilterOnInit){this.filter=this.customizeFilter(this.filter)}this.builderType=this.getBuilderType();this.items=[{xtype:"container",layout:"form",ref:"form",defaults:{anchor:"100%"},hideLabels:true,items:[{xtype:"compositefield",style:"padding-left: 2px",items:[{xtype:"label",style:"padding-top: 0.3em",text:this.preComboText},this.createBuilderTypeCombo(),{xtype:"label",style:"padding-top: 0.3em",text:this.postComboText}]},this.createChildFiltersPanel(),{xtype:"toolbar",items:this.createToolBar()}]}];this.addEvents("change");gxp.FilterBuilder.superclass.initComponent.call(this)},createToolBar:function(){var bar=[{text:this.addConditionText,iconCls:"add",handler:function(){this.addCondition()},scope:this}];if(this.allowGroups){bar.push({text:this.addGroupText,iconCls:"add",handler:function(){this.addCondition(true)},scope:this})}return bar},getFilter:function(){var filter;if(this.filter){filter=this.filter.clone();if(filter instanceof OpenLayers.Filter.Logical){filter=this.cleanFilter(filter)}}return filter},cleanFilter:function(filter){if(filter instanceof OpenLayers.Filter.Logical){if(filter.type!==OpenLayers.Filter.Logical.NOT&&filter.filters.length===1){filter=this.cleanFilter(filter.filters[0])}else{var child;for(var i=0,len=filter.filters.length;i<len;++i){child=filter.filters[i];if(child instanceof OpenLayers.Filter.Logical){child=this.cleanFilter(child);if(child){filter.filters[i]=child}else{filter=child;break}}else{if(!child||child.type===null||child.property===null||child[filter.type===OpenLayers.Filter.Comparison.BETWEEN?"lowerBoundary":"value"]===null){filter=false;break}}}}}else{if(!filter||filter.type===null||filter.property===null||filter[filter.type===OpenLayers.Filter.Comparison.BETWEEN?"lowerBoundary":"value"]===null){filter=false}}return filter},customizeFilter:function(filter){if(!filter){filter=this.wrapFilter(this.createDefaultFilter())}else{filter=this.cleanFilter(filter);var child,i,len;switch(filter.type){case OpenLayers.Filter.Logical.AND:case OpenLayers.Filter.Logical.OR:if(!filter.filters||filter.filters.length===0){filter.filters=[this.createDefaultFilter()]}else{for(i=0,len=filter.filters.length;i<len;++i){child=filter.filters[i];if(child instanceof OpenLayers.Filter.Logical){filter.filters[i]=this.customizeFilter(child)}}}filter=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[filter]});break;case OpenLayers.Filter.Logical.NOT:if(!filter.filters||filter.filters.length===0){filter.filters=[new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[this.createDefaultFilter()]})]}else{child=filter.filters[0];if(child instanceof OpenLayers.Filter.Logical){if(child.type!==OpenLayers.Filter.Logical.NOT){var grandchild;for(i=0,len=child.filters.length;i<len;++i){grandchild=child.filters[i];if(grandchild instanceof OpenLayers.Filter.Logical){child.filters[i]=this.customizeFilter(grandchild)}}}else{if(child.filters&&child.filters.length>0){filter=this.customizeFilter(child.filters[0])}else{filter=this.wrapFilter(this.createDefaultFilter())}}}else{var type;if(this.defaultBuilderType===gxp.FilterBuilder.NOT_ALL_OF){type=OpenLayers.Filter.Logical.AND}else{type=OpenLayers.Filter.Logical.OR}filter.filters=[new OpenLayers.Filter.Logical({type:type,filters:[child]})]}}break;default:filter=this.wrapFilter(filter);break}}return filter},createDefaultFilter:function(){return new OpenLayers.Filter.Comparison({matchCase:!this.caseInsensitiveMatch})},wrapFilter:function(filter){var type;if(this.defaultBuilderType===gxp.FilterBuilder.ALL_OF){type=OpenLayers.Filter.Logical.AND}else{type=OpenLayers.Filter.Logical.OR}return new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[new OpenLayers.Filter.Logical({type:type,filters:[filter]})]})},addCondition:function(group){var filter,type;if(group){type="gxp_filterbuilder";filter=this.wrapFilter(this.createDefaultFilter())}else{type="gxp_filterfield";filter=this.createDefaultFilter()}var newChild=this.newRow({xtype:type,filter:filter,columnWidth:1,attributes:this.attributes,allowBlank:group?undefined:this.allowBlank,customizeFilterOnInit:group&&false,caseInsensitiveMatch:this.caseInsensitiveMatch,listeners:{change:function(){this.fireEvent("change",this)},scope:this}});this.childFilterContainer.add(newChild);this.filter.filters[0].filters.push(filter);this.childFilterContainer.doLayout()},removeCondition:function(item,filter){var parent=this.filter.filters[0].filters;if(parent.length>0){parent.remove(filter);this.childFilterContainer.remove(item,true)}if(parent.length===0){this.addCondition()}this.fireEvent("change",this)},createBuilderTypeCombo:function(){var types=this.allowedBuilderTypes||[gxp.FilterBuilder.ANY_OF,gxp.FilterBuilder.ALL_OF,gxp.FilterBuilder.NONE_OF];var numTypes=types.length;var data=new Array(numTypes);var type;for(var i=0;i<numTypes;++i){type=types[i];data[i]=[type,this.builderTypeNames[type]]}return{xtype:"combo",store:new Ext.data.SimpleStore({data:data,fields:["value","name"]}),value:this.builderType,ref:"../../builderTypeCombo",displayField:"name",valueField:"value",triggerAction:"all",mode:"local",listeners:{select:function(combo,record){this.changeBuilderType(record.get("value"));this.fireEvent("change",this)},scope:this},width:60}},changeBuilderType:function(type){if(type!==this.builderType){this.builderType=type;var child=this.filter.filters[0];switch(type){case gxp.FilterBuilder.ANY_OF:this.filter.type=OpenLayers.Filter.Logical.OR;child.type=OpenLayers.Filter.Logical.OR;break;case gxp.FilterBuilder.ALL_OF:this.filter.type=OpenLayers.Filter.Logical.OR;child.type=OpenLayers.Filter.Logical.AND;break;case gxp.FilterBuilder.NONE_OF:this.filter.type=OpenLayers.Filter.Logical.NOT;child.type=OpenLayers.Filter.Logical.OR;break;case gxp.FilterBuilder.NOT_ALL_OF:this.filter.type=OpenLayers.Filter.Logical.NOT;child.type=OpenLayers.Filter.Logical.AND;break}}},createChildFiltersPanel:function(){this.childFilterContainer=new Ext.Container();var grandchildren=this.filter.filters[0].filters;var grandchild;for(var i=0,len=grandchildren.length;i<len;++i){grandchild=grandchildren[i];var fieldCfg={xtype:"gxp_filterfield",allowBlank:this.allowBlank,columnWidth:1,filter:grandchild,attributes:this.attributes,listeners:{change:function(){this.fireEvent("change",this)},scope:this}};var containerCfg=Ext.applyIf(grandchild instanceof OpenLayers.Filter.Logical?{xtype:"gxp_filterbuilder"}:{xtype:"container",layout:"form",hideLabels:true,items:fieldCfg},fieldCfg);this.childFilterContainer.add(this.newRow(containerCfg))}return this.childFilterContainer},newRow:function(filterContainer){var ct=new Ext.Container({layout:"column",items:[{xtype:"container",width:28,height:26,style:"padding-left: 2px",items:{xtype:"button",tooltip:this.removeConditionText,iconCls:"delete",handler:function(btn){this.removeCondition(ct,filterContainer.filter)},scope:this}},filterContainer]});return ct},getBuilderType:function(){var type=this.defaultBuilderType;if(this.filter){var child=this.filter.filters[0];if(this.filter.type===OpenLayers.Filter.Logical.NOT){switch(child.type){case OpenLayers.Filter.Logical.OR:type=gxp.FilterBuilder.NONE_OF;break;case OpenLayers.Filter.Logical.AND:type=gxp.FilterBuilder.NOT_ALL_OF;break}}else{switch(child.type){case OpenLayers.Filter.Logical.OR:type=gxp.FilterBuilder.ANY_OF;break;case OpenLayers.Filter.Logical.AND:type=gxp.FilterBuilder.ALL_OF;break}}}return type},setFilter:function(filter){this.filter=this.customizeFilter(filter);this.changeBuilderType(this.getBuilderType());this.builderTypeCombo.setValue(this.builderType);this.form.remove(this.childFilterContainer);this.form.insert(1,this.createChildFiltersPanel());this.form.doLayout();this.fireEvent("change",this)}});gxp.FilterBuilder.ANY_OF=0;gxp.FilterBuilder.ALL_OF=1;gxp.FilterBuilder.NONE_OF=2;gxp.FilterBuilder.NOT_ALL_OF=3;Ext.reg("gxp_filterbuilder",gxp.FilterBuilder);Ext.namespace("gxp");gxp.WMSLayerPanel=Ext.extend(Ext.TabPanel,{layerRecord:null,source:null,styling:true,sameOriginStyling:true,rasterStyling:false,transparent:null,editableStyles:false,activeTab:0,border:false,imageFormats:/png|gif|jpe?g/i,aboutText:"About",titleText:"Title",attributionText:"Attribution",nameText:"Name",descriptionText:"Description",displayText:"Display",opacityText:"Opacity",formatText:"Tile format",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",transparentText:"Transparent",cacheText:"Caching",cacheFieldText:"Use cached tiles",stylesText:"Available Styles",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile",initComponent:function(){this.cqlFormat=new OpenLayers.Format.CQL();if(this.source){this.source.getSchema(this.layerRecord,function(attributeStore){if(attributeStore!==false){var filter=this.layerRecord.getLayer().params.CQL_FILTER;this.filterBuilder=new gxp.FilterBuilder({filter:filter&&this.cqlFormat.read(filter),allowGroups:false,listeners:{afterrender:function(){this.filterBuilder.cascade(function(item){if(item.getXType()==="toolbar"){item.addText(this.cqlPrefixText);item.addButton({text:this.cqlText,handler:this.switchToCQL,scope:this})}},this)},change:function(builder){var filter=builder.getFilter();var cql=null;if(filter!==false){cql=this.cqlFormat.write(filter)}this.layerRecord.getLayer().mergeNewParams({CQL_FILTER:cql})},scope:this},attributes:attributeStore});this.filterFieldset.add(this.filterBuilder);this.filterFieldset.doLayout()}},this)}this.addEvents("change");this.items=[this.createAboutPanel(),this.createDisplayPanel()];if(this.styling&&gxp.WMSStylesDialog&&this.layerRecord.get("styles")){var url=this.layerRecord.get("restUrl");if(!url){url=(this.source||this.layerRecord.get("layer")).url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest")}if(this.sameOriginStyling){this.editableStyles=url.charAt(0)==="/"}else{this.editableStyles=true}this.items.push(this.createStylesPanel(url))}gxp.WMSLayerPanel.superclass.initComponent.call(this)},switchToCQL:function(){var filter=this.filterBuilder.getFilter();var CQL="";if(filter!==false){CQL=this.cqlFormat.write(filter)}this.filterBuilder.hide();this.cqlField.setValue(CQL);this.cqlField.show();this.cqlToolbar.show()},switchToFilterBuilder:function(){var filter=null;try{filter=this.cqlFormat.read(this.cqlField.getValue())}catch(e){}this.cqlField.hide();this.cqlToolbar.hide();this.filterBuilder.show();if(filter!==null){this.filterBuilder.setFilter(filter)}},createStylesPanel:function(url){var config=gxp.WMSStylesDialog.createGeoServerStylerConfig(this.layerRecord,url);if(this.rasterStyling===true){config.plugins.push({ptype:"gxp_wmsrasterstylesdialog"})}var ownerCt=this.ownerCt;if(!(ownerCt.ownerCt instanceof Ext.Window)){config.dialogCls=Ext.Panel;config.showDlg=function(dlg){dlg.layout="fit";dlg.autoHeight=false;ownerCt.add(dlg)}}return Ext.apply(config,{title:this.stylesText,style:"padding: 10px",editable:false})},createAboutPanel:function(){return{title:this.aboutText,bodyStyle:{padding:"10px"},defaults:{border:false},items:[{layout:"form",labelWidth:70,items:[{xtype:"textfield",fieldLabel:this.titleText,anchor:"99%",value:this.layerRecord.get("title"),listeners:{change:function(field){this.layerRecord.set("title",field.getValue());this.layerRecord.commit();this.fireEvent("change")},scope:this}},{xtype:"textfield",fieldLabel:this.nameText,anchor:"99%",value:this.layerRecord.get("name"),readOnly:true},{xtype:"textfield",fieldLabel:this.attributionText,anchor:"99%",listeners:{change:function(field){var layer=this.layerRecord.getLayer();layer.attribution=field.getValue();layer.map.events.triggerEvent("changelayer",{layer:layer,property:"attribution"});this.fireEvent("change")},scope:this},value:this.layerRecord.getLayer().attribution}]},{layout:"form",labelAlign:"top",items:[{xtype:"textarea",fieldLabel:this.descriptionText,grow:true,growMax:150,anchor:"99%",value:this.layerRecord.get("abstract"),readOnly:true}]}]}},onFormatChange:function(combo){var layer=this.layerRecord.getLayer();var format=combo.getValue();layer.mergeNewParams({format:format});var cb=this.transparentCb;if(format=="image/jpeg"){this.transparent=cb.getValue();cb.setValue(false)}else{if(this.transparent!==null){cb.setValue(this.transparent);this.transparent=null}}cb.setDisabled(format=="image/jpeg");this.fireEvent("change")},addScaleOptions:function(layer,options){layer.alwaysInRange=null;layer.addOptions(options);layer.display();layer.redraw()},createDisplayPanel:function(){var record=this.layerRecord;var layer=record.getLayer();var opacity=layer.opacity;if(opacity==null){opacity=1}var formats=[];var currentFormat=layer.params.FORMAT.toLowerCase();Ext.each(record.get("formats"),function(format){if(this.imageFormats.test(format)){formats.push(format.toLowerCase())}},this);if(formats.indexOf(currentFormat)===-1){formats.push(currentFormat)}var transparent=layer.params.TRANSPARENT;transparent=(transparent==="true"||transparent===true);return{title:this.displayText,layout:"form",bodyStyle:{padding:"10px"},defaults:{labelWidth:70},items:[{xtype:"fieldset",title:this.displayOptionsText,items:[{xtype:"gx_opacityslider",name:"opacity",anchor:"99%",isFormField:true,fieldLabel:this.opacityText,listeners:{change:function(){this.fireEvent("change")},scope:this},layer:this.layerRecord},{xtype:"compositefield",fieldLabel:this.formatText,anchor:"99%",items:[{xtype:"combo",width:90,listWidth:150,store:formats,value:currentFormat,mode:"local",triggerAction:"all",editable:false,listeners:{select:this.onFormatChange,scope:this}},{xtype:"checkbox",ref:"../../../transparentCb",checked:transparent,listeners:{check:function(checkbox,checked){layer.mergeNewParams({transparent:checked?"true":"false"});this.fireEvent("change")},scope:this}},{xtype:"label",cls:"gxp-layerproperties-label",text:this.transparentText}]},{xtype:"compositefield",fieldLabel:this.singleTileText,anchor:"99%",items:[{xtype:"checkbox",checked:this.layerRecord.get("layer").singleTile,listeners:{check:function(checkbox,checked){layer.addOptions({singleTile:checked});this.fireEvent("change")},scope:this}},{xtype:"label",cls:"gxp-layerproperties-label",text:this.singleTileFieldText}]},{xtype:"compositefield",anchor:"99%",hidden:this.layerRecord.get("layer").params.TILED==null,fieldLabel:this.cacheText,items:[{xtype:"checkbox",checked:(this.layerRecord.get("layer").params.TILED===true),listeners:{check:function(checkbox,checked){var layer=this.layerRecord.get("layer");layer.mergeNewParams({TILED:checked});this.fireEvent("change")},scope:this}},{xtype:"label",cls:"gxp-layerproperties-label",text:this.cacheFieldText}]},{xtype:"combo",fieldLabel:this.infoFormatText,emptyText:this.infoFormatEmptyText,store:record.get("infoFormats"),value:record.get("infoFormat"),hidden:(record.get("infoFormats")===undefined),mode:"local",listWidth:150,triggerAction:"all",editable:false,anchor:"99%",listeners:{select:function(combo){var infoFormat=combo.getValue();record.set("infoFormat",infoFormat);this.fireEvent("change")}},scope:this}]},{xtype:"fieldset",title:this.queryText,hideLabels:true,ref:"../filterFieldset",listeners:{expand:function(){this.layerRecord.getLayer().mergeNewParams({CQL_FILTER:this.cqlFilter})},collapse:function(){this.cqlFilter=this.layerRecord.getLayer().params.CQL_FILTER;this.layerRecord.getLayer().mergeNewParams({CQL_FILTER:null})},scope:this},hidden:this.source===null,checkboxToggle:true,collapsed:!this.layerRecord.getLayer().params.CQL_FILTER,items:[{xtype:"textarea",value:this.layerRecord.getLayer().params.CQL_FILTER,grow:true,anchor:"99%",width:"100%",growMax:100,ref:"../../cqlField",hidden:true}],buttons:[{ref:"../../../cqlToolbar",hidden:true,text:this.switchToFilterBuilderText,handler:this.switchToFilterBuilder,scope:this}]},{xtype:"fieldset",title:this.scaleText,listeners:{expand:function(){var layer=this.layerRecord.getLayer();if(this.minScale!==undefined||this.maxScale!==undefined){this.addScaleOptions(layer,{minScale:this.maxScale,maxScale:this.minScale})}},collapse:function(){var layer=this.layerRecord.getLayer();this.minScale=layer.options.maxScale;this.maxScale=layer.options.minScale;this.addScaleOptions(layer,{minScale:null,maxScale:null})},scope:this},checkboxToggle:true,collapsed:this.layerRecord.getLayer().options.maxScale==null&&this.layerRecord.getLayer().options.minScale==null,items:[{xtype:"compositefield",fieldLabel:this.minScaleText,items:[{xtype:"label",text:"1:",cls:"gxp-layerproperties-label"},{xtype:"numberfield",anchor:"99%",width:"85%",listeners:{change:function(field){var options={maxScale:parseInt(field.getValue())};var layer=this.layerRecord.getLayer();this.addScaleOptions(layer,options)},scope:this},value:this.layerRecord.getLayer().options.maxScale}]},{xtype:"compositefield",fieldLabel:this.maxScaleText,items:[{xtype:"label",text:"1:",cls:"gxp-layerproperties-label"},{xtype:"numberfield",anchor:"99%",width:"85%",listeners:{change:function(field){var options={minScale:parseInt(field.getValue())};var layer=this.layerRecord.getLayer();this.addScaleOptions(layer,options)},scope:this},value:this.layerRecord.getLayer().options.minScale}]}]}]}}});Ext.reg("gxp_wmslayerpanel",gxp.WMSLayerPanel);Ext.namespace("gxp.form");gxp.form.FilterField=Ext.extend(Ext.form.CompositeField,{lowerBoundaryTip:"lower boundary",upperBoundaryTip:"upper boundary",caseInsensitiveMatch:false,filter:null,attributes:null,attributesComboConfig:null,initComponent:function(){if(!this.filter){this.filter=this.createDefaultFilter()}var mode="remote",attributes=new GeoExt.data.AttributeStore();if(this.attributes){if(this.attributes.getCount()!=0){mode="local";this.attributes.each(function(r){var match=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/.exec(r.get("type"));match||attributes.add([r])})}else{attributes=this.attributes}}var defAttributesComboConfig={xtype:"combo",store:attributes,editable:mode=="local",typeAhead:true,forceSelection:true,mode:mode,triggerAction:"all",ref:"property",allowBlank:this.allowBlank,displayField:"name",valueField:"name",value:this.filter.property,listeners:{select:function(combo,record){this.items.get(1).enable();this.filter.property=record.get("name");this.fireEvent("change",this.filter,this)},blur:function(combo){var index=combo.store.findExact("name",combo.getValue());if(index!=-1){combo.fireEvent("select",combo,combo.store.getAt(index))}else{if(combo.startValue!=null){combo.setValue(combo.startValue)}}},scope:this},width:120};this.attributesComboConfig=this.attributesComboConfig||{};Ext.applyIf(this.attributesComboConfig,defAttributesComboConfig);this.items=this.createFilterItems();this.addEvents("change");gxp.form.FilterField.superclass.initComponent.call(this)},validateValue:function(value,preventMark){if(this.filter.type===OpenLayers.Filter.Comparison.BETWEEN){return(this.filter.property!==null&&this.filter.upperBoundary!==null&&this.filter.lowerBoundary!==null)}else{return(this.filter.property!==null&&this.filter.value!==null&&this.filter.type!==null)}},createDefaultFilter:function(){return new OpenLayers.Filter.Comparison({matchCase:!this.caseInsensitiveMatch})},createFilterItems:function(){var isBetween=this.filter.type===OpenLayers.Filter.Comparison.BETWEEN;return[this.attributesComboConfig,Ext.applyIf({xtype:"gxp_comparisoncombo",ref:"type",disabled:this.filter.property==null,allowBlank:this.allowBlank,value:this.filter.type,listeners:{select:function(combo,record){this.items.get(2).enable();this.items.get(3).enable();this.items.get(4).enable();this.setFilterType(record.get("value"));this.fireEvent("change",this.filter,this)},scope:this}},this.comparisonComboConfig),{xtype:"textfield",disabled:this.filter.type==null,hidden:isBetween,ref:"value",value:this.filter.value,width:50,grow:true,growMin:50,anchor:"100%",allowBlank:this.allowBlank,listeners:{change:function(field,value){this.filter.value=value;this.fireEvent("change",this.filter,this)},scope:this}},{xtype:"textfield",disabled:this.filter.type==null,hidden:!isBetween,value:this.filter.lowerBoundary,tooltip:this.lowerBoundaryTip,grow:true,growMin:30,ref:"lowerBoundary",anchor:"100%",allowBlank:this.allowBlank,listeners:{change:function(field,value){this.filter.lowerBoundary=value;this.fireEvent("change",this.filter,this)},render:function(c){Ext.QuickTips.register({target:c.getEl(),text:this.lowerBoundaryTip})},autosize:function(field,width){field.setWidth(width);field.ownerCt.doLayout()},scope:this}},{xtype:"textfield",disabled:this.filter.type==null,hidden:!isBetween,grow:true,growMin:30,ref:"upperBoundary",value:this.filter.upperBoundary,allowBlank:this.allowBlank,listeners:{change:function(field,value){this.filter.upperBoundary=value;this.fireEvent("change",this.filter,this)},render:function(c){Ext.QuickTips.register({target:c.getEl(),text:this.upperBoundaryTip})},scope:this}}]},setFilterType:function(type){this.filter.type=type;if(type===OpenLayers.Filter.Comparison.BETWEEN){this.items.get(2).hide();this.items.get(3).show();this.items.get(4).show()}else{this.items.get(2).show();this.items.get(3).hide();this.items.get(4).hide()}this.doLayout()},setFilter:function(filter){var previousType=this.filter.type;this.filter=filter;if(previousType!==filter.type){this.setFilterType(filter.type)}this["property"].setValue(filter.property);this["type"].setValue(filter.type);if(filter.type===OpenLayers.Filter.Comparison.BETWEEN){this["lowerBoundary"].setValue(filter.lowerBoundary);this["upperBoundary"].setValue(filter.upperBoundary)}else{this["value"].setValue(filter.value)}this.fireEvent("change",this.filter,this)}});Ext.reg("gxp_filterfield",gxp.form.FilterField);Ext.namespace("gxp.form");gxp.form.ComparisonComboBox=Ext.extend(Ext.form.ComboBox,{allowedTypes:[[OpenLayers.Filter.Comparison.EQUAL_TO,"="],[OpenLayers.Filter.Comparison.NOT_EQUAL_TO,"<>"],[OpenLayers.Filter.Comparison.LESS_THAN,"<"],[OpenLayers.Filter.Comparison.GREATER_THAN,">"],[OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,"<="],[OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,">="],[OpenLayers.Filter.Comparison.LIKE,"like"],[OpenLayers.Filter.Comparison.BETWEEN,"between"]],allowBlank:false,mode:"local",typeAhead:true,forceSelection:true,triggerAction:"all",width:50,editable:true,initComponent:function(){var defConfig={displayField:"name",valueField:"value",store:new Ext.data.SimpleStore({data:this.allowedTypes,fields:["value","name"]}),value:(this.value===undefined)?this.allowedTypes[0][0]:this.value,listeners:{blur:function(){var index=this.store.findExact("value",this.getValue());if(index!=-1){this.fireEvent("select",this,this.store.getAt(index))}else{if(this.startValue!=null){this.setValue(this.startValue)}}}}};Ext.applyIf(this,defConfig);gxp.form.ComparisonComboBox.superclass.initComponent.call(this)}});Ext.reg("gxp_comparisoncombo",gxp.form.ComparisonComboBox);Ext.namespace("GeoExt");GeoExt.LayerOpacitySlider=Ext.extend(Ext.slider.SingleSlider,{layer:null,complementaryLayer:null,delay:5,changeVisibilityDelay:5,aggressive:false,changeVisibility:false,value:null,inverse:false,constructor:function(config){if(config.layer){this.layer=this.getLayer(config.layer);this.bind();this.complementaryLayer=this.getLayer(config.complementaryLayer);if(config.inverse!==undefined){this.inverse=config.inverse}config.value=(config.value!==undefined)?config.value:this.getOpacityValue(this.layer);delete config.layer;delete config.complementaryLayer}GeoExt.LayerOpacitySlider.superclass.constructor.call(this,config)},bind:function(){if(this.layer&&this.layer.map){this.layer.map.events.on({changelayer:this.update,scope:this})}},unbind:function(){if(this.layer&&this.layer.map&&this.layer.map.events){this.layer.map.events.un({changelayer:this.update,scope:this})}},update:function(evt){if(evt.property==="opacity"&&evt.layer==this.layer&&!this._settingOpacity){this.setValue(this.getOpacityValue(this.layer))}},setLayer:function(layer){this.unbind();this.layer=this.getLayer(layer);this.setValue(this.getOpacityValue(layer));this.bind()},getOpacityValue:function(layer){var value;if(layer&&layer.opacity!==null){value=parseInt(layer.opacity*(this.maxValue-this.minValue))}else{value=this.maxValue}if(this.inverse===true){value=(this.maxValue-this.minValue)-value}return value},getLayer:function(layer){if(layer instanceof OpenLayers.Layer){return layer}else{if(layer instanceof GeoExt.data.LayerRecord){return layer.getLayer()}}},initComponent:function(){GeoExt.LayerOpacitySlider.superclass.initComponent.call(this);if(this.changeVisibility&&this.layer&&(this.layer.opacity==0||(this.inverse===false&&this.value==this.minValue)||(this.inverse===true&&this.value==this.maxValue))){this.layer.setVisibility(false)}if(this.complementaryLayer&&((this.layer&&this.layer.opacity==1)||(this.inverse===false&&this.value==this.maxValue)||(this.inverse===true&&this.value==this.minValue))){this.complementaryLayer.setVisibility(false)}if(this.aggressive===true){this.on("change",this.changeLayerOpacity,this,{buffer:this.delay})}else{this.on("changecomplete",this.changeLayerOpacity,this)}if(this.changeVisibility===true){this.on("change",this.changeLayerVisibility,this,{buffer:this.changeVisibilityDelay})}if(this.complementaryLayer){this.on("change",this.changeComplementaryLayerVisibility,this,{buffer:this.changeVisibilityDelay})}this.on("beforedestroy",this.unbind,this)},changeLayerOpacity:function(slider,value){if(this.layer){value=value/(this.maxValue-this.minValue);if(this.inverse===true){value=1-value}this._settingOpacity=true;this.layer.setOpacity(value);delete this._settingOpacity}},changeLayerVisibility:function(slider,value){var currentVisibility=this.layer.getVisibility();if((this.inverse===false&&value==this.minValue)||(this.inverse===true&&value==this.maxValue)&&currentVisibility===true){this.layer.setVisibility(false)}else{if((this.inverse===false&&value>this.minValue)||(this.inverse===true&&value<this.maxValue)&&currentVisibility==false){this.layer.setVisibility(true)}}},changeComplementaryLayerVisibility:function(slider,value){var currentVisibility=this.complementaryLayer.getVisibility();if((this.inverse===false&&value==this.maxValue)||(this.inverse===true&&value==this.minValue)&&currentVisibility===true){this.complementaryLayer.setVisibility(false)}else{if((this.inverse===false&&value<this.maxValue)||(this.inverse===true&&value>this.minValue)&&currentVisibility==false){this.complementaryLayer.setVisibility(true)}}},addToMapPanel:function(panel){this.on({render:function(){var el=this.getEl();el.setStyle({position:"absolute",zIndex:panel.map.Z_INDEX_BASE.Control});el.on({mousedown:this.stopMouseEvents,click:this.stopMouseEvents})},scope:this})},removeFromMapPanel:function(panel){var el=this.getEl();el.un({mousedown:this.stopMouseEvents,click:this.stopMouseEvents,scope:this});this.unbind()},stopMouseEvents:function(e){e.stopEvent()}});Ext.reg("gx_opacityslider",GeoExt.LayerOpacitySlider);Ext.namespace("GeoExt");GeoExt.SliderTip=Ext.extend(Ext.slider.Tip,{hover:true,minWidth:10,offsets:[0,-10],dragging:false,init:function(slider){GeoExt.SliderTip.superclass.init.apply(this,arguments);if(this.hover){slider.on("render",this.registerThumbListeners,this)}this.slider=slider},registerThumbListeners:function(){var thumb,el;for(var i=0,ii=this.slider.thumbs.length;i<ii;++i){thumb=this.slider.thumbs[i];el=thumb.tracker.el;(function(thumb,el){el.on({mouseover:function(e){this.onSlide(this.slider,e,thumb);this.dragging=false},mouseout:function(){if(!this.dragging){this.hide.apply(this,arguments)}},scope:this})}).apply(this,[thumb,el])}},onSlide:function(slider,e,thumb){this.dragging=true;return GeoExt.SliderTip.superclass.onSlide.apply(this,arguments)}});Ext.namespace("GeoExt");GeoExt.LayerOpacitySliderTip=Ext.extend(GeoExt.SliderTip,{template:"<div>{opacity}%</div>",compiledTemplate:null,init:function(slider){this.compiledTemplate=new Ext.Template(this.template);GeoExt.LayerOpacitySliderTip.superclass.init.call(this,slider)},getText:function(thumb){var data={opacity:thumb.value};return this.compiledTemplate.apply(data)}});Ext.namespace("gxp");gxp.GoogleEarthPanel=Ext.extend(Ext.Panel,{HORIZONTAL_FIELD_OF_VIEW:(30*Math.PI)/180,map:null,mapPanel:null,layers:null,earth:null,projection:null,layerCache:null,initComponent:function(){this.addEvents("beforeadd","pluginfailure","pluginready");gxp.GoogleEarthPanel.superclass.initComponent.call(this);var mapPanel=this.mapPanel;if(mapPanel&&!(mapPanel instanceof GeoExt.MapPanel)){mapPanel=Ext.getCmp(mapPanel)}if(!mapPanel){throw new Error("Could not get map panel from config: "+this.mapPanel)}this.map=mapPanel.map;this.layers=mapPanel.layers;this.projection=new OpenLayers.Projection("EPSG:4326");this.on("render",this.onRenderEvent,this);this.on("show",this.onShowEvent,this);this.on("hide",function(){if(this.earth!=null){this.updateMap()}this.body.dom.innerHTML="";this.earth=null},this)},onEarthReady:function(object){this.earth=object;if(this.flyToSpeed===undefined){this.earth.getOptions().setFlyToSpeed(this.earth.SPEED_TELEPORT)}else{if(this.flyToSpeed!==null){this.earth.getOptions().setFlyToSpeed(this.flyToSpeed)}}this.resetCamera();this.setExtent(this.map.getExtent());this.earth.getNavigationControl().setVisibility(this.earth.VISIBILITY_SHOW);var screenXY=this.earth.getNavigationControl().getScreenXY();screenXY.setXUnits(this.earth.UNITS_PIXELS);screenXY.setYUnits(this.earth.UNITS_INSET_PIXELS);this.earth.getWindow().setVisibility(true);this.layers.each(function(record){this.addLayer(record)},this);this.layers.on("remove",this.updateLayers,this);this.layers.on("update",this.updateLayers,this);this.layers.on("add",this.updateLayers,this);this.fireEvent("pluginready",this.earth)},onRenderEvent:function(){var isCard=this.ownerCt&&this.ownerCt.layout instanceof Ext.layout.CardLayout;if(!this.hidden&&!isCard){this.onShowEvent()}},onShowEvent:function(){if(this.rendered){this.layerCache={};google.earth.createInstance(this.body.dom,this.onEarthReady.createDelegate(this),(function(code){this.fireEvent("pluginfailure",this,code)}).createDelegate(this))}},beforeDestroy:function(){this.layers.un("remove",this.updateLayers,this);this.layers.un("update",this.updateLayers,this);this.layers.un("add",this.updateLayers,this);gxp.GoogleEarthPanel.superclass.beforeDestroy.call(this)},updateLayers:function(){if(!this.earth){return}var features=this.earth.getFeatures();var f=features.getFirstChild();while(f!=null){features.removeChild(f);f=features.getFirstChild()}this.layers.each(function(record){this.addLayer(record)},this)},addLayer:function(layer,order){var lyr=layer.getLayer();var ows=(lyr&&lyr.url);if(this.earth&&lyr instanceof OpenLayers.Layer.WMS&&typeof ows=="string"){var add=this.fireEvent("beforeadd",layer);if(add!==false){var name=lyr.id;var networkLink;if(this.layerCache[name]){networkLink=this.layerCache[name]}else{var link=this.earth.createLink("kl_"+name);ows=ows.replace(/\?.*/,"");var params=lyr.params;var kmlPath="/kml?mode=refresh&layers="+params.LAYERS+"&styles="+params.STYLES;link.setHref(ows+kmlPath);networkLink=this.earth.createNetworkLink("nl_"+name);networkLink.setName(name);networkLink.set(link,false,false);this.layerCache[name]=networkLink}networkLink.setVisibility(lyr.getVisibility());if(order!==undefined&&order<this.earth.getFeatures().getChildNodes().getLength()){this.earth.getFeatures().insertBefore(this.earth.getFeatures().getChildNodes().item(order))}else{this.earth.getFeatures().appendChild(networkLink)}}}},setExtent:function(extent){extent=extent.transform(this.map.getProjectionObject(),this.projection);var center=extent.getCenterLonLat();var width=this.getExtentWidth(extent);var height=width/(2*Math.tan(this.HORIZONTAL_FIELD_OF_VIEW));var lookAt=this.earth.getView().copyAsLookAt(this.earth.ALTITUDE_RELATIVE_TO_GROUND);lookAt.setLatitude(center.lat);lookAt.setLongitude(center.lon);lookAt.setRange(height);this.earth.getView().setAbstractView(lookAt)},resetCamera:function(){var camera=this.earth.getView().copyAsCamera(this.earth.ALTITUDE_RELATIVE_TO_GROUND);camera.setRoll(0);camera.setHeading(0);camera.setTilt(0);this.earth.getView().setAbstractView(camera)},getExtent:function(){var geBounds=this.earth.getView().getViewportGlobeBounds();var olBounds=new OpenLayers.Bounds(geBounds.getWest(),geBounds.getSouth(),geBounds.getEast(),geBounds.getNorth());return olBounds},updateMap:function(){var lookAt=this.earth.getView().copyAsLookAt(this.earth.ALTITUDE_RELATIVE_TO_GROUND);var center=this.reprojectToMap(new OpenLayers.LonLat(lookAt.getLongitude(),lookAt.getLatitude()));var geExtent=this.reprojectToMap(this.getExtent());this.map.zoomToExtent(geExtent,true);this.map.setCenter(center);var height=lookAt.getRange();var width=2*height*Math.tan(this.HORIZONTAL_FIELD_OF_VIEW);var nextResolution=this.map.getResolutionForZoom(this.map.getZoom()+1);var currentExtent=this.map.getExtent();var nextExtent=new OpenLayers.Bounds(center.lon-(this.map.getSize().w/2*nextResolution),center.lat+(this.map.getSize().h/2*nextResolution),center.lon+(this.map.getSize().w/2*nextResolution),center.lat-(this.map.getSize().h/2*nextResolution));var currentWidthDiff=Math.abs(this.getExtentWidth(currentExtent)-width);var nextWidthDiff=Math.abs(this.getExtentWidth(nextExtent)-width);if(nextWidthDiff<currentWidthDiff){this.map.zoomTo(this.map.getZoom()+1)}},getExtentWidth:function(extent){var center=extent.getCenterLonLat();var middleLeft=new OpenLayers.LonLat(extent.left,center.lat);var middleRight=new OpenLayers.LonLat(extent.right,center.lat);return OpenLayers.Util.distVincenty(middleLeft,middleRight)*1000},reprojectToGE:function(data){return data.clone().transform(this.map.getProjectionObject(),this.projection)},reprojectToMap:function(data){return data.clone().transform(this.projection,this.map.getProjectionObject())}});Ext.reg("gxp_googleearthpanel",gxp.GoogleEarthPanel);OpenLayers.Control.Attribution=OpenLayers.Class(OpenLayers.Control,{separator:", ",template:"${layers}",destroy:function(){this.map.events.un({removelayer:this.updateAttribution,addlayer:this.updateAttribution,changelayer:this.updateAttribution,changebaselayer:this.updateAttribution,scope:this});OpenLayers.Control.prototype.destroy.apply(this,arguments)},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);this.map.events.on({changebaselayer:this.updateAttribution,changelayer:this.updateAttribution,addlayer:this.updateAttribution,removelayer:this.updateAttribution,scope:this});this.updateAttribution();return this.div},updateAttribution:function(){var attributions=[];if(this.map&&this.map.layers){for(var i=0,len=this.map.layers.length;i<len;i++){var layer=this.map.layers[i];if(layer.attribution&&layer.getVisibility()){if(OpenLayers.Util.indexOf(attributions,layer.attribution)===-1){attributions.push(layer.attribution)}}}this.div.innerHTML=OpenLayers.String.format(this.template,{layers:attributions.join(this.separator)})}},CLASS_NAME:"OpenLayers.Control.Attribution"});OpenLayers.Events.buttonclick=OpenLayers.Class({target:null,events:["mousedown","mouseup","click","dblclick","touchstart","touchmove","touchend","keydown"],startRegEx:/^mousedown|touchstart$/,cancelRegEx:/^touchmove$/,completeRegEx:/^mouseup|touchend$/,initialize:function(target){this.target=target;for(var i=this.events.length-1;i>=0;--i){this.target.register(this.events[i],this,this.buttonClick,{extension:true})}},destroy:function(){for(var i=this.events.length-1;i>=0;--i){this.target.unregister(this.events[i],this,this.buttonClick)}delete this.target},getPressedButton:function(element){var depth=3,button;do{if(OpenLayers.Element.hasClass(element,"olButton")){button=element;break}element=element.parentNode}while(--depth>0&&element);return button},ignore:function(element){var depth=3,ignore=false;do{if(element.nodeName.toLowerCase()==="a"){ignore=true;break}element=element.parentNode}while(--depth>0&&element);return ignore},buttonClick:function(evt){var propagate=true,element=OpenLayers.Event.element(evt);if(element&&(OpenLayers.Event.isLeftClick(evt)||!~evt.type.indexOf("mouse"))){var button=this.getPressedButton(element);if(button){if(evt.type==="keydown"){switch(evt.keyCode){case OpenLayers.Event.KEY_RETURN:case OpenLayers.Event.KEY_SPACE:this.target.triggerEvent("buttonclick",{buttonElement:button});OpenLayers.Event.stop(evt);propagate=false;break}}else{if(this.startEvt){if(this.completeRegEx.test(evt.type)){var pos=OpenLayers.Util.pagePosition(button);var viewportElement=OpenLayers.Util.getViewportElement();var scrollTop=window.pageYOffset||viewportElement.scrollTop;var scrollLeft=window.pageXOffset||viewportElement.scrollLeft;pos[0]=pos[0]-scrollLeft;pos[1]=pos[1]-scrollTop;this.target.triggerEvent("buttonclick",{buttonElement:button,buttonXY:{x:this.startEvt.clientX-pos[0],y:this.startEvt.clientY-pos[1]}})}if(this.cancelRegEx.test(evt.type)){delete this.startEvt}OpenLayers.Event.stop(evt);propagate=false}}if(this.startRegEx.test(evt.type)){this.startEvt=evt;OpenLayers.Event.stop(evt);propagate=false}}else{propagate=!this.ignore(OpenLayers.Event.element(evt));delete this.startEvt}}return propagate}});OpenLayers.Control.Panel=OpenLayers.Class(OpenLayers.Control,{controls:null,autoActivate:true,defaultControl:null,saveState:false,allowDepress:false,activeState:null,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,[options]);this.controls=[];this.activeState={}},destroy:function(){if(this.map){this.map.events.unregister("buttonclick",this,this.onButtonClick)}OpenLayers.Control.prototype.destroy.apply(this,arguments);for(var ctl,i=this.controls.length-1;i>=0;i--){ctl=this.controls[i];if(ctl.events){ctl.events.un({activate:this.iconOn,deactivate:this.iconOff})}ctl.panel_div=null}this.activeState=null},activate:function(){if(OpenLayers.Control.prototype.activate.apply(this,arguments)){var control;for(var i=0,len=this.controls.length;i<len;i++){control=this.controls[i];if(control===this.defaultControl||(this.saveState&&this.activeState[control.id])){control.activate()}}if(this.saveState===true){this.defaultControl=null}this.redraw();return true}else{return false}},deactivate:function(){if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){var control;for(var i=0,len=this.controls.length;i<len;i++){control=this.controls[i];this.activeState[control.id]=control.deactivate()}this.redraw();return true}else{return false}},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);if(this.outsideViewport){this.events.attachToElement(this.div);this.events.register("buttonclick",this,this.onButtonClick)}else{this.map.events.register("buttonclick",this,this.onButtonClick)}this.addControlsToMap(this.controls);return this.div},redraw:function(){for(var l=this.div.childNodes.length,i=l-1;i>=0;i--){this.div.removeChild(this.div.childNodes[i])}this.div.innerHTML="";if(this.active){for(var i=0,len=this.controls.length;i<len;i++){this.div.appendChild(this.controls[i].panel_div)}}},activateControl:function(control){if(!this.active){return false}if(control.type==OpenLayers.Control.TYPE_BUTTON){control.trigger();return}if(control.type==OpenLayers.Control.TYPE_TOGGLE){if(control.active){control.deactivate()}else{control.activate()}return}if(this.allowDepress&&control.active){control.deactivate()}else{var c;for(var i=0,len=this.controls.length;i<len;i++){c=this.controls[i];if(c!=control&&(c.type===OpenLayers.Control.TYPE_TOOL||c.type==null)){c.deactivate()}}control.activate()}},addControls:function(controls){if(!(OpenLayers.Util.isArray(controls))){controls=[controls]}this.controls=this.controls.concat(controls);for(var i=0,len=controls.length;i<len;i++){var control=controls[i],element=this.createControlMarkup(control);OpenLayers.Element.addClass(element,control.displayClass+"ItemInactive");OpenLayers.Element.addClass(element,"olButton");if(control.title!=""&&!element.title){element.title=control.title}control.panel_div=element}if(this.map){this.addControlsToMap(controls);this.redraw()}},createControlMarkup:function(control){return document.createElement("div")},addControlsToMap:function(controls){var control;for(var i=0,len=controls.length;i<len;i++){control=controls[i];if(control.autoActivate===true){control.autoActivate=false;this.map.addControl(control);control.autoActivate=true}else{this.map.addControl(control);control.deactivate()}control.events.on({activate:this.iconOn,deactivate:this.iconOff})}},iconOn:function(){var d=this.panel_div;var re=new RegExp("\\b("+this.displayClass+"Item)Inactive\\b");d.className=d.className.replace(re,"$1Active")},iconOff:function(){var d=this.panel_div;var re=new RegExp("\\b("+this.displayClass+"Item)Active\\b");d.className=d.className.replace(re,"$1Inactive")},onButtonClick:function(evt){var controls=this.controls,button=evt.buttonElement;for(var i=controls.length-1;i>=0;--i){if(controls[i].panel_div===button){this.activateControl(controls[i]);break}}},getControlsBy:function(property,match){var test=(typeof match.test=="function");var found=OpenLayers.Array.filter(this.controls,function(item){return item[property]==match||(test&&match.test(item[property]))});return found},getControlsByName:function(match){return this.getControlsBy("name",match)},getControlsByClass:function(match){return this.getControlsBy("CLASS_NAME",match)},CLASS_NAME:"OpenLayers.Control.Panel"});OpenLayers.Control.Button=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_BUTTON,trigger:function(){},CLASS_NAME:"OpenLayers.Control.Button"});OpenLayers.Control.ZoomIn=OpenLayers.Class(OpenLayers.Control.Button,{trigger:function(){if(this.map){this.map.zoomIn()}},CLASS_NAME:"OpenLayers.Control.ZoomIn"});OpenLayers.Control.ZoomOut=OpenLayers.Class(OpenLayers.Control.Button,{trigger:function(){if(this.map){this.map.zoomOut()}},CLASS_NAME:"OpenLayers.Control.ZoomOut"});OpenLayers.Control.ZoomToMaxExtent=OpenLayers.Class(OpenLayers.Control.Button,{trigger:function(){if(this.map){this.map.zoomToMaxExtent()}},CLASS_NAME:"OpenLayers.Control.ZoomToMaxExtent"});OpenLayers.Control.ZoomPanel=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);this.addControls([new OpenLayers.Control.ZoomIn(),new OpenLayers.Control.ZoomToMaxExtent(),new OpenLayers.Control.ZoomOut()])},CLASS_NAME:"OpenLayers.Control.ZoomPanel"});OpenLayers.Handler=OpenLayers.Class({id:null,control:null,map:null,keyMask:null,active:false,evt:null,touch:false,initialize:function(control,callbacks,options){OpenLayers.Util.extend(this,options);this.control=control;this.callbacks=callbacks;var map=this.map||control.map;if(map){this.setMap(map)}this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},setMap:function(map){this.map=map},checkModifiers:function(evt){if(this.keyMask==null){return true}var keyModifiers=(evt.shiftKey?OpenLayers.Handler.MOD_SHIFT:0)|(evt.ctrlKey?OpenLayers.Handler.MOD_CTRL:0)|(evt.altKey?OpenLayers.Handler.MOD_ALT:0)|(evt.metaKey?OpenLayers.Handler.MOD_META:0);return(keyModifiers==this.keyMask)},activate:function(){if(this.active){return false}var events=OpenLayers.Events.prototype.BROWSER_EVENTS;for(var i=0,len=events.length;i<len;i++){if(this[events[i]]){this.register(events[i],this[events[i]])}}this.active=true;return true},deactivate:function(){if(!this.active){return false}var events=OpenLayers.Events.prototype.BROWSER_EVENTS;for(var i=0,len=events.length;i<len;i++){if(this[events[i]]){this.unregister(events[i],this[events[i]])}}this.touch=false;this.active=false;return true},startTouch:function(){if(!this.touch){this.touch=true;var events=["mousedown","mouseup","mousemove","click","dblclick","mouseout"];for(var i=0,len=events.length;i<len;i++){if(this[events[i]]){this.unregister(events[i],this[events[i]])}}}},callback:function(name,args){if(name&&this.callbacks[name]){this.callbacks[name].apply(this.control,args)}},register:function(name,method){this.map.events.registerPriority(name,this,method);this.map.events.registerPriority(name,this,this.setEvent)},unregister:function(name,method){this.map.events.unregister(name,this,method);this.map.events.unregister(name,this,this.setEvent)},setEvent:function(evt){this.evt=evt;return true},destroy:function(){this.deactivate();this.control=this.map=null},CLASS_NAME:"OpenLayers.Handler"});OpenLayers.Handler.MOD_NONE=0;OpenLayers.Handler.MOD_SHIFT=1;OpenLayers.Handler.MOD_CTRL=2;OpenLayers.Handler.MOD_ALT=4;OpenLayers.Handler.MOD_META=8;OpenLayers.Handler.Drag=OpenLayers.Class(OpenLayers.Handler,{started:false,stopDown:true,dragging:false,last:null,start:null,lastMoveEvt:null,oldOnselectstart:null,interval:0,timeoutId:null,documentDrag:false,documentEvents:null,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments);if(this.documentDrag===true){var me=this;this._docMove=function(evt){me.mousemove({xy:{x:evt.clientX,y:evt.clientY},element:document})};this._docUp=function(evt){me.mouseup({xy:{x:evt.clientX,y:evt.clientY}})}}},dragstart:function(evt){var propagate=true;this.dragging=false;if(this.checkModifiers(evt)&&(OpenLayers.Event.isLeftClick(evt)||OpenLayers.Event.isSingleTouch(evt))){this.started=true;this.start=evt.xy;this.last=evt.xy;OpenLayers.Element.addClass(this.map.viewPortDiv,"olDragDown");this.down(evt);this.callback("down",[evt.xy]);OpenLayers.Event.preventDefault(evt);if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart?document.onselectstart:OpenLayers.Function.True}document.onselectstart=OpenLayers.Function.False;propagate=!this.stopDown}else{this.started=false;this.start=null;this.last=null}return propagate},dragmove:function(evt){this.lastMoveEvt=evt;if(this.started&&!this.timeoutId&&(evt.xy.x!=this.last.x||evt.xy.y!=this.last.y)){if(this.documentDrag===true&&this.documentEvents){if(evt.element===document){this.adjustXY(evt);this.setEvent(evt)}else{this.removeDocumentEvents()}}if(this.interval>0){this.timeoutId=setTimeout(OpenLayers.Function.bind(this.removeTimeout,this),this.interval)}this.dragging=true;this.move(evt);this.callback("move",[evt.xy]);if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart;document.onselectstart=OpenLayers.Function.False}this.last=evt.xy}return true},dragend:function(evt){if(this.started){if(this.documentDrag===true&&this.documentEvents){this.adjustXY(evt);this.removeDocumentEvents()}var dragged=(this.start!=this.last);this.started=false;this.dragging=false;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown");this.up(evt);this.callback("up",[evt.xy]);if(dragged){this.callback("done",[evt.xy])}document.onselectstart=this.oldOnselectstart}return true},down:function(evt){},move:function(evt){},up:function(evt){},out:function(evt){},mousedown:function(evt){return this.dragstart(evt)},touchstart:function(evt){this.startTouch();return this.dragstart(evt)},mousemove:function(evt){return this.dragmove(evt)},touchmove:function(evt){return this.dragmove(evt)},removeTimeout:function(){this.timeoutId=null;if(this.dragging){this.mousemove(this.lastMoveEvt)}},mouseup:function(evt){return this.dragend(evt)},touchend:function(evt){evt.xy=this.last;return this.dragend(evt)},mouseout:function(evt){if(this.started&&OpenLayers.Util.mouseLeft(evt,this.map.viewPortDiv)){if(this.documentDrag===true){this.addDocumentEvents()}else{var dragged=(this.start!=this.last);this.started=false;this.dragging=false;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown");this.out(evt);this.callback("out",[]);if(dragged){this.callback("done",[evt.xy])}if(document.onselectstart){document.onselectstart=this.oldOnselectstart}}}return true},click:function(evt){return(this.start==this.last)},activate:function(){var activated=false;if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.dragging=false;activated=true}return activated},deactivate:function(){var deactivated=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.started=false;this.dragging=false;this.start=null;this.last=null;deactivated=true;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown")}return deactivated},adjustXY:function(evt){var pos=OpenLayers.Util.pagePosition(this.map.viewPortDiv);evt.xy.x-=pos[0];evt.xy.y-=pos[1]},addDocumentEvents:function(){OpenLayers.Element.addClass(document.body,"olDragDown");this.documentEvents=true;OpenLayers.Event.observe(document,"mousemove",this._docMove);OpenLayers.Event.observe(document,"mouseup",this._docUp)},removeDocumentEvents:function(){OpenLayers.Element.removeClass(document.body,"olDragDown");this.documentEvents=false;OpenLayers.Event.stopObserving(document,"mousemove",this._docMove);OpenLayers.Event.stopObserving(document,"mouseup",this._docUp)},CLASS_NAME:"OpenLayers.Handler.Drag"});OpenLayers.Handler.Box=OpenLayers.Class(OpenLayers.Handler,{dragHandler:null,boxDivClassName:"olHandlerBoxZoomBox",boxOffsets:null,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments);this.dragHandler=new OpenLayers.Handler.Drag(this,{down:this.startBox,move:this.moveBox,out:this.removeBox,up:this.endBox},{keyMask:this.keyMask})},destroy:function(){OpenLayers.Handler.prototype.destroy.apply(this,arguments);if(this.dragHandler){this.dragHandler.destroy();this.dragHandler=null}},setMap:function(map){OpenLayers.Handler.prototype.setMap.apply(this,arguments);if(this.dragHandler){this.dragHandler.setMap(map)}},startBox:function(xy){this.callback("start",[]);this.zoomBox=OpenLayers.Util.createDiv("zoomBox",{x:-9999,y:-9999});this.zoomBox.className=this.boxDivClassName;this.zoomBox.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;this.map.viewPortDiv.appendChild(this.zoomBox);OpenLayers.Element.addClass(this.map.viewPortDiv,"olDrawBox")},moveBox:function(xy){var startX=this.dragHandler.start.x;var startY=this.dragHandler.start.y;var deltaX=Math.abs(startX-xy.x);var deltaY=Math.abs(startY-xy.y);var offset=this.getBoxOffsets();this.zoomBox.style.width=(deltaX+offset.width+1)+"px";this.zoomBox.style.height=(deltaY+offset.height+1)+"px";this.zoomBox.style.left=(xy.x<startX?startX-deltaX-offset.left:startX-offset.left)+"px";this.zoomBox.style.top=(xy.y<startY?startY-deltaY-offset.top:startY-offset.top)+"px"},endBox:function(end){var result;if(Math.abs(this.dragHandler.start.x-end.x)>5||Math.abs(this.dragHandler.start.y-end.y)>5){var start=this.dragHandler.start;var top=Math.min(start.y,end.y);var bottom=Math.max(start.y,end.y);var left=Math.min(start.x,end.x);var right=Math.max(start.x,end.x);result=new OpenLayers.Bounds(left,bottom,right,top)}else{result=this.dragHandler.start.clone()}this.removeBox();this.callback("done",[result])},removeBox:function(){this.map.viewPortDiv.removeChild(this.zoomBox);this.zoomBox=null;this.boxOffsets=null;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDrawBox")},activate:function(){if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.dragHandler.activate();return true}else{return false}},deactivate:function(){if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){if(this.dragHandler.deactivate()){if(this.zoomBox){this.removeBox()}}return true}else{return false}},getBoxOffsets:function(){if(!this.boxOffsets){var testDiv=document.createElement("div");testDiv.style.position="absolute";testDiv.style.border="1px solid black";testDiv.style.width="3px";document.body.appendChild(testDiv);var w3cBoxModel=testDiv.clientWidth==3;document.body.removeChild(testDiv);var left=parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-left-width"));var right=parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-right-width"));var top=parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-top-width"));var bottom=parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-bottom-width"));this.boxOffsets={left:left,right:right,top:top,bottom:bottom,width:w3cBoxModel===false?left+right:0,height:w3cBoxModel===false?top+bottom:0}}return this.boxOffsets},CLASS_NAME:"OpenLayers.Handler.Box"});OpenLayers.Control.ZoomBox=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,out:false,keyMask:null,alwaysZoom:false,zoomOnClick:true,draw:function(){this.handler=new OpenLayers.Handler.Box(this,{done:this.zoomBox},{keyMask:this.keyMask})},zoomBox:function(position){if(position instanceof OpenLayers.Bounds){var bounds,targetCenterPx=position.getCenterPixel();if(!this.out){var minXY=this.map.getLonLatFromPixel({x:position.left,y:position.bottom});var maxXY=this.map.getLonLatFromPixel({x:position.right,y:position.top});bounds=new OpenLayers.Bounds(minXY.lon,minXY.lat,maxXY.lon,maxXY.lat)}else{var pixWidth=position.right-position.left;var pixHeight=position.bottom-position.top;var zoomFactor=Math.min((this.map.size.h/pixHeight),(this.map.size.w/pixWidth));var extent=this.map.getExtent();var center=this.map.getLonLatFromPixel(targetCenterPx);var xmin=center.lon-(extent.getWidth()/2)*zoomFactor;var xmax=center.lon+(extent.getWidth()/2)*zoomFactor;var ymin=center.lat-(extent.getHeight()/2)*zoomFactor;var ymax=center.lat+(extent.getHeight()/2)*zoomFactor;bounds=new OpenLayers.Bounds(xmin,ymin,xmax,ymax)}var lastZoom=this.map.getZoom(),size=this.map.getSize(),centerPx={x:size.w/2,y:size.h/2},zoom=this.map.getZoomForExtent(bounds),oldRes=this.map.getResolution(),newRes=this.map.getResolutionForZoom(zoom);if(oldRes==newRes){this.map.setCenter(this.map.getLonLatFromPixel(targetCenterPx))}else{var zoomOriginPx={x:(oldRes*targetCenterPx.x-newRes*centerPx.x)/(oldRes-newRes),y:(oldRes*targetCenterPx.y-newRes*centerPx.y)/(oldRes-newRes)};this.map.zoomTo(zoom,zoomOriginPx)}if(lastZoom==this.map.getZoom()&&this.alwaysZoom==true){this.map.zoomTo(lastZoom+(this.out?-1:1))}}else{if(this.zoomOnClick){if(!this.out){this.map.zoomTo(this.map.getZoom()+1,position)}else{this.map.zoomTo(this.map.getZoom()-1,position)}}}},CLASS_NAME:"OpenLayers.Control.ZoomBox"});OpenLayers.Control.DragPan=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,panned:false,interval:0,documentDrag:false,kinetic:null,enableKinetic:true,kineticInterval:10,draw:function(){if(this.enableKinetic&&OpenLayers.Kinetic){var config={interval:this.kineticInterval};if(typeof this.enableKinetic==="object"){config=OpenLayers.Util.extend(config,this.enableKinetic)}this.kinetic=new OpenLayers.Kinetic(config)}this.handler=new OpenLayers.Handler.Drag(this,{move:this.panMap,done:this.panMapDone,down:this.panMapStart},{interval:this.interval,documentDrag:this.documentDrag})},panMapStart:function(){if(this.kinetic){this.kinetic.begin()}},panMap:function(xy){if(this.kinetic){this.kinetic.update(xy)}this.panned=true;this.map.pan(this.handler.last.x-xy.x,this.handler.last.y-xy.y,{dragging:true,animate:false})},panMapDone:function(xy){if(this.panned){var res=null;if(this.kinetic){res=this.kinetic.end(xy)}this.map.pan(this.handler.last.x-xy.x,this.handler.last.y-xy.y,{dragging:!!res,animate:false});if(res){var self=this;this.kinetic.move(res,function(x,y,end){self.map.pan(x,y,{dragging:!end,animate:false})})}this.panned=false}},CLASS_NAME:"OpenLayers.Control.DragPan"});OpenLayers.Handler.MouseWheel=OpenLayers.Class(OpenLayers.Handler,{wheelListener:null,interval:0,maxDelta:Number.POSITIVE_INFINITY,delta:0,cumulative:true,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments);this.wheelListener=OpenLayers.Function.bindAsEventListener(this.onWheelEvent,this)},destroy:function(){OpenLayers.Handler.prototype.destroy.apply(this,arguments);this.wheelListener=null},onWheelEvent:function(e){if(!this.map||!this.checkModifiers(e)){return}var overScrollableDiv=false;var allowScroll=false;var overMapDiv=false;var elem=OpenLayers.Event.element(e);while((elem!=null)&&!overMapDiv&&!overScrollableDiv){if(!overScrollableDiv){try{var overflow;if(elem.currentStyle){overflow=elem.currentStyle.overflow}else{var style=document.defaultView.getComputedStyle(elem,null);overflow=style.getPropertyValue("overflow")}overScrollableDiv=(overflow&&(overflow=="auto")||(overflow=="scroll"))}catch(err){}}if(!allowScroll){allowScroll=OpenLayers.Element.hasClass(elem,"olScrollable");if(!allowScroll){for(var i=0,len=this.map.layers.length;i<len;i++){var layer=this.map.layers[i];if(elem==layer.div||elem==layer.pane){allowScroll=true;break}}}}overMapDiv=(elem==this.map.div);elem=elem.parentNode}if(!overScrollableDiv&&overMapDiv){if(allowScroll){var delta=0;if(e.wheelDelta){delta=e.wheelDelta;if(delta%160===0){delta=delta*0.75}delta=delta/120}else{if(e.detail){delta=-(e.detail/Math.abs(e.detail))}}this.delta+=delta;window.clearTimeout(this._timeoutId);if(this.interval&&Math.abs(this.delta)<this.maxDelta){var evt=OpenLayers.Util.extend({},e);this._timeoutId=window.setTimeout(OpenLayers.Function.bind(function(){this.wheelZoom(evt)},this),this.interval)}else{this.wheelZoom(e)}}OpenLayers.Event.stop(e)}},wheelZoom:function(e){var delta=this.delta;this.delta=0;if(delta){e.xy=this.map.events.getMousePosition(e);if(delta<0){this.callback("down",[e,this.cumulative?Math.max(-this.maxDelta,delta):-1])}else{this.callback("up",[e,this.cumulative?Math.min(this.maxDelta,delta):1])}}},activate:function(evt){if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){var wheelListener=this.wheelListener;OpenLayers.Event.observe(window,"DOMMouseScroll",wheelListener);OpenLayers.Event.observe(window,"mousewheel",wheelListener);OpenLayers.Event.observe(document,"mousewheel",wheelListener);return true}else{return false}},deactivate:function(evt){if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){var wheelListener=this.wheelListener;OpenLayers.Event.stopObserving(window,"DOMMouseScroll",wheelListener);OpenLayers.Event.stopObserving(window,"mousewheel",wheelListener);OpenLayers.Event.stopObserving(document,"mousewheel",wheelListener);return true}else{return false}},CLASS_NAME:"OpenLayers.Handler.MouseWheel"});OpenLayers.Handler.Click=OpenLayers.Class(OpenLayers.Handler,{delay:300,single:true,"double":false,pixelTolerance:0,dblclickTolerance:13,stopSingle:false,stopDouble:false,timerId:null,down:null,last:null,first:null,rightclickTimerId:null,touchstart:function(evt){this.startTouch();this.down=this.getEventInfo(evt);this.last=this.getEventInfo(evt);return true},touchmove:function(evt){this.last=this.getEventInfo(evt);return true},touchend:function(evt){if(this.down){evt.xy=this.last.xy;evt.lastTouches=this.last.touches;this.handleSingle(evt);this.down=null}return true},mousedown:function(evt){this.down=this.getEventInfo(evt);this.last=this.getEventInfo(evt);return true},mouseup:function(evt){var propagate=true;if(this.checkModifiers(evt)&&this.control.handleRightClicks&&OpenLayers.Event.isRightClick(evt)){propagate=this.rightclick(evt)}return propagate},rightclick:function(evt){if(this.passesTolerance(evt)){if(this.rightclickTimerId!=null){this.clearTimer();this.callback("dblrightclick",[evt]);return !this.stopDouble}else{var clickEvent=this["double"]?OpenLayers.Util.extend({},evt):this.callback("rightclick",[evt]);var delayedRightCall=OpenLayers.Function.bind(this.delayedRightCall,this,clickEvent);this.rightclickTimerId=window.setTimeout(delayedRightCall,this.delay)}}return !this.stopSingle},delayedRightCall:function(evt){this.rightclickTimerId=null;if(evt){this.callback("rightclick",[evt])}},click:function(evt){if(!this.last){this.last=this.getEventInfo(evt)}this.handleSingle(evt);return !this.stopSingle},dblclick:function(evt){this.handleDouble(evt);return !this.stopDouble},handleDouble:function(evt){if(this.passesDblclickTolerance(evt)){if(this["double"]){this.callback("dblclick",[evt])}this.clearTimer()}},handleSingle:function(evt){if(this.passesTolerance(evt)){if(this.timerId!=null){if(this.last.touches&&this.last.touches.length===1){if(this["double"]){OpenLayers.Event.preventDefault(evt)}this.handleDouble(evt)}if(!this.last.touches||this.last.touches.length!==2){this.clearTimer()}}else{this.first=this.getEventInfo(evt);var clickEvent=this.single?OpenLayers.Util.extend({},evt):null;this.queuePotentialClick(clickEvent)}}},queuePotentialClick:function(evt){this.timerId=window.setTimeout(OpenLayers.Function.bind(this.delayedCall,this,evt),this.delay)},passesTolerance:function(evt){var passes=true;if(this.pixelTolerance!=null&&this.down&&this.down.xy){passes=this.pixelTolerance>=this.down.xy.distanceTo(evt.xy);if(passes&&this.touch&&this.down.touches.length===this.last.touches.length){for(var i=0,ii=this.down.touches.length;i<ii;++i){if(this.getTouchDistance(this.down.touches[i],this.last.touches[i])>this.pixelTolerance){passes=false;break}}}}return passes},getTouchDistance:function(from,to){return Math.sqrt(Math.pow(from.clientX-to.clientX,2)+Math.pow(from.clientY-to.clientY,2))},passesDblclickTolerance:function(evt){var passes=true;if(this.down&&this.first){passes=this.down.xy.distanceTo(this.first.xy)<=this.dblclickTolerance}return passes},clearTimer:function(){if(this.timerId!=null){window.clearTimeout(this.timerId);this.timerId=null}if(this.rightclickTimerId!=null){window.clearTimeout(this.rightclickTimerId);this.rightclickTimerId=null}},delayedCall:function(evt){this.timerId=null;if(evt){this.callback("click",[evt])}},getEventInfo:function(evt){var touches;if(evt.touches){var len=evt.touches.length;touches=new Array(len);var touch;for(var i=0;i<len;i++){touch=evt.touches[i];touches[i]={clientX:touch.olClientX,clientY:touch.olClientY}}}return{xy:evt.xy,touches:touches}},deactivate:function(){var deactivated=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.clearTimer();this.down=null;this.first=null;this.last=null;deactivated=true}return deactivated},CLASS_NAME:"OpenLayers.Handler.Click"});OpenLayers.Control.Navigation=OpenLayers.Class(OpenLayers.Control,{dragPan:null,dragPanOptions:null,pinchZoom:null,pinchZoomOptions:null,documentDrag:false,zoomBox:null,zoomBoxEnabled:true,zoomWheelEnabled:true,mouseWheelOptions:null,handleRightClicks:false,zoomBoxKeyMask:OpenLayers.Handler.MOD_SHIFT,autoActivate:true,initialize:function(options){this.handlers={};OpenLayers.Control.prototype.initialize.apply(this,arguments)},destroy:function(){this.deactivate();if(this.dragPan){this.dragPan.destroy()}this.dragPan=null;if(this.zoomBox){this.zoomBox.destroy()}this.zoomBox=null;if(this.pinchZoom){this.pinchZoom.destroy()}this.pinchZoom=null;OpenLayers.Control.prototype.destroy.apply(this,arguments)},activate:function(){this.dragPan.activate();if(this.zoomWheelEnabled){this.handlers.wheel.activate()}this.handlers.click.activate();if(this.zoomBoxEnabled){this.zoomBox.activate()}if(this.pinchZoom){this.pinchZoom.activate()}return OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){if(this.pinchZoom){this.pinchZoom.deactivate()}this.zoomBox.deactivate();this.dragPan.deactivate();this.handlers.click.deactivate();this.handlers.wheel.deactivate();return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},draw:function(){if(this.handleRightClicks){this.map.viewPortDiv.oncontextmenu=OpenLayers.Function.False}var clickCallbacks={click:this.defaultClick,dblclick:this.defaultDblClick,dblrightclick:this.defaultDblRightClick};var clickOptions={"double":true,stopDouble:true};this.handlers.click=new OpenLayers.Handler.Click(this,clickCallbacks,clickOptions);this.dragPan=new OpenLayers.Control.DragPan(OpenLayers.Util.extend({map:this.map,documentDrag:this.documentDrag},this.dragPanOptions));this.zoomBox=new OpenLayers.Control.ZoomBox({map:this.map,keyMask:this.zoomBoxKeyMask});this.dragPan.draw();this.zoomBox.draw();var wheelOptions=this.map.fractionalZoom?{}:{cumulative:false,interval:50,maxDelta:6};this.handlers.wheel=new OpenLayers.Handler.MouseWheel(this,{up:this.wheelUp,down:this.wheelDown},OpenLayers.Util.extend(wheelOptions,this.mouseWheelOptions));if(OpenLayers.Control.PinchZoom){this.pinchZoom=new OpenLayers.Control.PinchZoom(OpenLayers.Util.extend({map:this.map},this.pinchZoomOptions))}},defaultClick:function(evt){if(evt.lastTouches&&evt.lastTouches.length==2){this.map.zoomOut()}},defaultDblClick:function(evt){this.map.zoomTo(this.map.zoom+1,evt.xy)},defaultDblRightClick:function(evt){this.map.zoomTo(this.map.zoom-1,evt.xy)},wheelChange:function(evt,deltaZ){if(!this.map.fractionalZoom){deltaZ=Math.round(deltaZ)}var currentZoom=this.map.getZoom(),newZoom=currentZoom+deltaZ;newZoom=Math.max(newZoom,0);newZoom=Math.min(newZoom,this.map.getNumZoomLevels());if(newZoom===currentZoom){return}this.map.zoomTo(newZoom,evt.xy)},wheelUp:function(evt,delta){this.wheelChange(evt,delta||1)},wheelDown:function(evt,delta){this.wheelChange(evt,delta||-1)},disableZoomBox:function(){this.zoomBoxEnabled=false;this.zoomBox.deactivate()},enableZoomBox:function(){this.zoomBoxEnabled=true;if(this.active){this.zoomBox.activate()}},disableZoomWheel:function(){this.zoomWheelEnabled=false;this.handlers.wheel.deactivate()},enableZoomWheel:function(){this.zoomWheelEnabled=true;if(this.active){this.handlers.wheel.activate()}},CLASS_NAME:"OpenLayers.Control.Navigation"});OpenLayers.Kinetic=OpenLayers.Class({threshold:0,deceleration:0.0035,nbPoints:100,delay:200,points:undefined,timerId:undefined,initialize:function(options){OpenLayers.Util.extend(this,options)},begin:function(){OpenLayers.Animation.stop(this.timerId);this.timerId=undefined;this.points=[]},update:function(xy){this.points.unshift({xy:xy,tick:new Date().getTime()});if(this.points.length>this.nbPoints){this.points.pop()}},end:function(xy){var last,now=new Date().getTime();for(var i=0,l=this.points.length,point;i<l;i++){point=this.points[i];if(now-point.tick>this.delay){break}last=point}if(!last){return}var time=new Date().getTime()-last.tick;var dist=Math.sqrt(Math.pow(xy.x-last.xy.x,2)+Math.pow(xy.y-last.xy.y,2));var speed=dist/time;if(speed==0||speed<this.threshold){return}var theta=Math.asin((xy.y-last.xy.y)/dist);if(last.xy.x<=xy.x){theta=Math.PI-theta}return{speed:speed,theta:theta}},move:function(info,callback){var v0=info.speed;var fx=Math.cos(info.theta);var fy=-Math.sin(info.theta);var initialTime=new Date().getTime();var lastX=0;var lastY=0;var timerCallback=function(){if(this.timerId==null){return}var t=new Date().getTime()-initialTime;var p=(-this.deceleration*Math.pow(t,2))/2+v0*t;var x=p*fx;var y=p*fy;var args={};args.end=false;var v=-this.deceleration*t+v0;if(v<=0){OpenLayers.Animation.stop(this.timerId);this.timerId=null;args.end=true}args.x=x-lastX;args.y=y-lastY;lastX=x;lastY=y;callback(args.x,args.y,args.end)};this.timerId=OpenLayers.Animation.start(OpenLayers.Function.bind(timerCallback,this))},CLASS_NAME:"OpenLayers.Kinetic"});OpenLayers.Control.Pan=OpenLayers.Class(OpenLayers.Control.Button,{slideFactor:50,slideRatio:null,direction:null,initialize:function(direction,options){this.direction=direction;this.CLASS_NAME+=this.direction;OpenLayers.Control.prototype.initialize.apply(this,[options])},trigger:function(){if(this.map){var getSlideFactor=OpenLayers.Function.bind(function(dim){return this.slideRatio?this.map.getSize()[dim]*this.slideRatio:this.slideFactor},this);switch(this.direction){case OpenLayers.Control.Pan.NORTH:this.map.pan(0,-getSlideFactor("h"));break;case OpenLayers.Control.Pan.SOUTH:this.map.pan(0,getSlideFactor("h"));break;case OpenLayers.Control.Pan.WEST:this.map.pan(-getSlideFactor("w"),0);break;case OpenLayers.Control.Pan.EAST:this.map.pan(getSlideFactor("w"),0);break}}},CLASS_NAME:"OpenLayers.Control.Pan"});OpenLayers.Control.Pan.NORTH="North";OpenLayers.Control.Pan.SOUTH="South";OpenLayers.Control.Pan.EAST="East";OpenLayers.Control.Pan.WEST="West";OpenLayers.Control.PanPanel=OpenLayers.Class(OpenLayers.Control.Panel,{slideFactor:50,slideRatio:null,initialize:function(options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);var options={slideFactor:this.slideFactor,slideRatio:this.slideRatio};this.addControls([new OpenLayers.Control.Pan(OpenLayers.Control.Pan.NORTH,options),new OpenLayers.Control.Pan(OpenLayers.Control.Pan.SOUTH,options),new OpenLayers.Control.Pan(OpenLayers.Control.Pan.EAST,options),new OpenLayers.Control.Pan(OpenLayers.Control.Pan.WEST,options)])},CLASS_NAME:"OpenLayers.Control.PanPanel"});Ext.namespace("GeoExt");GeoExt.ZoomSlider=Ext.extend(Ext.slider.SingleSlider,{map:null,baseCls:"gx-zoomslider",aggressive:false,updating:false,initComponent:function(){GeoExt.ZoomSlider.superclass.initComponent.call(this);if(this.map){if(this.map instanceof GeoExt.MapPanel){this.map=this.map.map}this.bind(this.map)}if(this.aggressive===true){this.on("change",this.changeHandler,this)}else{this.on("changecomplete",this.changeHandler,this)}this.on("beforedestroy",this.unbind,this)},onRender:function(){GeoExt.ZoomSlider.superclass.onRender.apply(this,arguments);this.el.addClass(this.baseCls)},afterRender:function(){Ext.slider.SingleSlider.superclass.afterRender.apply(this,arguments);this.update()},addToMapPanel:function(panel){this.on({render:function(){var el=this.getEl();el.setStyle({position:"absolute",zIndex:panel.map.Z_INDEX_BASE.Control});el.on({mousedown:this.stopMouseEvents,click:this.stopMouseEvents})},afterrender:function(){this.bind(panel.map)},scope:this})},stopMouseEvents:function(e){e.stopEvent()},removeFromMapPanel:function(panel){var el=this.getEl();el.un("mousedown",this.stopMouseEvents,this);el.un("click",this.stopMouseEvents,this);this.unbind()},bind:function(map){this.map=map;this.map.events.on({zoomend:this.onZoomEnd,updatesize:this.initZoomValues,changebaselayer:this.initZoomValues,scope:this});this.initZoomValues()},onZoomEnd:function(){this.update()},unbind:function(){if(this.map&&this.map.events){this.map.events.un({zoomend:this.onZoomEnd,updatesize:this.initZoomValues,changebaselayer:this.initZoomValues,scope:this})}},initZoomValues:function(){var layer=this.map.baseLayer;if(layer){if(this.initialConfig.minValue===undefined){var minZoom=this.map.getMinZoom?this.map.getMinZoom():0;this.minValue=Math.max(minZoom,layer.minZoomLevel||0)}if(this.initialConfig.maxValue===undefined){this.maxValue=layer.minZoomLevel==null?layer.numZoomLevels-1:layer.maxZoomLevel}this.update(true)}},getZoom:function(){return this.getValue()},getScale:function(){return OpenLayers.Util.getScaleFromResolution(this.map.getResolutionForZoom(this.getValue()),this.map.getUnits())},getResolution:function(){return this.map.getResolutionForZoom(this.getValue())},changeHandler:function(){if(this.map&&!this.updating){this.map.zoomTo(this.getValue())}},update:function(force){if(this.rendered&&this.map){this.updating=true;if(force){this.thumbs[0].value=null}this.setValue(this.map.getZoom());this.updating=false}}});Ext.reg("gx_zoomslider",GeoExt.ZoomSlider);Ext.namespace("GeoExt");GeoExt.ZoomSliderTip=Ext.extend(GeoExt.SliderTip,{template:"<div>Zoom Level: {zoom}</div><div>Resolution: {resolution}</div><div>Scale: 1 : {scale}</div>",compiledTemplate:null,init:function(slider){this.compiledTemplate=new Ext.Template(this.template);GeoExt.ZoomSliderTip.superclass.init.call(this,slider)},getText:function(thumb){var data={zoom:thumb.value,resolution:this.slider.getResolution(),scale:Math.round(this.slider.getScale())};return this.compiledTemplate.apply(data)}});Ext.namespace("gxp");gxp.Viewer=Ext.extend(Ext.util.Observable,{defaultToolType:"gxp_tool",tools:null,selectedLayer:null,authenticate:null,saveErrorText:"Trouble saving: ",constructor:function(config){this.addEvents("ready","beforecreateportal","portalready","beforelayerselectionchange","layerselectionchange","featureedit","authorizationchange","beforesave","save","beforehashchange");Ext.apply(this,{layerSources:{},portalItems:[]});this.createLayerRecordQueue=[];(config.loadConfig||this.loadConfig).call(this,config,this.applyConfig);gxp.Viewer.superclass.constructor.apply(this,arguments)},selectLayer:function(record){record=record||null;var changed=false;var allow=this.fireEvent("beforelayerselectionchange",record);if(allow!==false){changed=true;if(this.selectedLayer){this.selectedLayer.set("selected",false)}this.selectedLayer=record;if(this.selectedLayer){this.selectedLayer.set("selected",true)}this.fireEvent("layerselectionchange",record)}return changed},loadConfig:function(config){this.applyConfig(config)},applyConfig:function(config){this.initialConfig=Ext.apply({},config);Ext.apply(this,this.initialConfig);this.load()},load:function(){if(this.proxy){OpenLayers.ProxyHost=this.proxy}this.initMapPanel();this.initTools();var config,queue=[];for(var key in this.sources){queue.push(this.createSourceLoader(key))}queue.push(function(done){Ext.onReady(function(){this.initPortal();done()},this)});gxp.util.dispatch(queue,this.activate,this)},createSourceLoader:function(key){return function(done){var config=this.sources[key];config.projection=this.initialConfig.map.projection;this.addLayerSource({id:key,config:config,callback:done,fallback:function(source,msg,details){done()},scope:this})}},addLayerSource:function(options){var id=options.id||Ext.id(null,"gxp-source-");var source;var config=options.config;config.id=id;try{source=Ext.ComponentMgr.createPlugin(config,this.defaultSourceType)}catch(err){throw new Error("Could not create new source plugin with ptype: "+options.config.ptype)}source.on({ready:{fn:function(){var callback=options.callback||Ext.emptyFn;callback.call(options.scope||this,id)},scope:this,single:true},failure:{fn:function(){var fallback=options.fallback||Ext.emptyFn;delete this.layerSources[id];fallback.apply(options.scope||this,arguments)},scope:this,single:true}});this.layerSources[id]=source;source.init(this);return source},initMapPanel:function(){var config=Ext.apply({},this.initialConfig.map);var mapConfig={};var baseLayerConfig={wrapDateLine:config.wrapDateLine!==undefined?config.wrapDateLine:true,maxResolution:config.maxResolution,numZoomLevels:config.numZoomLevels,displayInLayerSwitcher:false};if(this.initialConfig.map){var props="theme,controls,resolutions,projection,units,maxExtent,restrictedExtent,maxResolution,numZoomLevels,panMethod".split(",");var prop;for(var i=props.length-1;i>=0;--i){prop=props[i];if(prop in config){mapConfig[prop]=config[prop];delete config[prop]}}}this.mapPanel=Ext.ComponentMgr.create(Ext.applyIf({xtype:config.xtype||"gx_mappanel",map:Ext.applyIf({theme:mapConfig.theme||null,controls:mapConfig.controls||[new OpenLayers.Control.Navigation({zoomWheelOptions:{interval:250},dragPanOptions:{enableKinetic:true}}),new OpenLayers.Control.PanPanel(),new OpenLayers.Control.ZoomPanel(),new OpenLayers.Control.Attribution()],maxExtent:mapConfig.maxExtent&&OpenLayers.Bounds.fromArray(mapConfig.maxExtent),restrictedExtent:mapConfig.restrictedExtent&&OpenLayers.Bounds.fromArray(mapConfig.restrictedExtent),numZoomLevels:mapConfig.numZoomLevels||20},mapConfig),center:config.center&&new OpenLayers.LonLat(config.center[0],config.center[1]),resolutions:config.resolutions,forceInitialExtent:true,layers:[new OpenLayers.Layer(null,baseLayerConfig)],items:this.mapItems,plugins:this.mapPlugins,tbar:config.tbar||new Ext.Toolbar({hidden:true})},config));this.mapPanel.getTopToolbar().on({afterlayout:this.mapPanel.map.updateSize,show:this.mapPanel.map.updateSize,hide:this.mapPanel.map.updateSize,scope:this.mapPanel.map});this.mapPanel.layers.on({add:function(store,records){var record;for(var i=records.length-1;i>=0;i--){record=records[i];if(record.get("selected")===true){this.selectLayer(record)}}},remove:function(store,record){if(record.get("selected")===true){this.selectLayer()}},scope:this})},initTools:function(){this.tools={};if(this.initialConfig.tools&&this.initialConfig.tools.length>0){var tool;for(var i=0,len=this.initialConfig.tools.length;i<len;i++){try{tool=Ext.ComponentMgr.createPlugin(this.initialConfig.tools[i],this.defaultToolType)}catch(err){throw new Error("Could not create tool plugin with ptype: "+this.initialConfig.tools[i].ptype)}tool.init(this)}}},initPortal:function(){var config=Ext.apply({},this.portalConfig);if(this.portalItems.length===0){this.mapPanel.region="center";this.portalItems.push(this.mapPanel)}this.fireEvent("beforecreateportal");this.portal=Ext.ComponentMgr.create(Ext.applyIf(config,{layout:"fit",hideBorders:true,items:{layout:"border",deferredRender:false,items:this.portalItems}}),config.renderTo?"panel":"viewport");this.fireEvent("portalready")},activate:function(){Ext.QuickTips.init();this.addLayers();this.checkLayerRecordQueue();this.fireEvent("ready")},addLayers:function(){var mapConfig=this.initialConfig.map;if(mapConfig&&mapConfig.layers){var conf,source,record,baseRecords=[],overlayRecords=[];for(var i=0;i<mapConfig.layers.length;++i){conf=mapConfig.layers[i];source=this.layerSources[conf.source];if(source){record=source.createLayerRecord(conf);if(record){if(record.get("group")==="background"){baseRecords.push(record)}else{overlayRecords.push(record)}}}else{if(window.console){console.warn("Non-existing source '"+conf.source+"' referenced in layer config.")}}}var panel=this.mapPanel;var map=panel.map;var records=baseRecords.concat(overlayRecords);if(records.length){panel.layers.add(records)}}},getLayerRecordFromMap:function(config){var record=null;if(this.mapPanel){this.mapPanel.layers.each(function(rec){if(rec.get("source")==config.source&&rec.get("name")==config.name){record=rec;return false}})}return record},createLayerRecord:function(config,callback,scope){this.createLayerRecordQueue.push({config:config,callback:callback,scope:scope});this.checkLayerRecordQueue()},checkLayerRecordQueue:function(){var request,source,s,record,called;var remaining=[];for(var i=0,ii=this.createLayerRecordQueue.length;i<ii;++i){called=false;request=this.createLayerRecordQueue[i];s=request.config.source;if(s in this.layerSources){source=this.layerSources[s];record=source.createLayerRecord(request.config);if(record){(function(req,rec){window.setTimeout(function(){req.callback.call(req.scope,rec)},0)})(request,record);called=true}else{if(source.lazy){source.store.load({callback:this.checkLayerRecordQueue,scope:this})}}}if(!called){remaining.push(request)}}this.createLayerRecordQueue=remaining},getSource:function(layerRec){return layerRec&&this.layerSources[layerRec.get("source")]},getState:function(){var state=Ext.apply({},this.initialConfig);var center=this.mapPanel.map.getCenter();Ext.apply(state.map,{center:[center.lon,center.lat],zoom:this.mapPanel.map.zoom,layers:[]});var sources={};this.mapPanel.layers.each(function(record){var layer=record.getLayer();if(layer.displayInLayerSwitcher){var id=record.get("source");var source=this.layerSources[id];if(!source){throw new Error("Could not find source for record '"+record.get("name")+" and layer "+layer.name+"'")}state.map.layers.push(source.getConfigForRecord(record));if(!sources[id]){sources[id]=source.getState()}}},this);Ext.apply(this.sources,sources);state.tools=[];Ext.iterate(this.tools,function(key,val,obj){if(val.getState!=gxp.plugins.Tool.prototype.getState){state.tools.push(val.getState())}});return state},isAuthorized:function(roles){var authorized=true;if(this.authorizedRoles){authorized=false;if(!roles){roles="ROLE_ADMINISTRATOR"}if(!Ext.isArray(roles)){roles=[roles]}for(var i=roles.length-1;i>=0;--i){if(~this.authorizedRoles.indexOf(roles[i])){authorized=true;break}}}return authorized},setAuthorizedRoles:function(authorizedRoles){this.authorizedRoles=authorizedRoles;this.fireEvent("authorizationchange")},cancelAuthentication:function(){if(this._authFn){this.un("authorizationchange",this._authFn,this)}this.fireEvent("authorizationchange")},isAuthenticated:function(role){return !this.authorizedRoles||this.authorizedRoles.length>0},doAuthorized:function(roles,callback,scope){if(this.isAuthorized(roles)||!this.authenticate){window.setTimeout(function(){callback.call(scope)},0)}else{this.authenticate();this._authFn=function authFn(){delete this._authFn;this.doAuthorized(roles,callback,scope,true)};this.on("authorizationchange",this._authFn,this,{single:true})}},save:function(callback,scope){var configStr=Ext.util.JSON.encode(this.getState());var method,url;if(this.id){method="PUT";url="../maps/"+this.id}else{method="POST";url="../maps/"}var requestConfig={method:method,url:url,data:configStr};if(this.fireEvent("beforesave",requestConfig,callback)!==false){OpenLayers.Request.issue(Ext.apply(requestConfig,{callback:function(request){this.handleSave(request);if(callback){callback.call(scope||this,request)}},scope:this}))}},handleSave:function(request){if(request.status==200){var config=Ext.util.JSON.decode(request.responseText);var mapId=config.id;if(mapId){this.id=mapId;var hash="#maps/"+mapId;if(this.fireEvent("beforehashchange",hash)!==false){window.location.hash=hash}this.fireEvent("save",this.id)}}else{if(window.console){console.warn(this.saveErrorText+request.responseText)}}},destroy:function(){this.mapPanel.destroy();this.portal&&this.portal.destroy()}});(function(){OpenLayers.DOTS_PER_INCH=25.4/0.28})();Ext.namespace("gxp");gxp.EmbedMapDialog=Ext.extend(Ext.Container,{url:null,url:null,publishMessage:"Your map is ready to be published to the web! Simply copy the following HTML to embed the map in your website:",heightLabel:"Height",widthLabel:"Width",mapSizeLabel:"Map Size",miniSizeLabel:"Mini",smallSizeLabel:"Small",premiumSizeLabel:"Premium",largeSizeLabel:"Large",snippetArea:null,heightField:null,widthField:null,initComponent:function(){Ext.apply(this,this.getConfig());gxp.EmbedMapDialog.superclass.initComponent.call(this)},getIframeHTML:function(){return this.snippetArea.getValue()},updateSnippet:function(){this.snippetArea.setValue('<iframe style="border: none;" height="'+this.heightField.getValue()+'" width="'+this.widthField.getValue()+'" src="'+gxp.util.getAbsoluteUrl(this.url)+'"></iframe>');if(this.snippetArea.isVisible()===true){this.snippetArea.focus(true,100)}},getConfig:function(){this.snippetArea=new Ext.form.TextArea({height:70,selectOnFocus:true,readOnly:true});var numFieldListeners={change:this.updateSnippet,specialkey:function(f,e){e.getKey()==e.ENTER&&this.updateSnippet()},scope:this};this.heightField=new Ext.form.NumberField({width:50,value:400,listeners:numFieldListeners});this.widthField=new Ext.form.NumberField({width:50,value:600,listeners:numFieldListeners});var adjustments=new Ext.Container({layout:"column",defaults:{border:false,xtype:"box"},items:[{autoEl:{cls:"gxp-field-label",html:this.mapSizeLabel}},new Ext.form.ComboBox({editable:false,width:75,store:new Ext.data.SimpleStore({fields:["name","height","width"],data:[[this.miniSizeLabel,100,100],[this.smallSizeLabel,200,300],[this.largeSizeLabel,400,600],[this.premiumSizeLabel,600,800]]}),triggerAction:"all",displayField:"name",value:this.largeSizeLabel,mode:"local",listeners:{select:function(combo,record,index){this.widthField.setValue(record.get("width"));this.heightField.setValue(record.get("height"));this.updateSnippet()},scope:this}}),{autoEl:{cls:"gxp-field-label",html:this.heightLabel}},this.heightField,{autoEl:{cls:"gxp-field-label",html:this.widthLabel}},this.widthField]});return{border:false,defaults:{border:false,cls:"gxp-export-section",xtype:"container",layout:"fit"},items:[{items:[adjustments]},{xtype:"box",autoEl:{tag:"p",html:this.publishMessage}},{items:[this.snippetArea]}],listeners:{afterrender:this.updateSnippet,scope:this}}}});Ext.reg("gxp_embedmapdialog",gxp.EmbedMapDialog);Ext.namespace("gxp");gxp.RulePanel=Ext.extend(Ext.TabPanel,{fonts:undefined,symbolType:"Point",rule:null,attributes:null,nestedFilters:true,minScaleDenominatorLimit:Math.pow(0.5,19)*40075016.68*39.3701*OpenLayers.DOTS_PER_INCH/256,maxScaleDenominatorLimit:40075016.68*39.3701*OpenLayers.DOTS_PER_INCH/256,scaleLevels:20,scaleSliderTemplate:"{scaleType} Scale 1:{scale}",modifyScaleTipContext:Ext.emptyFn,labelFeaturesText:"Label Features",labelsText:"Labels",basicText:"Basic",advancedText:"Advanced",limitByScaleText:"Limit by scale",limitByConditionText:"Limit by condition",symbolText:"Symbol",nameText:"Name",initComponent:function(){var defConfig={plain:true,border:false};Ext.applyIf(this,defConfig);if(!this.rule){this.rule=new OpenLayers.Rule({name:this.uniqueRuleName()})}else{if(!this.initialConfig.symbolType){this.symbolType=this.getSymbolTypeFromRule(this.rule)||this.symbolType}}this.activeTab=0;this.textSymbolizer=new gxp.TextSymbolizer({symbolizer:this.getTextSymbolizer(),attributes:this.attributes,fonts:this.fonts,listeners:{change:function(symbolizer){this.fireEvent("change",this,this.rule)},scope:this}});this.scaleLimitPanel=new gxp.ScaleLimitPanel({maxScaleDenominator:this.rule.maxScaleDenominator||undefined,limitMaxScaleDenominator:!!this.rule.maxScaleDenominator,maxScaleDenominatorLimit:this.maxScaleDenominatorLimit,minScaleDenominator:this.rule.minScaleDenominator||undefined,limitMinScaleDenominator:!!this.rule.minScaleDenominator,minScaleDenominatorLimit:this.minScaleDenominatorLimit,scaleLevels:this.scaleLevels,scaleSliderTemplate:this.scaleSliderTemplate,modifyScaleTipContext:this.modifyScaleTipContext,listeners:{change:function(comp,min,max){this.rule.minScaleDenominator=min;this.rule.maxScaleDenominator=max;this.fireEvent("change",this,this.rule)},scope:this}});this.filterBuilder=new gxp.FilterBuilder({allowGroups:this.nestedFilters,filter:this.rule&&this.rule.filter&&this.rule.filter.clone(),attributes:this.attributes,listeners:{change:function(builder){var filter=builder.getFilter();this.rule.filter=filter;this.fireEvent("change",this,this.rule)},scope:this}});this.items=[{title:this.labelsText,autoScroll:true,bodyStyle:{padding:"10px"},items:[{xtype:"fieldset",title:this.labelFeaturesText,autoHeight:true,checkboxToggle:true,collapsed:!this.hasTextSymbolizer(),items:[this.textSymbolizer],listeners:{collapse:function(){OpenLayers.Util.removeItem(this.rule.symbolizers,this.getTextSymbolizer());this.fireEvent("change",this,this.rule)},expand:function(){this.setTextSymbolizer(this.textSymbolizer.symbolizer);this.fireEvent("change",this,this.rule)},scope:this}}]}];if(this.getSymbolTypeFromRule(this.rule)||this.symbolType){this.items=[{title:this.basicText,autoScroll:true,items:[this.createHeaderPanel(),this.createSymbolizerPanel()]},this.items[0],{title:this.advancedText,defaults:{style:{margin:"7px"}},autoScroll:true,items:[{xtype:"fieldset",title:this.limitByScaleText,checkboxToggle:true,collapsed:!(this.rule&&(this.rule.minScaleDenominator||this.rule.maxScaleDenominator)),autoHeight:true,items:[this.scaleLimitPanel],listeners:{collapse:function(){delete this.rule.minScaleDenominator;delete this.rule.maxScaleDenominator;this.fireEvent("change",this,this.rule)},expand:function(){var tab=this.getActiveTab();this.activeTab=null;this.setActiveTab(tab);var changed=false;if(this.scaleLimitPanel.limitMinScaleDenominator){this.rule.minScaleDenominator=this.scaleLimitPanel.minScaleDenominator;changed=true}if(this.scaleLimitPanel.limitMaxScaleDenominator){this.rule.maxScaleDenominator=this.scaleLimitPanel.maxScaleDenominator;changed=true}if(changed){this.fireEvent("change",this,this.rule)}},scope:this}},{xtype:"fieldset",title:this.limitByConditionText,checkboxToggle:true,collapsed:!(this.rule&&this.rule.filter),autoHeight:true,items:[this.filterBuilder],listeners:{collapse:function(){delete this.rule.filter;this.fireEvent("change",this,this.rule)},expand:function(){var changed=false;this.rule.filter=this.filterBuilder.getFilter();this.fireEvent("change",this,this.rule)},scope:this}}]}]}this.items[0].autoHeight=true;this.addEvents("change");this.on({tabchange:function(panel,tab){tab.doLayout()},scope:this});gxp.RulePanel.superclass.initComponent.call(this)},hasTextSymbolizer:function(){var candidate,symbolizer;for(var i=0,ii=this.rule.symbolizers.length;i<ii;++i){candidate=this.rule.symbolizers[i];if(candidate instanceof OpenLayers.Symbolizer.Text){symbolizer=candidate;break}}return symbolizer},getTextSymbolizer:function(){var symbolizer=this.hasTextSymbolizer();if(!symbolizer){symbolizer=new OpenLayers.Symbolizer.Text({graphic:false})}return symbolizer},setTextSymbolizer:function(symbolizer){var found;for(var i=0,ii=this.rule.symbolizers.length;i<ii;++i){candidate=this.rule.symbolizers[i];if(this.rule.symbolizers[i] instanceof OpenLayers.Symbolizer.Text){this.rule.symbolizers[i]=symbolizer;found=true;break}}if(!found){this.rule.symbolizers.push(symbolizer)}},uniqueRuleName:function(){return OpenLayers.Util.createUniqueID("rule_")},createHeaderPanel:function(){this.symbolizerSwatch=new GeoExt.FeatureRenderer({symbolType:this.symbolType,isFormField:true,fieldLabel:this.symbolText});return{xtype:"form",border:false,labelAlign:"top",defaults:{border:false},style:{padding:"0.3em 0 0 1em"},items:[{layout:"column",defaults:{border:false,style:{"padding-right":"1em"}},items:[{layout:"form",width:150,items:[{xtype:"textfield",fieldLabel:this.nameText,anchor:"95%",value:this.rule&&(this.rule.title||this.rule.name||""),listeners:{change:function(el,value){this.rule.title=value;this.fireEvent("change",this,this.rule)},scope:this}}]},{layout:"form",width:70,items:[this.symbolizerSwatch]}]}]}},createSymbolizerPanel:function(){var candidate,symbolizer;var Type=OpenLayers.Symbolizer[this.symbolType];var existing=false;if(Type){for(var i=0,ii=this.rule.symbolizers.length;i<ii;++i){candidate=this.rule.symbolizers[i];if(candidate instanceof Type){existing=true;symbolizer=candidate;break}}if(!symbolizer){symbolizer=new Type({fill:false,stroke:false})}}else{throw new Error("Appropriate symbolizer type not included in build: "+this.symbolType)}this.symbolizerSwatch.setSymbolizers([symbolizer],{draw:this.symbolizerSwatch.rendered});var cfg={xtype:"gxp_"+this.symbolType.toLowerCase()+"symbolizer",symbolizer:symbolizer,bodyStyle:{padding:"10px"},border:false,labelWidth:70,defaults:{labelWidth:70},listeners:{change:function(symbolizer){this.symbolizerSwatch.setSymbolizers([symbolizer],{draw:this.symbolizerSwatch.rendered});if(!existing){this.rule.symbolizers.push(symbolizer);existing=true}this.fireEvent("change",this,this.rule)},scope:this}};if(this.symbolType==="Point"&&this.pointGraphics){cfg.pointGraphics=this.pointGraphics}return cfg},getSymbolTypeFromRule:function(rule){var candidate,type;for(var i=0,ii=rule.symbolizers.length;i<ii;++i){candidate=rule.symbolizers[i];if(!(candidate instanceof OpenLayers.Symbolizer.Text)){type=candidate.CLASS_NAME.split(".").pop();break}}return type}});Ext.reg("gxp_rulepanel",gxp.RulePanel);Ext.namespace("gxp");gxp.StylePropertiesDialog=Ext.extend(Ext.Container,{titleText:"General",nameFieldText:"Name",titleFieldText:"Title",abstractFieldText:"Abstract",userStyle:null,initComponent:function(){var listeners={change:function(field,value){this.userStyle[field.name]=value;this.fireEvent("change",this,this.userStyle)},scope:this};var defConfig={layout:"form",items:[{xtype:"fieldset",title:this.titleText,labelWidth:75,defaults:{xtype:"textfield",anchor:"100%",listeners:listeners},items:[{xtype:this.initialConfig.nameEditable?"textfield":"displayfield",fieldLabel:this.nameFieldText,name:"name",value:this.userStyle.name,maskRe:/[A-Za-z0-9_]/},{fieldLabel:this.titleFieldText,name:"title",value:this.userStyle.title},{xtype:"textarea",fieldLabel:this.abstractFieldText,name:"description",value:this.userStyle.description}]}]};Ext.applyIf(this,defConfig);this.addEvents("change");gxp.StylePropertiesDialog.superclass.initComponent.apply(this,arguments)}});Ext.reg("gxp_stylepropertiesdialog",gxp.StylePropertiesDialog);OpenLayers.ElementsIndexer=OpenLayers.Class({maxZIndex:null,order:null,indices:null,compare:null,initialize:function(yOrdering){this.compare=yOrdering?OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER_Y_ORDER:OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER_DRAWING_ORDER;this.clear()},insert:function(newNode){if(this.exists(newNode)){this.remove(newNode)}var nodeId=newNode.id;this.determineZIndex(newNode);var leftIndex=-1;var rightIndex=this.order.length;var middle;while(rightIndex-leftIndex>1){middle=parseInt((leftIndex+rightIndex)/2);var placement=this.compare(this,newNode,OpenLayers.Util.getElement(this.order[middle]));if(placement>0){leftIndex=middle}else{rightIndex=middle}}this.order.splice(rightIndex,0,nodeId);this.indices[nodeId]=this.getZIndex(newNode);return this.getNextElement(rightIndex)},remove:function(node){var nodeId=node.id;var arrayIndex=OpenLayers.Util.indexOf(this.order,nodeId);if(arrayIndex>=0){this.order.splice(arrayIndex,1);delete this.indices[nodeId];if(this.order.length>0){var lastId=this.order[this.order.length-1];this.maxZIndex=this.indices[lastId]}else{this.maxZIndex=0}}},clear:function(){this.order=[];this.indices={};this.maxZIndex=0},exists:function(node){return(this.indices[node.id]!=null)},getZIndex:function(node){return node._style.graphicZIndex},determineZIndex:function(node){var zIndex=node._style.graphicZIndex;if(zIndex==null){zIndex=this.maxZIndex;node._style.graphicZIndex=zIndex}else{if(zIndex>this.maxZIndex){this.maxZIndex=zIndex}}},getNextElement:function(index){var nextIndex=index+1;if(nextIndex<this.order.length){var nextElement=OpenLayers.Util.getElement(this.order[nextIndex]);if(nextElement==undefined){nextElement=this.getNextElement(nextIndex)}return nextElement}else{return null}},CLASS_NAME:"OpenLayers.ElementsIndexer"});OpenLayers.ElementsIndexer.IndexingMethods={Z_ORDER:function(indexer,newNode,nextNode){var newZIndex=indexer.getZIndex(newNode);var returnVal=0;if(nextNode){var nextZIndex=indexer.getZIndex(nextNode);returnVal=newZIndex-nextZIndex}return returnVal},Z_ORDER_DRAWING_ORDER:function(indexer,newNode,nextNode){var returnVal=OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER(indexer,newNode,nextNode);if(nextNode&&returnVal==0){returnVal=1}return returnVal},Z_ORDER_Y_ORDER:function(indexer,newNode,nextNode){var returnVal=OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER(indexer,newNode,nextNode);if(nextNode&&returnVal===0){var result=nextNode._boundsBottom-newNode._boundsBottom;returnVal=(result===0)?1:result}return returnVal}};OpenLayers.Renderer.Elements=OpenLayers.Class(OpenLayers.Renderer,{rendererRoot:null,root:null,vectorRoot:null,textRoot:null,xmlns:null,xOffset:0,indexer:null,BACKGROUND_ID_SUFFIX:"_background",LABEL_ID_SUFFIX:"_label",LABEL_OUTLINE_SUFFIX:"_outline",initialize:function(containerID,options){OpenLayers.Renderer.prototype.initialize.apply(this,arguments);this.rendererRoot=this.createRenderRoot();this.root=this.createRoot("_root");this.vectorRoot=this.createRoot("_vroot");this.textRoot=this.createRoot("_troot");this.root.appendChild(this.vectorRoot);this.root.appendChild(this.textRoot);this.rendererRoot.appendChild(this.root);this.container.appendChild(this.rendererRoot);if(options&&(options.zIndexing||options.yOrdering)){this.indexer=new OpenLayers.ElementsIndexer(options.yOrdering)}},destroy:function(){this.clear();this.rendererRoot=null;this.root=null;this.xmlns=null;OpenLayers.Renderer.prototype.destroy.apply(this,arguments)},clear:function(){var child;var root=this.vectorRoot;if(root){while(child=root.firstChild){root.removeChild(child)}}root=this.textRoot;if(root){while(child=root.firstChild){root.removeChild(child)}}if(this.indexer){this.indexer.clear()}},setExtent:function(extent,resolutionChanged){var coordSysUnchanged=OpenLayers.Renderer.prototype.setExtent.apply(this,arguments);var resolution=this.getResolution();if(this.map.baseLayer&&this.map.baseLayer.wrapDateLine){var rightOfDateLine,ratio=extent.getWidth()/this.map.getExtent().getWidth(),extent=extent.scale(1/ratio),world=this.map.getMaxExtent();if(world.right>extent.left&&world.right<extent.right){rightOfDateLine=true}else{if(world.left>extent.left&&world.left<extent.right){rightOfDateLine=false}}if(rightOfDateLine!==this.rightOfDateLine||resolutionChanged){coordSysUnchanged=false;this.xOffset=rightOfDateLine===true?world.getWidth()/resolution:0}this.rightOfDateLine=rightOfDateLine}return coordSysUnchanged},getNodeType:function(geometry,style){},drawGeometry:function(geometry,style,featureId){var className=geometry.CLASS_NAME;var rendered=true;if((className=="OpenLayers.Geometry.Collection")||(className=="OpenLayers.Geometry.MultiPoint")||(className=="OpenLayers.Geometry.MultiLineString")||(className=="OpenLayers.Geometry.MultiPolygon")){for(var i=0,len=geometry.components.length;i<len;i++){rendered=this.drawGeometry(geometry.components[i],style,featureId)&&rendered}return rendered}rendered=false;var removeBackground=false;if(style.display!="none"){if(style.backgroundGraphic){this.redrawBackgroundNode(geometry.id,geometry,style,featureId)}else{removeBackground=true}rendered=this.redrawNode(geometry.id,geometry,style,featureId)}if(rendered==false){var node=document.getElementById(geometry.id);if(node){if(node._style.backgroundGraphic){removeBackground=true}node.parentNode.removeChild(node)}}if(removeBackground){var node=document.getElementById(geometry.id+this.BACKGROUND_ID_SUFFIX);if(node){node.parentNode.removeChild(node)}}return rendered},redrawNode:function(id,geometry,style,featureId){style=this.applyDefaultSymbolizer(style);var node=this.nodeFactory(id,this.getNodeType(geometry,style));node._featureId=featureId;node._boundsBottom=geometry.getBounds().bottom;node._geometryClass=geometry.CLASS_NAME;node._style=style;var drawResult=this.drawGeometryNode(node,geometry,style);if(drawResult===false){return false}node=drawResult.node;if(this.indexer){var insert=this.indexer.insert(node);if(insert){this.vectorRoot.insertBefore(node,insert)}else{this.vectorRoot.appendChild(node)}}else{if(node.parentNode!==this.vectorRoot){this.vectorRoot.appendChild(node)}}this.postDraw(node);return drawResult.complete},redrawBackgroundNode:function(id,geometry,style,featureId){var backgroundStyle=OpenLayers.Util.extend({},style);backgroundStyle.externalGraphic=backgroundStyle.backgroundGraphic;backgroundStyle.graphicXOffset=backgroundStyle.backgroundXOffset;backgroundStyle.graphicYOffset=backgroundStyle.backgroundYOffset;backgroundStyle.graphicZIndex=backgroundStyle.backgroundGraphicZIndex;backgroundStyle.graphicWidth=backgroundStyle.backgroundWidth||backgroundStyle.graphicWidth;backgroundStyle.graphicHeight=backgroundStyle.backgroundHeight||backgroundStyle.graphicHeight;backgroundStyle.backgroundGraphic=null;backgroundStyle.backgroundXOffset=null;backgroundStyle.backgroundYOffset=null;backgroundStyle.backgroundGraphicZIndex=null;return this.redrawNode(id+this.BACKGROUND_ID_SUFFIX,geometry,backgroundStyle,null)},drawGeometryNode:function(node,geometry,style){style=style||node._style;var options={isFilled:style.fill===undefined?true:style.fill,isStroked:style.stroke===undefined?!!style.strokeWidth:style.stroke};var drawn;switch(geometry.CLASS_NAME){case"OpenLayers.Geometry.Point":if(style.graphic===false){options.isFilled=false;options.isStroked=false}drawn=this.drawPoint(node,geometry);break;case"OpenLayers.Geometry.LineString":options.isFilled=false;drawn=this.drawLineString(node,geometry);break;case"OpenLayers.Geometry.LinearRing":drawn=this.drawLinearRing(node,geometry);break;case"OpenLayers.Geometry.Polygon":drawn=this.drawPolygon(node,geometry);break;case"OpenLayers.Geometry.Rectangle":drawn=this.drawRectangle(node,geometry);break;default:break}node._options=options;if(drawn!=false){return{node:this.setStyle(node,style,options,geometry),complete:drawn}}else{return false}},postDraw:function(node){},drawPoint:function(node,geometry){},drawLineString:function(node,geometry){},drawLinearRing:function(node,geometry){},drawPolygon:function(node,geometry){},drawRectangle:function(node,geometry){},drawCircle:function(node,geometry){},removeText:function(featureId){var label=document.getElementById(featureId+this.LABEL_ID_SUFFIX);if(label){this.textRoot.removeChild(label)}var outline=document.getElementById(featureId+this.LABEL_OUTLINE_SUFFIX);if(outline){this.textRoot.removeChild(outline)}},getFeatureIdFromEvent:function(evt){var target=evt.target;var useElement=target&&target.correspondingUseElement;var node=useElement?useElement:(target||evt.srcElement);return node._featureId},eraseGeometry:function(geometry,featureId){if((geometry.CLASS_NAME=="OpenLayers.Geometry.MultiPoint")||(geometry.CLASS_NAME=="OpenLayers.Geometry.MultiLineString")||(geometry.CLASS_NAME=="OpenLayers.Geometry.MultiPolygon")||(geometry.CLASS_NAME=="OpenLayers.Geometry.Collection")){for(var i=0,len=geometry.components.length;i<len;i++){this.eraseGeometry(geometry.components[i],featureId)}}else{var element=OpenLayers.Util.getElement(geometry.id);if(element&&element.parentNode){if(element.geometry){element.geometry.destroy();element.geometry=null}element.parentNode.removeChild(element);if(this.indexer){this.indexer.remove(element)}if(element._style.backgroundGraphic){var backgroundId=geometry.id+this.BACKGROUND_ID_SUFFIX;var bElem=OpenLayers.Util.getElement(backgroundId);if(bElem&&bElem.parentNode){bElem.parentNode.removeChild(bElem)}}}}},nodeFactory:function(id,type){var node=OpenLayers.Util.getElement(id);if(node){if(!this.nodeTypeCompare(node,type)){node.parentNode.removeChild(node);node=this.nodeFactory(id,type)}}else{node=this.createNode(type,id)}return node},nodeTypeCompare:function(node,type){},createNode:function(type,id){},moveRoot:function(renderer){var root=this.root;if(renderer.root.parentNode==this.rendererRoot){root=renderer.root}root.parentNode.removeChild(root);renderer.rendererRoot.appendChild(root)},getRenderLayerId:function(){return this.root.parentNode.parentNode.id},isComplexSymbol:function(graphicName){return(graphicName!="circle")&&!!graphicName},CLASS_NAME:"OpenLayers.Renderer.Elements"});OpenLayers.Renderer.SVG=OpenLayers.Class(OpenLayers.Renderer.Elements,{xmlns:"http://www.w3.org/2000/svg",xlinkns:"http://www.w3.org/1999/xlink",MAX_PIXEL:15000,translationParameters:null,symbolMetrics:null,initialize:function(containerID){if(!this.supported()){return}OpenLayers.Renderer.Elements.prototype.initialize.apply(this,arguments);this.translationParameters={x:0,y:0};this.symbolMetrics={}},supported:function(){var svgFeature="http://www.w3.org/TR/SVG11/feature#";return(document.implementation&&(document.implementation.hasFeature("org.w3c.svg","1.0")||document.implementation.hasFeature(svgFeature+"SVG","1.1")||document.implementation.hasFeature(svgFeature+"BasicStructure","1.1")))},inValidRange:function(x,y,xyOnly){var left=x+(xyOnly?0:this.translationParameters.x);var top=y+(xyOnly?0:this.translationParameters.y);return(left>=-this.MAX_PIXEL&&left<=this.MAX_PIXEL&&top>=-this.MAX_PIXEL&&top<=this.MAX_PIXEL)},setExtent:function(extent,resolutionChanged){var coordSysUnchanged=OpenLayers.Renderer.Elements.prototype.setExtent.apply(this,arguments);var resolution=this.getResolution(),left=-extent.left/resolution,top=extent.top/resolution;if(resolutionChanged){this.left=left;this.top=top;var extentString="0 0 "+this.size.w+" "+this.size.h;this.rendererRoot.setAttributeNS(null,"viewBox",extentString);this.translate(this.xOffset,0);return true}else{var inRange=this.translate(left-this.left+this.xOffset,top-this.top);if(!inRange){this.setExtent(extent,true)}return coordSysUnchanged&&inRange}},translate:function(x,y){if(!this.inValidRange(x,y,true)){return false}else{var transformString="";if(x||y){transformString="translate("+x+","+y+")"}this.root.setAttributeNS(null,"transform",transformString);this.translationParameters={x:x,y:y};return true}},setSize:function(size){OpenLayers.Renderer.prototype.setSize.apply(this,arguments);this.rendererRoot.setAttributeNS(null,"width",this.size.w);this.rendererRoot.setAttributeNS(null,"height",this.size.h)},getNodeType:function(geometry,style){var nodeType=null;switch(geometry.CLASS_NAME){case"OpenLayers.Geometry.Point":if(style.externalGraphic){nodeType="image"}else{if(this.isComplexSymbol(style.graphicName)){nodeType="svg"}else{nodeType="circle"}}break;case"OpenLayers.Geometry.Rectangle":nodeType="rect";break;case"OpenLayers.Geometry.LineString":nodeType="polyline";break;case"OpenLayers.Geometry.LinearRing":nodeType="polygon";break;case"OpenLayers.Geometry.Polygon":case"OpenLayers.Geometry.Curve":nodeType="path";break;default:break}return nodeType},setStyle:function(node,style,options){style=style||node._style;options=options||node._options;var title=style.title||style.graphicTitle;if(title){node.setAttributeNS(null,"title",title);var titleNode=node.getElementsByTagName("title");if(titleNode.length>0){titleNode[0].firstChild.textContent=title}else{var label=this.nodeFactory(null,"title");label.textContent=title;node.appendChild(label)}}var r=parseFloat(node.getAttributeNS(null,"r"));var widthFactor=1;var pos;if(node._geometryClass=="OpenLayers.Geometry.Point"&&r){node.style.visibility="";if(style.graphic===false){node.style.visibility="hidden"}else{if(style.externalGraphic){pos=this.getPosition(node);if(style.graphicWidth&&style.graphicHeight){node.setAttributeNS(null,"preserveAspectRatio","none")}var width=style.graphicWidth||style.graphicHeight;var height=style.graphicHeight||style.graphicWidth;width=width?width:style.pointRadius*2;height=height?height:style.pointRadius*2;var xOffset=(style.graphicXOffset!=undefined)?style.graphicXOffset:-(0.5*width);var yOffset=(style.graphicYOffset!=undefined)?style.graphicYOffset:-(0.5*height);var opacity=style.graphicOpacity||style.fillOpacity;node.setAttributeNS(null,"x",(pos.x+xOffset).toFixed());node.setAttributeNS(null,"y",(pos.y+yOffset).toFixed());node.setAttributeNS(null,"width",width);node.setAttributeNS(null,"height",height);node.setAttributeNS(this.xlinkns,"xlink:href",style.externalGraphic);node.setAttributeNS(null,"style","opacity: "+opacity);node.onclick=OpenLayers.Event.preventDefault}else{if(this.isComplexSymbol(style.graphicName)){var offset=style.pointRadius*3;var size=offset*2;var src=this.importSymbol(style.graphicName);pos=this.getPosition(node);widthFactor=this.symbolMetrics[src.id][0]*3/size;var parent=node.parentNode;var nextSibling=node.nextSibling;if(parent){parent.removeChild(node)}node.firstChild&&node.removeChild(node.firstChild);node.appendChild(src.firstChild.cloneNode(true));node.setAttributeNS(null,"viewBox",src.getAttributeNS(null,"viewBox"));node.setAttributeNS(null,"width",size);node.setAttributeNS(null,"height",size);node.setAttributeNS(null,"x",pos.x-offset);node.setAttributeNS(null,"y",pos.y-offset);if(nextSibling){parent.insertBefore(node,nextSibling)}else{if(parent){parent.appendChild(node)}}}else{node.setAttributeNS(null,"r",style.pointRadius)}}}var rotation=style.rotation;if((rotation!==undefined||node._rotation!==undefined)&&pos){node._rotation=rotation;rotation|=0;if(node.nodeName!=="svg"){node.setAttributeNS(null,"transform","rotate("+rotation+" "+pos.x+" "+pos.y+")")}else{var metrics=this.symbolMetrics[src.id];node.firstChild.setAttributeNS(null,"transform","rotate("+rotation+" "+metrics[1]+" "+metrics[2]+")")}}}if(options.isFilled){node.setAttributeNS(null,"fill",style.fillColor);node.setAttributeNS(null,"fill-opacity",style.fillOpacity)}else{node.setAttributeNS(null,"fill","none")}if(options.isStroked){node.setAttributeNS(null,"stroke",style.strokeColor);node.setAttributeNS(null,"stroke-opacity",style.strokeOpacity);node.setAttributeNS(null,"stroke-width",style.strokeWidth*widthFactor);node.setAttributeNS(null,"stroke-linecap",style.strokeLinecap||"round");node.setAttributeNS(null,"stroke-linejoin","round");style.strokeDashstyle&&node.setAttributeNS(null,"stroke-dasharray",this.dashStyle(style,widthFactor))}else{node.setAttributeNS(null,"stroke","none")}if(style.pointerEvents){node.setAttributeNS(null,"pointer-events",style.pointerEvents)}if(style.cursor!=null){node.setAttributeNS(null,"cursor",style.cursor)}return node},dashStyle:function(style,widthFactor){var w=style.strokeWidth*widthFactor;var str=style.strokeDashstyle;switch(str){case"solid":return"none";case"dot":return[1,4*w].join();case"dash":return[4*w,4*w].join();case"dashdot":return[4*w,4*w,1,4*w].join();case"longdash":return[8*w,4*w].join();case"longdashdot":return[8*w,4*w,1,4*w].join();default:return OpenLayers.String.trim(str).replace(/\s+/g,",")}},createNode:function(type,id){var node=document.createElementNS(this.xmlns,type);if(id){node.setAttributeNS(null,"id",id)}return node},nodeTypeCompare:function(node,type){return(type==node.nodeName)},createRenderRoot:function(){var svg=this.nodeFactory(this.container.id+"_svgRoot","svg");svg.style.display="block";return svg},createRoot:function(suffix){return this.nodeFactory(this.container.id+suffix,"g")},createDefs:function(){var defs=this.nodeFactory(this.container.id+"_defs","defs");this.rendererRoot.appendChild(defs);return defs},drawPoint:function(node,geometry){return this.drawCircle(node,geometry,1)},drawCircle:function(node,geometry,radius){var resolution=this.getResolution();var x=((geometry.x-this.featureDx)/resolution+this.left);var y=(this.top-geometry.y/resolution);if(this.inValidRange(x,y)){node.setAttributeNS(null,"cx",x);node.setAttributeNS(null,"cy",y);node.setAttributeNS(null,"r",radius);return node}else{return false}},drawLineString:function(node,geometry){var componentsResult=this.getComponentsString(geometry.components);if(componentsResult.path){node.setAttributeNS(null,"points",componentsResult.path);return(componentsResult.complete?node:null)}else{return false}},drawLinearRing:function(node,geometry){var componentsResult=this.getComponentsString(geometry.components);if(componentsResult.path){node.setAttributeNS(null,"points",componentsResult.path);return(componentsResult.complete?node:null)}else{return false}},drawPolygon:function(node,geometry){var d="";var draw=true;var complete=true;var linearRingResult,path;for(var j=0,len=geometry.components.length;j<len;j++){d+=" M";linearRingResult=this.getComponentsString(geometry.components[j].components," ");path=linearRingResult.path;if(path){d+=" "+path;complete=linearRingResult.complete&&complete}else{draw=false}}d+=" z";if(draw){node.setAttributeNS(null,"d",d);node.setAttributeNS(null,"fill-rule","evenodd");return complete?node:null}else{return false}},drawRectangle:function(node,geometry){var resolution=this.getResolution();var x=((geometry.x-this.featureDx)/resolution+this.left);var y=(this.top-geometry.y/resolution);if(this.inValidRange(x,y)){node.setAttributeNS(null,"x",x);node.setAttributeNS(null,"y",y);node.setAttributeNS(null,"width",geometry.width/resolution);node.setAttributeNS(null,"height",geometry.height/resolution);return node}else{return false}},drawText:function(featureId,style,location){var drawOutline=(!!style.labelOutlineWidth);if(drawOutline){var outlineStyle=OpenLayers.Util.extend({},style);outlineStyle.fontColor=outlineStyle.labelOutlineColor;outlineStyle.fontStrokeColor=outlineStyle.labelOutlineColor;outlineStyle.fontStrokeWidth=style.labelOutlineWidth;if(style.labelOutlineOpacity){outlineStyle.fontOpacity=style.labelOutlineOpacity}delete outlineStyle.labelOutlineWidth;this.drawText(featureId,outlineStyle,location)}var resolution=this.getResolution();var x=((location.x-this.featureDx)/resolution+this.left);var y=(location.y/resolution-this.top);var suffix=(drawOutline)?this.LABEL_OUTLINE_SUFFIX:this.LABEL_ID_SUFFIX;var label=this.nodeFactory(featureId+suffix,"text");label.setAttributeNS(null,"x",x);label.setAttributeNS(null,"y",-y);if(style.fontColor){label.setAttributeNS(null,"fill",style.fontColor)}if(style.fontStrokeColor){label.setAttributeNS(null,"stroke",style.fontStrokeColor)}if(style.fontStrokeWidth){label.setAttributeNS(null,"stroke-width",style.fontStrokeWidth)}if(style.fontOpacity){label.setAttributeNS(null,"opacity",style.fontOpacity)}if(style.fontFamily){label.setAttributeNS(null,"font-family",style.fontFamily)}if(style.fontSize){label.setAttributeNS(null,"font-size",style.fontSize)}if(style.fontWeight){label.setAttributeNS(null,"font-weight",style.fontWeight)}if(style.fontStyle){label.setAttributeNS(null,"font-style",style.fontStyle)}if(style.labelSelect===true){label.setAttributeNS(null,"pointer-events","visible");label._featureId=featureId}else{label.setAttributeNS(null,"pointer-events","none")}var align=style.labelAlign||OpenLayers.Renderer.defaultSymbolizer.labelAlign;label.setAttributeNS(null,"text-anchor",OpenLayers.Renderer.SVG.LABEL_ALIGN[align[0]]||"middle");if(OpenLayers.IS_GECKO===true){label.setAttributeNS(null,"dominant-baseline",OpenLayers.Renderer.SVG.LABEL_ALIGN[align[1]]||"central")}var labelRows=style.label.split("\n");var numRows=labelRows.length;while(label.childNodes.length>numRows){label.removeChild(label.lastChild)}for(var i=0;i<numRows;i++){var tspan=this.nodeFactory(featureId+suffix+"_tspan_"+i,"tspan");if(style.labelSelect===true){tspan._featureId=featureId;tspan._geometry=location;tspan._geometryClass=location.CLASS_NAME}if(OpenLayers.IS_GECKO===false){tspan.setAttributeNS(null,"baseline-shift",OpenLayers.Renderer.SVG.LABEL_VSHIFT[align[1]]||"-35%")}tspan.setAttribute("x",x);if(i==0){var vfactor=OpenLayers.Renderer.SVG.LABEL_VFACTOR[align[1]];if(vfactor==null){vfactor=-0.5}tspan.setAttribute("dy",(vfactor*(numRows-1))+"em")}else{tspan.setAttribute("dy","1em")}tspan.textContent=(labelRows[i]==="")?" ":labelRows[i];if(!tspan.parentNode){label.appendChild(tspan)}}if(!label.parentNode){this.textRoot.appendChild(label)}},getComponentsString:function(components,separator){var renderCmp=[];var complete=true;var len=components.length;var strings=[];var str,component;for(var i=0;i<len;i++){component=components[i];renderCmp.push(component);str=this.getShortString(component);if(str){strings.push(str)}else{if(i>0){if(this.getShortString(components[i-1])){strings.push(this.clipLine(components[i],components[i-1]))}}if(i<len-1){if(this.getShortString(components[i+1])){strings.push(this.clipLine(components[i],components[i+1]))}}complete=false}}return{path:strings.join(separator||","),complete:complete}},clipLine:function(badComponent,goodComponent){if(goodComponent.equals(badComponent)){return""}var resolution=this.getResolution();var maxX=this.MAX_PIXEL-this.translationParameters.x;var maxY=this.MAX_PIXEL-this.translationParameters.y;var x1=(goodComponent.x-this.featureDx)/resolution+this.left;var y1=this.top-goodComponent.y/resolution;var x2=(badComponent.x-this.featureDx)/resolution+this.left;var y2=this.top-badComponent.y/resolution;var k;if(x2<-maxX||x2>maxX){k=(y2-y1)/(x2-x1);x2=x2<0?-maxX:maxX;y2=y1+(x2-x1)*k}if(y2<-maxY||y2>maxY){k=(x2-x1)/(y2-y1);y2=y2<0?-maxY:maxY;x2=x1+(y2-y1)*k}return x2+","+y2},getShortString:function(point){var resolution=this.getResolution();var x=((point.x-this.featureDx)/resolution+this.left);var y=(this.top-point.y/resolution);if(this.inValidRange(x,y)){return x+","+y}else{return false}},getPosition:function(node){return({x:parseFloat(node.getAttributeNS(null,"cx")),y:parseFloat(node.getAttributeNS(null,"cy"))})},importSymbol:function(graphicName){if(!this.defs){this.defs=this.createDefs()}var id=this.container.id+"-"+graphicName;var existing=document.getElementById(id);if(existing!=null){return existing}var symbol=OpenLayers.Renderer.symbol[graphicName];if(!symbol){throw new Error(graphicName+" is not a valid symbol name")}var symbolNode=this.nodeFactory(id,"symbol");var node=this.nodeFactory(null,"polygon");symbolNode.appendChild(node);var symbolExtent=new OpenLayers.Bounds(Number.MAX_VALUE,Number.MAX_VALUE,0,0);var points=[];var x,y;for(var i=0;i<symbol.length;i=i+2){x=symbol[i];y=symbol[i+1];symbolExtent.left=Math.min(symbolExtent.left,x);symbolExtent.bottom=Math.min(symbolExtent.bottom,y);symbolExtent.right=Math.max(symbolExtent.right,x);symbolExtent.top=Math.max(symbolExtent.top,y);points.push(x,",",y)}node.setAttributeNS(null,"points",points.join(" "));var width=symbolExtent.getWidth();var height=symbolExtent.getHeight();var viewBox=[symbolExtent.left-width,symbolExtent.bottom-height,width*3,height*3];symbolNode.setAttributeNS(null,"viewBox",viewBox.join(" "));this.symbolMetrics[id]=[Math.max(width,height),symbolExtent.getCenterLonLat().lon,symbolExtent.getCenterLonLat().lat];this.defs.appendChild(symbolNode);return symbolNode},getFeatureIdFromEvent:function(evt){var featureId=OpenLayers.Renderer.Elements.prototype.getFeatureIdFromEvent.apply(this,arguments);if(!featureId){var target=evt.target;featureId=target.parentNode&&target!=this.rendererRoot?target.parentNode._featureId:undefined}return featureId},CLASS_NAME:"OpenLayers.Renderer.SVG"});OpenLayers.Renderer.SVG.LABEL_ALIGN={l:"start",r:"end",b:"bottom",t:"hanging"};OpenLayers.Renderer.SVG.LABEL_VSHIFT={t:"-70%",b:"0"};OpenLayers.Renderer.SVG.LABEL_VFACTOR={t:0,b:-1};OpenLayers.Renderer.SVG.preventDefault=function(e){OpenLayers.Event.preventDefault(e)};OpenLayers.Renderer.VML=OpenLayers.Class(OpenLayers.Renderer.Elements,{xmlns:"urn:schemas-microsoft-com:vml",symbolCache:{},offset:null,initialize:function(containerID){if(!this.supported()){return}if(!document.namespaces.olv){document.namespaces.add("olv",this.xmlns);var style=document.createStyleSheet();var shapes=["shape","rect","oval","fill","stroke","imagedata","group","textbox"];for(var i=0,len=shapes.length;i<len;i++){style.addRule("olv\\:"+shapes[i],"behavior: url(#default#VML); position: absolute; display: inline-block;")}}OpenLayers.Renderer.Elements.prototype.initialize.apply(this,arguments)},supported:function(){return !!(document.namespaces)},setExtent:function(extent,resolutionChanged){var coordSysUnchanged=OpenLayers.Renderer.Elements.prototype.setExtent.apply(this,arguments);var resolution=this.getResolution();var left=(extent.left/resolution)|0;var top=(extent.top/resolution-this.size.h)|0;if(resolutionChanged||!this.offset){this.offset={x:left,y:top};left=0;top=0}else{left=left-this.offset.x;top=top-this.offset.y}var org=(left-this.xOffset)+" "+top;this.root.coordorigin=org;var roots=[this.root,this.vectorRoot,this.textRoot];var root;for(var i=0,len=roots.length;i<len;++i){root=roots[i];var size=this.size.w+" "+this.size.h;root.coordsize=size}this.root.style.flip="y";return coordSysUnchanged},setSize:function(size){OpenLayers.Renderer.prototype.setSize.apply(this,arguments);var roots=[this.rendererRoot,this.root,this.vectorRoot,this.textRoot];var w=this.size.w+"px";var h=this.size.h+"px";var root;for(var i=0,len=roots.length;i<len;++i){root=roots[i];root.style.width=w;root.style.height=h}},getNodeType:function(geometry,style){var nodeType=null;switch(geometry.CLASS_NAME){case"OpenLayers.Geometry.Point":if(style.externalGraphic){nodeType="olv:rect"}else{if(this.isComplexSymbol(style.graphicName)){nodeType="olv:shape"}else{nodeType="olv:oval"}}break;case"OpenLayers.Geometry.Rectangle":nodeType="olv:rect";break;case"OpenLayers.Geometry.LineString":case"OpenLayers.Geometry.LinearRing":case"OpenLayers.Geometry.Polygon":case"OpenLayers.Geometry.Curve":nodeType="olv:shape";break;default:break}return nodeType},setStyle:function(node,style,options,geometry){style=style||node._style;options=options||node._options;var fillColor=style.fillColor;var title=style.title||style.graphicTitle;if(title){node.title=title}if(node._geometryClass==="OpenLayers.Geometry.Point"){if(style.externalGraphic){options.isFilled=true;var width=style.graphicWidth||style.graphicHeight;var height=style.graphicHeight||style.graphicWidth;width=width?width:style.pointRadius*2;height=height?height:style.pointRadius*2;var resolution=this.getResolution();var xOffset=(style.graphicXOffset!=undefined)?style.graphicXOffset:-(0.5*width);var yOffset=(style.graphicYOffset!=undefined)?style.graphicYOffset:-(0.5*height);node.style.left=((((geometry.x-this.featureDx)/resolution-this.offset.x)+xOffset)|0)+"px";node.style.top=(((geometry.y/resolution-this.offset.y)-(yOffset+height))|0)+"px";node.style.width=width+"px";node.style.height=height+"px";node.style.flip="y";fillColor="none";options.isStroked=false}else{if(this.isComplexSymbol(style.graphicName)){var cache=this.importSymbol(style.graphicName);node.path=cache.path;node.coordorigin=cache.left+","+cache.bottom;var size=cache.size;node.coordsize=size+","+size;this.drawCircle(node,geometry,style.pointRadius);node.style.flip="y"}else{this.drawCircle(node,geometry,style.pointRadius)}}}if(options.isFilled){node.fillcolor=fillColor}else{node.filled="false"}var fills=node.getElementsByTagName("fill");var fill=(fills.length==0)?null:fills[0];if(!options.isFilled){if(fill){node.removeChild(fill)}}else{if(!fill){fill=this.createNode("olv:fill",node.id+"_fill")}fill.opacity=style.fillOpacity;if(node._geometryClass==="OpenLayers.Geometry.Point"&&style.externalGraphic){if(style.graphicOpacity){fill.opacity=style.graphicOpacity}fill.src=style.externalGraphic;fill.type="frame";if(!(style.graphicWidth&&style.graphicHeight)){fill.aspect="atmost"}}if(fill.parentNode!=node){node.appendChild(fill)}}var rotation=style.rotation;if((rotation!==undefined||node._rotation!==undefined)){node._rotation=rotation;if(style.externalGraphic){this.graphicRotate(node,xOffset,yOffset,style);fill.opacity=0}else{if(node._geometryClass==="OpenLayers.Geometry.Point"){node.style.rotation=rotation||0}}}var strokes=node.getElementsByTagName("stroke");var stroke=(strokes.length==0)?null:strokes[0];if(!options.isStroked){node.stroked=false;if(stroke){stroke.on=false}}else{if(!stroke){stroke=this.createNode("olv:stroke",node.id+"_stroke");node.appendChild(stroke)}stroke.on=true;stroke.color=style.strokeColor;stroke.weight=style.strokeWidth+"px";stroke.opacity=style.strokeOpacity;stroke.endcap=style.strokeLinecap=="butt"?"flat":(style.strokeLinecap||"round");if(style.strokeDashstyle){stroke.dashstyle=this.dashStyle(style)}}if(style.cursor!="inherit"&&style.cursor!=null){node.style.cursor=style.cursor}return node},graphicRotate:function(node,xOffset,yOffset,style){var style=style||node._style;var rotation=style.rotation||0;var aspectRatio,size;if(!(style.graphicWidth&&style.graphicHeight)){var img=new Image();img.onreadystatechange=OpenLayers.Function.bind(function(){if(img.readyState=="complete"||img.readyState=="interactive"){aspectRatio=img.width/img.height;size=Math.max(style.pointRadius*2,style.graphicWidth||0,style.graphicHeight||0);xOffset=xOffset*aspectRatio;style.graphicWidth=size*aspectRatio;style.graphicHeight=size;this.graphicRotate(node,xOffset,yOffset,style)}},this);img.src=style.externalGraphic;return}else{size=Math.max(style.graphicWidth,style.graphicHeight);aspectRatio=style.graphicWidth/style.graphicHeight}var width=Math.round(style.graphicWidth||size*aspectRatio);var height=Math.round(style.graphicHeight||size);node.style.width=width+"px";node.style.height=height+"px";var image=document.getElementById(node.id+"_image");if(!image){image=this.createNode("olv:imagedata",node.id+"_image");node.appendChild(image)}image.style.width=width+"px";image.style.height=height+"px";image.src=style.externalGraphic;image.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='', sizingMethod='scale')";var rot=rotation*Math.PI/180;var sintheta=Math.sin(rot);var costheta=Math.cos(rot);var filter="progid:DXImageTransform.Microsoft.Matrix(M11="+costheta+",M12="+(-sintheta)+",M21="+sintheta+",M22="+costheta+",SizingMethod='auto expand')\n";var opacity=style.graphicOpacity||style.fillOpacity;if(opacity&&opacity!=1){filter+="progid:DXImageTransform.Microsoft.BasicImage(opacity="+opacity+")\n"}node.style.filter=filter;var centerPoint=new OpenLayers.Geometry.Point(-xOffset,-yOffset);var imgBox=new OpenLayers.Bounds(0,0,width,height).toGeometry();imgBox.rotate(style.rotation,centerPoint);var imgBounds=imgBox.getBounds();node.style.left=Math.round(parseInt(node.style.left)+imgBounds.left)+"px";node.style.top=Math.round(parseInt(node.style.top)-imgBounds.bottom)+"px"},postDraw:function(node){node.style.visibility="visible";var fillColor=node._style.fillColor;var strokeColor=node._style.strokeColor;if(fillColor=="none"&&node.fillcolor!=fillColor){node.fillcolor=fillColor}if(strokeColor=="none"&&node.strokecolor!=strokeColor){node.strokecolor=strokeColor}},setNodeDimension:function(node,geometry){var bbox=geometry.getBounds();if(bbox){var resolution=this.getResolution();var scaledBox=new OpenLayers.Bounds(((bbox.left-this.featureDx)/resolution-this.offset.x)|0,(bbox.bottom/resolution-this.offset.y)|0,((bbox.right-this.featureDx)/resolution-this.offset.x)|0,(bbox.top/resolution-this.offset.y)|0);node.style.left=scaledBox.left+"px";node.style.top=scaledBox.top+"px";node.style.width=scaledBox.getWidth()+"px";node.style.height=scaledBox.getHeight()+"px";node.coordorigin=scaledBox.left+" "+scaledBox.top;node.coordsize=scaledBox.getWidth()+" "+scaledBox.getHeight()}},dashStyle:function(style){var dash=style.strokeDashstyle;switch(dash){case"solid":case"dot":case"dash":case"dashdot":case"longdash":case"longdashdot":return dash;default:var parts=dash.split(/[ ,]/);if(parts.length==2){if(1*parts[0]>=2*parts[1]){return"longdash"}return(parts[0]==1||parts[1]==1)?"dot":"dash"}else{if(parts.length==4){return(1*parts[0]>=2*parts[1])?"longdashdot":"dashdot"}}return"solid"}},createNode:function(type,id){var node=document.createElement(type);if(id){node.id=id}node.unselectable="on";node.onselectstart=OpenLayers.Function.False;return node},nodeTypeCompare:function(node,type){var subType=type;var splitIndex=subType.indexOf(":");if(splitIndex!=-1){subType=subType.substr(splitIndex+1)}var nodeName=node.nodeName;splitIndex=nodeName.indexOf(":");if(splitIndex!=-1){nodeName=nodeName.substr(splitIndex+1)}return(subType==nodeName)},createRenderRoot:function(){return this.nodeFactory(this.container.id+"_vmlRoot","div")},createRoot:function(suffix){return this.nodeFactory(this.container.id+suffix,"olv:group")},drawPoint:function(node,geometry){return this.drawCircle(node,geometry,1)},drawCircle:function(node,geometry,radius){if(!isNaN(geometry.x)&&!isNaN(geometry.y)){var resolution=this.getResolution();node.style.left=((((geometry.x-this.featureDx)/resolution-this.offset.x)|0)-radius)+"px";node.style.top=(((geometry.y/resolution-this.offset.y)|0)-radius)+"px";var diameter=radius*2;node.style.width=diameter+"px";node.style.height=diameter+"px";return node}return false},drawLineString:function(node,geometry){return this.drawLine(node,geometry,false)},drawLinearRing:function(node,geometry){return this.drawLine(node,geometry,true)},drawLine:function(node,geometry,closeLine){this.setNodeDimension(node,geometry);var resolution=this.getResolution();var numComponents=geometry.components.length;var parts=new Array(numComponents);var comp,x,y;for(var i=0;i<numComponents;i++){comp=geometry.components[i];x=((comp.x-this.featureDx)/resolution-this.offset.x)|0;y=(comp.y/resolution-this.offset.y)|0;parts[i]=" "+x+","+y+" l "}var end=(closeLine)?" x e":" e";node.path="m"+parts.join("")+end;return node},drawPolygon:function(node,geometry){this.setNodeDimension(node,geometry);var resolution=this.getResolution();var path=[];var j,jj,points,area,first,second,i,ii,comp,pathComp,x,y;for(j=0,jj=geometry.components.length;j<jj;j++){path.push("m");points=geometry.components[j].components;area=(j===0);first=null;second=null;for(i=0,ii=points.length;i<ii;i++){comp=points[i];x=((comp.x-this.featureDx)/resolution-this.offset.x)|0;y=(comp.y/resolution-this.offset.y)|0;pathComp=" "+x+","+y;path.push(pathComp);if(i==0){path.push(" l")}if(!area){if(!first){first=pathComp}else{if(first!=pathComp){if(!second){second=pathComp}else{if(second!=pathComp){area=true}}}}}}path.push(area?" x ":" ")}path.push("e");node.path=path.join("");return node},drawRectangle:function(node,geometry){var resolution=this.getResolution();node.style.left=(((geometry.x-this.featureDx)/resolution-this.offset.x)|0)+"px";node.style.top=((geometry.y/resolution-this.offset.y)|0)+"px";node.style.width=((geometry.width/resolution)|0)+"px";node.style.height=((geometry.height/resolution)|0)+"px";return node},drawText:function(featureId,style,location){var label=this.nodeFactory(featureId+this.LABEL_ID_SUFFIX,"olv:rect");var textbox=this.nodeFactory(featureId+this.LABEL_ID_SUFFIX+"_textbox","olv:textbox");var resolution=this.getResolution();label.style.left=(((location.x-this.featureDx)/resolution-this.offset.x)|0)+"px";label.style.top=((location.y/resolution-this.offset.y)|0)+"px";label.style.flip="y";textbox.innerText=style.label;if(style.cursor!="inherit"&&style.cursor!=null){textbox.style.cursor=style.cursor}if(style.fontColor){textbox.style.color=style.fontColor}if(style.fontOpacity){textbox.style.filter="alpha(opacity="+(style.fontOpacity*100)+")"}if(style.fontFamily){textbox.style.fontFamily=style.fontFamily}if(style.fontSize){textbox.style.fontSize=style.fontSize}if(style.fontWeight){textbox.style.fontWeight=style.fontWeight}if(style.fontStyle){textbox.style.fontStyle=style.fontStyle}if(style.labelSelect===true){label._featureId=featureId;textbox._featureId=featureId;textbox._geometry=location;textbox._geometryClass=location.CLASS_NAME}textbox.style.whiteSpace="nowrap";textbox.inset="1px,0px,0px,0px";if(!label.parentNode){label.appendChild(textbox);this.textRoot.appendChild(label)}var align=style.labelAlign||"cm";if(align.length==1){align+="m"}var xshift=textbox.clientWidth*(OpenLayers.Renderer.VML.LABEL_SHIFT[align.substr(0,1)]);var yshift=textbox.clientHeight*(OpenLayers.Renderer.VML.LABEL_SHIFT[align.substr(1,1)]);label.style.left=parseInt(label.style.left)-xshift-1+"px";label.style.top=parseInt(label.style.top)+yshift+"px"},moveRoot:function(renderer){var layer=this.map.getLayer(renderer.container.id);if(layer instanceof OpenLayers.Layer.Vector.RootContainer){layer=this.map.getLayer(this.container.id)}layer&&layer.renderer.clear();OpenLayers.Renderer.Elements.prototype.moveRoot.apply(this,arguments);layer&&layer.redraw()},importSymbol:function(graphicName){var id=this.container.id+"-"+graphicName;var cache=this.symbolCache[id];if(cache){return cache}var symbol=OpenLayers.Renderer.symbol[graphicName];if(!symbol){throw new Error(graphicName+" is not a valid symbol name")}var symbolExtent=new OpenLayers.Bounds(Number.MAX_VALUE,Number.MAX_VALUE,0,0);var pathitems=["m"];for(var i=0;i<symbol.length;i=i+2){var x=symbol[i];var y=symbol[i+1];symbolExtent.left=Math.min(symbolExtent.left,x);symbolExtent.bottom=Math.min(symbolExtent.bottom,y);symbolExtent.right=Math.max(symbolExtent.right,x);symbolExtent.top=Math.max(symbolExtent.top,y);pathitems.push(x);pathitems.push(y);if(i==0){pathitems.push("l")}}pathitems.push("x e");var path=pathitems.join(" ");var diff=(symbolExtent.getWidth()-symbolExtent.getHeight())/2;if(diff>0){symbolExtent.bottom=symbolExtent.bottom-diff;symbolExtent.top=symbolExtent.top+diff}else{symbolExtent.left=symbolExtent.left+diff;symbolExtent.right=symbolExtent.right-diff}cache={path:path,size:symbolExtent.getWidth(),left:symbolExtent.left,bottom:symbolExtent.bottom};this.symbolCache[id]=cache;return cache},CLASS_NAME:"OpenLayers.Renderer.VML"});OpenLayers.Renderer.VML.LABEL_SHIFT={l:0,c:0.5,r:1,t:0,m:0.5,b:1};OpenLayers.Renderer.Canvas=OpenLayers.Class(OpenLayers.Renderer,{hitDetection:true,hitOverflow:0,canvas:null,features:null,pendingRedraw:false,cachedSymbolBounds:{},initialize:function(containerID,options){OpenLayers.Renderer.prototype.initialize.apply(this,arguments);this.root=document.createElement("canvas");this.container.appendChild(this.root);this.canvas=this.root.getContext("2d");this.features={};if(this.hitDetection){this.hitCanvas=document.createElement("canvas");this.hitContext=this.hitCanvas.getContext("2d")}},setExtent:function(){OpenLayers.Renderer.prototype.setExtent.apply(this,arguments);return false},eraseGeometry:function(geometry,featureId){this.eraseFeatures(this.features[featureId][0])},supported:function(){return OpenLayers.CANVAS_SUPPORTED},setSize:function(size){this.size=size.clone();var root=this.root;root.style.width=size.w+"px";root.style.height=size.h+"px";root.width=size.w;root.height=size.h;this.resolution=null;if(this.hitDetection){var hitCanvas=this.hitCanvas;hitCanvas.style.width=size.w+"px";hitCanvas.style.height=size.h+"px";hitCanvas.width=size.w;hitCanvas.height=size.h}},drawFeature:function(feature,style){var rendered;if(feature.geometry){style=this.applyDefaultSymbolizer(style||feature.style);var bounds=feature.geometry.getBounds();var worldBounds;if(this.map.baseLayer&&this.map.baseLayer.wrapDateLine){worldBounds=this.map.getMaxExtent()}var intersects=bounds&&bounds.intersectsBounds(this.extent,{worldBounds:worldBounds});rendered=(style.display!=="none")&&!!bounds&&intersects;if(rendered){this.features[feature.id]=[feature,style]}else{delete (this.features[feature.id])}this.pendingRedraw=true}if(this.pendingRedraw&&!this.locked){this.redraw();this.pendingRedraw=false}return rendered},drawGeometry:function(geometry,style,featureId){var className=geometry.CLASS_NAME;if((className=="OpenLayers.Geometry.Collection")||(className=="OpenLayers.Geometry.MultiPoint")||(className=="OpenLayers.Geometry.MultiLineString")||(className=="OpenLayers.Geometry.MultiPolygon")){for(var i=0;i<geometry.components.length;i++){this.drawGeometry(geometry.components[i],style,featureId)}return}switch(geometry.CLASS_NAME){case"OpenLayers.Geometry.Point":this.drawPoint(geometry,style,featureId);break;case"OpenLayers.Geometry.LineString":this.drawLineString(geometry,style,featureId);break;case"OpenLayers.Geometry.LinearRing":this.drawLinearRing(geometry,style,featureId);break;case"OpenLayers.Geometry.Polygon":this.drawPolygon(geometry,style,featureId);break;default:break}},drawExternalGraphic:function(geometry,style,featureId){var img=new Image();var title=style.title||style.graphicTitle;if(title){img.title=title}var width=style.graphicWidth||style.graphicHeight;var height=style.graphicHeight||style.graphicWidth;width=width?width:style.pointRadius*2;height=height?height:style.pointRadius*2;var xOffset=(style.graphicXOffset!=undefined)?style.graphicXOffset:-(0.5*width);var yOffset=(style.graphicYOffset!=undefined)?style.graphicYOffset:-(0.5*height);var opacity=style.graphicOpacity||style.fillOpacity;var onLoad=function(){if(!this.features[featureId]){return}var pt=this.getLocalXY(geometry);var p0=pt[0];var p1=pt[1];if(!isNaN(p0)&&!isNaN(p1)){var x=(p0+xOffset)|0;var y=(p1+yOffset)|0;var canvas=this.canvas;canvas.globalAlpha=opacity;var factor=OpenLayers.Renderer.Canvas.drawImageScaleFactor||(OpenLayers.Renderer.Canvas.drawImageScaleFactor=/android 2.1/.test(navigator.userAgent.toLowerCase())?320/window.screen.width:1);canvas.drawImage(img,x*factor,y*factor,width*factor,height*factor);if(this.hitDetection){this.setHitContextStyle("fill",featureId);this.hitContext.fillRect(x,y,width,height)}}};img.onload=OpenLayers.Function.bind(onLoad,this);img.src=style.externalGraphic},drawNamedSymbol:function(geometry,style,featureId){var x,y,cx,cy,i,symbolBounds,scaling,angle;var unscaledStrokeWidth;var deg2rad=Math.PI/180;var symbol=OpenLayers.Renderer.symbol[style.graphicName];if(!symbol){throw new Error(style.graphicName+" is not a valid symbol name")}if(!symbol.length||symbol.length<2){return}var pt=this.getLocalXY(geometry);var p0=pt[0];var p1=pt[1];if(isNaN(p0)||isNaN(p1)){return}this.canvas.lineCap="round";this.canvas.lineJoin="round";if(this.hitDetection){this.hitContext.lineCap="round";this.hitContext.lineJoin="round"}if(style.graphicName in this.cachedSymbolBounds){symbolBounds=this.cachedSymbolBounds[style.graphicName]}else{symbolBounds=new OpenLayers.Bounds();for(i=0;i<symbol.length;i+=2){symbolBounds.extend(new OpenLayers.LonLat(symbol[i],symbol[i+1]))}this.cachedSymbolBounds[style.graphicName]=symbolBounds}this.canvas.save();if(this.hitDetection){this.hitContext.save()}this.canvas.translate(p0,p1);if(this.hitDetection){this.hitContext.translate(p0,p1)}angle=deg2rad*style.rotation;if(!isNaN(angle)){this.canvas.rotate(angle);if(this.hitDetection){this.hitContext.rotate(angle)}}scaling=2*style.pointRadius/Math.max(symbolBounds.getWidth(),symbolBounds.getHeight());this.canvas.scale(scaling,scaling);if(this.hitDetection){this.hitContext.scale(scaling,scaling)}cx=symbolBounds.getCenterLonLat().lon;cy=symbolBounds.getCenterLonLat().lat;this.canvas.translate(-cx,-cy);if(this.hitDetection){this.hitContext.translate(-cx,-cy)}unscaledStrokeWidth=style.strokeWidth;style.strokeWidth=unscaledStrokeWidth/scaling;if(style.fill!==false){this.setCanvasStyle("fill",style);this.canvas.beginPath();for(i=0;i<symbol.length;i=i+2){x=symbol[i];y=symbol[i+1];if(i==0){this.canvas.moveTo(x,y)}this.canvas.lineTo(x,y)}this.canvas.closePath();this.canvas.fill();if(this.hitDetection){this.setHitContextStyle("fill",featureId,style);this.hitContext.beginPath();for(i=0;i<symbol.length;i=i+2){x=symbol[i];y=symbol[i+1];if(i==0){this.canvas.moveTo(x,y)}this.hitContext.lineTo(x,y)}this.hitContext.closePath();this.hitContext.fill()}}if(style.stroke!==false){this.setCanvasStyle("stroke",style);this.canvas.beginPath();for(i=0;i<symbol.length;i=i+2){x=symbol[i];y=symbol[i+1];if(i==0){this.canvas.moveTo(x,y)}this.canvas.lineTo(x,y)}this.canvas.closePath();this.canvas.stroke();if(this.hitDetection){this.setHitContextStyle("stroke",featureId,style,scaling);this.hitContext.beginPath();for(i=0;i<symbol.length;i=i+2){x=symbol[i];y=symbol[i+1];if(i==0){this.hitContext.moveTo(x,y)}this.hitContext.lineTo(x,y)}this.hitContext.closePath();this.hitContext.stroke()}}style.strokeWidth=unscaledStrokeWidth;this.canvas.restore();if(this.hitDetection){this.hitContext.restore()}this.setCanvasStyle("reset")},setCanvasStyle:function(type,style){if(type==="fill"){this.canvas.globalAlpha=style.fillOpacity;this.canvas.fillStyle=style.fillColor}else{if(type==="stroke"){this.canvas.globalAlpha=style.strokeOpacity;this.canvas.strokeStyle=style.strokeColor;this.canvas.lineWidth=style.strokeWidth}else{this.canvas.globalAlpha=0;this.canvas.lineWidth=1}}},featureIdToHex:function(featureId){var id=Number(featureId.split("_").pop())+1;if(id>=16777216){this.hitOverflow=id-16777215;id=id%16777216+1}var hex="000000"+id.toString(16);var len=hex.length;hex="#"+hex.substring(len-6,len);return hex},setHitContextStyle:function(type,featureId,symbolizer,strokeScaling){var hex=this.featureIdToHex(featureId);if(type=="fill"){this.hitContext.globalAlpha=1;this.hitContext.fillStyle=hex}else{if(type=="stroke"){this.hitContext.globalAlpha=1;this.hitContext.strokeStyle=hex;if(typeof strokeScaling==="undefined"){this.hitContext.lineWidth=symbolizer.strokeWidth+2}else{if(!isNaN(strokeScaling)){this.hitContext.lineWidth=symbolizer.strokeWidth+2/strokeScaling}}}else{this.hitContext.globalAlpha=0;this.hitContext.lineWidth=1}}},drawPoint:function(geometry,style,featureId){if(style.graphic!==false){if(style.externalGraphic){this.drawExternalGraphic(geometry,style,featureId)}else{if(style.graphicName&&(style.graphicName!="circle")){this.drawNamedSymbol(geometry,style,featureId)}else{var pt=this.getLocalXY(geometry);var p0=pt[0];var p1=pt[1];if(!isNaN(p0)&&!isNaN(p1)){var twoPi=Math.PI*2;var radius=style.pointRadius;if(style.fill!==false){this.setCanvasStyle("fill",style);this.canvas.beginPath();this.canvas.arc(p0,p1,radius,0,twoPi,true);this.canvas.fill();if(this.hitDetection){this.setHitContextStyle("fill",featureId,style);this.hitContext.beginPath();this.hitContext.arc(p0,p1,radius,0,twoPi,true);this.hitContext.fill()}}if(style.stroke!==false){this.setCanvasStyle("stroke",style);this.canvas.beginPath();this.canvas.arc(p0,p1,radius,0,twoPi,true);this.canvas.stroke();if(this.hitDetection){this.setHitContextStyle("stroke",featureId,style);this.hitContext.beginPath();this.hitContext.arc(p0,p1,radius,0,twoPi,true);this.hitContext.stroke()}this.setCanvasStyle("reset")}}}}}},drawLineString:function(geometry,style,featureId){style=OpenLayers.Util.applyDefaults({fill:false},style);this.drawLinearRing(geometry,style,featureId)},drawLinearRing:function(geometry,style,featureId){if(style.fill!==false){this.setCanvasStyle("fill",style);this.renderPath(this.canvas,geometry,style,featureId,"fill");if(this.hitDetection){this.setHitContextStyle("fill",featureId,style);this.renderPath(this.hitContext,geometry,style,featureId,"fill")}}if(style.stroke!==false){this.setCanvasStyle("stroke",style);this.renderPath(this.canvas,geometry,style,featureId,"stroke");if(this.hitDetection){this.setHitContextStyle("stroke",featureId,style);this.renderPath(this.hitContext,geometry,style,featureId,"stroke")}}this.setCanvasStyle("reset")},renderPath:function(context,geometry,style,featureId,type){var components=geometry.components;var len=components.length;context.beginPath();var start=this.getLocalXY(components[0]);var x=start[0];var y=start[1];if(!isNaN(x)&&!isNaN(y)){context.moveTo(start[0],start[1]);for(var i=1;i<len;++i){var pt=this.getLocalXY(components[i]);context.lineTo(pt[0],pt[1])}if(type==="fill"){context.fill()}else{context.stroke()}}},drawPolygon:function(geometry,style,featureId){var components=geometry.components;var len=components.length;this.drawLinearRing(components[0],style,featureId);for(var i=1;i<len;++i){this.canvas.globalCompositeOperation="destination-out";if(this.hitDetection){this.hitContext.globalCompositeOperation="destination-out"}this.drawLinearRing(components[i],OpenLayers.Util.applyDefaults({stroke:false,fillOpacity:1},style),featureId);this.canvas.globalCompositeOperation="source-over";if(this.hitDetection){this.hitContext.globalCompositeOperation="source-over"}this.drawLinearRing(components[i],OpenLayers.Util.applyDefaults({fill:false},style),featureId)}},drawText:function(location,style){var pt=this.getLocalXY(location);this.setCanvasStyle("reset");this.canvas.fillStyle=style.fontColor;this.canvas.globalAlpha=style.fontOpacity||1;var fontStyle=[style.fontStyle?style.fontStyle:"normal","normal",style.fontWeight?style.fontWeight:"normal",style.fontSize?style.fontSize:"1em",style.fontFamily?style.fontFamily:"sans-serif"].join(" ");var labelRows=style.label.split("\n");var numRows=labelRows.length;if(this.canvas.fillText){this.canvas.font=fontStyle;this.canvas.textAlign=OpenLayers.Renderer.Canvas.LABEL_ALIGN[style.labelAlign[0]]||"center";this.canvas.textBaseline=OpenLayers.Renderer.Canvas.LABEL_ALIGN[style.labelAlign[1]]||"middle";var vfactor=OpenLayers.Renderer.Canvas.LABEL_FACTOR[style.labelAlign[1]];if(vfactor==null){vfactor=-0.5}var lineHeight=this.canvas.measureText("Mg").height||this.canvas.measureText("xx").width;pt[1]+=lineHeight*vfactor*(numRows-1);for(var i=0;i<numRows;i++){if(style.labelOutlineWidth){this.canvas.save();this.canvas.globalAlpha=style.labelOutlineOpacity||style.fontOpacity||1;this.canvas.strokeStyle=style.labelOutlineColor;this.canvas.lineWidth=style.labelOutlineWidth;this.canvas.strokeText(labelRows[i],pt[0],pt[1]+(lineHeight*i)+1);this.canvas.restore()}this.canvas.fillText(labelRows[i],pt[0],pt[1]+(lineHeight*i))}}else{if(this.canvas.mozDrawText){this.canvas.mozTextStyle=fontStyle;var hfactor=OpenLayers.Renderer.Canvas.LABEL_FACTOR[style.labelAlign[0]];if(hfactor==null){hfactor=-0.5}var vfactor=OpenLayers.Renderer.Canvas.LABEL_FACTOR[style.labelAlign[1]];if(vfactor==null){vfactor=-0.5}var lineHeight=this.canvas.mozMeasureText("xx");pt[1]+=lineHeight*(1+(vfactor*numRows));for(var i=0;i<numRows;i++){var x=pt[0]+(hfactor*this.canvas.mozMeasureText(labelRows[i]));var y=pt[1]+(i*lineHeight);this.canvas.translate(x,y);this.canvas.mozDrawText(labelRows[i]);this.canvas.translate(-x,-y)}}}this.setCanvasStyle("reset")},getLocalXY:function(point){var resolution=this.getResolution();var extent=this.extent;var x=((point.x-this.featureDx)/resolution+(-extent.left/resolution));var y=((extent.top/resolution)-point.y/resolution);return[x,y]},clear:function(){var height=this.root.height;var width=this.root.width;this.canvas.clearRect(0,0,width,height);this.features={};if(this.hitDetection){this.hitContext.clearRect(0,0,width,height)}},getFeatureIdFromEvent:function(evt){var featureId,feature;if(this.hitDetection&&this.root.style.display!=="none"){if(!this.map.dragging){var xy=evt.xy;var x=xy.x|0;var y=xy.y|0;var data=this.hitContext.getImageData(x,y,1,1).data;if(data[3]===255){var id=data[2]+(256*(data[1]+(256*data[0])));if(id){featureId="OpenLayers_Feature_Vector_"+(id-1+this.hitOverflow);try{feature=this.features[featureId][0]}catch(err){}}}}}return feature},eraseFeatures:function(features){if(!(OpenLayers.Util.isArray(features))){features=[features]}for(var i=0;i<features.length;++i){delete this.features[features[i].id]}this.redraw()},redraw:function(){if(!this.locked){var height=this.root.height;var width=this.root.width;this.canvas.clearRect(0,0,width,height);if(this.hitDetection){this.hitContext.clearRect(0,0,width,height)}var labelMap=[];var feature,geometry,style;var worldBounds=(this.map.baseLayer&&this.map.baseLayer.wrapDateLine)&&this.map.getMaxExtent();for(var id in this.features){if(!this.features.hasOwnProperty(id)){continue}feature=this.features[id][0];geometry=feature.geometry;this.calculateFeatureDx(geometry.getBounds(),worldBounds);style=this.features[id][1];this.drawGeometry(geometry,style,feature.id);if(style.label){labelMap.push([feature,style])}}var item;for(var i=0,len=labelMap.length;i<len;++i){item=labelMap[i];this.drawText(item[0].geometry.getCentroid(),item[1])}}},CLASS_NAME:"OpenLayers.Renderer.Canvas"});OpenLayers.Renderer.Canvas.LABEL_ALIGN={l:"left",r:"right",t:"top",b:"bottom"};OpenLayers.Renderer.Canvas.LABEL_FACTOR={l:0,r:-1,t:0,b:-1};OpenLayers.Renderer.Canvas.drawImageScaleFactor=null;OpenLayers.Format.SLD.v1_0_0_GeoServer=OpenLayers.Class(OpenLayers.Format.SLD.v1_0_0,{version:"1.0.0",profile:"GeoServer",readers:OpenLayers.Util.applyDefaults({sld:OpenLayers.Util.applyDefaults({Priority:function(node,obj){var value=this.readers.ogc._expression.call(this,node);if(value){obj.priority=value}},VendorOption:function(node,obj){if(!obj.vendorOptions){obj.vendorOptions={}}obj.vendorOptions[node.getAttribute("name")]=this.getChildValue(node)},TextSymbolizer:function(node,rule){OpenLayers.Format.SLD.v1_0_0.prototype.readers.sld.TextSymbolizer.apply(this,arguments);var symbolizer=this.multipleSymbolizers?rule.symbolizers[rule.symbolizers.length-1]:rule.symbolizer.Text;if(symbolizer.graphic===undefined){symbolizer.graphic=false}}},OpenLayers.Format.SLD.v1_0_0.prototype.readers.sld)},OpenLayers.Format.SLD.v1_0_0.prototype.readers),writers:OpenLayers.Util.applyDefaults({sld:OpenLayers.Util.applyDefaults({Priority:function(priority){return this.writers.sld._OGCExpression.call(this,"sld:Priority",priority)},VendorOption:function(option){return this.createElementNSPlus("sld:VendorOption",{attributes:{name:option.name},value:option.value})},TextSymbolizer:function(symbolizer){var writers=OpenLayers.Format.SLD.v1_0_0.prototype.writers;var node=writers.sld["TextSymbolizer"].apply(this,arguments);if(symbolizer.graphic!==false&&(symbolizer.externalGraphic||symbolizer.graphicName)){this.writeNode("Graphic",symbolizer,node)}if("priority" in symbolizer){this.writeNode("Priority",symbolizer.priority,node)}return this.addVendorOptions(node,symbolizer)},PointSymbolizer:function(symbolizer){var writers=OpenLayers.Format.SLD.v1_0_0.prototype.writers;var node=writers.sld["PointSymbolizer"].apply(this,arguments);return this.addVendorOptions(node,symbolizer)},LineSymbolizer:function(symbolizer){var writers=OpenLayers.Format.SLD.v1_0_0.prototype.writers;var node=writers.sld["LineSymbolizer"].apply(this,arguments);return this.addVendorOptions(node,symbolizer)},PolygonSymbolizer:function(symbolizer){var writers=OpenLayers.Format.SLD.v1_0_0.prototype.writers;var node=writers.sld["PolygonSymbolizer"].apply(this,arguments);return this.addVendorOptions(node,symbolizer)}},OpenLayers.Format.SLD.v1_0_0.prototype.writers.sld)},OpenLayers.Format.SLD.v1_0_0.prototype.writers),addVendorOptions:function(node,symbolizer){var options=symbolizer.vendorOptions;if(options){for(var key in symbolizer.vendorOptions){this.writeNode("VendorOption",{name:key,value:symbolizer.vendorOptions[key]},node)}}return node},CLASS_NAME:"OpenLayers.Format.SLD.v1_0_0_GeoServer"});Ext.namespace("gxp");gxp.WMSStylesDialog=Ext.extend(Ext.Container,{addStyleText:"Add",addStyleTip:"Add a new style",chooseStyleText:"Choose style",deleteStyleText:"Remove",deleteStyleTip:"Delete the selected style",editStyleText:"Edit",editStyleTip:"Edit the selected style",duplicateStyleText:"Duplicate",duplicateStyleTip:"Duplicate the selected style",addRuleText:"Add",addRuleTip:"Add a new rule",newRuleText:"New Rule",deleteRuleText:"Remove",deleteRuleTip:"Delete the selected rule",editRuleText:"Edit",editRuleTip:"Edit the selected rule",duplicateRuleText:"Duplicate",duplicateRuleTip:"Duplicate the selected rule",cancelText:"Cancel",saveText:"Save",styleWindowTitle:"User Style: {0}",ruleWindowTitle:"Style Rule: {0}",stylesFieldsetTitle:"Styles",rulesFieldsetTitle:"Rules",errorTitle:"Error saving style",errorMsg:"There was an error saving the style back to the server.",layerRecord:null,layerDescription:null,symbolType:null,stylesStore:null,selectedStyle:null,selectedRule:null,editable:true,modified:false,dialogCls:Ext.Window,initComponent:function(){this.addEvents("ready","modified","styleselected","beforesaved","saved");var defConfig={layout:"form",disabled:true,items:[{xtype:"fieldset",title:this.stylesFieldsetTitle,labelWidth:85,style:"margin-bottom: 0;"},{xtype:"toolbar",style:"border-width: 0 1px 1px 1px; margin-bottom: 10px;",items:[{xtype:"button",iconCls:"add",text:this.addStyleText,tooltip:this.addStyleTip,handler:this.addStyle,scope:this},{xtype:"button",iconCls:"delete",text:this.deleteStyleText,tooltip:this.deleteStyleTip,handler:function(){this.stylesStore.remove(this.selectedStyle)},scope:this},{xtype:"button",iconCls:"edit",text:this.editStyleText,tooltip:this.editStyleTip,handler:function(){this.editStyle()},scope:this},{xtype:"button",iconCls:"duplicate",text:this.duplicateStyleText,tooltip:this.duplicateStyleTip,handler:function(){var prevStyle=this.selectedStyle;var newStyle=prevStyle.get("userStyle").clone();newStyle.isDefault=false;newStyle.name=this.newStyleName();var store=this.stylesStore;store.add(new store.recordType({name:newStyle.name,title:newStyle.title,"abstract":newStyle.description,userStyle:newStyle}));this.editStyle(prevStyle)},scope:this}]}]};Ext.applyIf(this,defConfig);this.createStylesStore();this.on({beforesaved:function(){this._saving=true},saved:function(){delete this._saving},savefailed:function(){Ext.Msg.show({title:this.errorTitle,msg:this.errorMsg,icon:Ext.MessageBox.ERROR,buttons:{ok:true}});delete this._saving},render:function(){gxp.util.dispatch([this.getStyles],function(){this.enable()},this)},scope:this});gxp.WMSStylesDialog.superclass.initComponent.apply(this,arguments)},addStyle:function(){if(!this._ready){this.on("ready",this.addStyle,this);return}var prevStyle=this.selectedStyle;var store=this.stylesStore;var newStyle=new OpenLayers.Style(null,{name:this.newStyleName(),rules:[this.createRule()]});store.add(new store.recordType({name:newStyle.name,userStyle:newStyle}));this.editStyle(prevStyle)},editStyle:function(prevStyle){var userStyle=this.selectedStyle.get("userStyle");var buttonCfg={bbar:["->",{text:this.cancelText,iconCls:"cancel",handler:function(){styleProperties.propertiesDialog.userStyle=userStyle;styleProperties.destroy();if(prevStyle){this._cancelling=true;this.stylesStore.remove(this.selectedStyle);this.changeStyle(prevStyle,{updateCombo:true,markModified:true});delete this._cancelling}},scope:this},{text:this.saveText,iconCls:"save",handler:function(){styleProperties.destroy()}}]};var styleProperties=new this.dialogCls(Ext.apply(buttonCfg,{title:String.format(this.styleWindowTitle,userStyle.title||userStyle.name),shortTitle:userStyle.title||userStyle.name,bodyBorder:false,autoHeight:true,width:300,modal:true,items:{border:false,items:{xtype:"gxp_stylepropertiesdialog",ref:"../propertiesDialog",userStyle:userStyle.clone(),nameEditable:false,style:"padding: 10px;"}},listeners:{beforedestroy:function(){this.selectedStyle.set("userStyle",styleProperties.propertiesDialog.userStyle)},scope:this}}));this.showDlg(styleProperties)},createSLD:function(options){options=options||{};var sld={version:"1.0.0",namedLayers:{}};var layerName=this.layerRecord.get("name");sld.namedLayers[layerName]={name:layerName,userStyles:[]};this.stylesStore.each(function(r){if(!options.userStyles||options.userStyles.indexOf(r.get("name"))!==-1){sld.namedLayers[layerName].userStyles.push(r.get("userStyle"))}});return new OpenLayers.Format.SLD({multipleSymbolizers:true,profile:"GeoServer"}).write(sld)},saveStyles:function(options){this.modified===true&&this.fireEvent("beforesaved",this,options)},updateStyleRemoveButton:function(){var userStyle=this.selectedStyle&&this.selectedStyle.get("userStyle");this.items.get(1).items.get(1).setDisabled(!userStyle||this.stylesStore.getCount()<=1||userStyle.isDefault===true)},updateRuleRemoveButton:function(){this.items.get(3).items.get(1).setDisabled(!this.selectedRule||this.items.get(2).items.get(0).rules.length<2)},createRule:function(){return new OpenLayers.Rule({symbolizers:[new OpenLayers.Symbolizer[this.symbolType]]})},addRulesFieldSet:function(){var rulesFieldSet=new Ext.form.FieldSet({itemId:"rulesfieldset",title:this.rulesFieldsetTitle,autoScroll:true,style:"margin-bottom: 0;",hideMode:"offsets",hidden:true});var rulesToolbar=new Ext.Toolbar({style:"border-width: 0 1px 1px 1px;",hidden:true,items:[{xtype:"button",iconCls:"add",text:this.addRuleText,tooltip:this.addRuleTip,handler:this.addRule,scope:this},{xtype:"button",iconCls:"delete",text:this.deleteRuleText,tooltip:this.deleteRuleTip,handler:this.removeRule,scope:this,disabled:true},{xtype:"button",iconCls:"edit",text:this.editRuleText,toolitp:this.editRuleTip,handler:function(){this.layerDescription?this.editRule():this.describeLayer(this.editRule)},scope:this,disabled:true},{xtype:"button",iconCls:"duplicate",text:this.duplicateRuleText,tip:this.duplicateRuleTip,handler:this.duplicateRule,scope:this,disabled:true}]});this.add(rulesFieldSet,rulesToolbar);this.doLayout();return rulesFieldSet},addRule:function(){var legend=this.items.get(2).items.get(0);this.selectedStyle.get("userStyle").rules.push(this.createRule());legend.update();this.selectedStyle.store.afterEdit(this.selectedStyle);this.updateRuleRemoveButton()},removeRule:function(){var selectedRule=this.selectedRule;this.items.get(2).items.get(0).unselect();this.selectedStyle.get("userStyle").rules.remove(selectedRule);this.afterRuleChange()},duplicateRule:function(){var legend=this.items.get(2).items.get(0);var newRule=this.selectedRule.clone();this.selectedStyle.get("userStyle").rules.push(newRule);legend.update();this.selectedStyle.store.afterEdit(this.selectedStyle);this.updateRuleRemoveButton()},editRule:function(){var rule=this.selectedRule;var origRule=rule.clone();var ruleDlg=new this.dialogCls({title:String.format(this.ruleWindowTitle,rule.title||rule.name||this.newRuleText),shortTitle:rule.title||rule.name||this.newRuleText,layout:"fit",width:320,height:450,modal:true,items:[{xtype:"gxp_rulepanel",ref:"rulePanel",symbolType:this.symbolType,rule:rule,attributes:new GeoExt.data.AttributeStore({url:this.layerDescription.owsURL,baseParams:{SERVICE:this.layerDescription.owsType,REQUEST:"DescribeFeatureType",TYPENAME:this.layerDescription.typeName},method:"GET",disableCaching:false}),autoScroll:true,border:false,defaults:{autoHeight:true,hideMode:"offsets"},listeners:{change:this.saveRule,tabchange:function(){if(ruleDlg instanceof Ext.Window){ruleDlg.syncShadow()}},scope:this}}],bbar:["->",{text:this.cancelText,iconCls:"cancel",handler:function(){this.saveRule(ruleDlg.rulePanel,origRule);ruleDlg.destroy()},scope:this},{text:this.saveText,iconCls:"save",handler:function(){ruleDlg.destroy()}}]});this.showDlg(ruleDlg)},saveRule:function(cmp,rule){var style=this.selectedStyle;var legend=this.items.get(2).items.get(0);var userStyle=style.get("userStyle");var i=userStyle.rules.indexOf(this.selectedRule);userStyle.rules[i]=rule;this.afterRuleChange(rule)},afterRuleChange:function(rule){var legend=this.items.get(2).items.get(0);this.selectedRule=rule;this.selectedStyle.store.afterEdit(this.selectedStyle)},setRulesFieldSetVisible:function(visible){this.items.get(3).setVisible(visible&&this.editable);this.items.get(2).setVisible(visible);this.doLayout()},parseSLD:function(response,options){var data=response.responseXML;if(!data||!data.documentElement){data=new OpenLayers.Format.XML().read(response.responseText)}var layerParams=this.layerRecord.getLayer().params;var initialStyle=this.initialConfig.styleName||layerParams.STYLES;if(initialStyle){this.selectedStyle=this.stylesStore.getAt(this.stylesStore.findExact("name",initialStyle))}var format=new OpenLayers.Format.SLD({profile:"GeoServer",multipleSymbolizers:true});try{var sld=format.read(data);var userStyles=sld.namedLayers[layerParams.LAYERS].userStyles;var inlineStyles;if(layerParams.SLD_BODY){var sldBody=format.read(layerParams.SLD_BODY);inlineStyles=sldBody.namedLayers[layerParams.LAYERS].userStyles;Array.prototype.push.apply(userStyles,inlineStyles)}this.stylesStore.removeAll();this.selectedStyle=null;var userStyle,record,index,defaultStyle;for(var i=0,len=userStyles.length;i<len;++i){userStyle=userStyles[i];index=this.stylesStore.findExact("name",userStyle.name);index!==-1&&this.stylesStore.removeAt(index);record=new this.stylesStore.recordType({name:userStyle.name,title:userStyle.title,"abstract":userStyle.description,userStyle:userStyle});record.phantom=false;this.stylesStore.add(record);if(!this.selectedStyle&&(initialStyle===userStyle.name||(!initialStyle&&userStyle.isDefault===true))){this.selectedStyle=record}if(userStyle.isDefault===true){defaultStyle=record}}if(!this.selectedStyle){this.selectedStyle=defaultStyle}this.addRulesFieldSet();this.createLegend(this.selectedStyle.get("userStyle").rules);this.stylesStoreReady();layerParams.SLD_BODY&&this.markModified()}catch(e){if(window.console){console.warn(e.message)}this.setupNonEditable()}},createLegend:function(rules){var R=OpenLayers.Symbolizer.Raster;if(R&&rules[0]&&rules[0].symbolizers[0] instanceof R){throw new Error("Raster symbolizers are not supported.")}else{this.addVectorLegend(rules)}},setupNonEditable:function(){this.editable=false;this.items.get(1).hide();var rulesFieldSet=this.getComponent("rulesfieldset")||this.addRulesFieldSet();rulesFieldSet.add(this.createLegendImage());this.doLayout();this.items.get(3).hide();this.stylesStoreReady()},stylesStoreReady:function(){this.stylesStore.commitChanges();this.stylesStore.on({load:function(){this.addStylesCombo();this.updateStyleRemoveButton()},add:function(store,records,index){this.updateStyleRemoveButton();var combo=this.items.get(0).items.get(0);this.markModified();combo.fireEvent("select",combo,store.getAt(index),index);combo.setValue(this.selectedStyle.get("name"))},remove:function(store,record,index){if(!this._cancelling){this._removing=true;var newIndex=Math.min(index,store.getCount()-1);this.updateStyleRemoveButton();var combo=this.items.get(0).items.get(0);this.markModified();combo.fireEvent("select",combo,store.getAt(newIndex),newIndex);combo.setValue(this.selectedStyle.get("name"));delete this._removing}},update:function(store,record){var userStyle=record.get("userStyle");var data={name:userStyle.name,title:userStyle.title||userStyle.name,"abstract":userStyle.description};Ext.apply(record.data,data);this.changeStyle(record,{updateCombo:true,markModified:true})},scope:this});this.stylesStore.fireEvent("load",this.stylesStore,this.stylesStore.getRange());this._ready=true;this.fireEvent("ready")},markModified:function(){if(this.modified===false){this.modified=true}if(!this._saving){this.fireEvent("modified",this,this.selectedStyle.get("name"))}},createStylesStore:function(callback){var styles=this.layerRecord.get("styles")||[];this.stylesStore=new Ext.data.JsonStore({data:{styles:styles},idProperty:"name",root:"styles",fields:["name","title","abstract","legend","userStyle"],listeners:{add:function(store,records){for(var rec,i=records.length-1;i>=0;--i){rec=records[i];store.suspendEvents();rec.get("title")||rec.set("title",rec.get("name"));store.resumeEvents()}}}})},getStyles:function(callback){var layer=this.layerRecord.getLayer();if(this.editable===true){var version=layer.params.VERSION;if(parseFloat(version)>1.1){version="1.1.1"}Ext.Ajax.request({url:layer.url,params:{SERVICE:"WMS",VERSION:version,REQUEST:"GetStyles",LAYERS:[layer.params.LAYERS].join(",")},method:"GET",disableCaching:false,success:this.parseSLD,failure:this.setupNonEditable,callback:callback,scope:this})}else{this.setupNonEditable()}},describeLayer:function(callback){if(this.layerDescription){window.setTimeout(function(){callback.call(this)},0)}else{var layer=this.layerRecord.getLayer();var version=layer.params.VERSION;if(parseFloat(version)>1.1){version="1.1.1"}Ext.Ajax.request({url:layer.url,params:{SERVICE:"WMS",VERSION:version,REQUEST:"DescribeLayer",LAYERS:[layer.params.LAYERS].join(",")},method:"GET",disableCaching:false,success:function(response){var result=new OpenLayers.Format.WMSDescribeLayer().read(response.responseXML&&response.responseXML.documentElement?response.responseXML:response.responseText);this.layerDescription=result[0]},callback:callback,scope:this})}},addStylesCombo:function(){var store=this.stylesStore;var combo=new Ext.form.ComboBox(Ext.apply({fieldLabel:this.chooseStyleText,store:store,editable:false,displayField:"title",valueField:"name",value:this.selectedStyle?this.selectedStyle.get("title"):this.layerRecord.getLayer().params.STYLES||"default",disabled:!store.getCount(),mode:"local",typeAhead:true,triggerAction:"all",forceSelection:true,anchor:"100%",listeners:{select:function(combo,record){this.changeStyle(record);if(!record.phantom&&!this._removing){this.fireEvent("styleselected",this,record.get("name"))}},scope:this}},this.initialConfig.stylesComboOptions));this.items.get(0).add(combo);this.doLayout()},createLegendImage:function(){var legend=new GeoExt.WMSLegend({showTitle:false,layerRecord:this.layerRecord,autoScroll:true,defaults:{listeners:{render:function(cmp){cmp.getEl().on({load:function(evt,img){if(img.getAttribute("src")!=cmp.defaultImgSrc){this.setRulesFieldSetVisible(true);if(cmp.getEl().getHeight()>250){legend.setHeight(250)}}},error:function(){this.setRulesFieldSetVisible(false)},scope:this})},scope:this}}});return legend},changeStyle:function(record,options){options=options||{};var legend=this.items.get(2).items.get(0);this.selectedStyle=record;this.updateStyleRemoveButton();var styleName=record.get("name");if(this.editable===true){var userStyle=record.get("userStyle");if(userStyle.isDefault===true){styleName=""}var ruleIdx=legend.rules.indexOf(this.selectedRule);legend.ownerCt.remove(legend);this.createLegend(userStyle.rules,{selectedRuleIndex:ruleIdx})}if(options.updateCombo===true){this.items.get(0).items.get(0).setValue(userStyle.name);options.markModified===true&&this.markModified()}},addVectorLegend:function(rules,options){options=Ext.applyIf(options||{},{enableDD:true});this.symbolType=options.symbolType;if(!this.symbolType){var typeHierarchy=["Point","Line","Polygon"];highest=0;var symbolizers=rules[0].symbolizers,symbolType;for(var i=symbolizers.length-1;i>=0;i--){symbolType=symbolizers[i].CLASS_NAME.split(".").pop();highest=Math.max(highest,typeHierarchy.indexOf(symbolType))}this.symbolType=typeHierarchy[highest]}var legend=this.items.get(2).add({xtype:"gx_vectorlegend",showTitle:false,height:rules.length>10?250:undefined,autoScroll:rules.length>10,rules:rules,symbolType:this.symbolType,selectOnClick:true,enableDD:options.enableDD,listeners:{ruleselected:function(cmp,rule){this.selectedRule=rule;var tbItems=this.items.get(3).items;this.updateRuleRemoveButton();tbItems.get(2).enable();tbItems.get(3).enable()},ruleunselected:function(cmp,rule){this.selectedRule=null;var tbItems=this.items.get(3).items;tbItems.get(1).disable();tbItems.get(2).disable();tbItems.get(3).disable()},rulemoved:function(){this.markModified()},afterlayout:function(){if(this.selectedRule!==null&&legend.selectedRule===null&&legend.rules.indexOf(this.selectedRule)!==-1){legend.selectRuleEntry(this.selectedRule)}},scope:this}});this.setRulesFieldSetVisible(true);return legend},newStyleName:function(){var layerName=this.layerRecord.get("name");return layerName.split(":").pop()+"_"+gxp.util.md5(layerName+new Date()+Math.random()).substr(0,8)},showDlg:function(dlg){dlg.show()}});gxp.WMSStylesDialog.createGeoServerStylerConfig=function(layerRecord,url){var layer=layerRecord.getLayer();if(!url){url=layerRecord.get("restUrl")}if(!url){url=layer.url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest")}return{xtype:"gxp_wmsstylesdialog",layerRecord:layerRecord,plugins:[{ptype:"gxp_geoserverstylewriter",baseUrl:url}],listeners:{styleselected:function(cmp,style){layer.mergeNewParams({styles:style})},modified:function(cmp,style){cmp.saveStyles()},saved:function(cmp,style){layer.mergeNewParams({_olSalt:Math.random(),styles:style})},scope:this}}};OpenLayers.Renderer.defaultSymbolizer={fillColor:"#808080",fillOpacity:1,strokeColor:"#000000",strokeOpacity:1,strokeWidth:1,strokeDashstyle:"solid",pointRadius:3,graphicName:"square",fontColor:"#000000",fontSize:10,haloColor:"#FFFFFF",haloOpacity:1,haloRadius:1,labelAlign:"cm"};Ext.reg("gxp_wmsstylesdialog",gxp.WMSStylesDialog);Ext.namespace("gxp");gxp.ScaleLimitPanel=Ext.extend(Ext.Panel,{maxScaleDenominatorLimit:40075016.68*39.3701*OpenLayers.DOTS_PER_INCH/256,limitMaxScaleDenominator:true,maxScaleDenominator:undefined,minScaleDenominatorLimit:Math.pow(0.5,19)*40075016.68*39.3701*OpenLayers.DOTS_PER_INCH/256,limitMinScaleDenominator:true,minScaleDenominator:undefined,scaleLevels:20,scaleSliderTemplate:"{scaleType} Scale 1:{scale}",modifyScaleTipContext:Ext.emptyFn,scaleFactor:null,changing:false,border:false,maxScaleLimitText:"Max scale limit",minScaleLimitText:"Min scale limit",initComponent:function(){this.layout="column";this.defaults={border:false,bodyStyle:"margin: 0 5px;"};this.bodyStyle={padding:"5px"};this.scaleSliderTemplate=new Ext.Template(this.scaleSliderTemplate);Ext.applyIf(this,{minScaleDenominator:this.minScaleDenominatorLimit,maxScaleDenominator:this.maxScaleDenominatorLimit});this.scaleFactor=Math.pow(this.maxScaleDenominatorLimit/this.minScaleDenominatorLimit,1/(this.scaleLevels-1));this.scaleSlider=new Ext.Slider({vertical:true,height:100,values:[0,100],listeners:{changecomplete:function(slider,value){this.updateScaleValues(slider)},render:function(slider){slider.thumbs[0].el.setVisible(this.limitMaxScaleDenominator);slider.thumbs[1].el.setVisible(this.limitMinScaleDenominator);slider.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this},plugins:[new gxp.slider.Tip({getText:(function(thumb){var index=thumb.slider.thumbs.indexOf(thumb);var value=thumb.value;var scales=this.sliderValuesToScale([thumb.value]);var data={scale:String(scales[0]),zoom:(thumb.value*(this.scaleLevels/100)).toFixed(1),type:(index===0)?"Max":"Min",scaleType:(index===0)?"Min":"Max"};this.modifyScaleTipContext(this,data);return this.scaleSliderTemplate.apply(data)}).createDelegate(this)})]});this.maxScaleDenominatorInput=new Ext.form.NumberField({allowNegative:false,width:100,fieldLabel:"1",value:Math.round(this.maxScaleDenominator),disabled:!this.limitMaxScaleDenominator,validator:(function(value){return !this.limitMinScaleDenominator||(value>this.minScaleDenominator)}).createDelegate(this),listeners:{valid:function(field){var value=Number(field.getValue());var limit=Math.round(this.maxScaleDenominatorLimit);if(value<limit&&value>this.minScaleDenominator){this.maxScaleDenominator=value;this.updateSliderValues()}},change:function(field){var value=Number(field.getValue());var limit=Math.round(this.maxScaleDenominatorLimit);if(value>limit){field.setValue(limit)}else{if(value<this.minScaleDenominator){field.setValue(this.minScaleDenominator)}else{this.maxScaleDenominator=value;this.updateSliderValues()}}},scope:this}});this.minScaleDenominatorInput=new Ext.form.NumberField({allowNegative:false,width:100,fieldLabel:"1",value:Math.round(this.minScaleDenominator),disabled:!this.limitMinScaleDenominator,validator:(function(value){return !this.limitMaxScaleDenominator||(value<this.maxScaleDenominator)}).createDelegate(this),listeners:{valid:function(field){var value=Number(field.getValue());var limit=Math.round(this.minScaleDenominatorLimit);if(value>limit&&value<this.maxScaleDenominator){this.minScaleDenominator=value;this.updateSliderValues()}},change:function(field){var value=Number(field.getValue());var limit=Math.round(this.minScaleDenominatorLimit);if(value<limit){field.setValue(limit)}else{if(value>this.maxScaleDenominator){field.setValue(this.maxScaleDenominator)}else{this.minScaleDenominator=value;this.updateSliderValues()}}},scope:this}});this.items=[this.scaleSlider,{xtype:"panel",layout:"form",defaults:{border:false},items:[{labelWidth:90,layout:"form",width:150,items:[{xtype:"checkbox",checked:!!this.limitMinScaleDenominator,fieldLabel:this.maxScaleLimitText,listeners:{check:function(box,checked){this.limitMinScaleDenominator=checked;var slider=this.scaleSlider;slider.setValue(1,100);slider.thumbs[1].el.setVisible(checked);this.minScaleDenominatorInput.setDisabled(!checked);this.updateScaleValues(slider);slider.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this}}]},{labelWidth:10,layout:"form",items:[this.minScaleDenominatorInput]},{labelWidth:90,layout:"form",items:[{xtype:"checkbox",checked:!!this.limitMaxScaleDenominator,fieldLabel:this.minScaleLimitText,listeners:{check:function(box,checked){this.limitMaxScaleDenominator=checked;var slider=this.scaleSlider;slider.setValue(0,0);slider.thumbs[0].el.setVisible(checked);this.maxScaleDenominatorInput.setDisabled(!checked);this.updateScaleValues(slider);slider.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this}}]},{labelWidth:10,layout:"form",items:[this.maxScaleDenominatorInput]}]}];this.addEvents("change");gxp.ScaleLimitPanel.superclass.initComponent.call(this)},updateScaleValues:function(slider){if(!this.changing){var values=slider.getValues();var resetSlider=false;if(!this.limitMaxScaleDenominator){if(values[0]>0){values[0]=0;resetSlider=true}}if(!this.limitMinScaleDenominator){if(values[1]<100){values[1]=100;resetSlider=true}}if(resetSlider){slider.setValue(0,values[0]);slider.setValue(1,values[1])}else{var scales=this.sliderValuesToScale(values);var max=scales[0];var min=scales[1];this.changing=true;this.minScaleDenominatorInput.setValue(min);this.maxScaleDenominatorInput.setValue(max);this.changing=false;this.fireEvent("change",this,(this.limitMinScaleDenominator)?min:undefined,(this.limitMaxScaleDenominator)?max:undefined)}}},updateSliderValues:function(){if(!this.changing){var min=this.minScaleDenominator;var max=this.maxScaleDenominator;var values=this.scaleToSliderValues([max,min]);this.changing=true;this.scaleSlider.setValue(0,values[0]);this.scaleSlider.setValue(1,values[1]);this.changing=false;this.fireEvent("change",this,(this.limitMinScaleDenominator)?min:undefined,(this.limitMaxScaleDenominator)?max:undefined)}},sliderValuesToScale:function(values){var interval=100/(this.scaleLevels-1);return[Math.round(Math.pow(this.scaleFactor,(100-values[0])/interval)*this.minScaleDenominatorLimit),Math.round(Math.pow(this.scaleFactor,(100-values[1])/interval)*this.minScaleDenominatorLimit)]},scaleToSliderValues:function(scales){var interval=100/(this.scaleLevels-1);return[100-(interval*Math.log(scales[0]/this.minScaleDenominatorLimit)/Math.log(this.scaleFactor)),100-(interval*Math.log(scales[1]/this.minScaleDenominatorLimit)/Math.log(this.scaleFactor))]}});Ext.reg("gxp_scalelimitpanel",gxp.ScaleLimitPanel);Ext.namespace("gxp.slider");gxp.slider.Tip=Ext.extend(Ext.slider.Tip,{hover:true,dragging:false,init:function(slider){if(this.hover){slider.on("render",this.registerThumbListeners,this)}this.slider=slider;gxp.slider.Tip.superclass.init.apply(this,arguments)},registerThumbListeners:function(){for(var i=0,len=this.slider.thumbs.length;i<len;++i){this.slider.thumbs[i].el.on({mouseover:this.createHoverListener(i),mouseout:function(){if(!this.dragging){this.hide.apply(this,arguments)}},scope:this})}},createHoverListener:function(index){return(function(){this.onSlide(this.slider,{},this.slider.thumbs[index]);this.dragging=false}).createDelegate(this)},onSlide:function(slider,e,thumb){this.dragging=true;gxp.slider.Tip.superclass.onSlide.apply(this,arguments)}});Ext.namespace("gxp.plugins");gxp.plugins.FormFieldHelp=Ext.extend(Object,{ptype:"gxp_formfieldhelp",helpText:null,dismissDelay:5000,constructor:function(config){Ext.apply(this,config)},init:function(target){this.target=target;target.on("render",this.showHelp,this)},showHelp:function(){var target;if(this.target.label){target=this.target.label}else{target=this.target.getEl()}Ext.QuickTips.register({target:target,dismissDelay:this.dismissDelay,text:this.helpText})}});Ext.preg(gxp.plugins.FormFieldHelp.prototype.ptype,gxp.plugins.FormFieldHelp);Ext.namespace("gxp");gxp.TextSymbolizer=Ext.extend(Ext.Panel,{fonts:undefined,symbolizer:null,defaultSymbolizer:null,attributes:null,colorManager:null,haloCache:null,border:false,layout:"form",labelValuesText:"Label values",haloText:"Halo",sizeText:"Size",priorityText:"Priority",labelOptionsText:"Label options",autoWrapText:"Auto wrap",followLineText:"Follow line",maxDisplacementText:"Maximum displacement",repeatText:"Repeat",forceLeftToRightText:"Force left to right",groupText:"Grouping",spaceAroundText:"Space around",labelAllGroupText:"Label all segments in line group",maxAngleDeltaText:"Maximum angle delta",conflictResolutionText:"Conflict resolution",goodnessOfFitText:"Goodness of fit",polygonAlignText:"Polygon alignment",graphicResizeText:"Graphic resize",graphicMarginText:"Graphic margin",graphicTitle:"Graphic",fontColorTitle:"Font color and opacity",positioningText:"Label positioning",anchorPointText:"Anchor point",displacementXText:"Displacement (X-direction)",displacementYText:"Displacement (Y-direction)",perpendicularOffsetText:"Perpendicular offset",priorityHelp:"The higher the value of the specified field, the sooner the label will be drawn (which makes it win in the conflict resolution game)",autoWrapHelp:"Wrap labels that exceed a certain length in pixels",followLineHelp:"Should the label follow the geometry of the line?",maxDisplacementHelp:"Maximum displacement in pixels if label position is busy",repeatHelp:"Repeat labels after a certain number of pixels",forceLeftToRightHelp:"Labels are usually flipped to make them readable. If the character happens to be a directional arrow then this is not desirable",groupHelp:"Grouping works by collecting all features with the same label text, then choosing a representative geometry for the group. Road data is a classic example to show why grouping is useful. It is usually desirable to display only a single label for all of 'Main Street', not a label for every block of 'Main Street.'",spaceAroundHelp:"Overlapping and Separating Labels. By default GeoServer will not render labels 'on top of each other'. By using the spaceAround option you can either allow labels to overlap, or add extra space around labels. The value supplied for the option is a positive or negative size in pixels. Using the default value of 0, the bounding box of a label cannot overlap the bounding box of another label.",labelAllGroupHelp:"The labelAllGroup option makes sure that all of the segments in a line group are labeled instead of just the longest one.",conflictResolutionHelp:"By default labels are subjected to conflict resolution, meaning the renderer will not allow any label to overlap with a label that has been drawn already. Setting this parameter to false pull the label out of the conflict resolution game, meaning the label will be drawn even if it overlaps with other labels, and other labels drawn after it won’t mind overlapping with it.",goodnessOfFitHelp:"Geoserver will remove labels if they are a particularly bad fit for the geometry they are labeling. For Polygons: the label is sampled approximately at every letter. The distance from these points to the polygon is determined and each sample votes based on how close it is to the polygon. The default value is 0.5.",graphic_resizeHelp:"Specifies a mode for resizing label graphics (such as highway shields) to fit the text of the label. The default mode, ‘none’, never modifies the label graphic. In stretch mode, GeoServer will resize the graphic to exactly surround the label text, possibly modifying the image’s aspect ratio. In proportional mode, GeoServer will expand the image to be large enough to surround the text while preserving its original aspect ratio.",maxAngleDeltaHelp:"Designed to use used in conjuection with followLine, the maxAngleDelta option sets the maximum angle, in degrees, between two subsequent characters in a curved label. Large angles create either visually disconnected words or overlapping characters. It is advised not to use angles larger than 30.",polygonAlignHelp:"GeoServer normally tries to place horizontal labels within a polygon, and give up in case the label position is busy or if the label does not fit enough in the polygon. This options allows GeoServer to try alternate rotations for the labels. Possible options: the default value, only the rotation manually specified in the <Rotation> tag will be used (manual), If the label does not fit horizontally and the polygon is taller than wider the vertical alignement will also be tried (ortho), If the label does not fit horizontally the minimum bounding rectangle will be computed and a label aligned to it will be tried out as well (mbr).",graphic_marginHelp:"Similar to the margin shorthand property in CSS for HTML, its interpretation varies depending on how many margin values are provided: 1 = use that margin length on all sides of the label 2 = use the first for top & bottom margins and the second for left & right margins. 3 = use the first for the top margin, second for left & right margins, third for the bottom margin. 4 = use the first for the top margin, second for the right margin, third for the bottom margin, and fourth for the left margin.",initComponent:function(){if(!this.symbolizer){this.symbolizer={}}Ext.applyIf(this.symbolizer,this.defaultSymbolizer);if(!this.symbolizer.vendorOptions){this.symbolizer.vendorOptions={}}this.haloCache={};this.attributes.on("load",this.showHideGeometryOptions,this);this.attributes.load();var defAttributesComboConfig={xtype:"combo",fieldLabel:this.labelValuesText,store:this.attributes,mode:"local",lastQuery:"",editable:false,triggerAction:"all",allowBlank:false,displayField:"name",valueField:"name",value:this.symbolizer.label&&this.symbolizer.label.replace(/^\${(.*)}$/,"$1"),listeners:{select:function(combo,record){this.symbolizer.label="${"+record.get("name")+"}";this.fireEvent("change",this.symbolizer)},scope:this},width:120};this.attributesComboConfig=this.attributesComboConfig||{};Ext.applyIf(this.attributesComboConfig,defAttributesComboConfig);this.labelWidth=80;this.items=[this.attributesComboConfig,{cls:"x-html-editor-tb",style:"background: transparent; border: none; padding: 0 0em 0.5em;",xtype:"toolbar",items:[{xtype:"gxp_fontcombo",fonts:this.fonts||undefined,width:110,value:this.symbolizer.fontFamily,listeners:{select:function(combo,record){this.symbolizer.fontFamily=record.get("field1");this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"tbtext",text:this.sizeText+": "},{xtype:"numberfield",allowNegative:false,emptyText:OpenLayers.Renderer.defaultSymbolizer.fontSize,value:this.symbolizer.fontSize,width:30,listeners:{change:function(field,value){value=parseFloat(value);if(isNaN(value)){delete this.symbolizer.fontSize}else{this.symbolizer.fontSize=value}this.fireEvent("change",this.symbolizer)},scope:this}},{enableToggle:true,cls:"x-btn-icon",iconCls:"x-edit-bold",pressed:this.symbolizer.fontWeight==="bold",listeners:{toggle:function(button,pressed){this.symbolizer.fontWeight=pressed?"bold":"normal";this.fireEvent("change",this.symbolizer)},scope:this}},{enableToggle:true,cls:"x-btn-icon",iconCls:"x-edit-italic",pressed:this.symbolizer.fontStyle==="italic",listeners:{toggle:function(button,pressed){this.symbolizer.fontStyle=pressed?"italic":"normal";this.fireEvent("change",this.symbolizer)},scope:this}}]},{xtype:"gxp_fillsymbolizer",fillText:this.fontColorTitle,symbolizer:this.symbolizer,colorProperty:"fontColor",opacityProperty:"fontOpacity",checkboxToggle:false,autoHeight:true,width:213,labelWidth:70,plugins:this.colorManager&&[new this.colorManager()],listeners:{change:function(symbolizer){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"fieldset",title:this.graphicTitle,checkboxToggle:true,hideMode:"offsets",collapsed:!(this.symbolizer.fillColor||this.symbolizer.fillOpacity||this.symbolizer.vendorOptions["graphic-resize"]||this.symbolizer.vendorOptions["graphic-margin"]),labelWidth:70,items:[{xtype:"gxp_pointsymbolizer",symbolizer:this.symbolizer,listeners:{change:function(symbolizer){symbolizer.graphic=!!symbolizer.graphicName||!!symbolizer.externalGraphic;this.fireEvent("change",this.symbolizer)},scope:this},border:false,labelWidth:70},this.createVendorSpecificField({name:"graphic-resize",xtype:"combo",store:["none","stretch","proportional"],mode:"local",listeners:{select:function(combo,record){if(combo.getValue()==="none"){this.graphicMargin.hide()}else{if(Ext.isEmpty(this.graphicMargin.getValue())){this.graphicMargin.setValue(0);this.symbolizer.vendorOptions["graphic-margin"]=0}this.graphicMargin.show()}},scope:this},width:100,triggerAction:"all",fieldLabel:this.graphicResizeText}),this.createVendorSpecificField({name:"graphic-margin",ref:"../graphicMargin",hidden:(this.symbolizer.vendorOptions["graphic-resize"]!=="stretch"&&this.symbolizer.vendorOptions["graphic-resize"]!=="proportional"),width:100,fieldLabel:this.graphicMarginText,xtype:"textfield"})],listeners:{collapse:function(){this.graphicCache={externalGraphic:this.symbolizer.externalGraphic,fillColor:this.symbolizer.fillColor,fillOpacity:this.symbolizer.fillOpacity,graphicName:this.symbolizer.graphicName,pointRadius:this.symbolizer.pointRadius,rotation:this.symbolizer.rotation,strokeColor:this.symbolizer.strokeColor,strokeWidth:this.symbolizer.strokeWidth,strokeDashStyle:this.symbolizer.strokeDashStyle};delete this.symbolizer.externalGraphic;delete this.symbolizer.fillColor;delete this.symbolizer.fillOpacity;delete this.symbolizer.graphicName;delete this.symbolizer.pointRadius;delete this.symbolizer.rotation;delete this.symbolizer.strokeColor;delete this.symbolizer.strokeWidth;delete this.symbolizer.strokeDashStyle;this.fireEvent("change",this.symbolizer)},expand:function(){Ext.apply(this.symbolizer,this.graphicCache);this.doLayout();this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"fieldset",title:this.haloText,checkboxToggle:true,collapsed:!(this.symbolizer.haloRadius||this.symbolizer.haloColor||this.symbolizer.haloOpacity),autoHeight:true,labelWidth:50,items:[{xtype:"numberfield",fieldLabel:this.sizeText,anchor:"89%",allowNegative:false,emptyText:OpenLayers.Renderer.defaultSymbolizer.haloRadius,value:this.symbolizer.haloRadius,listeners:{change:function(field,value){value=parseFloat(value);if(isNaN(value)){delete this.symbolizer.haloRadius}else{this.symbolizer.haloRadius=value}this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_fillsymbolizer",symbolizer:{fillColor:("haloColor" in this.symbolizer)?this.symbolizer.haloColor:OpenLayers.Renderer.defaultSymbolizer.haloColor,fillOpacity:("haloOpacity" in this.symbolizer)?this.symbolizer.haloOpacity:OpenLayers.Renderer.defaultSymbolizer.haloOpacity*100},defaultColor:OpenLayers.Renderer.defaultSymbolizer.haloColor,checkboxToggle:false,width:190,labelWidth:60,plugins:this.colorManager&&[new this.colorManager()],listeners:{change:function(symbolizer){this.symbolizer.haloColor=symbolizer.fillColor;this.symbolizer.haloOpacity=symbolizer.fillOpacity;this.fireEvent("change",this.symbolizer)},scope:this}}],listeners:{collapse:function(){this.haloCache={haloRadius:this.symbolizer.haloRadius,haloColor:this.symbolizer.haloColor,haloOpacity:this.symbolizer.haloOpacity};delete this.symbolizer.haloRadius;delete this.symbolizer.haloColor;delete this.symbolizer.haloOpacity;this.fireEvent("change",this.symbolizer)},expand:function(){Ext.apply(this.symbolizer,this.haloCache);this.doLayout();this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"fieldset",collapsed:!(this.symbolizer.labelAlign||this.symbolizer.vendorOptions.polygonAlign||this.symbolizer.labelXOffset||this.symbolizer.labelYOffset||this.symbolizer.labelPerpendicularOffset),title:this.positioningText,checkboxToggle:true,autoHeight:true,labelWidth:75,defaults:{width:100},items:[this.createField(Ext.applyIf({fieldLabel:this.anchorPointText,geometryTypes:["POINT"],value:this.symbolizer.labelAlign||"lb",store:[["lt","Left-top"],["ct","Center-top"],["rt","Right-top"],["lm","Left-center"],["cm","Center"],["rm","Right-center"],["lb","Left-bottom"],["cb","Center-bottom"],["rb","Right-bottom"]],listeners:{select:function(combo,record){this.symbolizer.labelAlign=combo.getValue();delete this.symbolizer.labelAnchorPointX;delete this.symbolizer.labelAnchorPointY;this.fireEvent("change",this.symbolizer)},scope:this}},this.attributesComboConfig)),this.createField({xtype:"numberfield",geometryTypes:["POINT"],fieldLabel:this.displacementXText,value:this.symbolizer.labelXOffset,listeners:{change:function(field,value){this.symbolizer.labelXOffset=value;this.fireEvent("change",this.symbolizer)},scope:this}}),this.createField({xtype:"numberfield",geometryTypes:["POINT"],fieldLabel:this.displacementYText,value:this.symbolizer.labelYOffset,listeners:{change:function(field,value){this.symbolizer.labelYOffset=value;this.fireEvent("change",this.symbolizer)},scope:this}}),this.createField({xtype:"numberfield",geometryTypes:["LINE"],fieldLabel:this.perpendicularOffsetText,value:this.symbolizer.labelPerpendicularOffset,listeners:{change:function(field,value){if(Ext.isEmpty(value)){delete this.symbolizer.labelPerpendicularOffset}else{this.symbolizer.labelPerpendicularOffset=value}this.fireEvent("change",this.symbolizer)},scope:this}}),this.createVendorSpecificField({name:"polygonAlign",geometryTypes:["POLYGON"],xtype:"combo",mode:"local",value:this.symbolizer.vendorOptions.polygonAlign||"manual",triggerAction:"all",store:["manual","ortho","mbr"],fieldLabel:this.polygonAlignText})]},{xtype:"fieldset",title:this.priorityText,checkboxToggle:true,collapsed:!(this.symbolizer.priority),autoHeight:true,labelWidth:50,items:[Ext.applyIf({fieldLabel:this.priorityText,value:this.symbolizer.priority&&this.symbolizer.priority.replace(/^\${(.*)}$/,"$1"),allowBlank:true,name:"priority",plugins:[{ptype:"gxp_formfieldhelp",dismissDelay:20000,helpText:this.priorityHelp}],listeners:{select:function(combo,record){this.symbolizer[combo.name]="${"+record.get("name")+"}";this.fireEvent("change",this.symbolizer)},scope:this}},this.attributesComboConfig)]},{xtype:"fieldset",title:this.labelOptionsText,checkboxToggle:true,collapsed:!(this.symbolizer.vendorOptions.autoWrap||this.symbolizer.vendorOptions.followLine||this.symbolizer.vendorOptions.maxAngleDelta||this.symbolizer.vendorOptions.maxDisplacement||this.symbolizer.vendorOptions.repeat||this.symbolizer.vendorOptions.forceLeftToRight||this.symbolizer.vendorOptions.group||this.symbolizer.vendorOptions.spaceAround||this.symbolizer.vendorOptions.labelAllGroup||this.symbolizer.vendorOptions.conflictResolution||this.symbolizer.vendorOptions.goodnessOfFit||this.symbolizer.vendorOptions.polygonAlign),autoHeight:true,labelWidth:80,defaults:{width:100},items:[this.createVendorSpecificField({name:"autoWrap",allowBlank:false,fieldLabel:this.autoWrapText}),this.createVendorSpecificField({name:"followLine",geometryTypes:["LINE"],xtype:"checkbox",listeners:{check:function(cb,checked){if(!checked){this.maxAngleDelta.hide()}else{this.maxAngleDelta.show()}},scope:this},fieldLabel:this.followLineText}),this.createVendorSpecificField({name:"maxAngleDelta",ref:"../maxAngleDelta",hidden:(this.symbolizer.vendorOptions.followLine==null),geometryTypes:["LINE"],fieldLabel:this.maxAngleDeltaText}),this.createVendorSpecificField({name:"maxDisplacement",fieldLabel:this.maxDisplacementText}),this.createVendorSpecificField({name:"repeat",geometryTypes:["LINE"],fieldLabel:this.repeatText}),this.createVendorSpecificField({name:"forceLeftToRight",xtype:"checkbox",geometryTypes:["LINE"],fieldLabel:this.forceLeftToRightText}),this.createVendorSpecificField({name:"group",listeners:{check:function(cb,value){if(this.geometryType==="LINE"){if(value===false){this.labelAllGroup.hide()}else{this.labelAllGroup.show()}}},scope:this},xtype:"checkbox",yesno:true,fieldLabel:this.groupText}),this.createVendorSpecificField({name:"labelAllGroup",ref:"../labelAllGroup",geometryTypes:["LINE"],hidden:(this.symbolizer.vendorOptions.group!=="yes"),xtype:"checkbox",fieldLabel:this.labelAllGroupText}),this.createVendorSpecificField({name:"conflictResolution",xtype:"checkbox",listeners:{check:function(cb,checked){if(!checked){this.spaceAround.hide()}else{this.spaceAround.show()}},scope:this},fieldLabel:this.conflictResolutionText}),this.createVendorSpecificField({name:"spaceAround",hidden:(this.symbolizer.vendorOptions.conflictResolution!==true),allowNegative:true,ref:"../spaceAround",fieldLabel:this.spaceAroundText}),this.createVendorSpecificField({name:"goodnessOfFit",geometryTypes:["POLYGON"],fieldLabel:this.goodnessOfFitText})]}];this.addEvents("change");gxp.TextSymbolizer.superclass.initComponent.call(this)},createField:function(config){var field=Ext.ComponentMgr.create(config);if(config.geometryTypes){this.on("geometrytype",function(type){if(config.geometryTypes.indexOf(type)===-1){field.hide()}})}return field},createVendorSpecificField:function(config){var listener=function(field,value){if(Ext.isEmpty(value)){delete this.symbolizer.vendorOptions[config.name]}else{if(config.yesno===true){this.symbolizer.vendorOptions[config.name]=(value==true)?"yes":"no"}else{this.symbolizer.vendorOptions[config.name]=value}}this.fireEvent("change",this.symbolizer)};var field=Ext.ComponentMgr.create(Ext.applyIf(config,{xtype:"numberfield",allowNegative:false,value:config.value||this.symbolizer.vendorOptions[config.name],checked:(config.yesno===true)?(this.symbolizer.vendorOptions[config.name]==="yes"):this.symbolizer.vendorOptions[config.name],plugins:[{ptype:"gxp_formfieldhelp",dismissDelay:20000,helpText:this[config.name.replace(/-/g,"_")+"Help"]}]}));field.on("change",listener,this);field.on("check",listener,this);if(config.geometryTypes){this.on("geometrytype",function(type){if(config.geometryTypes.indexOf(type)===-1){field.hide()}})}return field},showHideGeometryOptions:function(){var geomRegex=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;var polygonRegex=/gml:((Multi)?(Polygon|Surface)).*/;var pointRegex=/gml:((Multi)?(Point)).*/;var lineRegex=/gml:((Multi)?(Line|Curve|Surface)).*/;var geomType=null;this.attributes.each(function(r){var type=r.get("type");var match=geomRegex.exec(type);if(match){if(polygonRegex.exec(type)){geomType="POLYGON"}else{if(pointRegex.exec(type)){geomType="POINT"}else{if(lineRegex.exec(type)){geomType="LINE"}}}}},this);if(geomType!==null){this.geometryType=geomType;this.fireEvent("geometrytype",geomType)}}});Ext.reg("gxp_textsymbolizer",gxp.TextSymbolizer);Ext.namespace("gxp");gxp.FillSymbolizer=Ext.extend(Ext.FormPanel,{symbolizer:null,colorProperty:"fillColor",opacityProperty:"fillOpacity",colorManager:null,checkboxToggle:true,defaultColor:null,border:false,fillText:"Fill",colorText:"Color",opacityText:"Opacity",initComponent:function(){if(!this.symbolizer){this.symbolizer={}}var colorFieldPlugins;if(this.colorManager){colorFieldPlugins=[new this.colorManager()]}var sliderValue=100;if(this.opacityProperty in this.symbolizer){sliderValue=this.symbolizer[this.opacityProperty]*100}else{if(OpenLayers.Renderer.defaultSymbolizer[this.opacityProperty]){sliderValue=OpenLayers.Renderer.defaultSymbolizer[this.opacityProperty]*100}}this.items=[{xtype:"fieldset",title:this.fillText,autoHeight:true,checkboxToggle:this.checkboxToggle,collapsed:this.checkboxToggle===true&&this.symbolizer.fill===false,hideMode:"offsets",defaults:{width:100},items:[{xtype:"gxp_colorfield",fieldLabel:this.colorText,name:"color",emptyText:OpenLayers.Renderer.defaultSymbolizer[this.colorProperty],value:this.symbolizer[this.colorProperty],defaultBackground:this.defaultColor||OpenLayers.Renderer.defaultSymbolizer[this.colorProperty],plugins:colorFieldPlugins,listeners:{valid:function(field){var newValue=field.getValue();var modified=this.symbolizer[this.colorProperty]!=newValue;this.symbolizer[this.colorProperty]=newValue;modified&&this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"slider",fieldLabel:this.opacityText,name:"opacity",values:[sliderValue],isFormField:true,listeners:{changecomplete:function(slider,value){this.symbolizer[this.opacityProperty]=value/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(thumb){return thumb.value+"%"}})]}],listeners:{collapse:function(){if(this.symbolizer.fill!==false){this.symbolizer.fill=false;this.fireEvent("change",this.symbolizer)}},expand:function(){this.symbolizer.fill=true;this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.FillSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_fillsymbolizer",gxp.FillSymbolizer);Ext.namespace("gxp.form");gxp.form.ColorField=Ext.extend(Ext.form.TextField,{cssColors:{aqua:"#00FFFF",black:"#000000",blue:"#0000FF",fuchsia:"#FF00FF",gray:"#808080",green:"#008000",lime:"#00FF00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#FF0000",silver:"#C0C0C0",teal:"#008080",white:"#FFFFFF",yellow:"#FFFF00"},defaultBackground:"#ffffff",initComponent:function(){if(this.value){this.value=this.hexToColor(this.value)}gxp.form.ColorField.superclass.initComponent.call(this);this.on({render:this.colorField,valid:this.colorField,scope:this})},isDark:function(hex){var dark=false;if(hex){var r=parseInt(hex.substring(1,3),16)/255;var g=parseInt(hex.substring(3,5),16)/255;var b=parseInt(hex.substring(5,7),16)/255;var brightness=(r*0.299)+(g*0.587)+(b*0.144);dark=brightness<0.5}return dark},colorField:function(){var color=this.colorToHex(this.getValue())||this.defaultBackground;this.getEl().setStyle({background:color,color:this.isDark(color)?"#ffffff":"#000000"})},getHexValue:function(){return this.colorToHex(gxp.form.ColorField.superclass.getValue.apply(this,arguments))},getValue:function(){var v=this.getHexValue();var o=this.initialConfig.value;if(v===this.hexToColor(o)){v=o}return v},setValue:function(value){gxp.form.ColorField.superclass.setValue.apply(this,[this.hexToColor(value)])},colorToHex:function(color){if(!color){return color}var hex;if(color.match(/^#[0-9a-f]{6}$/i)){hex=color}else{hex=this.cssColors[color.toLowerCase()]||null}return hex},hexToColor:function(hex){if(!hex){return hex}var color=hex;for(var c in this.cssColors){if(this.cssColors[c]==color.toUpperCase()){color=c;break}}return color}});Ext.reg("gxp_colorfield",gxp.form.ColorField);Ext.namespace("gxp.form");gxp.form.FontComboBox=Ext.extend(Ext.form.ComboBox,{fonts:["Serif","SansSerif","Arial","Courier New","Tahoma","Times New Roman","Verdana"],defaultFont:"Serif",allowBlank:false,mode:"local",triggerAction:"all",editable:false,initComponent:function(){var fonts=this.fonts||gxp.form.FontComboBox.prototype.fonts;var defaultFont=this.defaultFont;if(fonts.indexOf(this.defaultFont)===-1){defaultFont=fonts[0]}var defConfig={displayField:"field1",valueField:"field1",store:fonts,value:defaultFont,tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item"><span style="font-family: {field1};">{field1}</span></div></tpl>')};Ext.applyIf(this,defConfig);gxp.form.FontComboBox.superclass.initComponent.call(this)}});Ext.reg("gxp_fontcombo",gxp.form.FontComboBox);Ext.namespace("gxp");gxp.PolygonSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,initComponent:function(){this.items=[{xtype:"gxp_fillsymbolizer",symbolizer:this.symbolizer,listeners:{change:function(symbolizer){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,listeners:{change:function(symbolizer){this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.PolygonSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_polygonsymbolizer",gxp.PolygonSymbolizer);Ext.namespace("gxp");gxp.StrokeSymbolizer=Ext.extend(Ext.FormPanel,{solidStrokeName:"solid",dashStrokeName:"dash",dotStrokeName:"dot",titleText:"Stroke",styleText:"Style",colorText:"Color",widthText:"Width",opacityText:"Opacity",symbolizer:null,colorManager:null,checkboxToggle:true,defaultColor:null,dashStyles:null,border:false,initComponent:function(){this.dashStyles=this.dashStyles||[["solid",this.solidStrokeName],["4 4",this.dashStrokeName],["2 4",this.dotStrokeName]];if(!this.symbolizer){this.symbolizer={}}var colorFieldPlugins;if(this.colorManager){colorFieldPlugins=[new this.colorManager]}this.items=[{xtype:"fieldset",title:this.titleText,autoHeight:true,checkboxToggle:this.checkboxToggle,collapsed:this.checkboxToggle===true&&this.symbolizer.stroke===false,hideMode:"offsets",defaults:{width:100},items:[{xtype:"combo",name:"style",fieldLabel:this.styleText,store:new Ext.data.SimpleStore({data:this.dashStyles,fields:["value","display"]}),displayField:"display",valueField:"value",value:this.getDashArray(this.symbolizer.strokeDashstyle)||OpenLayers.Renderer.defaultSymbolizer.strokeDashstyle,mode:"local",allowBlank:true,triggerAction:"all",editable:false,listeners:{select:function(combo,record){this.symbolizer.strokeDashstyle=record.get("value");this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_colorfield",name:"color",fieldLabel:this.colorText,emptyText:OpenLayers.Renderer.defaultSymbolizer.strokeColor,value:this.symbolizer.strokeColor,defaultBackground:this.defaultColor||OpenLayers.Renderer.defaultSymbolizer.strokeColor,plugins:colorFieldPlugins,listeners:{valid:function(field){var newValue=field.getValue();var modified=this.symbolizer.strokeColor!=newValue;this.symbolizer.strokeColor=newValue;modified&&this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"numberfield",name:"width",fieldLabel:this.widthText,allowNegative:false,emptyText:OpenLayers.Renderer.defaultSymbolizer.strokeWidth,value:this.symbolizer.strokeWidth,listeners:{change:function(field,value){value=parseFloat(value);if(isNaN(value)){delete this.symbolizer.strokeWidth}else{this.symbolizer.strokeWidth=value}this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"slider",name:"opacity",fieldLabel:this.opacityText,values:[(("strokeOpacity" in this.symbolizer)?this.symbolizer.strokeOpacity:OpenLayers.Renderer.defaultSymbolizer.strokeOpacity)*100],isFormField:true,listeners:{changecomplete:function(slider,value){this.symbolizer.strokeOpacity=value/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(thumb){return thumb.value+"%"}})]}],listeners:{collapse:function(){if(this.symbolizer.stroke!==false){this.symbolizer.stroke=false;this.fireEvent("change",this.symbolizer)}},expand:function(){this.symbolizer.stroke=true;this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.StrokeSymbolizer.superclass.initComponent.call(this)},getDashArray:function(style){var array;if(style){var parts=style.split(/\s+/);var ratio=parts[0]/parts[1];if(!isNaN(ratio)){array=ratio>=1?"4 4":"2 4"}}return array}});Ext.reg("gxp_strokesymbolizer",gxp.StrokeSymbolizer);Ext.namespace("gxp");gxp.LineSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,initComponent:function(){this.items=[{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,listeners:{change:function(symbolizer){this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.LineSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_linesymbolizer",gxp.LineSymbolizer);Ext.namespace("gxp");gxp.PointSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,graphicCircleText:"circle",graphicSquareText:"square",graphicTriangleText:"triangle",graphicStarText:"star",graphicCrossText:"cross",graphicXText:"x",graphicExternalText:"external",urlText:"URL",opacityText:"opacity",symbolText:"Symbol",sizeText:"Size",rotationText:"Rotation",pointGraphics:null,colorManager:null,external:null,layout:"form",initComponent:function(){if(!this.symbolizer){this.symbolizer={}}if(!this.pointGraphics){this.pointGraphics=[{display:this.graphicXText,display:"Airport",value:"https://geonode.wfp.org/uploaded/geoserver_icons/Global_Layers/Airport.png",mark:false},{display:this.graphicXText,display:"Beneficiary",value:"https://geonode.wfp.org/uploaded/geoserver_icons/standard/WFP_Corporate_Icons/Beneficiaries_neg.png",mark:false},{display:this.graphicXText,display:"Bridge",value:"https://geonode.wfp.org/uploaded/geoserver_icons/standard/Transport_Logistics_Cluster/Bridge.png",mark:false},{display:this.graphicXText,display:"Conflict",value:"https://geonode.wfp.org/uploaded/geoserver_icons/standard/WFP_Corporate_Icons/Conflict_neg.png",mark:false},{display:this.graphicXText,display:"Earthquake",value:"https://geonode.wfp.org/uploaded/geoserver_icons/standard/Emergency/earthquake.png",mark:false},{display:this.graphicXText,display:"Port",value:"https://geonode.wfp.org/uploaded/geoserver_icons/Global_Layers/Port.png",mark:false},{display:this.graphicXText,display:"Refugee Camp",value:"https://geonode.wfp.org/uploaded/geoserver_icons/Global_Layers/opweb_refugee_camp.png",mark:false},{display:this.graphicXText,display:"Warehouse",value:"https://geonode.wfp.org/uploaded/geoserver_icons/default_warehouses.png",mark:false},{display:this.graphicCircleText,value:"circle",mark:true},{display:this.graphicCrossText,value:"cross",mark:true},{display:this.graphicSquareText,value:"square",mark:true},{display:this.graphicStarText,value:"star",mark:true},{display:this.graphicTriangleText,value:"triangle",mark:true},{display:this.graphicXText,value:"x",mark:true},{display:this.graphicExternalText}]}this.external=!!this.symbolizer.externalGraphic;this.markPanel=new Ext.Panel({border:false,collapsed:this.external,layout:"form",items:[{xtype:"gxp_fillsymbolizer",symbolizer:this.symbolizer,labelWidth:this.labelWidth,labelAlign:this.labelAlign,colorManager:this.colorManager,listeners:{change:function(symbolizer){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,labelWidth:this.labelWidth,labelAlign:this.labelAlign,colorManager:this.colorManager,listeners:{change:function(symbolizer){this.fireEvent("change",this.symbolizer)},scope:this}}]});this.urlField=new Ext.form.TextField({name:"url",fieldLabel:this.urlText,value:this.symbolizer.externalGraphic,hidden:!this.external,listeners:{change:function(field,value){this.symbolizer.externalGraphic=value;this.fireEvent("change",this.symbolizer)},scope:this},width:100});this.graphicPanel=new Ext.Panel({border:false,collapsed:!this.external,layout:"form",items:[this.urlField,{xtype:"slider",name:"opacity",fieldLabel:this.opacityText,value:[(this.symbolizer.graphicOpacity==null)?100:this.symbolizer.graphicOpacity*100],isFormField:true,listeners:{changecomplete:function(slider,value){this.symbolizer.graphicOpacity=value/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(thumb){return thumb.value+"%"}})],width:100}]});this.items=[{xtype:"combo",name:"mark",fieldLabel:this.symbolText,store:new Ext.data.JsonStore({data:{root:this.pointGraphics},root:"root",fields:["value","display","preview",{name:"mark",type:"boolean"}]}),value:this.external?0:this.symbolizer.graphicName,displayField:"display",valueField:"value",tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item gx-pointsymbolizer-mark-item"><tpl if="preview"><img src="{preview}" alt="{display}"/></tpl><span>{display}</span></div></tpl>'),mode:"local",allowBlank:false,triggerAction:"all",editable:false,listeners:{select:function(combo,record){var mark=record.get("mark");var value=record.get("value");if(!mark){if(value){this.urlField.hide();this.symbolizer.externalGraphic=value}else{this.urlField.show()}if(!this.external){this.external=true;var urlValue=this.urlField.getValue();if(!Ext.isEmpty(urlValue)){this.symbolizer.externalGraphic=urlValue}delete this.symbolizer.graphicName;this.updateGraphicDisplay()}}else{if(this.external){this.external=false;delete this.symbolizer.externalGraphic;this.updateGraphicDisplay()}this.symbolizer.graphicName=value}this.fireEvent("change",this.symbolizer)},scope:this},width:100},{xtype:"textfield",name:"size",fieldLabel:this.sizeText,value:this.symbolizer.pointRadius&&this.symbolizer.pointRadius*2,listeners:{change:function(field,value){this.symbolizer.pointRadius=value/2;this.fireEvent("change",this.symbolizer)},scope:this},width:100},{xtype:"textfield",name:"rotation",fieldLabel:this.rotationText,value:this.symbolizer.rotation,listeners:{change:function(field,value){this.symbolizer.rotation=value;this.fireEvent("change",this.symbolizer)},scope:this},width:100},this.markPanel,this.graphicPanel];this.addEvents("change");gxp.PointSymbolizer.superclass.initComponent.call(this)},updateGraphicDisplay:function(){if(this.external){this.markPanel.collapse();this.graphicPanel.expand()}else{this.graphicPanel.collapse();this.markPanel.expand()}}});Ext.reg("gxp_pointsymbolizer",gxp.PointSymbolizer);OpenLayers.Control.ScaleLine=OpenLayers.Class(OpenLayers.Control,{maxWidth:100,topOutUnits:"km",topInUnits:"m",bottomOutUnits:"mi",bottomInUnits:"ft",eTop:null,eBottom:null,geodesic:false,draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);if(!this.eTop){this.eTop=document.createElement("div");this.eTop.className=this.displayClass+"Top";var theLen=this.topInUnits.length;this.div.appendChild(this.eTop);if((this.topOutUnits=="")||(this.topInUnits=="")){this.eTop.style.visibility="hidden"}else{this.eTop.style.visibility="visible"}this.eBottom=document.createElement("div");this.eBottom.className=this.displayClass+"Bottom";this.div.appendChild(this.eBottom);if((this.bottomOutUnits=="")||(this.bottomInUnits=="")){this.eBottom.style.visibility="hidden"}else{this.eBottom.style.visibility="visible"}}this.map.events.register("moveend",this,this.update);this.update();return this.div},getBarLen:function(maxLen){var digits=parseInt(Math.log(maxLen)/Math.log(10));var pow10=Math.pow(10,digits);var firstChar=parseInt(maxLen/pow10);var barLen;if(firstChar>5){barLen=5}else{if(firstChar>2){barLen=2}else{barLen=1}}return barLen*pow10},update:function(){var res=this.map.getResolution();if(!res){return}var curMapUnits=this.map.getUnits();var inches=OpenLayers.INCHES_PER_UNIT;var maxSizeData=this.maxWidth*res*inches[curMapUnits];var geodesicRatio=1;if(this.geodesic===true){var maxSizeGeodesic=(this.map.getGeodesicPixelSize().w||0.000001)*this.maxWidth;var maxSizeKilometers=maxSizeData/inches.km;geodesicRatio=maxSizeGeodesic/maxSizeKilometers;maxSizeData*=geodesicRatio}var topUnits;var bottomUnits;if(maxSizeData>100000){topUnits=this.topOutUnits;bottomUnits=this.bottomOutUnits}else{topUnits=this.topInUnits;bottomUnits=this.bottomInUnits}var topMax=maxSizeData/inches[topUnits];var bottomMax=maxSizeData/inches[bottomUnits];var topRounded=this.getBarLen(topMax);var bottomRounded=this.getBarLen(bottomMax);topMax=topRounded/inches[curMapUnits]*inches[topUnits];bottomMax=bottomRounded/inches[curMapUnits]*inches[bottomUnits];var topPx=topMax/res/geodesicRatio;var bottomPx=bottomMax/res/geodesicRatio;if(this.eBottom.style.visibility=="visible"){this.eBottom.style.width=Math.round(bottomPx)+"px";this.eBottom.innerHTML=bottomRounded+" "+bottomUnits}if(this.eTop.style.visibility=="visible"){this.eTop.style.width=Math.round(topPx)+"px";this.eTop.innerHTML=topRounded+" "+topUnits}},CLASS_NAME:"OpenLayers.Control.ScaleLine"});Ext.namespace("gxp");gxp.ScaleOverlay=Ext.extend(Ext.Panel,{map:null,zoomLevelText:"Zoom level",initComponent:function(){gxp.ScaleOverlay.superclass.initComponent.call(this);this.cls="map-overlay";if(this.map){if(this.map instanceof GeoExt.MapPanel){this.map=this.map.map}this.bind(this.map)}this.on("beforedestroy",this.unbind,this)},addToMapPanel:function(panel){this.on({afterrender:function(){this.bind(panel.map)},scope:this})},stopMouseEvents:function(e){e.stopEvent()},removeFromMapPanel:function(panel){var el=this.getEl();el.un("mousedown",this.stopMouseEvents,this);el.un("click",this.stopMouseEvents,this);this.unbind()},addScaleLine:function(){var scaleLinePanel=new Ext.BoxComponent({autoEl:{tag:"div",cls:"olControlScaleLine overlay-element overlay-scaleline"}});this.on("afterlayout",function(){scaleLinePanel.getEl().dom.style.position="relative";scaleLinePanel.getEl().dom.style.display="inline";this.getEl().on("click",this.stopMouseEvents,this);this.getEl().on("mousedown",this.stopMouseEvents,this)},this);scaleLinePanel.on("render",function(){var scaleLine=new OpenLayers.Control.ScaleLine({geodesic:true,div:scaleLinePanel.getEl().dom});this.map.addControl(scaleLine);scaleLine.activate()},this);this.add(scaleLinePanel)},handleZoomEnd:function(){var scale=this.zoomStore.queryBy(function(record){return this.map.getZoom()==record.data.level},this);if(scale.length>0){scale=scale.items[0];this.zoomSelector.setValue("1 : "+parseInt(scale.data.scale,10))}else{if(!this.zoomSelector.rendered){return}this.zoomSelector.clearValue()}},addScaleCombo:function(){this.zoomStore=new GeoExt.data.ScaleStore({map:this.map});this.zoomSelector=new Ext.form.ComboBox({emptyText:this.zoomLevelText,tpl:'<tpl for="."><div class="x-combo-list-item">1 : {[parseInt(values.scale)]}</div></tpl>',editable:false,triggerAction:"all",mode:"local",store:this.zoomStore,width:110});this.zoomSelector.on({click:this.stopMouseEvents,mousedown:this.stopMouseEvents,select:function(combo,record,index){this.map.zoomTo(record.data.level)},scope:this});this.map.events.register("zoomend",this,this.handleZoomEnd);var zoomSelectorWrapper=new Ext.Panel({items:[this.zoomSelector],cls:"overlay-element overlay-scalechooser",border:false});this.add(zoomSelectorWrapper)},bind:function(map){this.map=map;this.addScaleLine();this.addScaleCombo();this.doLayout()},unbind:function(){if(this.map&&this.map.events){this.map.events.unregister("zoomend",this,this.handleZoomEnd)}this.zoomStore=null;this.zoomSelector=null}});Ext.reg("gxp_scaleoverlay",gxp.ScaleOverlay);Ext.namespace("gxp.plugins");gxp.plugins.Tool=Ext.extend(Ext.util.Observable,{ptype:"gxp_tool",autoActivate:true,actionTarget:"map.tbar",showButtonText:false,output:null,constructor:function(config){this.initialConfig=config||{};this.active=false;Ext.apply(this,config);if(!this.id){this.id=Ext.id()}this.output=[];this.addEvents("activate","deactivate");gxp.plugins.Tool.superclass.constructor.apply(this,arguments)},init:function(target){target.tools[this.id]=this;this.target=target;this.autoActivate&&this.activate();this.target.on("portalready",this.addActions,this)},activate:function(){if(this.active===false){this.active=true;this.fireEvent("activate",this);return true}},deactivate:function(){if(this.active===true){this.active=false;this.fireEvent("deactivate",this);return true}},getContainer:function(target){var ct,item,meth,parts=target.split("."),ref=parts[0];if(ref){if(ref=="map"){ct=this.target.mapPanel}else{ct=Ext.getCmp(ref)||this.target.portal[ref];if(!ct){throw new Error("Can't find component with id: "+ref)}}}else{ct=this.target.portal}item=parts.length>1&&parts[1];if(item){meth={tbar:"getTopToolbar",bbar:"getBottomToolbar",fbar:"getFooterToolbar"}[item];if(meth){ct=ct[meth]()}else{ct=ct[item]}}return ct},addActions:function(actions){actions=actions||this.actions;if(!actions||this.actionTarget===null){this.removeOutput();this.addOutput(this.outputConfig);return}var actionTargets=this.actionTarget instanceof Array?this.actionTarget:[this.actionTarget];var a=actions instanceof Array?actions:[actions];var action,actionTarget,cmp,i,j,jj,ct,index=null;for(i=actionTargets.length-1;i>=0;--i){actionTarget=actionTargets[i];if(actionTarget){if(actionTarget instanceof Object){index=actionTarget.index;actionTarget=actionTarget.target}ct=this.getContainer(actionTarget)}for(j=0,jj=a.length;j<jj;++j){if(!(a[j] instanceof Ext.Action||a[j] instanceof Ext.Component)){cmp=Ext.getCmp(a[j]);if(cmp){a[j]=cmp}if(typeof a[j]!="string"){if(j==this.defaultAction){a[j].pressed=true}a[j]=new Ext.Action(a[j])}}action=a[j];if(j==this.defaultAction&&action instanceof GeoExt.Action){action.isDisabled()?action.activateOnEnable=true:action.control.activate()}if(ct){if(this.showButtonText){action.setText(action.initialConfig.buttonText)}if(ct instanceof Ext.menu.Menu){action=Ext.apply(new Ext.menu.CheckItem(action),{text:action.initialConfig.menuText,group:action.initialConfig.toggleGroup,groupClass:null})}else{if(!(ct instanceof Ext.Toolbar)){action=new Ext.Button(action)}}var addedAction=(index===null)?ct.add(action):ct.insert(index,action);action=action instanceof Ext.Button?action:addedAction;if(index!==null){index+=1}if(this.outputAction!=null&&j==this.outputAction){var cmp;action.on("click",function(){if(cmp){this.outputTarget?cmp.show():cmp.ownerCt.ownerCt.show()}else{cmp=this.addOutput()}},this)}}}if(ct){ct.isVisible()?ct.doLayout():ct instanceof Ext.menu.Menu||ct.show()}}this.actions=a;return this.actions},addOutput:function(config){if(!config&&!this.outputConfig){return}config=config||{};var ref=this.outputTarget;var container;if(ref){container=this.getContainer(ref);if(!(config instanceof Ext.Component)){Ext.apply(config,this.outputConfig)}}else{var outputConfig=this.outputConfig||{};container=new Ext.Window(Ext.apply({hideBorders:true,shadow:false,closeAction:"hide",autoHeight:!outputConfig.height,layout:outputConfig.height?"fit":undefined,items:[{defaults:Ext.applyIf({autoHeight:!outputConfig.height&&!(outputConfig.defaults&&outputConfig.defaults.height)},outputConfig.defaults)}]},outputConfig)).show().items.get(0)}if(container){var component=container.add(config);component.on("removed",function(cmp){this.output.remove(cmp)},this,{single:true});if(component instanceof Ext.Window){component.show()}else{container.doLayout()}this.output.push(component);return component}else{var ptype=this.ptype;if(window.console){console.error("Failed to create output for plugin with ptype: "+ptype)}}},removeOutput:function(){var cmp;for(var i=this.output.length-1;i>=0;--i){cmp=this.output[i];if(!this.outputTarget){cmp.findParentBy(function(p){return p instanceof Ext.Window}).close()}else{if(cmp.ownerCt){cmp.ownerCt.remove(cmp);if(cmp.ownerCt instanceof Ext.Window){cmp.ownerCt[cmp.ownerCt.closeAction]()}}else{cmp.remove()}}}this.output=[]},getState:function(){return Ext.apply({},this.initialConfig)}});Ext.preg(gxp.plugins.Tool.prototype.ptype,gxp.plugins.Tool);Ext.namespace("gxp.data");gxp.data.WFSProtocolProxy=Ext.extend(GeoExt.data.ProtocolProxy,{setFilter:function(filter){this.protocol.filter=filter;this.protocol.options.filter=filter},constructor:function(config){Ext.applyIf(config,{version:"1.1.0"});if(!(this.protocol&&this.protocol instanceof OpenLayers.Protocol)){config.protocol=new OpenLayers.Protocol.WFS(Ext.apply({version:config.version,srsName:config.srsName,url:config.url,featureType:config.featureType,featureNS:config.featureNS,geometryName:config.geometryName,schema:config.schema,filter:config.filter,maxFeatures:config.maxFeatures,multi:config.multi},config.protocol))}gxp.data.WFSProtocolProxy.superclass.constructor.apply(this,arguments)},doRequest:function(action,records,params,reader,callback,scope,arg){delete params.xaction;if(action===Ext.data.Api.actions.read){this.load(params,reader,callback,scope,arg)}else{if(!(records instanceof Array)){records=[records]}var features=new Array(records.length),feature;Ext.each(records,function(r,i){features[i]=r.getFeature();feature=features[i];feature.modified=Ext.apply(feature.modified||{},{attributes:Ext.apply((feature.modified&&feature.modified.attributes)||{},r.modified)})},this);var o={action:action,records:records,callback:callback,scope:scope};var options={callback:function(response){this.onProtocolCommit(response,o)},scope:this};Ext.applyIf(options,params);this.protocol.commit(features,options)}},onProtocolCommit:function(response,o){if(response.success()){var features=response.reqFeatures;var state,feature;var destroys=[];var insertIds=response.insertIds||[];var i,len,j=0;for(i=0,len=features.length;i<len;++i){feature=features[i];state=feature.state;if(state){if(state==OpenLayers.State.DELETE){destroys.push(feature)}else{if(state==OpenLayers.State.INSERT){feature.fid=insertIds[j];++j}else{if(feature.modified){feature.modified={}}}}feature.state=null}}for(i=0,len=destroys.length;i<len;++i){feature=destroys[i];feature.layer&&feature.layer.destroyFeatures([feature])}len=features.length;var data=new Array(len);var f;for(i=0;i<len;++i){f=features[i];data[i]={id:f.id,feature:f,state:null};var fields=o.records[i].fields;for(var a in f.attributes){if(fields.containsKey(a)){data[i][a]=f.attributes[a]}}}o.callback.call(o.scope,data,response.priv,true)}else{var request=response.priv;if(request.status>=200&&request.status<300){this.fireEvent("exception",this,"remote",o.action,o,response.error,o.records)}else{this.fireEvent("exception",this,"response",o.action,o,request)}o.callback.call(o.scope,[],request,false)}}});Ext.namespace("gxp.data");gxp.data.WFSFeatureStore=Ext.extend(GeoExt.data.FeatureStore,{setOgcFilter:function(ogcFilter){this.proxy.setFilter(ogcFilter)},constructor:function(config){if(!(config.proxy&&config.proxy instanceof GeoExt.data.ProtocolProxy)){config.proxy=new gxp.data.WFSProtocolProxy(Ext.apply({srsName:config.srsName,url:config.url,featureType:config.featureType,featureNS:config.featureNS,geometryName:config.geometryName,schema:config.schema,filter:config.ogcFilter,maxFeatures:config.maxFeatures,multi:config.multi},config.proxy))}if(!config.writer){config.writer=new Ext.data.DataWriter({write:Ext.emptyFn})}gxp.data.WFSFeatureStore.superclass.constructor.apply(this,arguments);this.reader.extractValues=(function(data,items,length){var obj=this.readRecords([data.feature]);return obj.records[0].data}).createDelegate(this.reader);this.reader.meta.idProperty="id";this.reader.getId=function(data){return data.id}}});Ext.namespace("gxp.plugins");gxp.plugins.FeatureManager=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_featuremanager",maxFeatures:100,paging:true,pagingType:null,autoZoomPage:false,autoSetLayer:true,autoLoadFeatures:false,layerRecord:null,featureStore:null,hitCountProtocol:null,featureLayer:null,schema:null,geometryType:null,toolsShowingLayer:null,selectStyle:null,style:null,pages:null,page:null,numberOfFeatures:null,numPages:null,pageIndex:null,constructor:function(config){this.addEvents("beforequery","query","beforelayerchange","layerchange","beforesetpage","setpage","beforeclearfeatures","clearfeatures","beforesave","exception");if(config&&!config.pagingType){this.pagingType=gxp.plugins.FeatureManager.QUADTREE_PAGING}if(config&&config.layer){this.autoSetLayer=false}gxp.plugins.FeatureManager.superclass.constructor.apply(this,arguments)},init:function(target){gxp.plugins.FeatureManager.superclass.init.apply(this,arguments);this.toolsShowingLayer={};this.style={all:new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:this.initialConfig.symbolizer||{Point:{pointRadius:4,graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:4,strokeOpacity:1,strokeColor:"#ff9933"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#ff6633",fillColor:"white",fillOpacity:0.3}}})]}),selected:new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{display:"none"}})]})};this.featureLayer=new OpenLayers.Layer.Vector(this.id,{displayInLayerSwitcher:false,visibility:false,styleMap:new OpenLayers.StyleMap({select:Ext.applyIf(Ext.apply({display:""},this.selectStyle),OpenLayers.Feature.Vector.style.select),vertex:this.style.all},{extendDefault:false})});this.target.on({ready:function(){this.target.mapPanel.map.addLayer(this.featureLayer)},scope:this});this.on({beforedestroy:function(){this.target.mapPanel.map.removeLayer(this.featureLayer)},scope:this})},activate:function(){if(gxp.plugins.FeatureManager.superclass.activate.apply(this,arguments)){if(this.autoSetLayer){this.target.on("beforelayerselectionchange",this.setLayer,this)}if(this.layer){var config=Ext.apply({},this.layer);this.target.createLayerRecord(config,this.setLayer,this)}this.on("layerchange",this.setSchema,this);return true}},deactivate:function(){if(gxp.plugins.FeatureManager.superclass.deactivate.apply(this,arguments)){if(this.autoSetLayer){this.target.un("beforelayerselectionchange",this.setLayer,this)}this.un("layerchange",this.setSchema,this);this.setLayer();return true}},getPageExtent:function(){if(this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING){return this.page.extent}else{return this.featureStore.layer.getDataExtent()}},setLayer:function(layerRecord){var change=this.fireEvent("beforelayerchange",this,layerRecord);if(change!==false){if(layerRecord){this.featureLayer.projection=layerRecord.getLayer().projection}if(layerRecord!==this.layerRecord){this.clearFeatureStore();this.layerRecord=layerRecord;if(layerRecord){this.autoLoadFeatures===true?this.loadFeatures():this.setFeatureStore()}else{this.fireEvent("layerchange",this,null)}}}return change},setSchema:function(mgr,layer,schema){this.schema=schema},showLayer:function(id,display){this.toolsShowingLayer[id]=display||"all";this.setLayerDisplay()},hideLayer:function(id){delete this.toolsShowingLayer[id];this.setLayerDisplay()},setLayerDisplay:function(){var show=this.visible();var map=this.target.mapPanel.map;if(show){var style=this.style[show];if(style!==this.featureLayer.styleMap.styles["default"]){this.featureLayer.styleMap.styles["default"]=style;this.featureLayer.redraw()}this.featureLayer.setVisibility(true);map.events.on({addlayer:this.raiseLayer,scope:this})}else{if(this.featureLayer.map){this.featureLayer.setVisibility(false);map.events.un({addlayer:this.raiseLayer,scope:this})}}},visible:function(){var show=false;for(var i in this.toolsShowingLayer){if(show!="all"){show=this.toolsShowingLayer[i]}}return show},raiseLayer:function(){var map=this.featureLayer&&this.featureLayer.map;if(map){map.setLayerIndex(this.featureLayer,map.layers.length)}},loadFeatures:function(filter,callback,scope){if(this.fireEvent("beforequery",this,filter,callback,scope)!==false){this.filter=filter;this.pages=null;if(callback){var me=this;me._activeQuery&&me.un("query",me._activeQuery);this.on("query",me._activeQuery=function(tool,store){delete me._activeQuery;this.un("query",arguments.callee,this);var len=store.getCount();if(store.getCount()==0){callback.call(scope,[])}else{this.featureLayer.events.register("featuresadded",this,function(evt){this.featureLayer.events.unregister("featuresadded",this,arguments.callee);callback.call(scope,evt.features)})}},this,{single:true})}if(!this.featureStore){this.paging&&this.on("layerchange",function(tool,rec,schema){if(schema){this.un("layerchange",arguments.callee,this);this.setPage()}},this);this.setFeatureStore(filter,!this.paging)}else{this.featureStore.setOgcFilter(filter);if(this.paging){this.setPage()}else{this.featureStore.load()}}}},clearFeatures:function(){var store=this.featureStore;if(store){if(this.fireEvent("beforeclearfeatures",this)!==false){store.removeAll();this.fireEvent("clearfeatures",this);var proxy=store.proxy;proxy.abortRequest();if(proxy.protocol.response){proxy.protocol.response.abort()}}}},getProjection:function(record){var projection=this.target.mapPanel.map.getProjectionObject();var layerProj=record.getLayer().projection;if(layerProj&&layerProj.equals(projection)){projection=layerProj}return projection},setFeatureStore:function(filter,autoLoad){var record=this.layerRecord;var source=this.target.getSource(record);if(source&&source instanceof gxp.plugins.WMSSource){source.getSchema(record,function(schema){if(schema===false){this.clearFeatureStore()}else{var fields=[],geometryName;var geomRegex=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;var types={"xsd:boolean":"boolean","xsd:int":"int","xsd:integer":"int","xsd:short":"int","xsd:long":"int","xsd:date":"date","xsd:string":"string","xsd:float":"float","xsd:double":"float"};schema.each(function(r){var match=geomRegex.exec(r.get("type"));if(match){geometryName=r.get("name");this.geometryType=match[1]}else{var type=types[r.get("type")];var field={name:r.get("name"),type:types[type]};if(type=="date"){field.dateFormat="Y-m-d\\Z"}fields.push(field)}},this);var protocolOptions={srsName:this.getProjection(record).getCode(),url:schema.url,featureType:schema.reader.raw.featureTypes[0].typeName,featureNS:schema.reader.raw.targetNamespace,geometryName:geometryName};this.hitCountProtocol=new OpenLayers.Protocol.WFS(Ext.apply({version:"1.1.0",readOptions:{output:"object"},resultType:"hits",filter:filter},protocolOptions));this.featureStore=new gxp.data.WFSFeatureStore(Ext.apply({fields:fields,proxy:{protocol:{outputFormat:this.format,multi:this.multi}},maxFeatures:this.maxFeatures,layer:this.featureLayer,ogcFilter:filter,autoLoad:autoLoad,autoSave:false,listeners:{beforewrite:function(store,action,rs,options){this.fireEvent("beforesave",this,store,options.params)},write:function(store,action,result,res,rs){this.redrawMatchingLayers(record)},load:function(store,rs,options){this.fireEvent("query",this,store,this.filter)},scope:this}},protocolOptions))}this.fireEvent("layerchange",this,record,schema)},this)}else{this.clearFeatureStore();this.fireEvent("layerchange",this,record,false)}},redrawMatchingLayers:function(record){var name=record.get("name");var source=record.get("source");this.target.mapPanel.layers.each(function(candidate){if(candidate.get("source")===source&&candidate.get("name")===name){candidate.getLayer().redraw(true)}})},clearFeatureStore:function(){if(this.featureStore){this.featureStore.removeAll();this.featureStore.unbind();this.featureStore.destroy();this.numberOfFeatures=null;this.featureStore=null;this.geometryType=null}},processPage:function(page,condition,callback,scope){condition=condition||{};var index=condition.lonLat?null:condition.index;var next=condition.next;var pages=this.pages;var i=this.pages.indexOf(page);this.setPageFilter(page);var nextOk=next?i==(pages.indexOf(next)||pages.length)-1:true;var lonLatOk=condition.lonLat?page.extent.containsLonLat(condition.lonLat):true;if(lonLatOk&&page.numFeatures&&page.numFeatures<=this.maxFeatures){callback.call(this,page)}else{if(lonLatOk&&(i==index||nextOk)){this.hitCountProtocol.read({callback:function(response){var i=index,lonLat=condition.lonLat;if(next){i=(pages.indexOf(next)||pages.length)-1}if(!i&&lonLat&&page.extent.containsLonLat(lonLat)){i=pages.indexOf(page)}page.numFeatures=response.numberOfFeatures;if(this.page){return}if(page.numFeatures>this.maxFeatures){this.createLeaf(page,Ext.applyIf({index:i,next:next},condition),callback,scope)}else{if(page.numFeatures==0&&pages.length>1){pages.remove(page);condition.allowEmpty===false&&this.setPage({index:index%this.pages.length,allowEmpty:false})}else{if(this.pages.indexOf(page)==i){callback.call(this,page)}}}},scope:this})}}},createLeaf:function(page,condition,callback,scope){condition=condition||{};var layer=this.layerRecord.getLayer();var pageIndex=this.pages.indexOf(page);this.pages.remove(page);var extent=page.extent;var center=extent.getCenterLonLat();var l=[extent.left,center.lon,extent.left,center.lon];var b=[center.lat,center.lat,extent.bottom,extent.bottom];var r=[center.lon,extent.right,center.lon,extent.right];var t=[extent.top,extent.top,center.lat,center.lat];var i,leaf;for(i=3;i>=0;--i){leaf={extent:new OpenLayers.Bounds(l[i],b[i],r[i],t[i])};this.pages.splice(pageIndex,0,leaf);this.processPage(leaf,condition,callback,scope)}},getPagingExtent:function(meth){var layer=this.layerRecord.getLayer();var filter=this.getSpatialFilter();var extent=filter?filter.value:this.target.mapPanel.map[meth]();if(extent&&layer.maxExtent){if(extent.containsBounds(layer.maxExtent)){extent=layer.maxExtent}}return extent},getSpatialFilter:function(){var filter;if(this.filter instanceof OpenLayers.Filter.Spatial&&this.filter.type===OpenLayers.Filter.Spatial.BBOX){filter=this.filter}else{if(this.filter instanceof OpenLayers.Filter.Logical&&this.filter.type===OpenLayers.Filter.Logical.AND){for(var f,i=this.filter.filters.length-1;i>=0;--i){f=this.filter.filters[i];if(f instanceof OpenLayers.Filter.Spatial&&f.type===OpenLayers.Filter.Spatial.BBOX){filter=f;break}}}}return filter},setPageFilter:function(page){var filter;if(page.extent){var bboxFilter=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:this.featureStore.geometryName,value:page.extent});filter=this.filter?new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[this.filter,bboxFilter]}):bboxFilter}else{filter=this.filter}this.featureStore.setOgcFilter(filter);this.hitCountProtocol.filter=filter;this.hitCountProtocol.options.filter=filter;return filter},nextPage:function(callback,scope){var index;if(this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING){var page=this.page;this.page=null;index=(this.pages.indexOf(page)+1)%this.pages.length}else{index=this.pageIndex+1%this.numPages}this.setPage({index:index,allowEmpty:false},callback,scope)},previousPage:function(callback,scope){var index;if(this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING){index=this.pages.indexOf(this.page)-1;if(index<0){index=this.pages.length-1}}else{index=this.pageIndex-1;if(index<0){index=this.numPages-1}}this.setPage({index:index,allowEmpty:false,next:this.page},callback)},setPage:function(condition,callback,scope){if(this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING){if(this.filter instanceof OpenLayers.Filter.FeatureId){this.featureStore.load({callback:function(){callback&&callback.call(scope)}});return}if(this.fireEvent("beforesetpage",this,condition,callback,scope)!==false){if(!condition){var extent=this.getPagingExtent("getExtent");var lonLat=new OpenLayers.LonLat(extent.left,extent.top);var maxExtent=this.target.mapPanel.map.getMaxExtent();if(!maxExtent.containsLonLat(lonLat,true)){lonLat=new OpenLayers.LonLat(maxExtent.left,maxExtent.top)}condition={lonLat:lonLat,allowEmpty:false}}condition.index=condition.index||0;if(condition.index=="last"){condition.index=this.pages.length-1;condition.next=this.pages[0]}this.page=null;if(!this.pages){var layer=this.layerRecord.getLayer();var queryExtent=this.getPagingExtent("getMaxExtent");this.pages=[{extent:queryExtent}];condition.index=0}else{if(condition.lonLat){for(var i=this.pages.length-1;i>=0;--i){if(this.pages[i].extent.containsLonLat(condition.lonLat)){condition.index=i;break}}}}this.processPage(this.pages[condition.index],condition,function(page){var map=this.target.mapPanel.map;this.page=page;this.setPageFilter(page);if(this.autoZoomPage&&!map.getExtent().containsLonLat(page.extent.getCenterLonLat())){map.zoomToExtent(page.extent)}var pageIndex=this.pages.indexOf(this.page);this.fireEvent("setpage",this,condition,callback,scope,pageIndex,this.pages.length);this.featureStore.load({callback:function(){callback&&callback.call(scope,page)}})},this)}}else{if(this.fireEvent("beforesetpage",this,condition,callback,scope)!==false){if(!condition){this.hitCountProtocol.read({filter:this.filter,callback:function(response){this.numberOfFeatures=response.numberOfFeatures;this.numPages=Math.ceil(this.numberOfFeatures/this.maxFeatures);this.pageIndex=0;this.fireEvent("setpage",this,condition,callback,scope,this.pageIndex,this.numPages);this.featureStore.load({output:"object",callback:function(){callback&&callback.call(scope)}})},scope:this})}else{if(condition.index!=null){if(condition.index==="last"){this.pageIndex=this.numPages-1}else{if(condition.index==="first"){this.pageIndex=0}else{this.pageIndex=condition.index}}var startIndex=this.pageIndex*this.maxFeatures;this.fireEvent("setpage",this,condition,callback,scope,this.pageIndex,this.numPages);this.featureStore.load({startIndex:startIndex,callback:function(){callback&&callback.call(scope)}})}}}}}});gxp.plugins.FeatureManager.QUADTREE_PAGING=0;gxp.plugins.FeatureManager.WFS_PAGING=1;Ext.preg(gxp.plugins.FeatureManager.prototype.ptype,gxp.plugins.FeatureManager);OpenLayers.Handler.Feature=OpenLayers.Class(OpenLayers.Handler,{EVENTMAP:{click:{"in":"click",out:"clickout"},mousemove:{"in":"over",out:"out"},dblclick:{"in":"dblclick",out:null},mousedown:{"in":null,out:null},mouseup:{"in":null,out:null},touchstart:{"in":"click",out:"clickout"}},feature:null,lastFeature:null,down:null,up:null,clickTolerance:4,geometryTypes:null,stopClick:true,stopDown:true,stopUp:false,initialize:function(control,layer,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,[control,callbacks,options]);this.layer=layer},touchstart:function(evt){this.startTouch();return OpenLayers.Event.isMultiTouch(evt)?true:this.mousedown(evt)},touchmove:function(evt){OpenLayers.Event.preventDefault(evt)},mousedown:function(evt){if(OpenLayers.Event.isLeftClick(evt)||OpenLayers.Event.isSingleTouch(evt)){this.down=evt.xy}return this.handle(evt)?!this.stopDown:true},mouseup:function(evt){this.up=evt.xy;return this.handle(evt)?!this.stopUp:true},click:function(evt){return this.handle(evt)?!this.stopClick:true},mousemove:function(evt){if(!this.callbacks.over&&!this.callbacks.out){return true}this.handle(evt);return true},dblclick:function(evt){return !this.handle(evt)},geometryTypeMatches:function(feature){return this.geometryTypes==null||OpenLayers.Util.indexOf(this.geometryTypes,feature.geometry.CLASS_NAME)>-1},handle:function(evt){if(this.feature&&!this.feature.layer){this.feature=null}var type=evt.type;var handled=false;var previouslyIn=!!(this.feature);var click=(type=="click"||type=="dblclick"||type=="touchstart");this.feature=this.layer.getFeatureFromEvent(evt);if(this.feature&&!this.feature.layer){this.feature=null}if(this.lastFeature&&!this.lastFeature.layer){this.lastFeature=null}if(this.feature){if(type==="touchstart"){OpenLayers.Event.preventDefault(evt)}var inNew=(this.feature!=this.lastFeature);if(this.geometryTypeMatches(this.feature)){if(previouslyIn&&inNew){if(this.lastFeature){this.triggerCallback(type,"out",[this.lastFeature])}this.triggerCallback(type,"in",[this.feature])}else{if(!previouslyIn||click){this.triggerCallback(type,"in",[this.feature])}}this.lastFeature=this.feature;handled=true}else{if(this.lastFeature&&(previouslyIn&&inNew||click)){this.triggerCallback(type,"out",[this.lastFeature])}this.feature=null}}else{if(this.lastFeature&&(previouslyIn||click)){this.triggerCallback(type,"out",[this.lastFeature])}}return handled},triggerCallback:function(type,mode,args){var key=this.EVENTMAP[type][mode];if(key){if(type=="click"&&this.up&&this.down){var dpx=Math.sqrt(Math.pow(this.up.x-this.down.x,2)+Math.pow(this.up.y-this.down.y,2));if(dpx<=this.clickTolerance){this.callback(key,args)}this.up=this.down=null}else{this.callback(key,args)}}},activate:function(){var activated=false;if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.moveLayerToTop();this.map.events.on({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});activated=true}return activated},deactivate:function(){var deactivated=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.moveLayerBack();this.feature=null;this.lastFeature=null;this.down=null;this.up=null;this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});deactivated=true}return deactivated},handleMapEvents:function(evt){if(evt.type=="removelayer"||evt.property=="order"){this.moveLayerToTop()}},moveLayerToTop:function(){var index=Math.max(this.map.Z_INDEX_BASE.Feature-1,this.layer.getZIndex())+1;this.layer.setZIndex(index)},moveLayerBack:function(){var index=this.layer.getZIndex()-1;if(index>=this.map.Z_INDEX_BASE.Feature){this.layer.setZIndex(index)}else{this.map.setLayerZIndex(this.layer,this.map.getLayerIndex(this.layer))}},CLASS_NAME:"OpenLayers.Handler.Feature"});OpenLayers.Layer.Vector.RootContainer=OpenLayers.Class(OpenLayers.Layer.Vector,{displayInLayerSwitcher:false,layers:null,display:function(){},getFeatureFromEvent:function(evt){var layers=this.layers;var feature;for(var i=0;i<layers.length;i++){feature=layers[i].getFeatureFromEvent(evt);if(feature){return feature}}},setMap:function(map){OpenLayers.Layer.Vector.prototype.setMap.apply(this,arguments);this.collectRoots();map.events.register("changelayer",this,this.handleChangeLayer)},removeMap:function(map){map.events.unregister("changelayer",this,this.handleChangeLayer);this.resetRoots();OpenLayers.Layer.Vector.prototype.removeMap.apply(this,arguments)},collectRoots:function(){var layer;for(var i=0;i<this.map.layers.length;++i){layer=this.map.layers[i];if(OpenLayers.Util.indexOf(this.layers,layer)!=-1){layer.renderer.moveRoot(this.renderer)}}},resetRoots:function(){var layer;for(var i=0;i<this.layers.length;++i){layer=this.layers[i];if(this.renderer&&layer.renderer.getRenderLayerId()==this.id){this.renderer.moveRoot(layer.renderer)}}},handleChangeLayer:function(evt){var layer=evt.layer;if(evt.property=="order"&&OpenLayers.Util.indexOf(this.layers,layer)!=-1){this.resetRoots();this.collectRoots()}},CLASS_NAME:"OpenLayers.Layer.Vector.RootContainer"});OpenLayers.Control.SelectFeature=OpenLayers.Class(OpenLayers.Control,{multipleKey:null,toggleKey:null,multiple:false,clickout:true,toggle:false,hover:false,highlightOnly:false,box:false,onBeforeSelect:function(){},onSelect:function(){},onUnselect:function(){},scope:null,geometryTypes:null,layer:null,layers:null,callbacks:null,selectStyle:null,renderIntent:"select",handlers:null,initialize:function(layers,options){OpenLayers.Control.prototype.initialize.apply(this,[options]);if(this.scope===null){this.scope=this}this.initLayer(layers);var callbacks={click:this.clickFeature,clickout:this.clickoutFeature};if(this.hover){callbacks.over=this.overFeature;callbacks.out=this.outFeature}this.callbacks=OpenLayers.Util.extend(callbacks,this.callbacks);this.handlers={feature:new OpenLayers.Handler.Feature(this,this.layer,this.callbacks,{geometryTypes:this.geometryTypes})};if(this.box){this.handlers.box=new OpenLayers.Handler.Box(this,{done:this.selectBox},{boxDivClassName:"olHandlerBoxSelectFeature"})}},initLayer:function(layers){if(OpenLayers.Util.isArray(layers)){this.layers=layers;this.layer=new OpenLayers.Layer.Vector.RootContainer(this.id+"_container",{layers:layers})}else{this.layer=layers}},destroy:function(){if(this.active&&this.layers){this.map.removeLayer(this.layer)}OpenLayers.Control.prototype.destroy.apply(this,arguments);if(this.layers){this.layer.destroy()}},activate:function(){if(!this.active){if(this.layers){this.map.addLayer(this.layer)}this.handlers.feature.activate();if(this.box&&this.handlers.box){this.handlers.box.activate()}}return OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){if(this.active){this.handlers.feature.deactivate();if(this.handlers.box){this.handlers.box.deactivate()}if(this.layers){this.map.removeLayer(this.layer)}}return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},unselectAll:function(options){var layers=this.layers||[this.layer],layer,feature,l,numExcept;for(l=0;l<layers.length;++l){layer=layers[l];numExcept=0;if(layer.selectedFeatures!=null){while(layer.selectedFeatures.length>numExcept){feature=layer.selectedFeatures[numExcept];if(!options||options.except!=feature){this.unselect(feature)}else{++numExcept}}}}},clickFeature:function(feature){if(!this.hover){var selected=(OpenLayers.Util.indexOf(feature.layer.selectedFeatures,feature)>-1);if(selected){if(this.toggleSelect()){this.unselect(feature)}else{if(!this.multipleSelect()){this.unselectAll({except:feature})}}}else{if(!this.multipleSelect()){this.unselectAll({except:feature})}this.select(feature)}}},multipleSelect:function(){return this.multiple||(this.handlers.feature.evt&&this.handlers.feature.evt[this.multipleKey])},toggleSelect:function(){return this.toggle||(this.handlers.feature.evt&&this.handlers.feature.evt[this.toggleKey])},clickoutFeature:function(feature){if(!this.hover&&this.clickout){this.unselectAll()}},overFeature:function(feature){var layer=feature.layer;if(this.hover){if(this.highlightOnly){this.highlight(feature)}else{if(OpenLayers.Util.indexOf(layer.selectedFeatures,feature)==-1){this.select(feature)}}}},outFeature:function(feature){if(this.hover){if(this.highlightOnly){if(feature._lastHighlighter==this.id){if(feature._prevHighlighter&&feature._prevHighlighter!=this.id){delete feature._lastHighlighter;var control=this.map.getControl(feature._prevHighlighter);if(control){control.highlight(feature)}}else{this.unhighlight(feature)}}}else{this.unselect(feature)}}},highlight:function(feature){var layer=feature.layer;var cont=this.events.triggerEvent("beforefeaturehighlighted",{feature:feature});if(cont!==false){feature._prevHighlighter=feature._lastHighlighter;feature._lastHighlighter=this.id;var style=this.selectStyle||this.renderIntent;layer.drawFeature(feature,style);this.events.triggerEvent("featurehighlighted",{feature:feature})}},unhighlight:function(feature){var layer=feature.layer;if(feature._prevHighlighter==undefined){delete feature._lastHighlighter}else{if(feature._prevHighlighter==this.id){delete feature._prevHighlighter}else{feature._lastHighlighter=feature._prevHighlighter;delete feature._prevHighlighter}}layer.drawFeature(feature,feature.style||feature.layer.style||"default");this.events.triggerEvent("featureunhighlighted",{feature:feature})},select:function(feature){var cont=this.onBeforeSelect.call(this.scope,feature);var layer=feature.layer;if(cont!==false){cont=layer.events.triggerEvent("beforefeatureselected",{feature:feature});if(cont!==false){layer.selectedFeatures.push(feature);this.highlight(feature);if(!this.handlers.feature.lastFeature){this.handlers.feature.lastFeature=layer.selectedFeatures[0]}layer.events.triggerEvent("featureselected",{feature:feature});this.onSelect.call(this.scope,feature)}}},unselect:function(feature){var layer=feature.layer;this.unhighlight(feature);OpenLayers.Util.removeItem(layer.selectedFeatures,feature);layer.events.triggerEvent("featureunselected",{feature:feature});this.onUnselect.call(this.scope,feature)},selectBox:function(position){if(position instanceof OpenLayers.Bounds){var minXY=this.map.getLonLatFromPixel({x:position.left,y:position.bottom});var maxXY=this.map.getLonLatFromPixel({x:position.right,y:position.top});var bounds=new OpenLayers.Bounds(minXY.lon,minXY.lat,maxXY.lon,maxXY.lat);if(!this.multipleSelect()){this.unselectAll()}var prevMultiple=this.multiple;this.multiple=true;var layers=this.layers||[this.layer];this.events.triggerEvent("boxselectionstart",{layers:layers});var layer;for(var l=0;l<layers.length;++l){layer=layers[l];for(var i=0,len=layer.features.length;i<len;++i){var feature=layer.features[i];if(!feature.getVisibility()){continue}if(this.geometryTypes==null||OpenLayers.Util.indexOf(this.geometryTypes,feature.geometry.CLASS_NAME)>-1){if(bounds.toGeometry().intersects(feature.geometry)){if(OpenLayers.Util.indexOf(layer.selectedFeatures,feature)==-1){this.select(feature)}}}}}this.multiple=prevMultiple;this.events.triggerEvent("boxselectionend",{layers:layers})}},setMap:function(map){this.handlers.feature.setMap(map);if(this.box){this.handlers.box.setMap(map)}OpenLayers.Control.prototype.setMap.apply(this,arguments)},setLayer:function(layers){var isActive=this.active;this.unselectAll();this.deactivate();if(this.layers){this.layer.destroy();this.layers=null}this.initLayer(layers);this.handlers.feature.layer=this.layer;if(isActive){this.activate()}},CLASS_NAME:"OpenLayers.Control.SelectFeature"});OpenLayers.Format.WMSGetFeatureInfo=OpenLayers.Class(OpenLayers.Format.XML,{layerIdentifier:"_layer",featureIdentifier:"_feature",regExes:{trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g)},gmlFormat:null,read:function(data){var result;if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}var root=data.documentElement;if(root){var scope=this;var read=this["read_"+root.nodeName];if(read){result=read.call(this,root)}else{result=new OpenLayers.Format.GML((this.options?this.options:{})).read(data)}}else{result=data}return result},read_msGMLOutput:function(data){var response=[];var layerNodes=this.getSiblingNodesByTagCriteria(data,this.layerIdentifier);if(layerNodes){for(var i=0,len=layerNodes.length;i<len;++i){var node=layerNodes[i];var layerName=node.nodeName;if(node.prefix){layerName=layerName.split(":")[1]}var layerName=layerName.replace(this.layerIdentifier,"");var featureNodes=this.getSiblingNodesByTagCriteria(node,this.featureIdentifier);if(featureNodes){for(var j=0;j<featureNodes.length;j++){var featureNode=featureNodes[j];var geomInfo=this.parseGeometry(featureNode);var attributes=this.parseAttributes(featureNode);var feature=new OpenLayers.Feature.Vector(geomInfo.geometry,attributes,null);feature.bounds=geomInfo.bounds;feature.type=layerName;response.push(feature)}}}}return response},read_FeatureInfoResponse:function(data){var response=[];var featureNodes=this.getElementsByTagNameNS(data,"*","FIELDS");for(var i=0,len=featureNodes.length;i<len;i++){var featureNode=featureNodes[i];var geom=null;var attributes={};var j;var jlen=featureNode.attributes.length;if(jlen>0){for(j=0;j<jlen;j++){var attribute=featureNode.attributes[j];attributes[attribute.nodeName]=attribute.nodeValue}}else{var nodes=featureNode.childNodes;for(j=0,jlen=nodes.length;j<jlen;++j){var node=nodes[j];if(node.nodeType!=3){attributes[node.getAttribute("name")]=node.getAttribute("value")}}}response.push(new OpenLayers.Feature.Vector(geom,attributes,null))}return response},getSiblingNodesByTagCriteria:function(node,criteria){var nodes=[];var children,tagName,n,matchNodes,child;if(node&&node.hasChildNodes()){children=node.childNodes;n=children.length;for(var k=0;k<n;k++){child=children[k];while(child&&child.nodeType!=1){child=child.nextSibling;k++}tagName=(child?child.nodeName:"");if(tagName.length>0&&tagName.indexOf(criteria)>-1){nodes.push(child)}else{matchNodes=this.getSiblingNodesByTagCriteria(child,criteria);if(matchNodes.length>0){(nodes.length==0)?nodes=matchNodes:nodes.push(matchNodes)}}}}return nodes},parseAttributes:function(node){var attributes={};if(node.nodeType==1){var children=node.childNodes;var n=children.length;for(var i=0;i<n;++i){var child=children[i];if(child.nodeType==1){var grandchildren=child.childNodes;var name=(child.prefix)?child.nodeName.split(":")[1]:child.nodeName;if(grandchildren.length==0){attributes[name]=null}else{if(grandchildren.length==1){var grandchild=grandchildren[0];if(grandchild.nodeType==3||grandchild.nodeType==4){var value=grandchild.nodeValue.replace(this.regExes.trimSpace,"");attributes[name]=value}}}}}}return attributes},parseGeometry:function(node){if(!this.gmlFormat){this.gmlFormat=new OpenLayers.Format.GML()}var feature=this.gmlFormat.parseFeature(node);var geometry,bounds=null;if(feature){geometry=feature.geometry&&feature.geometry.clone();bounds=feature.bounds&&feature.bounds.clone();feature.destroy()}return{geometry:geometry,bounds:bounds}},CLASS_NAME:"OpenLayers.Format.WMSGetFeatureInfo"});Ext.namespace("gxp.plugins");gxp.plugins.ClickableFeatures=Ext.extend(gxp.plugins.Tool,{featureManager:null,autoLoadFeature:false,autoLoadedFeature:null,toleranceParameters:["BUFFER","RADIUS"],constructor:function(config){if(config&&"autoLoadFeatures" in config){config.autoLoadFeature=config.autoLoadFeatures;delete config.autoLoadFeatures;if(window.console){console.warn("Deprecated config option 'autoLoadFeatures' for ptype: '"+config.ptype+"'. Use 'autoLoadFeature' instead.")}}gxp.plugins.ClickableFeatures.superclass.constructor.apply(this,[config])},noFeatureClick:function(evt){if(!this.selectControl){this.selectControl=new OpenLayers.Control.SelectFeature(this.target.tools[this.featureManager].featureLayer,this.initialConfig.controlOptions)}var evtLL=this.target.mapPanel.map.getLonLatFromPixel(evt.xy);var featureManager=this.target.tools[this.featureManager];var page=featureManager.page;if(featureManager.visible()=="all"&&featureManager.paging&&page&&page.extent.containsLonLat(evtLL)){return}var layer=featureManager.layerRecord&&featureManager.layerRecord.getLayer();if(!layer){return}var map=this.target.mapPanel.map;var size=map.getSize();var params=Ext.applyIf({REQUEST:"GetFeatureInfo",BBOX:map.getExtent().toBBOX(),WIDTH:size.w,HEIGHT:size.h,X:parseInt(evt.xy.x),Y:parseInt(evt.xy.y),QUERY_LAYERS:layer.params.LAYERS,INFO_FORMAT:"application/vnd.ogc.gml",EXCEPTIONS:"application/vnd.ogc.se_xml",FEATURE_COUNT:1},layer.params);if(typeof this.tolerance==="number"){for(var i=0,ii=this.toleranceParameters.length;i<ii;++i){params[this.toleranceParameters[i]]=this.tolerance}}var projection=map.getProjectionObject();var layerProj=layer.projection;if(layerProj&&layerProj.equals(projection)){projection=layerProj}if(parseFloat(layer.params.VERSION)>=1.3){params.CRS=projection.getCode()}else{params.SRS=projection.getCode()}var store=new GeoExt.data.FeatureStore({fields:{},proxy:new GeoExt.data.ProtocolProxy({protocol:new OpenLayers.Protocol.HTTP({url:(typeof layer.url==="string")?layer.url:layer.url[0],params:params,format:new OpenLayers.Format.WMSGetFeatureInfo()})}),autoLoad:true,listeners:{load:function(store,records){if(records.length>0){var fid=records[0].get("fid");var filter=new OpenLayers.Filter.FeatureId({fids:[fid]});var autoLoad=function(){featureManager.loadFeatures(filter,function(features){if(features.length){this.autoLoadedFeature=features[0];this.select(features[0])}},this)}.createDelegate(this);var feature=featureManager.featureLayer.getFeatureByFid(fid);if(feature){this.select(feature)}else{if(featureManager.paging&&featureManager.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING){var lonLat=this.target.mapPanel.map.getLonLatFromPixel(evt.xy);featureManager.setPage({lonLat:lonLat},function(){var feature=featureManager.featureLayer.getFeatureByFid(fid);if(feature){this.select(feature)}else{if(this.autoLoadFeature===true){autoLoad()}}},this)}else{autoLoad()}}}},scope:this}})},select:function(feature){this.selectControl.unselectAll();this.selectControl.select(feature)}});Ext.namespace("gxp.plugins");gxp.plugins.SchemaAnnotations={getAnnotationsFromSchema:function(r){var result=null;var annotation=r.get("annotation");if(annotation!==undefined){result={};var lang=GeoExt.Lang.locale.split("-").shift();var i,ii;for(i=0,ii=annotation.appinfo.length;i<ii;++i){var json=Ext.decode(annotation.appinfo[i]);if(json.title&&json.title[lang]){result.label=json.title[lang];break}}for(i=0,ii=annotation.documentation.length;i<ii;++i){if(annotation.documentation[i].lang===lang){result.helpText=annotation.documentation[i].textContent;break}}}return result}};Ext.namespace("gxp.plugins");gxp.plugins.FeatureEditorGrid=Ext.extend(Ext.grid.PropertyGrid,{ptype:"gxp_editorgrid",xtype:"gxp_editorgrid",feature:null,schema:null,fields:null,excludeFields:null,propertyNames:null,readOnly:null,border:false,initComponent:function(){if(!this.dateFormat){this.dateFormat=Ext.form.DateField.prototype.format}if(!this.timeFormat){this.timeFormat=Ext.form.TimeField.prototype.format}this.customRenderers=this.customRenderers||{};this.customEditors=this.customEditors||{};var feature=this.feature,attributes;if(this.fields){attributes={};for(var i=0,ii=this.fields.length;i<ii;++i){attributes[this.fields[i]]=feature.attributes[this.fields[i]]}}else{attributes=feature.attributes}if(!this.excludeFields){this.excludeFields=[]}if(this.schema){var ucFields=this.fields?this.fields.join(",").toUpperCase().split(","):[];this.schema.each(function(r){var type=r.get("type");if(type.match(/^[^:]*:?((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry))/)){return}var name=r.get("name");if(this.fields){if(ucFields.indexOf(name.toUpperCase())==-1){this.excludeFields.push(name)}}var value=feature.attributes[name];var fieldCfg=GeoExt.form.recordToField(r);var annotations=this.getAnnotationsFromSchema(r);if(annotations&&annotations.label){this.propertyNames=this.propertyNames||{};this.propertyNames[name]=annotations.label}var listeners;if(typeof value=="string"){var format;switch(type.split(":").pop()){case"date":format=this.dateFormat;fieldCfg.editable=false;break;case"dateTime":if(!format){format=this.dateFormat+" "+this.timeFormat;fieldCfg.editable=true}fieldCfg.format=format;listeners={startedit:function(el,value){if(!(value instanceof Date)){var date=Date.parseDate(value.replace(/Z$/,""),"c");if(date){this.setValue(date)}}}};this.customRenderers[name]=(function(){return function(value){var date=value;if(typeof value=="string"){date=Date.parseDate(value.replace(/Z$/,""),"c")}return date?date.format(format):value}})();break;case"boolean":listeners={startedit:function(el,value){this.setValue(Boolean(value))}};break;default:break}}this.customEditors[name]=new Ext.grid.GridEditor({field:Ext.create(fieldCfg),listeners:listeners});attributes[name]=value},this);feature.attributes=attributes}this.source=attributes;var ucExcludeFields=this.excludeFields.length?this.excludeFields.join(",").toUpperCase().split(","):[];this.viewConfig={forceFit:true,getRowClass:function(record){if(ucExcludeFields.indexOf(record.get("name").toUpperCase())!==-1){return"x-hide-nosize"}}};this.listeners={beforeedit:function(){return this.featureEditor&&this.featureEditor.editing},propertychange:function(){if(this.featureEditor){this.featureEditor.setFeatureState(this.featureEditor.getDirtyState())}},scope:this};var origSort=Ext.data.Store.prototype.sort;Ext.data.Store.prototype.sort=function(){};gxp.plugins.FeatureEditorGrid.superclass.initComponent.apply(this,arguments);Ext.data.Store.prototype.sort=origSort;this.propStore.isEditableValue=function(){return true}},init:function(target){this.featureEditor=target;this.featureEditor.on("canceledit",this.onCancelEdit,this);this.featureEditor.add(this);this.featureEditor.doLayout()},destroy:function(){if(this.featureEditor){this.featureEditor.un("canceledit",this.onCancelEdit,this);this.featureEditor=null}gxp.plugins.FeatureEditorGrid.superclass.destroy.call(this)},onCancelEdit:function(panel,feature){if(feature){this.setSource(feature.attributes)}}});Ext.override(gxp.plugins.FeatureEditorGrid,gxp.plugins.SchemaAnnotations);Ext.preg(gxp.plugins.FeatureEditorGrid.prototype.ptype,gxp.plugins.FeatureEditorGrid);Ext.reg(gxp.plugins.FeatureEditorGrid.prototype.xtype,gxp.plugins.FeatureEditorGrid);OpenLayers.Handler.Keyboard=OpenLayers.Class(OpenLayers.Handler,{KEY_EVENTS:["keydown","keyup"],eventListener:null,observeElement:null,initialize:function(control,callbacks,options){OpenLayers.Handler.prototype.initialize.apply(this,arguments);this.eventListener=OpenLayers.Function.bindAsEventListener(this.handleKeyEvent,this)},destroy:function(){this.deactivate();this.eventListener=null;OpenLayers.Handler.prototype.destroy.apply(this,arguments)},activate:function(){if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.observeElement=this.observeElement||document;for(var i=0,len=this.KEY_EVENTS.length;i<len;i++){OpenLayers.Event.observe(this.observeElement,this.KEY_EVENTS[i],this.eventListener)}return true}else{return false}},deactivate:function(){var deactivated=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){for(var i=0,len=this.KEY_EVENTS.length;i<len;i++){OpenLayers.Event.stopObserving(this.observeElement,this.KEY_EVENTS[i],this.eventListener)}deactivated=true}return deactivated},handleKeyEvent:function(evt){if(this.checkModifiers(evt)){this.callback(evt.type,[evt])}},CLASS_NAME:"OpenLayers.Handler.Keyboard"});OpenLayers.Control.ModifyFeature=OpenLayers.Class(OpenLayers.Control,{documentDrag:false,geometryTypes:null,clickout:true,toggle:true,standalone:false,layer:null,feature:null,vertex:null,vertices:null,virtualVertices:null,handlers:null,deleteCodes:null,virtualStyle:null,vertexRenderIntent:null,mode:null,createVertices:true,modified:false,radiusHandle:null,dragHandle:null,onModificationStart:function(){},onModification:function(){},onModificationEnd:function(){},initialize:function(layer,options){options=options||{};this.layer=layer;this.vertices=[];this.virtualVertices=[];this.virtualStyle=OpenLayers.Util.extend({},this.layer.style||this.layer.styleMap.createSymbolizer(null,options.vertexRenderIntent));this.virtualStyle.fillOpacity=0.3;this.virtualStyle.strokeOpacity=0.3;this.deleteCodes=[46,68];this.mode=OpenLayers.Control.ModifyFeature.RESHAPE;OpenLayers.Control.prototype.initialize.apply(this,[options]);if(!(OpenLayers.Util.isArray(this.deleteCodes))){this.deleteCodes=[this.deleteCodes]}var dragCallbacks={down:function(pixel){this.vertex=null;var feature=this.layer.getFeatureFromEvent(this.handlers.drag.evt);if(feature){this.dragStart(feature)}else{if(this.clickout){this._unselect=this.feature}}},move:function(pixel){delete this._unselect;if(this.vertex){this.dragVertex(this.vertex,pixel)}},up:function(){this.handlers.drag.stopDown=false;if(this._unselect){this.unselectFeature(this._unselect);delete this._unselect}},done:function(pixel){if(this.vertex){this.dragComplete(this.vertex)}}};var dragOptions={documentDrag:this.documentDrag,stopDown:false};var keyboardOptions={keydown:this.handleKeypress};this.handlers={keyboard:new OpenLayers.Handler.Keyboard(this,keyboardOptions),drag:new OpenLayers.Handler.Drag(this,dragCallbacks,dragOptions)}},destroy:function(){if(this.map){this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this})}this.layer=null;OpenLayers.Control.prototype.destroy.apply(this,[])},activate:function(){if(OpenLayers.Control.prototype.activate.apply(this,arguments)){this.moveLayerToTop();this.map.events.on({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});return this.handlers.keyboard.activate()&&this.handlers.drag.activate()}return false},deactivate:function(){var deactivated=false;if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){this.moveLayerBack();this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});this.layer.removeFeatures(this.vertices,{silent:true});this.layer.removeFeatures(this.virtualVertices,{silent:true});this.vertices=[];this.handlers.drag.deactivate();this.handlers.keyboard.deactivate();var feature=this.feature;if(feature&&feature.geometry&&feature.layer){this.unselectFeature(feature)}deactivated=true}return deactivated},beforeSelectFeature:function(feature){return this.layer.events.triggerEvent("beforefeaturemodified",{feature:feature})},selectFeature:function(feature){if(this.feature===feature||(this.geometryTypes&&OpenLayers.Util.indexOf(this.geometryTypes,feature.geometry.CLASS_NAME)==-1)){return}if(this.beforeSelectFeature(feature)!==false){if(this.feature){this.unselectFeature(this.feature)}this.feature=feature;this.layer.selectedFeatures.push(feature);this.layer.drawFeature(feature,"select");this.modified=false;this.resetVertices();this.onModificationStart(this.feature)}var modified=feature.modified;if(feature.geometry&&!(modified&&modified.geometry)){this._originalGeometry=feature.geometry.clone()}},unselectFeature:function(feature){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];this.layer.destroyFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[];if(this.dragHandle){this.layer.destroyFeatures([this.dragHandle],{silent:true});delete this.dragHandle}if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});delete this.radiusHandle}this.layer.drawFeature(this.feature,"default");this.feature=null;OpenLayers.Util.removeItem(this.layer.selectedFeatures,feature);this.onModificationEnd(feature);this.layer.events.triggerEvent("afterfeaturemodified",{feature:feature,modified:this.modified});this.modified=false},dragStart:function(feature){var isPoint=feature.geometry.CLASS_NAME=="OpenLayers.Geometry.Point";if(!this.standalone&&((!feature._sketch&&isPoint)||!feature._sketch)){if(this.toggle&&this.feature===feature){this._unselect=feature}this.selectFeature(feature)}if(feature._sketch||isPoint){this.vertex=feature;this.handlers.drag.stopDown=true}},dragVertex:function(vertex,pixel){var pos=this.map.getLonLatFromViewPortPx(pixel);var geom=vertex.geometry;geom.move(pos.lon-geom.x,pos.lat-geom.y);this.modified=true;if(this.feature.geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){this.layer.events.triggerEvent("vertexmodified",{vertex:vertex.geometry,feature:this.feature,pixel:pixel})}else{if(vertex._index){vertex.geometry.parent.addComponent(vertex.geometry,vertex._index);delete vertex._index;OpenLayers.Util.removeItem(this.virtualVertices,vertex);this.vertices.push(vertex)}else{if(vertex==this.dragHandle){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});this.radiusHandle=null}}else{if(vertex!==this.radiusHandle){this.layer.events.triggerEvent("vertexmodified",{vertex:vertex.geometry,feature:this.feature,pixel:pixel})}}}if(this.virtualVertices.length>0){this.layer.destroyFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[]}this.layer.drawFeature(this.feature,this.standalone?undefined:"select")}this.layer.drawFeature(vertex)},dragComplete:function(vertex){this.resetVertices();this.setFeatureState();this.onModification(this.feature);this.layer.events.triggerEvent("featuremodified",{feature:this.feature})},setFeatureState:function(){if(this.feature.state!=OpenLayers.State.INSERT&&this.feature.state!=OpenLayers.State.DELETE){this.feature.state=OpenLayers.State.UPDATE;if(this.modified&&this._originalGeometry){var feature=this.feature;feature.modified=OpenLayers.Util.extend(feature.modified,{geometry:this._originalGeometry});delete this._originalGeometry}}},resetVertices:function(){if(this.vertices.length>0){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[]}if(this.virtualVertices.length>0){this.layer.removeFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[]}if(this.dragHandle){this.layer.destroyFeatures([this.dragHandle],{silent:true});this.dragHandle=null}if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});this.radiusHandle=null}if(this.feature&&this.feature.geometry.CLASS_NAME!="OpenLayers.Geometry.Point"){if((this.mode&OpenLayers.Control.ModifyFeature.DRAG)){this.collectDragHandle()}if((this.mode&(OpenLayers.Control.ModifyFeature.ROTATE|OpenLayers.Control.ModifyFeature.RESIZE))){this.collectRadiusHandle()}if(this.mode&OpenLayers.Control.ModifyFeature.RESHAPE){if(!(this.mode&OpenLayers.Control.ModifyFeature.RESIZE)){this.collectVertices()}}}},handleKeypress:function(evt){var code=evt.keyCode;if(this.feature&&OpenLayers.Util.indexOf(this.deleteCodes,code)!=-1){var vertex=this.layer.getFeatureFromEvent(this.handlers.drag.evt);if(vertex&&OpenLayers.Util.indexOf(this.vertices,vertex)!=-1&&!this.handlers.drag.dragging&&vertex.geometry.parent){vertex.geometry.parent.removeComponent(vertex.geometry);this.layer.events.triggerEvent("vertexremoved",{vertex:vertex.geometry,feature:this.feature,pixel:evt.xy});this.layer.drawFeature(this.feature,this.standalone?undefined:"select");this.modified=true;this.resetVertices();this.setFeatureState();this.onModification(this.feature);this.layer.events.triggerEvent("featuremodified",{feature:this.feature})}}},collectVertices:function(){this.vertices=[];this.virtualVertices=[];var control=this;function collectComponentVertices(geometry){var i,vertex,component,len;if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){vertex=new OpenLayers.Feature.Vector(geometry);vertex._sketch=true;vertex.renderIntent=control.vertexRenderIntent;control.vertices.push(vertex)}else{var numVert=geometry.components.length;if(geometry.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){numVert-=1}for(i=0;i<numVert;++i){component=geometry.components[i];if(component.CLASS_NAME=="OpenLayers.Geometry.Point"){vertex=new OpenLayers.Feature.Vector(component);vertex._sketch=true;vertex.renderIntent=control.vertexRenderIntent;control.vertices.push(vertex)}else{collectComponentVertices(component)}}if(control.createVertices&&geometry.CLASS_NAME!="OpenLayers.Geometry.MultiPoint"){for(i=0,len=geometry.components.length;i<len-1;++i){var prevVertex=geometry.components[i];var nextVertex=geometry.components[i+1];if(prevVertex.CLASS_NAME=="OpenLayers.Geometry.Point"&&nextVertex.CLASS_NAME=="OpenLayers.Geometry.Point"){var x=(prevVertex.x+nextVertex.x)/2;var y=(prevVertex.y+nextVertex.y)/2;var point=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(x,y),null,control.virtualStyle);point.geometry.parent=geometry;point._index=i+1;point._sketch=true;control.virtualVertices.push(point)}}}}}collectComponentVertices.call(this,this.feature.geometry);this.layer.addFeatures(this.virtualVertices,{silent:true});this.layer.addFeatures(this.vertices,{silent:true})},collectDragHandle:function(){var geometry=this.feature.geometry;var center=geometry.getBounds().getCenterLonLat();var originGeometry=new OpenLayers.Geometry.Point(center.lon,center.lat);var origin=new OpenLayers.Feature.Vector(originGeometry);originGeometry.move=function(x,y){OpenLayers.Geometry.Point.prototype.move.call(this,x,y);geometry.move(x,y)};origin._sketch=true;this.dragHandle=origin;this.dragHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.dragHandle],{silent:true})},collectRadiusHandle:function(){var geometry=this.feature.geometry;var bounds=geometry.getBounds();var center=bounds.getCenterLonLat();var originGeometry=new OpenLayers.Geometry.Point(center.lon,center.lat);var radiusGeometry=new OpenLayers.Geometry.Point(bounds.right,bounds.bottom);var radius=new OpenLayers.Feature.Vector(radiusGeometry);var resize=(this.mode&OpenLayers.Control.ModifyFeature.RESIZE);var reshape=(this.mode&OpenLayers.Control.ModifyFeature.RESHAPE);var rotate=(this.mode&OpenLayers.Control.ModifyFeature.ROTATE);radiusGeometry.move=function(x,y){OpenLayers.Geometry.Point.prototype.move.call(this,x,y);var dx1=this.x-originGeometry.x;var dy1=this.y-originGeometry.y;var dx0=dx1-x;var dy0=dy1-y;if(rotate){var a0=Math.atan2(dy0,dx0);var a1=Math.atan2(dy1,dx1);var angle=a1-a0;angle*=180/Math.PI;geometry.rotate(angle,originGeometry)}if(resize){var scale,ratio;if(reshape){scale=dy1/dy0;ratio=(dx1/dx0)/scale}else{var l0=Math.sqrt((dx0*dx0)+(dy0*dy0));var l1=Math.sqrt((dx1*dx1)+(dy1*dy1));scale=l1/l0}geometry.resize(scale,originGeometry,ratio)}};radius._sketch=true;this.radiusHandle=radius;this.radiusHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.radiusHandle],{silent:true})},setMap:function(map){this.handlers.drag.setMap(map);OpenLayers.Control.prototype.setMap.apply(this,arguments)},handleMapEvents:function(evt){if(evt.type=="removelayer"||evt.property=="order"){this.moveLayerToTop()}},moveLayerToTop:function(){var index=Math.max(this.map.Z_INDEX_BASE.Feature-1,this.layer.getZIndex())+1;this.layer.setZIndex(index)},moveLayerBack:function(){var index=this.layer.getZIndex()-1;if(index>=this.map.Z_INDEX_BASE.Feature){this.layer.setZIndex(index)}else{this.map.setLayerZIndex(this.layer,this.map.getLayerIndex(this.layer))}},CLASS_NAME:"OpenLayers.Control.ModifyFeature"});OpenLayers.Control.ModifyFeature.RESHAPE=1;OpenLayers.Control.ModifyFeature.RESIZE=2;OpenLayers.Control.ModifyFeature.ROTATE=4;OpenLayers.Control.ModifyFeature.DRAG=8;Ext.namespace("gxp");gxp.FeatureEditPopup=Ext.extend(GeoExt.Popup,{closeMsgTitle:"Save Changes?",closeMsg:"This feature has unsaved changes. Would you like to save your changes?",deleteMsgTitle:"Delete Feature?",deleteMsg:"Are you sure you want to delete this feature?",editButtonText:"Edit",editButtonTooltip:"Make this feature editable",deleteButtonText:"Delete",deleteButtonTooltip:"Delete this feature",cancelButtonText:"Cancel",cancelButtonTooltip:"Stop editing, discard changes",saveButtonText:"Save",saveButtonTooltip:"Save changes",layout:"fit",feature:null,schema:null,readOnly:false,allowDelete:false,editing:false,editorPluginConfig:{ptype:"gxp_editorgrid"},modifyControl:null,geometry:null,attributes:null,cancelButton:null,saveButton:null,editButton:null,deleteButton:null,initComponent:function(){this.addEvents("startedit","stopedit","beforefeaturemodified","featuremodified","canceledit","cancelclose");var feature=this.feature;if(feature instanceof GeoExt.data.FeatureRecord){feature=this.feature=feature.getFeature()}if(!this.location){this.location=feature}this.anchored=!this.editing;if(!this.title&&feature.fid){this.title=feature.fid}this.editButton=new Ext.Button({text:this.editButtonText,tooltip:this.editButtonTooltip,iconCls:"edit",handler:this.startEditing,scope:this});this.deleteButton=new Ext.Button({text:this.deleteButtonText,tooltip:this.deleteButtonTooltip,iconCls:"delete",hidden:!this.allowDelete,handler:this.deleteFeature,scope:this});this.cancelButton=new Ext.Button({text:this.cancelButtonText,tooltip:this.cancelButtonTooltip,iconCls:"cancel",hidden:true,handler:function(){this.stopEditing(false)},scope:this});this.saveButton=new Ext.Button({text:this.saveButtonText,tooltip:this.saveButtonTooltip,iconCls:"save",hidden:true,handler:function(){this.stopEditing(true)},scope:this});this.plugins=[Ext.apply({feature:feature,schema:this.schema,fields:this.fields,excludeFields:this.excludeFields,propertyNames:this.propertyNames,readOnly:this.readOnly},this.editorPluginConfig)];this.bbar=new Ext.Toolbar({hidden:this.readOnly,items:[this.editButton,this.deleteButton,this.saveButton,this.cancelButton]});gxp.FeatureEditPopup.superclass.initComponent.call(this);this.on({show:function(){if(this.editing){this.editing=null;this.startEditing()}},beforeclose:function(){if(!this.editing){return}if(this.feature.state===this.getDirtyState()){Ext.Msg.show({title:this.closeMsgTitle,msg:this.closeMsg,buttons:Ext.Msg.YESNOCANCEL,fn:function(button){if(button&&button!=="cancel"){this.stopEditing(button==="yes");this.close()}else{this.fireEvent("cancelclose",this)}},scope:this,icon:Ext.MessageBox.QUESTION,animEl:this.getEl()});return false}else{this.stopEditing(false)}},scope:this})},getDirtyState:function(){return this.feature.state===OpenLayers.State.INSERT?this.feature.state:OpenLayers.State.UPDATE},startEditing:function(){if(!this.editing){this.fireEvent("startedit",this);this.editing=true;this.anc&&this.unanchorPopup();this.editButton.hide();this.deleteButton.hide();this.saveButton.show();this.cancelButton.show();this.geometry=this.feature.geometry&&this.feature.geometry.clone();this.attributes=Ext.apply({},this.feature.attributes);this.modifyControl=new OpenLayers.Control.ModifyFeature(this.feature.layer,{standalone:true,vertexRenderIntent:this.vertexRenderIntent});this.feature.layer.map.addControl(this.modifyControl);this.modifyControl.activate();if(this.feature.geometry){this.modifyControl.selectFeature(this.feature)}}},stopEditing:function(save){if(this.editing){this.fireEvent("stopedit",this);this.modifyControl.deactivate();this.modifyControl.destroy();var feature=this.feature;if(feature.state===this.getDirtyState()){if(save===true){this.fireEvent("beforefeaturemodified",this,feature);if(this.schema){var attribute,rec;for(var i in feature.attributes){rec=this.schema.getAt(this.schema.findExact("name",i));attribute=feature.attributes[i];if(attribute instanceof Date){var type=rec.get("type").split(":").pop();feature.attributes[i]=attribute.format(type=="date"?"Y-m-d":"c")}}}this.fireEvent("featuremodified",this,feature)}else{if(feature.state===OpenLayers.State.INSERT){this.editing=false;feature.layer&&feature.layer.destroyFeatures([feature]);this.fireEvent("canceledit",this,null);this.close()}else{var layer=feature.layer;layer.drawFeature(feature,{display:"none"});feature.geometry=this.geometry;feature.attributes=this.attributes;this.setFeatureState(null);layer.drawFeature(feature);this.fireEvent("canceledit",this,feature)}}}if(!this.isDestroyed){this.cancelButton.hide();this.saveButton.hide();this.editButton.show();this.allowDelete&&this.deleteButton.show()}this.editing=false}},deleteFeature:function(){Ext.Msg.show({title:this.deleteMsgTitle,msg:this.deleteMsg,buttons:Ext.Msg.YESNO,fn:function(button){if(button==="yes"){this.setFeatureState(OpenLayers.State.DELETE);this.fireEvent("featuremodified",this,this.feature);this.close()}},scope:this,icon:Ext.MessageBox.QUESTION,animEl:this.getEl()})},setFeatureState:function(state){this.feature.state=state;var layer=this.feature.layer;layer&&layer.events.triggerEvent("featuremodified",{feature:this.feature})}});Ext.reg("gxp_featureeditpopup",gxp.FeatureEditPopup);OpenLayers.Control.DrawFeature=OpenLayers.Class(OpenLayers.Control,{layer:null,callbacks:null,multi:false,featureAdded:function(){},initialize:function(layer,handler,options){OpenLayers.Control.prototype.initialize.apply(this,[options]);this.callbacks=OpenLayers.Util.extend({done:this.drawFeature,modify:function(vertex,feature){this.layer.events.triggerEvent("sketchmodified",{vertex:vertex,feature:feature})},create:function(vertex,feature){this.layer.events.triggerEvent("sketchstarted",{vertex:vertex,feature:feature})}},this.callbacks);this.layer=layer;this.handlerOptions=this.handlerOptions||{};this.handlerOptions.layerOptions=OpenLayers.Util.applyDefaults(this.handlerOptions.layerOptions,{renderers:layer.renderers,rendererOptions:layer.rendererOptions});if(!("multi" in this.handlerOptions)){this.handlerOptions.multi=this.multi}var sketchStyle=this.layer.styleMap&&this.layer.styleMap.styles.temporary;if(sketchStyle){this.handlerOptions.layerOptions=OpenLayers.Util.applyDefaults(this.handlerOptions.layerOptions,{styleMap:new OpenLayers.StyleMap({"default":sketchStyle})})}this.handler=new handler(this,this.callbacks,this.handlerOptions)},drawFeature:function(geometry){var feature=new OpenLayers.Feature.Vector(geometry);var proceed=this.layer.events.triggerEvent("sketchcomplete",{feature:feature});if(proceed!==false){feature.state=OpenLayers.State.INSERT;this.layer.addFeatures([feature]);this.featureAdded(feature);this.events.triggerEvent("featureadded",{feature:feature})}},insertXY:function(x,y){if(this.handler&&this.handler.line){this.handler.insertXY(x,y)}},insertDeltaXY:function(dx,dy){if(this.handler&&this.handler.line){this.handler.insertDeltaXY(dx,dy)}},insertDirectionLength:function(direction,length){if(this.handler&&this.handler.line){this.handler.insertDirectionLength(direction,length)}},insertDeflectionLength:function(deflection,length){if(this.handler&&this.handler.line){this.handler.insertDeflectionLength(deflection,length)}},undo:function(){return this.handler.undo&&this.handler.undo()},redo:function(){return this.handler.redo&&this.handler.redo()},finishSketch:function(){this.handler.finishGeometry()},cancel:function(){this.handler.cancel()},CLASS_NAME:"OpenLayers.Control.DrawFeature"});OpenLayers.Handler.Point=OpenLayers.Class(OpenLayers.Handler,{point:null,layer:null,multi:false,citeCompliant:false,mouseDown:false,stoppedDown:null,lastDown:null,lastUp:null,persist:false,stopDown:false,stopUp:false,layerOptions:null,pixelTolerance:5,lastTouchPx:null,initialize:function(control,callbacks,options){if(!(options&&options.layerOptions&&options.layerOptions.styleMap)){this.style=OpenLayers.Util.extend(OpenLayers.Feature.Vector.style["default"],{})}OpenLayers.Handler.prototype.initialize.apply(this,arguments)},activate:function(){if(!OpenLayers.Handler.prototype.activate.apply(this,arguments)){return false}var options=OpenLayers.Util.extend({displayInLayerSwitcher:false,calculateInRange:OpenLayers.Function.True,wrapDateLine:this.citeCompliant},this.layerOptions);this.layer=new OpenLayers.Layer.Vector(this.CLASS_NAME,options);this.map.addLayer(this.layer);return true},createFeature:function(pixel){var lonlat=this.layer.getLonLatFromViewPortPx(pixel);var geometry=new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat);this.point=new OpenLayers.Feature.Vector(geometry);this.callback("create",[this.point.geometry,this.point]);this.point.geometry.clearBounds();this.layer.addFeatures([this.point],{silent:true})},deactivate:function(){if(!OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){return false}this.cancel();if(this.layer.map!=null){this.destroyFeature(true);this.layer.destroy(false)}this.layer=null;return true},destroyFeature:function(force){if(this.layer&&(force||!this.persist)){this.layer.destroyFeatures()}this.point=null},destroyPersistedFeature:function(){var layer=this.layer;if(layer&&layer.features.length>1){this.layer.features[0].destroy()}},finalize:function(cancel){var key=cancel?"cancel":"done";this.mouseDown=false;this.lastDown=null;this.lastUp=null;this.lastTouchPx=null;this.callback(key,[this.geometryClone()]);this.destroyFeature(cancel)},cancel:function(){this.finalize(true)},click:function(evt){OpenLayers.Event.stop(evt);return false},dblclick:function(evt){OpenLayers.Event.stop(evt);return false},modifyFeature:function(pixel){if(!this.point){this.createFeature(pixel)}var lonlat=this.layer.getLonLatFromViewPortPx(pixel);this.point.geometry.x=lonlat.lon;this.point.geometry.y=lonlat.lat;this.callback("modify",[this.point.geometry,this.point,false]);this.point.geometry.clearBounds();this.drawFeature()},drawFeature:function(){this.layer.drawFeature(this.point,this.style)},getGeometry:function(){var geometry=this.point&&this.point.geometry;if(geometry&&this.multi){geometry=new OpenLayers.Geometry.MultiPoint([geometry])}return geometry},geometryClone:function(){var geom=this.getGeometry();return geom&&geom.clone()},mousedown:function(evt){return this.down(evt)},touchstart:function(evt){this.startTouch();this.lastTouchPx=evt.xy;return this.down(evt)},mousemove:function(evt){return this.move(evt)},touchmove:function(evt){this.lastTouchPx=evt.xy;return this.move(evt)},mouseup:function(evt){return this.up(evt)},touchend:function(evt){evt.xy=this.lastTouchPx;return this.up(evt)},down:function(evt){this.mouseDown=true;this.lastDown=evt.xy;if(!this.touch){this.modifyFeature(evt.xy)}this.stoppedDown=this.stopDown;return !this.stopDown},move:function(evt){if(!this.touch&&(!this.mouseDown||this.stoppedDown)){this.modifyFeature(evt.xy)}return true},up:function(evt){this.mouseDown=false;this.stoppedDown=this.stopDown;if(!this.checkModifiers(evt)){return true}if(this.lastUp&&this.lastUp.equals(evt.xy)){return true}if(this.lastDown&&this.passesTolerance(this.lastDown,evt.xy,this.pixelTolerance)){if(this.touch){this.modifyFeature(evt.xy)}if(this.persist){this.destroyPersistedFeature()}this.lastUp=evt.xy;this.finalize();return !this.stopUp}else{return true}},mouseout:function(evt){if(OpenLayers.Util.mouseLeft(evt,this.map.viewPortDiv)){this.stoppedDown=this.stopDown;this.mouseDown=false}},passesTolerance:function(pixel1,pixel2,tolerance){var passes=true;if(tolerance!=null&&pixel1&&pixel2){var dist=pixel1.distanceTo(pixel2);if(dist>tolerance){passes=false}}return passes},CLASS_NAME:"OpenLayers.Handler.Point"});OpenLayers.Handler.Path=OpenLayers.Class(OpenLayers.Handler.Point,{line:null,maxVertices:null,doubleTouchTolerance:20,freehand:false,freehandToggle:"shiftKey",timerId:null,redoStack:null,createFeature:function(pixel){var lonlat=this.layer.getLonLatFromViewPortPx(pixel);var geometry=new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat);this.point=new OpenLayers.Feature.Vector(geometry);this.line=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([this.point.geometry]));this.callback("create",[this.point.geometry,this.getSketch()]);this.point.geometry.clearBounds();this.layer.addFeatures([this.line,this.point],{silent:true})},destroyFeature:function(force){OpenLayers.Handler.Point.prototype.destroyFeature.call(this,force);this.line=null},destroyPersistedFeature:function(){var layer=this.layer;if(layer&&layer.features.length>2){this.layer.features[0].destroy()}},removePoint:function(){if(this.point){this.layer.removeFeatures([this.point])}},addPoint:function(pixel){this.layer.removeFeatures([this.point]);var lonlat=this.layer.getLonLatFromViewPortPx(pixel);this.point=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat));this.line.geometry.addComponent(this.point.geometry,this.line.geometry.components.length);this.layer.addFeatures([this.point]);this.callback("point",[this.point.geometry,this.getGeometry()]);this.callback("modify",[this.point.geometry,this.getSketch()]);this.drawFeature();delete this.redoStack},insertXY:function(x,y){this.line.geometry.addComponent(new OpenLayers.Geometry.Point(x,y),this.getCurrentPointIndex());this.drawFeature();delete this.redoStack},insertDeltaXY:function(dx,dy){var previousIndex=this.getCurrentPointIndex()-1;var p0=this.line.geometry.components[previousIndex];if(p0&&!isNaN(p0.x)&&!isNaN(p0.y)){this.insertXY(p0.x+dx,p0.y+dy)}},insertDirectionLength:function(direction,length){direction*=Math.PI/180;var dx=length*Math.cos(direction);var dy=length*Math.sin(direction);this.insertDeltaXY(dx,dy)},insertDeflectionLength:function(deflection,length){var previousIndex=this.getCurrentPointIndex()-1;if(previousIndex>0){var p1=this.line.geometry.components[previousIndex];var p0=this.line.geometry.components[previousIndex-1];var theta=Math.atan2(p1.y-p0.y,p1.x-p0.x);this.insertDirectionLength((theta*180/Math.PI)+deflection,length)}},getCurrentPointIndex:function(){return this.line.geometry.components.length-1},undo:function(){var geometry=this.line.geometry;var components=geometry.components;var index=this.getCurrentPointIndex()-1;var target=components[index];var undone=geometry.removeComponent(target);if(undone){if(this.touch&&index>0){components=geometry.components;var lastpt=components[index-1];var curptidx=this.getCurrentPointIndex();var curpt=components[curptidx];curpt.x=lastpt.x;curpt.y=lastpt.y}if(!this.redoStack){this.redoStack=[]}this.redoStack.push(target);this.drawFeature()}return undone},redo:function(){var target=this.redoStack&&this.redoStack.pop();if(target){this.line.geometry.addComponent(target,this.getCurrentPointIndex());this.drawFeature()}return !!target},freehandMode:function(evt){return(this.freehandToggle&&evt[this.freehandToggle])?!this.freehand:this.freehand},modifyFeature:function(pixel,drawing){if(!this.line){this.createFeature(pixel)}var lonlat=this.layer.getLonLatFromViewPortPx(pixel);this.point.geometry.x=lonlat.lon;this.point.geometry.y=lonlat.lat;this.callback("modify",[this.point.geometry,this.getSketch(),drawing]);this.point.geometry.clearBounds();this.drawFeature()},drawFeature:function(){this.layer.drawFeature(this.line,this.style);this.layer.drawFeature(this.point,this.style)},getSketch:function(){return this.line},getGeometry:function(){var geometry=this.line&&this.line.geometry;if(geometry&&this.multi){geometry=new OpenLayers.Geometry.MultiLineString([geometry])}return geometry},touchstart:function(evt){if(this.timerId&&this.passesTolerance(this.lastTouchPx,evt.xy,this.doubleTouchTolerance)){this.finishGeometry();window.clearTimeout(this.timerId);this.timerId=null;return false}else{if(this.timerId){window.clearTimeout(this.timerId);this.timerId=null}this.timerId=window.setTimeout(OpenLayers.Function.bind(function(){this.timerId=null},this),300);return OpenLayers.Handler.Point.prototype.touchstart.call(this,evt)}},down:function(evt){var stopDown=this.stopDown;if(this.freehandMode(evt)){stopDown=true;if(this.touch){this.modifyFeature(evt.xy,!!this.lastUp);OpenLayers.Event.stop(evt)}}if(!this.touch&&(!this.lastDown||!this.passesTolerance(this.lastDown,evt.xy,this.pixelTolerance))){this.modifyFeature(evt.xy,!!this.lastUp)}this.mouseDown=true;this.lastDown=evt.xy;this.stoppedDown=stopDown;return !stopDown},move:function(evt){if(this.stoppedDown&&this.freehandMode(evt)){if(this.persist){this.destroyPersistedFeature()}if(this.maxVertices&&this.line&&this.line.geometry.components.length===this.maxVertices){this.removePoint();this.finalize()}else{this.addPoint(evt.xy)}return false}if(!this.touch&&(!this.mouseDown||this.stoppedDown)){this.modifyFeature(evt.xy,!!this.lastUp)}return true},up:function(evt){if(this.mouseDown&&(!this.lastUp||!this.lastUp.equals(evt.xy))){if(this.stoppedDown&&this.freehandMode(evt)){if(this.persist){this.destroyPersistedFeature()}this.removePoint();this.finalize()}else{if(this.passesTolerance(this.lastDown,evt.xy,this.pixelTolerance)){if(this.touch){this.modifyFeature(evt.xy)}if(this.lastUp==null&&this.persist){this.destroyPersistedFeature()}this.addPoint(evt.xy);this.lastUp=evt.xy;if(this.line.geometry.components.length===this.maxVertices+1){this.finishGeometry()}}}}this.stoppedDown=this.stopDown;this.mouseDown=false;return !this.stopUp},finishGeometry:function(){var index=this.line.geometry.components.length-1;this.line.geometry.removeComponent(this.line.geometry.components[index]);this.removePoint();this.finalize()},dblclick:function(evt){if(!this.freehandMode(evt)){this.finishGeometry()}return false},CLASS_NAME:"OpenLayers.Handler.Path"});OpenLayers.Handler.Polygon=OpenLayers.Class(OpenLayers.Handler.Path,{holeModifier:null,drawingHole:false,polygon:null,createFeature:function(pixel){var lonlat=this.layer.getLonLatFromViewPortPx(pixel);var geometry=new OpenLayers.Geometry.Point(lonlat.lon,lonlat.lat);this.point=new OpenLayers.Feature.Vector(geometry);this.line=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LinearRing([this.point.geometry]));this.polygon=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon([this.line.geometry]));this.callback("create",[this.point.geometry,this.getSketch()]);this.point.geometry.clearBounds();this.layer.addFeatures([this.polygon,this.point],{silent:true})},addPoint:function(pixel){if(!this.drawingHole&&this.holeModifier&&this.evt&&this.evt[this.holeModifier]){var geometry=this.point.geometry;var features=this.control.layer.features;var candidate,polygon;for(var i=features.length-1;i>=0;--i){candidate=features[i].geometry;if((candidate instanceof OpenLayers.Geometry.Polygon||candidate instanceof OpenLayers.Geometry.MultiPolygon)&&candidate.intersects(geometry)){polygon=features[i];this.control.layer.removeFeatures([polygon],{silent:true});this.control.layer.events.registerPriority("sketchcomplete",this,this.finalizeInteriorRing);this.control.layer.events.registerPriority("sketchmodified",this,this.enforceTopology);polygon.geometry.addComponent(this.line.geometry);this.polygon=polygon;this.drawingHole=true;break}}}OpenLayers.Handler.Path.prototype.addPoint.apply(this,arguments)},getCurrentPointIndex:function(){return this.line.geometry.components.length-2},enforceTopology:function(event){var point=event.vertex;var components=this.line.geometry.components;if(!this.polygon.geometry.intersects(point)){var last=components[components.length-3];point.x=last.x;point.y=last.y}},finishGeometry:function(){var index=this.line.geometry.components.length-2;this.line.geometry.removeComponent(this.line.geometry.components[index]);this.removePoint();this.finalize()},finalizeInteriorRing:function(){var ring=this.line.geometry;var modified=(ring.getArea()!==0);if(modified){var rings=this.polygon.geometry.components;for(var i=rings.length-2;i>=0;--i){if(ring.intersects(rings[i])){modified=false;break}}if(modified){var target;outer:for(var i=rings.length-2;i>0;--i){var points=rings[i].components;for(var j=0,jj=points.length;j<jj;++j){if(ring.containsPoint(points[j])){modified=false;break outer}}}}}if(modified){if(this.polygon.state!==OpenLayers.State.INSERT){this.polygon.state=OpenLayers.State.UPDATE}}else{this.polygon.geometry.removeComponent(ring)}this.restoreFeature();return false},cancel:function(){if(this.drawingHole){this.polygon.geometry.removeComponent(this.line.geometry);this.restoreFeature(true)}return OpenLayers.Handler.Path.prototype.cancel.apply(this,arguments)},restoreFeature:function(cancel){this.control.layer.events.unregister("sketchcomplete",this,this.finalizeInteriorRing);this.control.layer.events.unregister("sketchmodified",this,this.enforceTopology);this.layer.removeFeatures([this.polygon],{silent:true});this.control.layer.addFeatures([this.polygon],{silent:true});this.drawingHole=false;if(!cancel){this.control.layer.events.triggerEvent("sketchcomplete",{feature:this.polygon})}},destroyFeature:function(force){OpenLayers.Handler.Path.prototype.destroyFeature.call(this,force);this.polygon=null},drawFeature:function(){this.layer.drawFeature(this.polygon,this.style);this.layer.drawFeature(this.point,this.style)},getSketch:function(){return this.polygon},getGeometry:function(){var geometry=this.polygon&&this.polygon.geometry;if(geometry&&this.multi){geometry=new OpenLayers.Geometry.MultiPolygon([geometry])}return geometry},CLASS_NAME:"OpenLayers.Handler.Polygon"});Ext.namespace("gxp.plugins");gxp.plugins.FeatureEditor=Ext.extend(gxp.plugins.ClickableFeatures,{ptype:"gxp_featureeditor",commitMessage:false,splitButton:null,iconClsAdd:"gxp-icon-addfeature",closeOnSave:false,supportAbstractGeometry:false,supportNoGeometry:false,iconClsEdit:"gxp-icon-editfeature",exceptionTitle:"Save Failed",exceptionText:"Trouble saving features",pointText:"Point",lineText:"Line",polygonText:"Polygon",noGeometryText:"Event",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:",createFeatureActionTip:"Create a new feature",createFeatureActionText:"Create",editFeatureActionTip:"Edit existing feature",editFeatureActionText:"Modify",splitButtonText:"Edit",splitButtonTooltip:"Edit features on selected WMS layer",outputTarget:"map",snappingAgent:null,readOnly:false,modifyOnly:false,showSelectedOnly:true,roles:["ROLE_ADMINISTRATOR"],createAction:null,editAction:null,activeIndex:0,drawControl:null,popup:null,schema:null,constructor:function(config){this.addEvents("layereditable","featureeditable");gxp.plugins.FeatureEditor.superclass.constructor.apply(this,arguments)},init:function(target){gxp.plugins.FeatureEditor.superclass.init.apply(this,arguments);this.target.on("authorizationchange",this.onAuthorizationChange,this)},destroy:function(){this.target.un("authorizationchange",this.onAuthorizationChange,this);gxp.plugins.FeatureEditor.superclass.destroy.apply(this,arguments)},onAuthorizationChange:function(){if(!this.target.isAuthorized(this.roles)){this.selectControl.deactivate();this.drawControl.deactivate()}this.enableOrDisable()},addActions:function(){var popup;var featureManager=this.getFeatureManager();var featureLayer=featureManager.featureLayer;var intercepting=false;function intercept(mgr,fn){var fnArgs=Array.prototype.slice.call(arguments);fnArgs.splice(0,2);if(!intercepting&&popup&&!popup.isDestroyed){if(popup.editing){function doIt(){intercepting=true;unregisterDoIt.call(this);if(fn==="setLayer"){this.target.selectLayer(fnArgs[0])}else{if(fn==="clearFeatures"){window.setTimeout(function(){mgr[fn].call(mgr)})}else{mgr[fn].apply(mgr,fnArgs)}}}function unregisterDoIt(){featureManager.featureStore.un("write",doIt,this);popup.un("canceledit",doIt,this);popup.un("cancelclose",unregisterDoIt,this)}featureManager.featureStore.on("write",doIt,this);popup.on({canceledit:doIt,cancelclose:unregisterDoIt,scope:this});popup.close()}return !popup.editing}intercepting=false}featureManager.on({beforequery:intercept.createDelegate(this,"loadFeatures",1),beforelayerchange:intercept.createDelegate(this,"setLayer",1),beforesetpage:intercept.createDelegate(this,"setPage",1),beforeclearfeatures:intercept.createDelegate(this,"clearFeatures",1),scope:this});this.drawControl=new OpenLayers.Control.DrawFeature(featureLayer,OpenLayers.Handler.Point,{eventListeners:{featureadded:function(evt){if(this.autoLoadFeature===true){this.autoLoadedFeature=evt.feature}},activate:function(){this.target.doAuthorized(this.roles,function(){featureManager.showLayer(this.id,this.showSelectedOnly&&"selected")},this)},deactivate:function(){featureManager.hideLayer(this.id)},scope:this}});this.selectControl=new OpenLayers.Control.SelectFeature(featureLayer,{clickout:false,multipleKey:"fakeKey",eventListeners:{activate:function(){this.target.doAuthorized(this.roles,function(){if(this.autoLoadFeature===true||featureManager.paging){this.target.mapPanel.map.events.register("click",this,this.noFeatureClick)}featureManager.showLayer(this.id,this.showSelectedOnly&&"selected");this.selectControl.unselectAll(popup&&popup.editing&&{except:popup.feature})},this)},deactivate:function(){if(this.autoLoadFeature===true||featureManager.paging){this.target.mapPanel.map.events.unregister("click",this,this.noFeatureClick)}if(popup){if(popup.editing){popup.on("cancelclose",function(){this.selectControl.activate()},this,{single:true})}popup.on("close",function(){featureManager.hideLayer(this.id)},this,{single:true});popup.close()}else{featureManager.hideLayer(this.id)}},scope:this}});featureLayer.events.on({beforefeatureremoved:function(evt){if(this.popup&&evt.feature===this.popup.feature){this.selectControl.unselect(evt.feature)}},featureunselected:function(evt){var feature=evt.feature;if(feature){this.fireEvent("featureeditable",this,feature,false)}if(feature&&feature.geometry&&popup&&!popup.hidden){popup.close()}},beforefeatureselected:function(evt){if(popup){return !popup.editing}},featureselected:function(evt){var feature=evt.feature;if(feature){this.fireEvent("featureeditable",this,feature,true)}var featureStore=featureManager.featureStore;if(this._forcePopupForNoGeometry===true||(this.selectControl.active&&feature.geometry!==null)){if(this.readOnly===false){this.selectControl.deactivate();featureManager.showLayer(this.id,this.showSelectedOnly&&"selected")}popup=this.addOutput({xtype:"gxp_featureeditpopup",collapsible:true,feature:featureStore.getByFeature(feature),vertexRenderIntent:"vertex",readOnly:this.readOnly,fields:this.fields,excludeFields:this.excludeFields,editing:feature.state===OpenLayers.State.INSERT,schema:this.schema,allowDelete:true,width:200,height:250});popup.on({close:function(){if(this.readOnly===false){this.selectControl.activate()}if(feature.layer&&feature.layer.selectedFeatures.indexOf(feature)!==-1){this.selectControl.unselect(feature)}if(feature===this.autoLoadedFeature){if(feature.layer){feature.layer.removeFeatures([evt.feature])}this.autoLoadedFeature=null}},featuremodified:function(popup,feature){featureStore.on({beforewrite:{fn:function(store,action,rs,options){if(this.commitMessage===true){options.params.handle=this._commitMsg;delete this._commitMsg}},single:true},beforesave:{fn:function(){if(popup&&popup.isVisible()){popup.disable()}if(this.commitMessage===true){if(!this._commitMsg){var fn=arguments.callee;Ext.Msg.show({prompt:true,title:this.commitTitle,msg:this.commitText,buttons:Ext.Msg.OK,fn:function(btn,text){if(btn==="ok"){this._commitMsg=text;featureStore.un("beforesave",fn,this);featureStore.save()}},scope:this,multiline:true});return false}}},single:this.commitMessage!==true},write:{fn:function(){if(popup){if(popup.isVisible()){popup.enable()}if(this.closeOnSave){popup.close()}}var layer=featureManager.layerRecord;this.target.fireEvent("featureedit",featureManager,{name:layer.get("name"),source:layer.get("source")})},single:true},exception:{fn:function(proxy,type,action,options,response,records){var msg=this.exceptionText;if(type==="remote"){if(response.exceptionReport){msg=gxp.util.getOGCExceptionText(response.exceptionReport)}}else{msg="Status: "+response.status}featureManager.fireEvent("exception",featureManager,response.exceptionReport||{},msg,records);if(featureManager.hasListener("exception")===false&&featureStore.hasListener("exception")===false){Ext.Msg.show({title:this.exceptionTitle,msg:msg,icon:Ext.MessageBox.ERROR,buttons:{ok:true}})}if(popup&&popup.isVisible()){popup.enable();popup.startEditing()}},single:true},scope:this});if(feature.state===OpenLayers.State.DELETE){featureStore._removing=true;featureStore.remove(featureStore.getRecordFromFeature(feature));delete featureStore._removing}featureStore.save()},canceledit:function(popup,feature){featureStore.commitChanges()},scope:this});this.popup=popup}},sketchcomplete:function(evt){featureManager.featureLayer.events.register("featuresadded",this,function(evt){featureManager.featureLayer.events.unregister("featuresadded",this,arguments.callee);this.drawControl.deactivate();this.selectControl.activate();this.selectControl.select(evt.features[0])})},scope:this});var toggleGroup=this.toggleGroup||Ext.id();var actions=[];var commonOptions={tooltip:this.createFeatureActionTip,menuText:this.initialConfig.createFeatureActionText,text:this.initialConfig.createFeatureActionText,iconCls:this.iconClsAdd,disabled:true,hidden:this.modifyOnly||this.readOnly,toggleGroup:toggleGroup,group:toggleGroup,groupClass:null,enableToggle:true,allowDepress:true,control:this.drawControl,deactivateOnDisable:true,map:this.target.mapPanel.map,listeners:{checkchange:this.onItemCheckchange,scope:this}};if(this.supportAbstractGeometry===true){var menuItems=[];if(this.supportNoGeometry===true){menuItems.push(new Ext.menu.CheckItem({text:this.noGeometryText,iconCls:"gxp-icon-event",groupClass:null,group:toggleGroup,listeners:{checkchange:function(item,checked){if(checked===true){var feature=new OpenLayers.Feature.Vector(null);feature.state=OpenLayers.State.INSERT;featureLayer.addFeatures([feature]);this._forcePopupForNoGeometry=true;featureLayer.events.triggerEvent("featureselected",{feature:feature});delete this._forcePopupForNoGeometry}if(this.createAction.items[0] instanceof Ext.menu.CheckItem){this.createAction.items[0].setChecked(false)}else{this.createAction.items[0].toggle(false)}},scope:this}}))}var checkChange=function(item,checked,Handler){if(checked===true){this.setHandler(Handler,false)}if(this.createAction.items[0] instanceof Ext.menu.CheckItem){this.createAction.items[0].setChecked(checked)}else{this.createAction.items[0].toggle(checked)}};menuItems.push(new Ext.menu.CheckItem({groupClass:null,text:this.pointText,group:toggleGroup,iconCls:"gxp-icon-point",listeners:{checkchange:checkChange.createDelegate(this,[OpenLayers.Handler.Point],2)}}),new Ext.menu.CheckItem({groupClass:null,text:this.lineText,group:toggleGroup,iconCls:"gxp-icon-line",listeners:{checkchange:checkChange.createDelegate(this,[OpenLayers.Handler.Path],2)}}),new Ext.menu.CheckItem({groupClass:null,text:this.polygonText,group:toggleGroup,iconCls:"gxp-icon-polygon",listeners:{checkchange:checkChange.createDelegate(this,[OpenLayers.Handler.Polygon],2)}}));actions.push(new GeoExt.Action(Ext.apply(commonOptions,{menu:new Ext.menu.Menu({items:menuItems})})))}else{actions.push(new GeoExt.Action(commonOptions))}actions.push(new GeoExt.Action({tooltip:this.editFeatureActionTip,text:this.initialConfig.editFeatureActionText,menuText:this.initialConfig.editFeatureActionText,iconCls:this.iconClsEdit,disabled:true,toggleGroup:toggleGroup,group:toggleGroup,groupClass:null,enableToggle:true,allowDepress:true,control:this.selectControl,deactivateOnDisable:true,map:this.target.mapPanel.map,listeners:{checkchange:this.onItemCheckchange,scope:this}}));this.createAction=actions[0];this.editAction=actions[1];if(this.splitButton){this.splitButton=new Ext.SplitButton({menu:{items:[Ext.apply(new Ext.menu.CheckItem(actions[0]),{text:this.createFeatureActionText}),Ext.apply(new Ext.menu.CheckItem(actions[1]),{text:this.editFeatureActionText})]},disabled:true,buttonText:this.splitButtonText,tooltip:this.splitButtonTooltip,iconCls:this.iconClsAdd,enableToggle:true,toggleGroup:this.toggleGroup,allowDepress:true,handler:function(button,event){if(button.pressed){button.menu.items.itemAt(this.activeIndex).setChecked(true)}},scope:this,listeners:{toggle:function(button,pressed){if(!pressed){button.menu.items.each(function(i){i.setChecked(false)})}},render:function(button){Ext.ButtonToggleMgr.register(button)}}});actions=[this.splitButton]}actions=gxp.plugins.FeatureEditor.superclass.addActions.call(this,actions);featureManager.on("layerchange",this.onLayerChange,this);var snappingAgent=this.getSnappingAgent();if(snappingAgent){snappingAgent.registerEditor(this)}return actions},onItemCheckchange:function(item,checked){if(this.splitButton){this.activeIndex=item.ownerCt.items.indexOf(item);this.splitButton.toggle(checked);if(checked){this.splitButton.setIconClass(item.iconCls)}}},getFeatureManager:function(){var manager=this.target.tools[this.featureManager];if(!manager){throw new Error("Unable to access feature manager by id: "+this.featureManager)}return manager},getSnappingAgent:function(){var agent;var snapId=this.snappingAgent;if(snapId){agent=this.target.tools[snapId];if(!agent){throw new Error("Unable to locate snapping agent with id: "+snapId)}}return agent},setHandler:function(Handler,multi){var control=this.drawControl;var active=control.active;if(active){control.deactivate()}control.handler.destroy();control.handler=new Handler(control,control.callbacks,Ext.apply(control.handlerOptions,{multi:multi}));if(active){control.activate()}},enableOrDisable:function(){var disable=!this.schema;if(this.splitButton){this.splitButton.setDisabled(disable)}this.createAction.setDisabled(disable);this.editAction.setDisabled(disable);return disable},onLayerChange:function(mgr,layer,schema){this.schema=schema;var disable=this.enableOrDisable();if(disable){this.fireEvent("layereditable",this,layer,false);return}var control=this.drawControl;var button=this.createAction;var handlers={Point:OpenLayers.Handler.Point,Line:OpenLayers.Handler.Path,Curve:OpenLayers.Handler.Path,Polygon:OpenLayers.Handler.Polygon,Surface:OpenLayers.Handler.Polygon};var simpleType=mgr.geometryType&&mgr.geometryType.replace("Multi","");var Handler=simpleType&&handlers[simpleType];if(Handler){var multi=(simpleType!=mgr.geometryType);this.setHandler(Handler,multi);button.enable()}else{if(this.supportAbstractGeometry===true&&mgr.geometryType&&mgr.geometryType==="Geometry"){button.enable()}else{button.disable()}}this.fireEvent("layereditable",this,layer,true)},select:function(feature){this.selectControl.unselectAll(this.popup&&this.popup.editing&&{except:this.popup.feature});this.selectControl.select(feature)}});Ext.preg(gxp.plugins.FeatureEditor.prototype.ptype,gxp.plugins.FeatureEditor);Ext.namespace("GeoExt.grid");GeoExt.grid.FeatureSelectionModelMixin=function(){return{autoActivateControl:true,layerFromStore:true,selectControl:null,bound:false,superclass:null,selectedFeatures:[],autoPanMapOnSelection:false,constructor:function(config){config=config||{};if(config.selectControl instanceof OpenLayers.Control.SelectFeature){if(!config.singleSelect){var ctrl=config.selectControl;config.singleSelect=!(ctrl.multiple||!!ctrl.multipleKey)}}else{if(config.layer instanceof OpenLayers.Layer.Vector){this.selectControl=this.createSelectControl(config.layer,config.selectControl);delete config.layer;delete config.selectControl}}if(config.autoPanMapOnSelection){this.autoPanMapOnSelection=true;delete config.autoPanMapOnSelection}this.superclass=arguments.callee.superclass;this.superclass.constructor.call(this,config)},initEvents:function(){this.superclass.initEvents.call(this);if(this.layerFromStore){var layer=this.grid.getStore()&&this.grid.getStore().layer;if(layer&&!(this.selectControl instanceof OpenLayers.Control.SelectFeature)){this.selectControl=this.createSelectControl(layer,this.selectControl)}}if(this.selectControl){this.bind(this.selectControl)}},createSelectControl:function(layer,config){config=config||{};var singleSelect=config.singleSelect!==undefined?config.singleSelect:this.singleSelect;config=OpenLayers.Util.extend({toggle:true,multipleKey:singleSelect?null:(Ext.isMac?"metaKey":"ctrlKey")},config);var selectControl=new OpenLayers.Control.SelectFeature(layer,config);layer.map.addControl(selectControl);return selectControl},bind:function(obj,options){if(!this.bound){options=options||{};this.selectControl=obj;if(obj instanceof OpenLayers.Layer.Vector){this.selectControl=this.createSelectControl(obj,options.controlConfig)}if(this.autoActivateControl){this.selectControl.activate()}var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){layers[i].events.on({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this})}this.on("rowselect",this.rowSelected,this);this.on("rowdeselect",this.rowDeselected,this);this.bound=true}return this.selectControl},unbind:function(){var selectControl=this.selectControl;if(this.bound){var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){layers[i].events.un({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this})}this.un("rowselect",this.rowSelected,this);this.un("rowdeselect",this.rowDeselected,this);if(this.autoActivateControl){selectControl.deactivate()}this.selectControl=null;this.bound=false}return selectControl},featureSelected:function(evt){if(!this._selecting){var store=this.grid.store;var row=store.findBy(function(record,id){return record.getFeature()==evt.feature});if(row!=-1&&!this.isSelected(row)){this._selecting=true;this.selectRow(row,!this.singleSelect);this._selecting=false;this.grid.getView().focusRow(row)}}},featureUnselected:function(evt){if(!this._selecting){var store=this.grid.store;var row=store.findBy(function(record,id){return record.getFeature()==evt.feature});if(row!=-1&&this.isSelected(row)){this._selecting=true;this.deselectRow(row);this._selecting=false;this.grid.getView().focusRow(row)}}},rowSelected:function(model,row,record){var feature=record.getFeature();if(!this._selecting&&feature){var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){if(layers[i].selectedFeatures.indexOf(feature)==-1){this._selecting=true;this.selectControl.select(feature);this._selecting=false;this.selectedFeatures.push(feature);break}}if(this.autoPanMapOnSelection){this.recenterToSelectionExtent()}}},rowDeselected:function(model,row,record){var feature=record.getFeature();if(!this._selecting&&feature){var layers=this.getLayers();for(var i=0,len=layers.length;i<len;i++){if(layers[i].selectedFeatures.indexOf(feature)!=-1){this._selecting=true;this.selectControl.unselect(feature);this._selecting=false;OpenLayers.Util.removeItem(this.selectedFeatures,feature);break}}if(this.autoPanMapOnSelection&&this.selectedFeatures.length>0){this.recenterToSelectionExtent()}}},getLayers:function(){return this.selectControl.layers||[this.selectControl.layer]},recenterToSelectionExtent:function(){var map=this.selectControl.map;var selectionExtent=this.getSelectionExtent();var selectionExtentZoom=map.getZoomForExtent(selectionExtent,false);if(selectionExtentZoom>map.getZoom()){map.setCenter(selectionExtent.getCenterLonLat())}else{map.zoomToExtent(selectionExtent)}},getSelectionExtent:function(){var maxExtent=null;var features=this.selectedFeatures;if(features&&(features.length>0)){var geometry=null;for(var i=0,len=features.length;i<len;i++){geometry=features[i].geometry;if(geometry){if(maxExtent===null){maxExtent=new OpenLayers.Bounds()}maxExtent.extend(geometry.getBounds())}}}return maxExtent}}};GeoExt.grid.FeatureSelectionModel=Ext.extend(Ext.grid.RowSelectionModel,new GeoExt.grid.FeatureSelectionModelMixin);Ext.namespace("gxp.grid");gxp.grid.FeatureGrid=Ext.extend(Ext.grid.GridPanel,{map:null,ignoreFields:null,includeFields:null,layer:null,columnsSortable:true,columnMenuDisabled:false,initComponent:function(){this.ignoreFields=["feature","state","fid"].concat(this.ignoreFields);if(this.store){this.cm=this.createColumnModel(this.store);if(this.map){this.layer=new OpenLayers.Layer.Vector(this.id+"_layer");this.map.addLayer(this.layer)}}else{this.store=new Ext.data.Store();this.cm=new Ext.grid.ColumnModel({columns:[]})}if(this.layer){this.sm=this.sm||new GeoExt.grid.FeatureSelectionModel({layerFromStore:false,layer:this.layer});if(this.store instanceof GeoExt.data.FeatureStore){this.store.bind(this.layer)}}if(!this.dateFormat){this.dateFormat=Ext.form.DateField.prototype.format}if(!this.timeFormat){this.timeFormat=Ext.form.TimeField.prototype.format}gxp.grid.FeatureGrid.superclass.initComponent.call(this)},onDestroy:function(){if(this.initialConfig&&this.initialConfig.map&&!this.initialConfig.layer){this.layer.destroy();delete this.layer}gxp.grid.FeatureGrid.superclass.onDestroy.apply(this,arguments)},setStore:function(store,schema){if(schema){this.schema=schema}if(store){if(this.store instanceof GeoExt.data.FeatureStore){this.store.unbind()}if(this.layer){this.layer.destroyFeatures();store.bind(this.layer)}this.reconfigure(store,this.createColumnModel(store))}else{this.reconfigure(new Ext.data.Store(),new Ext.grid.ColumnModel({columns:[]}))}},getColumns:function(store){function getRenderer(format){return function(value){var date=value;if(typeof value=="string"){date=Date.parseDate(value.replace(/Z$/,""),"c")}return date?date.format(format):value}}var columns=[],customEditors=this.customEditors||{},customRenderers=this.customRenderers||{},name,type,xtype,format,renderer;(this.schema||store.fields).each(function(f){if(this.schema){name=f.get("name");type=f.get("type").split(":").pop();format=null;switch(type){case"date":format=this.dateFormat;break;case"datetime":format=format?format:this.dateFormat+" "+this.timeFormat;xtype=undefined;renderer=getRenderer(format);break;case"boolean":xtype="booleancolumn";break;case"string":xtype="gridcolumn";break;default:xtype="numbercolumn";break}}else{name=f.name}if(this.ignoreFields.indexOf(name)===-1&&(this.includeFields===null||this.includeFields.indexOf(name)>=0)){var columnConfig=this.columnConfig?this.columnConfig[name]:null;columns.push(Ext.apply({dataIndex:name,hidden:this.fieldVisibility?(!this.fieldVisibility[name]):false,header:this.propertyNames?(this.propertyNames[name]||name):name,sortable:this.columnsSortable,menuDisabled:this.columnMenuDisabled,xtype:xtype,editor:customEditors[name]||{xtype:"textfield"},format:format,renderer:customRenderers[name]||(xtype?undefined:renderer)},columnConfig))}},this);return columns},createColumnModel:function(store){var columns=this.getColumns(store);return new Ext.grid.ColumnModel(columns)}});Ext.reg("gxp_featuregrid",gxp.grid.FeatureGrid);Ext.namespace("gxp.plugins");gxp.plugins.FeatureGrid=Ext.extend(gxp.plugins.ClickableFeatures,{ptype:"gxp_featuregrid",schema:null,showTotalResults:false,alwaysDisplayOnMap:false,displayMode:"all",autoExpand:false,autoCollapse:false,selectOnMap:false,displayFeatureText:"Display on map",firstPageTip:"First page",previousPageTip:"Previous page",zoomPageExtentTip:"Zoom to page extent",nextPageTip:"Next page",lastPageTip:"Last page",totalMsg:"Features {1} to {2} of {0}",displayTotalResults:function(){var featureManager=this.target.tools[this.featureManager];if(this.showTotalResults===true){this.displayItem.setText(featureManager.numberOfFeatures!==null?String.format(this.totalMsg,featureManager.numberOfFeatures,featureManager.pageIndex*featureManager.maxFeatures+Math.min(featureManager.numberOfFeatures,1),Math.min((featureManager.pageIndex+1)*featureManager.maxFeatures,featureManager.numberOfFeatures)):"")}},addOutput:function(config){var featureManager=this.target.tools[this.featureManager];var map=this.target.mapPanel.map,smCfg;this.selectControl=new OpenLayers.Control.SelectFeature(featureManager.featureLayer,this.initialConfig.controlOptions);if(this.selectOnMap){if(this.autoLoadFeature||(featureManager.paging&&featureManager.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING)){this.selectControl.events.on({activate:function(){map.events.register("click",this,this.noFeatureClick)},deactivate:function(){map.events.unregister("click",this,this.noFeatureClick)},scope:this})}map.addControl(this.selectControl);smCfg={selectControl:this.selectControl}}else{smCfg={selectControl:this.selectControl,singleSelect:false,autoActivateControl:false,listeners:{beforerowselect:function(){if((window.event&&window.event.type=="contextmenu")||this.selectControl.active||featureManager.featureStore.getModifiedRecords().length){return false}},scope:this}}}this.displayItem=new Ext.Toolbar.TextItem({});config=Ext.apply({xtype:"gxp_featuregrid",border:false,sm:new GeoExt.grid.FeatureSelectionModel(smCfg),autoScroll:true,columnMenuDisabled:!!featureManager.paging,bbar:(featureManager.paging?[{iconCls:"x-tbar-page-first",ref:"../firstPageButton",tooltip:this.firstPageTip,disabled:true,handler:function(){featureManager.setPage({index:0})}},{iconCls:"x-tbar-page-prev",ref:"../prevPageButton",tooltip:this.previousPageTip,disabled:true,handler:function(){featureManager.previousPage()}},{iconCls:"gxp-icon-zoom-to",ref:"../zoomToPageButton",tooltip:this.zoomPageExtentTip,disabled:true,hidden:(featureManager.pagingType!==gxp.plugins.FeatureManager.QUADTREE_PAGING)||featureManager.autoZoomPage,handler:function(){var extent=featureManager.getPageExtent();if(extent!==null){map.zoomToExtent(extent)}}},{iconCls:"x-tbar-page-next",ref:"../nextPageButton",tooltip:this.nextPageTip,disabled:true,handler:function(){featureManager.nextPage()}},{iconCls:"x-tbar-page-last",ref:"../lastPageButton",tooltip:this.lastPageTip,disabled:true,handler:function(){featureManager.setPage({index:"last"})}},{xtype:"tbspacer",width:10},this.displayItem]:[]).concat(["->"].concat(!this.alwaysDisplayOnMap?[{text:this.displayFeatureText,enableToggle:true,toggleHandler:function(btn,pressed){this.selectOnMap&&this.selectControl[pressed?"activate":"deactivate"]();featureManager[pressed?"showLayer":"hideLayer"](this.id,this.displayMode)},scope:this}]:[])),contextMenu:new Ext.menu.Menu({items:[]})},config||{});var featureGrid=gxp.plugins.FeatureGrid.superclass.addOutput.call(this,config);featureGrid.on({added:function(cmp,ownerCt){function onClear(){this.displayTotalResults();this.selectOnMap&&this.selectControl.deactivate();this.autoCollapse&&typeof ownerCt.collapse=="function"&&ownerCt.collapse()}function onPopulate(){this.displayTotalResults();this.selectOnMap&&this.selectControl.activate();this.autoExpand&&typeof ownerCt.expand=="function"&&ownerCt.expand()}featureManager.on({query:function(tool,store){if(store&&store.getCount()){onPopulate.call(this)}else{onClear.call(this)}},layerchange:onClear,clearfeatures:onClear,scope:this})},contextmenu:function(event){if(featureGrid.contextMenu.items.getCount()>0){var rowIndex=featureGrid.getView().findRowIndex(event.getTarget());if(rowIndex!==false){featureGrid.getSelectionModel().selectRow(rowIndex);featureGrid.contextMenu.showAt(event.getXY());event.stopEvent()}}},scope:this});if(this.alwaysDisplayOnMap||(this.selectOnMap===true&&this.displayMode==="selected")){featureManager.showLayer(this.id,this.displayMode)}featureManager.paging&&featureManager.on({beforesetpage:function(){featureGrid.zoomToPageButton.disable()},setpage:function(mgr,condition,callback,scope,pageIndex,numPages){var paging=(numPages>0);featureGrid.zoomToPageButton.setDisabled(!paging);var prev=(paging&&(pageIndex!==0));featureGrid.firstPageButton.setDisabled(!prev);featureGrid.prevPageButton.setDisabled(!prev);var next=(paging&&(pageIndex!==numPages-1));featureGrid.lastPageButton.setDisabled(!next);featureGrid.nextPageButton.setDisabled(!next)},scope:this});function onLayerChange(){var schema=featureManager.schema,ignoreFields=["feature","state","fid"];schema&&schema.each(function(r){r.get("type").indexOf("gml:")==0&&ignoreFields.push(r.get("name"))});featureGrid.ignoreFields=ignoreFields;featureGrid.setStore(featureManager.featureStore,schema);if(!featureManager.featureStore){if(featureManager.paging){featureGrid.lastPageButton.disable();featureGrid.nextPageButton.disable();featureGrid.firstPageButton.disable();featureGrid.prevPageButton.disable();featureGrid.zoomToPageButton.disable()}this.displayTotalResults()}}if(featureManager.featureStore){onLayerChange.call(this)}featureManager.on("layerchange",onLayerChange,this);return featureGrid}});Ext.preg(gxp.plugins.FeatureGrid.prototype.ptype,gxp.plugins.FeatureGrid);Ext.namespace("gxp.plugins");gxp.plugins.StyleWriter=Ext.extend(Ext.util.Observable,{deletedStyles:null,constructor:function(config){this.initialConfig=config;Ext.apply(this,config);this.deletedStyles=[];gxp.plugins.StyleWriter.superclass.constructor.apply(this,arguments)},init:function(target){this.target=target;target.stylesStore.on({remove:function(store,record,index){var styleName=record.get("name");record.get("name")===styleName&&this.deletedStyles.push(styleName)},scope:this});target.on({beforesaved:this.write,scope:this})},write:function(target,options){target.stylesStore.commitChanges();target.fireEvent("saved",target,target.selectedStyle.get("name"))}});Ext.namespace("gxp.plugins");gxp.plugins.GeoServerStyleWriter=Ext.extend(gxp.plugins.StyleWriter,{baseUrl:"/geoserver/rest",constructor:function(config){this.initialConfig=config;Ext.apply(this,config);gxp.plugins.GeoServerStyleWriter.superclass.constructor.apply(this,arguments)},write:function(options){delete this._failed;options=options||{};var dispatchQueue=[];var store=this.target.stylesStore;store.each(function(rec){(rec.phantom||store.modified.indexOf(rec)!==-1)&&this.writeStyle(rec,dispatchQueue)},this);var success=function(){var target=this.target;if(this._failed!==true){this.deleteStyles();var modified=this.target.stylesStore.getModifiedRecords();for(var i=modified.length-1;i>=0;--i){modified[i].phantom=false}target.stylesStore.commitChanges();options.success&&options.success.call(options.scope);target.fireEvent("saved",target,target.selectedStyle.get("name"))}else{target.fireEvent("savefailed",target,target.selectedStyle.get("name"))}};if(dispatchQueue.length>0){gxp.util.dispatch(dispatchQueue,function(){this.assignStyles(options.defaultStyle,success)},this)}else{this.assignStyles(options.defaultStyle,success)}},writeStyle:function(styleRec,dispatchQueue){var styleName=styleRec.get("userStyle").name;dispatchQueue.push(function(callback,storage){Ext.Ajax.request({method:styleRec.phantom===true?"POST":"PUT",url:this.baseUrl+"/styles"+(styleRec.phantom===true?"":"/"+styleName+".xml"),headers:{"Content-Type":"application/vnd.ogc.sld+xml; charset=UTF-8"},xmlData:this.target.createSLD({userStyles:[styleName]}),failure:function(){this._failed=true;callback.call(this)},success:styleRec.phantom===true?function(){Ext.Ajax.request({method:"POST",url:this.baseUrl+"/layers/"+this.target.layerRecord.get("name")+"/styles.json",jsonData:{style:{name:styleName}},failure:function(){this._failed=true;callback.call(this)},success:callback,scope:this})}:callback,scope:this})})},assignStyles:function(defaultStyle,callback){var styles=[];this.target.stylesStore.each(function(rec){if(!defaultStyle&&rec.get("userStyle").isDefault===true){defaultStyle=rec.get("name")}if(rec.get("name")!==defaultStyle&&this.deletedStyles.indexOf(rec.id)===-1){styles.push({name:rec.get("name")})}},this);Ext.Ajax.request({method:"PUT",url:this.baseUrl+"/layers/"+this.target.layerRecord.get("name")+".json",jsonData:{layer:{defaultStyle:{name:defaultStyle},styles:styles.length>0?{style:styles}:{},enabled:true}},success:callback,failure:function(){this._failed=true;callback.call(this)},scope:this})},deleteStyles:function(){for(var i=0,len=this.deletedStyles.length;i<len;++i){Ext.Ajax.request({method:"DELETE",url:this.baseUrl+"/styles/"+this.deletedStyles[i]+"?purge=true"})}this.deletedStyles=[]}});Ext.preg("gxp_geoserverstylewriter",gxp.plugins.GeoServerStyleWriter);Ext.namespace("gxp.plugins");gxp.plugins.LayerSource=Ext.extend(Ext.util.Observable,{store:null,lazy:false,hidden:false,title:"",constructor:function(config){this.initialConfig=config;Ext.apply(this,config);this.addEvents("ready","failure");gxp.plugins.LayerSource.superclass.constructor.apply(this,arguments)},init:function(target){this.target=target;this.createStore()},getMapProjection:function(){var projConfig=this.target.mapPanel.map.projection;return this.target.mapPanel.map.getProjectionObject()||(projConfig&&new OpenLayers.Projection(projConfig))||new OpenLayers.Projection("EPSG:4326")},getProjection:function(layerRecord){var layer=layerRecord.getLayer();var mapProj=this.getMapProjection();var proj=layer.projection?layer.projection instanceof OpenLayers.Projection?layer.projection:new OpenLayers.Projection(layer.projection):mapProj;return proj.equals(mapProj)?mapProj:null},createStore:function(){this.fireEvent("ready",this)},createLayerRecord:function(config){},getConfigForRecord:function(record){var layer=record.getLayer();return{source:record.get("source"),name:record.get("name"),title:record.get("title"),visibility:layer.getVisibility(),opacity:layer.opacity||undefined,group:record.get("group"),fixed:record.get("fixed"),selected:record.get("selected")}},getState:function(){return Ext.apply({},this.initialConfig)}});OpenLayers.Layer.XYZ=OpenLayers.Class(OpenLayers.Layer.Grid,{isBaseLayer:true,sphericalMercator:false,zoomOffset:0,serverResolutions:null,initialize:function(name,url,options){if(options&&options.sphericalMercator||this.sphericalMercator){options=OpenLayers.Util.extend({projection:"EPSG:900913",numZoomLevels:19},options)}OpenLayers.Layer.Grid.prototype.initialize.apply(this,[name||this.name,url||this.url,{},options])},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.XYZ(this.name,this.url,this.getOptions())}obj=OpenLayers.Layer.Grid.prototype.clone.apply(this,[obj]);return obj},getURL:function(bounds){var xyz=this.getXYZ(bounds);var url=this.url;if(OpenLayers.Util.isArray(url)){var s=""+xyz.x+xyz.y+xyz.z;url=this.selectUrl(s,url)}return OpenLayers.String.format(url,xyz)},getXYZ:function(bounds){var res=this.getServerResolution();var x=Math.round((bounds.left-this.maxExtent.left)/(res*this.tileSize.w));var y=Math.round((this.maxExtent.top-bounds.top)/(res*this.tileSize.h));var z=this.getServerZoom();if(this.wrapDateLine){var limit=Math.pow(2,z);x=((x%limit)+limit)%limit}return{x:x,y:y,z:z}},setMap:function(map){OpenLayers.Layer.Grid.prototype.setMap.apply(this,arguments);if(!this.tileOrigin){this.tileOrigin=new OpenLayers.LonLat(this.maxExtent.left,this.maxExtent.bottom)}},CLASS_NAME:"OpenLayers.Layer.XYZ"});OpenLayers.Layer.Bing=OpenLayers.Class(OpenLayers.Layer.XYZ,{key:null,serverResolutions:[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135,0.29858214169740677,0.14929107084870338,0.07464553542435169],attributionTemplate:'<span class="olBingAttribution ${type}"><div><a target="_blank" href="http://www.bing.com/maps/"><img src="${logo}" /></a></div>${copyrights}<a style="white-space: nowrap" target="_blank" href="http://www.microsoft.com/maps/product/terms.html">Terms of Use</a></span>',metadata:null,protocolRegex:/^http:/i,type:"Road",culture:"en-US",metadataParams:null,tileOptions:null,protocol:~window.location.href.indexOf("http")?"":"http:",initialize:function(options){options=OpenLayers.Util.applyDefaults({sphericalMercator:true},options);var name=options.name||"Bing "+(options.type||this.type);var newArgs=[name,null,options];OpenLayers.Layer.XYZ.prototype.initialize.apply(this,newArgs);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:"anonymous"},this.options.tileOptions);this.loadMetadata()},loadMetadata:function(){this._callbackId="_callback_"+this.id.replace(/\./g,"_");window[this._callbackId]=OpenLayers.Function.bind(OpenLayers.Layer.Bing.processMetadata,this);var params=OpenLayers.Util.applyDefaults({key:this.key,jsonp:this._callbackId,include:"ImageryProviders"},this.metadataParams);var url=this.protocol+"//dev.virtualearth.net/REST/v1/Imagery/Metadata/"+this.type+"?"+OpenLayers.Util.getParameterString(params);var script=document.createElement("script");script.type="text/javascript";script.src=url;script.id=this._callbackId;document.getElementsByTagName("head")[0].appendChild(script)},initLayer:function(){var res=this.metadata.resourceSets[0].resources[0];var url=res.imageUrl.replace("{quadkey}","${quadkey}");url=url.replace("{culture}",this.culture);url=url.replace(this.protocolRegex,this.protocol);this.url=[];for(var i=0;i<res.imageUrlSubdomains.length;++i){this.url.push(url.replace("{subdomain}",res.imageUrlSubdomains[i]))}this.addOptions({maxResolution:Math.min(this.serverResolutions[res.zoomMin],this.maxResolution||Number.POSITIVE_INFINITY),numZoomLevels:Math.min(res.zoomMax+1-res.zoomMin,this.numZoomLevels)},true);if(!this.isBaseLayer){this.redraw()}this.updateAttribution()},getURL:function(bounds){if(!this.url){return}var xyz=this.getXYZ(bounds),x=xyz.x,y=xyz.y,z=xyz.z;var quadDigits=[];for(var i=z;i>0;--i){var digit="0";var mask=1<<(i-1);if((x&mask)!=0){digit++}if((y&mask)!=0){digit++;digit++}quadDigits.push(digit)}var quadKey=quadDigits.join("");var url=this.selectUrl(""+x+y+z,this.url);return OpenLayers.String.format(url,{quadkey:quadKey})},updateAttribution:function(){var metadata=this.metadata;if(!metadata.resourceSets||!this.map||!this.map.center){return}var res=metadata.resourceSets[0].resources[0];var extent=this.map.getExtent().transform(this.map.getProjectionObject(),new OpenLayers.Projection("EPSG:4326"));var providers=res.imageryProviders||[],zoom=OpenLayers.Util.indexOf(this.serverResolutions,this.getServerResolution()),copyrights="",provider,i,ii,j,jj,bbox,coverage;for(i=0,ii=providers.length;i<ii;++i){provider=providers[i];for(j=0,jj=provider.coverageAreas.length;j<jj;++j){coverage=provider.coverageAreas[j];bbox=OpenLayers.Bounds.fromArray(coverage.bbox,true);if(extent.intersectsBounds(bbox)&&zoom<=coverage.zoomMax&&zoom>=coverage.zoomMin){copyrights+=provider.attribution+" "}}}var logo=metadata.brandLogoUri.replace(this.protocolRegex,this.protocol);this.attribution=OpenLayers.String.format(this.attributionTemplate,{type:this.type.toLowerCase(),logo:logo,copyrights:copyrights});this.map&&this.map.events.triggerEvent("changelayer",{layer:this,property:"attribution"})},setMap:function(){OpenLayers.Layer.XYZ.prototype.setMap.apply(this,arguments);this.map.events.register("moveend",this,this.updateAttribution)},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.Bing(this.options)}obj=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[obj]);return obj},destroy:function(){this.map&&this.map.events.unregister("moveend",this,this.updateAttribution);OpenLayers.Layer.XYZ.prototype.destroy.apply(this,arguments)},CLASS_NAME:"OpenLayers.Layer.Bing"});OpenLayers.Layer.Bing.processMetadata=function(metadata){this.metadata=metadata;this.initLayer();var script=document.getElementById(this._callbackId);script.parentNode.removeChild(script);window[this._callbackId]=undefined;delete this._callbackId};Ext.namespace("gxp.plugins");gxp.plugins.BingSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_bingsource",title:"Bing Layers",roadTitle:"Bing Roads",aerialTitle:"Bing Aerial",labeledAerialTitle:"Bing Aerial With Labels",apiKey:"AqTGBsziZHIJYYxgivLBf0hVdrAk9mWO5cQcb8Yux8sW5M8c8opEC2lZqKR1ZZXf",createStore:function(){var layers=[new OpenLayers.Layer.Bing({key:this.apiKey,name:this.roadTitle,type:"Road",buffer:1,transitionEffect:"resize"}),new OpenLayers.Layer.Bing({key:this.apiKey,name:this.aerialTitle,type:"Aerial",buffer:1,transitionEffect:"resize"}),new OpenLayers.Layer.Bing({key:this.apiKey,name:this.labeledAerialTitle,type:"AerialWithLabels",buffer:1,transitionEffect:"resize"})];this.store=new GeoExt.data.LayerStore({layers:layers,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(l){l.set("group","background")});this.fireEvent("ready",this)},createLayerRecord:function(config){var record;var index=this.store.findExact("name",config.name);if(index>-1){record=this.store.getAt(index).copy(Ext.data.Record.id({}));var layer=record.getLayer().clone();if(config.title){layer.setName(config.title);record.set("title",config.title)}if("visibility" in config){layer.visibility=config.visibility}record.set("selected",config.selected||false);record.set("source",config.source);record.set("name",config.name);if("group" in config){record.set("group",config.group)}record.data.layer=layer;record.commit()}return record}});Ext.preg(gxp.plugins.BingSource.prototype.ptype,gxp.plugins.BingSource);OpenLayers.Layer.SphericalMercator={getExtent:function(){var extent=null;if(this.sphericalMercator){extent=this.map.calculateBounds()}else{extent=OpenLayers.Layer.FixedZoomLevels.prototype.getExtent.apply(this)}return extent},getLonLatFromViewPortPx:function(viewPortPx){return OpenLayers.Layer.prototype.getLonLatFromViewPortPx.apply(this,arguments)},getViewPortPxFromLonLat:function(lonlat){return OpenLayers.Layer.prototype.getViewPortPxFromLonLat.apply(this,arguments)},initMercatorParameters:function(){this.RESOLUTIONS=[];var maxResolution=156543.03390625;for(var zoom=0;zoom<=this.MAX_ZOOM_LEVEL;++zoom){this.RESOLUTIONS[zoom]=maxResolution/Math.pow(2,zoom)}this.units="m";this.projection=this.projection||"EPSG:900913"},forwardMercator:(function(){var gg=new OpenLayers.Projection("EPSG:4326");var sm=new OpenLayers.Projection("EPSG:900913");return function(lon,lat){var point=OpenLayers.Projection.transform({x:lon,y:lat},gg,sm);return new OpenLayers.LonLat(point.x,point.y)}})(),inverseMercator:(function(){var gg=new OpenLayers.Projection("EPSG:4326");var sm=new OpenLayers.Projection("EPSG:900913");return function(x,y){var point=OpenLayers.Projection.transform({x:x,y:y},sm,gg);return new OpenLayers.LonLat(point.x,point.y)}})()};OpenLayers.Layer.EventPane=OpenLayers.Class(OpenLayers.Layer,{smoothDragPan:true,isBaseLayer:true,isFixed:true,pane:null,mapObject:null,initialize:function(name,options){OpenLayers.Layer.prototype.initialize.apply(this,arguments);if(this.pane==null){this.pane=OpenLayers.Util.createDiv(this.div.id+"_EventPane")}},destroy:function(){this.mapObject=null;this.pane=null;OpenLayers.Layer.prototype.destroy.apply(this,arguments)},setMap:function(map){OpenLayers.Layer.prototype.setMap.apply(this,arguments);this.pane.style.zIndex=parseInt(this.div.style.zIndex)+1;this.pane.style.display=this.div.style.display;this.pane.style.width="100%";this.pane.style.height="100%";if(OpenLayers.BROWSER_NAME=="msie"){this.pane.style.background="url("+OpenLayers.Util.getImageLocation("blank.gif")+")"}if(this.isFixed){this.map.viewPortDiv.appendChild(this.pane)}else{this.map.layerContainerDiv.appendChild(this.pane)}this.loadMapObject();if(this.mapObject==null){this.loadWarningMessage()}},removeMap:function(map){if(this.pane&&this.pane.parentNode){this.pane.parentNode.removeChild(this.pane)}OpenLayers.Layer.prototype.removeMap.apply(this,arguments)},loadWarningMessage:function(){this.div.style.backgroundColor="darkblue";var viewSize=this.map.getSize();var msgW=Math.min(viewSize.w,300);var msgH=Math.min(viewSize.h,200);var size=new OpenLayers.Size(msgW,msgH);var centerPx=new OpenLayers.Pixel(viewSize.w/2,viewSize.h/2);var topLeft=centerPx.add(-size.w/2,-size.h/2);var div=OpenLayers.Util.createDiv(this.name+"_warning",topLeft,size,null,null,null,"auto");div.style.padding="7px";div.style.backgroundColor="yellow";div.innerHTML=this.getWarningHTML();this.div.appendChild(div)},getWarningHTML:function(){return""},display:function(display){OpenLayers.Layer.prototype.display.apply(this,arguments);this.pane.style.display=this.div.style.display},setZIndex:function(zIndex){OpenLayers.Layer.prototype.setZIndex.apply(this,arguments);this.pane.style.zIndex=parseInt(this.div.style.zIndex)+1},moveByPx:function(dx,dy){OpenLayers.Layer.prototype.moveByPx.apply(this,arguments);if(this.dragPanMapObject){this.dragPanMapObject(dx,-dy)}else{this.moveTo(this.map.getCachedCenter())}},moveTo:function(bounds,zoomChanged,dragging){OpenLayers.Layer.prototype.moveTo.apply(this,arguments);if(this.mapObject!=null){var newCenter=this.map.getCenter();var newZoom=this.map.getZoom();if(newCenter!=null){var moOldCenter=this.getMapObjectCenter();var oldCenter=this.getOLLonLatFromMapObjectLonLat(moOldCenter);var moOldZoom=this.getMapObjectZoom();var oldZoom=this.getOLZoomFromMapObjectZoom(moOldZoom);if(!(newCenter.equals(oldCenter))||newZoom!=oldZoom){if(!zoomChanged&&oldCenter&&this.dragPanMapObject&&this.smoothDragPan){var oldPx=this.map.getViewPortPxFromLonLat(oldCenter);var newPx=this.map.getViewPortPxFromLonLat(newCenter);this.dragPanMapObject(newPx.x-oldPx.x,oldPx.y-newPx.y)}else{var center=this.getMapObjectLonLatFromOLLonLat(newCenter);var zoom=this.getMapObjectZoomFromOLZoom(newZoom);this.setMapObjectCenter(center,zoom,dragging)}}}}},getLonLatFromViewPortPx:function(viewPortPx){var lonlat=null;if((this.mapObject!=null)&&(this.getMapObjectCenter()!=null)){var moPixel=this.getMapObjectPixelFromOLPixel(viewPortPx);var moLonLat=this.getMapObjectLonLatFromMapObjectPixel(moPixel);lonlat=this.getOLLonLatFromMapObjectLonLat(moLonLat)}return lonlat},getViewPortPxFromLonLat:function(lonlat){var viewPortPx=null;if((this.mapObject!=null)&&(this.getMapObjectCenter()!=null)){var moLonLat=this.getMapObjectLonLatFromOLLonLat(lonlat);var moPixel=this.getMapObjectPixelFromMapObjectLonLat(moLonLat);viewPortPx=this.getOLPixelFromMapObjectPixel(moPixel)}return viewPortPx},getOLLonLatFromMapObjectLonLat:function(moLonLat){var olLonLat=null;if(moLonLat!=null){var lon=this.getLongitudeFromMapObjectLonLat(moLonLat);var lat=this.getLatitudeFromMapObjectLonLat(moLonLat);olLonLat=new OpenLayers.LonLat(lon,lat)}return olLonLat},getMapObjectLonLatFromOLLonLat:function(olLonLat){var moLatLng=null;if(olLonLat!=null){moLatLng=this.getMapObjectLonLatFromLonLat(olLonLat.lon,olLonLat.lat)}return moLatLng},getOLPixelFromMapObjectPixel:function(moPixel){var olPixel=null;if(moPixel!=null){var x=this.getXFromMapObjectPixel(moPixel);var y=this.getYFromMapObjectPixel(moPixel);olPixel=new OpenLayers.Pixel(x,y)}return olPixel},getMapObjectPixelFromOLPixel:function(olPixel){var moPixel=null;if(olPixel!=null){moPixel=this.getMapObjectPixelFromXY(olPixel.x,olPixel.y)}return moPixel},CLASS_NAME:"OpenLayers.Layer.EventPane"});OpenLayers.Layer.FixedZoomLevels=OpenLayers.Class({initialize:function(){},initResolutions:function(){var props=["minZoomLevel","maxZoomLevel","numZoomLevels"];for(var i=0,len=props.length;i<len;i++){var property=props[i];this[property]=(this.options[property]!=null)?this.options[property]:this.map[property]}if((this.minZoomLevel==null)||(this.minZoomLevel<this.MIN_ZOOM_LEVEL)){this.minZoomLevel=this.MIN_ZOOM_LEVEL}var desiredZoomLevels;var limitZoomLevels=this.MAX_ZOOM_LEVEL-this.minZoomLevel+1;if(((this.options.numZoomLevels==null)&&(this.options.maxZoomLevel!=null))||((this.numZoomLevels==null)&&(this.maxZoomLevel!=null))){desiredZoomLevels=this.maxZoomLevel-this.minZoomLevel+1}else{desiredZoomLevels=this.numZoomLevels}if(desiredZoomLevels!=null){this.numZoomLevels=Math.min(desiredZoomLevels,limitZoomLevels)}else{this.numZoomLevels=limitZoomLevels}this.maxZoomLevel=this.minZoomLevel+this.numZoomLevels-1;if(this.RESOLUTIONS!=null){var resolutionsIndex=0;this.resolutions=[];for(var i=this.minZoomLevel;i<=this.maxZoomLevel;i++){this.resolutions[resolutionsIndex++]=this.RESOLUTIONS[i]}this.maxResolution=this.resolutions[0];this.minResolution=this.resolutions[this.resolutions.length-1]}},getResolution:function(){if(this.resolutions!=null){return OpenLayers.Layer.prototype.getResolution.apply(this,arguments)}else{var resolution=null;var viewSize=this.map.getSize();var extent=this.getExtent();if((viewSize!=null)&&(extent!=null)){resolution=Math.max(extent.getWidth()/viewSize.w,extent.getHeight()/viewSize.h)}return resolution}},getExtent:function(){var size=this.map.getSize();var tl=this.getLonLatFromViewPortPx({x:0,y:0});var br=this.getLonLatFromViewPortPx({x:size.w,y:size.h});if((tl!=null)&&(br!=null)){return new OpenLayers.Bounds(tl.lon,br.lat,br.lon,tl.lat)}else{return null}},getZoomForResolution:function(resolution){if(this.resolutions!=null){return OpenLayers.Layer.prototype.getZoomForResolution.apply(this,arguments)}else{var extent=OpenLayers.Layer.prototype.getExtent.apply(this,[]);return this.getZoomForExtent(extent)}},getOLZoomFromMapObjectZoom:function(moZoom){var zoom=null;if(moZoom!=null){zoom=moZoom-this.minZoomLevel;if(this.map.baseLayer!==this){zoom=this.map.baseLayer.getZoomForResolution(this.getResolutionForZoom(zoom))}}return zoom},getMapObjectZoomFromOLZoom:function(olZoom){var zoom=null;if(olZoom!=null){zoom=olZoom+this.minZoomLevel;if(this.map.baseLayer!==this){zoom=this.getZoomForResolution(this.map.baseLayer.getResolutionForZoom(zoom))}}return zoom},CLASS_NAME:"OpenLayers.Layer.FixedZoomLevels"});OpenLayers.Layer.Google=OpenLayers.Class(OpenLayers.Layer.EventPane,OpenLayers.Layer.FixedZoomLevels,{MIN_ZOOM_LEVEL:0,MAX_ZOOM_LEVEL:21,RESOLUTIONS:[1.40625,0.703125,0.3515625,0.17578125,0.087890625,0.0439453125,0.02197265625,0.010986328125,0.0054931640625,0.00274658203125,0.001373291015625,0.0006866455078125,0.00034332275390625,0.000171661376953125,0.0000858306884765625,0.00004291534423828125,0.00002145767211914062,0.00001072883605957031,0.00000536441802978515,0.00000268220901489257,0.000001341104507446289,6.705522537231445e-7],type:null,wrapDateLine:true,sphericalMercator:false,version:null,initialize:function(name,options){options=options||{};if(!options.version){options.version=typeof GMap2==="function"?"2":"3"}var mixin=OpenLayers.Layer.Google["v"+options.version.replace(/\./g,"_")];if(mixin){OpenLayers.Util.applyDefaults(options,mixin)}else{throw"Unsupported Google Maps API version: "+options.version}OpenLayers.Util.applyDefaults(options,mixin.DEFAULTS);if(options.maxExtent){options.maxExtent=options.maxExtent.clone()}OpenLayers.Layer.EventPane.prototype.initialize.apply(this,[name,options]);OpenLayers.Layer.FixedZoomLevels.prototype.initialize.apply(this,[name,options]);if(this.sphericalMercator){OpenLayers.Util.extend(this,OpenLayers.Layer.SphericalMercator);this.initMercatorParameters()}},clone:function(){return new OpenLayers.Layer.Google(this.name,this.getOptions())},setVisibility:function(visible){var opacity=this.opacity==null?1:this.opacity;OpenLayers.Layer.EventPane.prototype.setVisibility.apply(this,arguments);this.setOpacity(opacity)},display:function(visible){if(!this._dragging){this.setGMapVisibility(visible)}OpenLayers.Layer.EventPane.prototype.display.apply(this,arguments)},moveTo:function(bounds,zoomChanged,dragging){this._dragging=dragging;OpenLayers.Layer.EventPane.prototype.moveTo.apply(this,arguments);delete this._dragging},setOpacity:function(opacity){if(opacity!==this.opacity){if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"opacity"})}this.opacity=opacity}if(this.getVisibility()){var container=this.getMapContainer();OpenLayers.Util.modifyDOMElement(container,null,null,null,null,null,null,opacity)}},destroy:function(){if(this.map){this.setGMapVisibility(false);var cache=OpenLayers.Layer.Google.cache[this.map.id];if(cache&&cache.count<=1){this.removeGMapElements()}}OpenLayers.Layer.EventPane.prototype.destroy.apply(this,arguments)},removeGMapElements:function(){var cache=OpenLayers.Layer.Google.cache[this.map.id];if(cache){var container=this.mapObject&&this.getMapContainer();if(container&&container.parentNode){container.parentNode.removeChild(container)}var termsOfUse=cache.termsOfUse;if(termsOfUse&&termsOfUse.parentNode){termsOfUse.parentNode.removeChild(termsOfUse)}var poweredBy=cache.poweredBy;if(poweredBy&&poweredBy.parentNode){poweredBy.parentNode.removeChild(poweredBy)}if(this.mapObject&&window.google&&google.maps&&google.maps.event&&google.maps.event.clearListeners){google.maps.event.clearListeners(this.mapObject,"tilesloaded")}}},removeMap:function(map){if(this.visibility&&this.mapObject){this.setGMapVisibility(false)}var cache=OpenLayers.Layer.Google.cache[map.id];if(cache){if(cache.count<=1){this.removeGMapElements();delete OpenLayers.Layer.Google.cache[map.id]}else{--cache.count}}delete this.termsOfUse;delete this.poweredBy;delete this.mapObject;delete this.dragObject;OpenLayers.Layer.EventPane.prototype.removeMap.apply(this,arguments)},getOLBoundsFromMapObjectBounds:function(moBounds){var olBounds=null;if(moBounds!=null){var sw=moBounds.getSouthWest();var ne=moBounds.getNorthEast();if(this.sphericalMercator){sw=this.forwardMercator(sw.lng(),sw.lat());ne=this.forwardMercator(ne.lng(),ne.lat())}else{sw=new OpenLayers.LonLat(sw.lng(),sw.lat());ne=new OpenLayers.LonLat(ne.lng(),ne.lat())}olBounds=new OpenLayers.Bounds(sw.lon,sw.lat,ne.lon,ne.lat)}return olBounds},getWarningHTML:function(){return OpenLayers.i18n("googleWarning")},getMapObjectCenter:function(){return this.mapObject.getCenter()},getMapObjectZoom:function(){return this.mapObject.getZoom()},getLongitudeFromMapObjectLonLat:function(moLonLat){return this.sphericalMercator?this.forwardMercator(moLonLat.lng(),moLonLat.lat()).lon:moLonLat.lng()},getLatitudeFromMapObjectLonLat:function(moLonLat){var lat=this.sphericalMercator?this.forwardMercator(moLonLat.lng(),moLonLat.lat()).lat:moLonLat.lat();return lat},getXFromMapObjectPixel:function(moPixel){return moPixel.x},getYFromMapObjectPixel:function(moPixel){return moPixel.y},CLASS_NAME:"OpenLayers.Layer.Google"});OpenLayers.Layer.Google.cache={};OpenLayers.Layer.Google.v2={termsOfUse:null,poweredBy:null,dragObject:null,loadMapObject:function(){if(!this.type){this.type=G_NORMAL_MAP}var mapObject,termsOfUse,poweredBy;var cache=OpenLayers.Layer.Google.cache[this.map.id];if(cache){mapObject=cache.mapObject;termsOfUse=cache.termsOfUse;poweredBy=cache.poweredBy;++cache.count}else{var container=this.map.viewPortDiv;var div=document.createElement("div");div.id=this.map.id+"_GMap2Container";div.style.position="absolute";div.style.width="100%";div.style.height="100%";container.appendChild(div);try{mapObject=new GMap2(div);termsOfUse=div.lastChild;container.appendChild(termsOfUse);termsOfUse.style.zIndex="1100";termsOfUse.style.right="";termsOfUse.style.bottom="";termsOfUse.className="olLayerGoogleCopyright";poweredBy=div.lastChild;container.appendChild(poweredBy);poweredBy.style.zIndex="1100";poweredBy.style.right="";poweredBy.style.bottom="";poweredBy.className="olLayerGooglePoweredBy gmnoprint"}catch(e){throw (e)}OpenLayers.Layer.Google.cache[this.map.id]={mapObject:mapObject,termsOfUse:termsOfUse,poweredBy:poweredBy,count:1}}this.mapObject=mapObject;this.termsOfUse=termsOfUse;this.poweredBy=poweredBy;if(OpenLayers.Util.indexOf(this.mapObject.getMapTypes(),this.type)===-1){this.mapObject.addMapType(this.type)}if(typeof mapObject.getDragObject=="function"){this.dragObject=mapObject.getDragObject()}else{this.dragPanMapObject=null}if(this.isBaseLayer===false){this.setGMapVisibility(this.div.style.display!=="none")}},onMapResize:function(){if(this.visibility&&this.mapObject.isLoaded()){this.mapObject.checkResize()}else{if(!this._resized){var layer=this;var handle=GEvent.addListener(this.mapObject,"load",function(){GEvent.removeListener(handle);delete layer._resized;layer.mapObject.checkResize();layer.moveTo(layer.map.getCenter(),layer.map.getZoom())})}this._resized=true}},setGMapVisibility:function(visible){var cache=OpenLayers.Layer.Google.cache[this.map.id];if(cache){var container=this.mapObject.getContainer();if(visible===true){this.mapObject.setMapType(this.type);container.style.display="";this.termsOfUse.style.left="";this.termsOfUse.style.display="";this.poweredBy.style.display="";cache.displayed=this.id}else{if(cache.displayed===this.id){delete cache.displayed}if(!cache.displayed){container.style.display="none";this.termsOfUse.style.display="none";this.termsOfUse.style.left="-9999px";this.poweredBy.style.display="none"}}}},getMapContainer:function(){return this.mapObject.getContainer()},getMapObjectBoundsFromOLBounds:function(olBounds){var moBounds=null;if(olBounds!=null){var sw=this.sphericalMercator?this.inverseMercator(olBounds.bottom,olBounds.left):new OpenLayers.LonLat(olBounds.bottom,olBounds.left);var ne=this.sphericalMercator?this.inverseMercator(olBounds.top,olBounds.right):new OpenLayers.LonLat(olBounds.top,olBounds.right);moBounds=new GLatLngBounds(new GLatLng(sw.lat,sw.lon),new GLatLng(ne.lat,ne.lon))}return moBounds},setMapObjectCenter:function(center,zoom){this.mapObject.setCenter(center,zoom)},dragPanMapObject:function(dX,dY){this.dragObject.moveBy(new GSize(-dX,dY))},getMapObjectLonLatFromMapObjectPixel:function(moPixel){return this.mapObject.fromContainerPixelToLatLng(moPixel)},getMapObjectPixelFromMapObjectLonLat:function(moLonLat){return this.mapObject.fromLatLngToContainerPixel(moLonLat)},getMapObjectZoomFromMapObjectBounds:function(moBounds){return this.mapObject.getBoundsZoomLevel(moBounds)},getMapObjectLonLatFromLonLat:function(lon,lat){var gLatLng;if(this.sphericalMercator){var lonlat=this.inverseMercator(lon,lat);gLatLng=new GLatLng(lonlat.lat,lonlat.lon)}else{gLatLng=new GLatLng(lat,lon)}return gLatLng},getMapObjectPixelFromXY:function(x,y){return new GPoint(x,y)}};OpenLayers.Layer.Google.v3={DEFAULTS:{sphericalMercator:true,projection:"EPSG:900913"},animationEnabled:true,loadMapObject:function(){if(!this.type){this.type=google.maps.MapTypeId.ROADMAP}var mapObject;var cache=OpenLayers.Layer.Google.cache[this.map.id];if(cache){mapObject=cache.mapObject;++cache.count}else{var center=this.map.getCenter();var container=document.createElement("div");container.className="olForeignContainer";container.style.width="100%";container.style.height="100%";mapObject=new google.maps.Map(container,{center:center?new google.maps.LatLng(center.lat,center.lon):new google.maps.LatLng(0,0),zoom:this.map.getZoom()||0,mapTypeId:this.type,disableDefaultUI:true,keyboardShortcuts:false,draggable:false,disableDoubleClickZoom:true,scrollwheel:false,streetViewControl:false});var googleControl=document.createElement("div");googleControl.style.width="100%";googleControl.style.height="100%";mapObject.controls[google.maps.ControlPosition.TOP_LEFT].push(googleControl);cache={googleControl:googleControl,mapObject:mapObject,count:1};OpenLayers.Layer.Google.cache[this.map.id]=cache}this.mapObject=mapObject;this.setGMapVisibility(this.visibility)},onMapResize:function(){if(this.visibility){google.maps.event.trigger(this.mapObject,"resize")}},setGMapVisibility:function(visible){var cache=OpenLayers.Layer.Google.cache[this.map.id];var map=this.map;if(cache){var type=this.type;var layers=map.layers;var layer;for(var i=layers.length-1;i>=0;--i){layer=layers[i];if(layer instanceof OpenLayers.Layer.Google&&layer.visibility===true&&layer.inRange===true){type=layer.type;visible=true;break}}var container=this.mapObject.getDiv();if(visible===true){if(container.parentNode!==map.div){if(!cache.rendered){var me=this;google.maps.event.addListenerOnce(this.mapObject,"tilesloaded",function(){cache.rendered=true;me.setGMapVisibility(me.getVisibility());me.moveTo(me.map.getCenter())})}else{map.div.appendChild(container);cache.googleControl.appendChild(map.viewPortDiv);google.maps.event.trigger(this.mapObject,"resize")}}this.mapObject.setMapTypeId(type)}else{if(cache.googleControl.hasChildNodes()){map.div.appendChild(map.viewPortDiv);map.div.removeChild(container)}}}},getMapContainer:function(){return this.mapObject.getDiv()},getMapObjectBoundsFromOLBounds:function(olBounds){var moBounds=null;if(olBounds!=null){var sw=this.sphericalMercator?this.inverseMercator(olBounds.bottom,olBounds.left):new OpenLayers.LonLat(olBounds.bottom,olBounds.left);var ne=this.sphericalMercator?this.inverseMercator(olBounds.top,olBounds.right):new OpenLayers.LonLat(olBounds.top,olBounds.right);moBounds=new google.maps.LatLngBounds(new google.maps.LatLng(sw.lat,sw.lon),new google.maps.LatLng(ne.lat,ne.lon))}return moBounds},getMapObjectLonLatFromMapObjectPixel:function(moPixel){var size=this.map.getSize();var lon=this.getLongitudeFromMapObjectLonLat(this.mapObject.center);var lat=this.getLatitudeFromMapObjectLonLat(this.mapObject.center);var res=this.map.getResolution();var delta_x=moPixel.x-(size.w/2);var delta_y=moPixel.y-(size.h/2);var lonlat=new OpenLayers.LonLat(lon+delta_x*res,lat-delta_y*res);if(this.wrapDateLine){lonlat=lonlat.wrapDateLine(this.maxExtent)}return this.getMapObjectLonLatFromLonLat(lonlat.lon,lonlat.lat)},getMapObjectPixelFromMapObjectLonLat:function(moLonLat){var lon=this.getLongitudeFromMapObjectLonLat(moLonLat);var lat=this.getLatitudeFromMapObjectLonLat(moLonLat);var res=this.map.getResolution();var extent=this.map.getExtent();return this.getMapObjectPixelFromXY((1/res*(lon-extent.left)),(1/res*(extent.top-lat)))},setMapObjectCenter:function(center,zoom){if(this.animationEnabled===false&&zoom!=this.mapObject.zoom){var mapContainer=this.getMapContainer();google.maps.event.addListenerOnce(this.mapObject,"idle",function(){mapContainer.style.visibility=""});mapContainer.style.visibility="hidden"}this.mapObject.setOptions({center:center,zoom:zoom})},getMapObjectZoomFromMapObjectBounds:function(moBounds){return this.mapObject.getBoundsZoomLevel(moBounds)},getMapObjectLonLatFromLonLat:function(lon,lat){var gLatLng;if(this.sphericalMercator){var lonlat=this.inverseMercator(lon,lat);gLatLng=new google.maps.LatLng(lonlat.lat,lonlat.lon)}else{gLatLng=new google.maps.LatLng(lat,lon)}return gLatLng},getMapObjectPixelFromXY:function(x,y){return new google.maps.Point(x,y)}};Ext.namespace("gxp.plugins");gxp.plugins.GoogleSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_googlesource",timeout:7000,title:"Google Layers",roadmapAbstract:"Show street map",satelliteAbstract:"Show satellite imagery",hybridAbstract:"Show imagery with street names",terrainAbstract:"Show street map with terrain",otherParams:"sensor=false",constructor:function(config){this.config=config;gxp.plugins.GoogleSource.superclass.constructor.apply(this,arguments)},createStore:function(){gxp.plugins.GoogleSource.loader.onLoad({otherParams:this.otherParams,timeout:this.timeout,callback:this.syncCreateStore,errback:function(){delete this.store;this.fireEvent("failure",this,"The Google Maps script failed to load within the provided timeout ("+(this.timeout/1000)+" s).")},scope:this})},syncCreateStore:function(){var mapTypes={ROADMAP:{"abstract":this.roadmapAbstract,MAX_ZOOM_LEVEL:20},SATELLITE:{"abstract":this.satelliteAbstract},HYBRID:{"abstract":this.hybridAbstract},TERRAIN:{"abstract":this.terrainAbstract,MAX_ZOOM_LEVEL:15}};var layers=[];var name,mapType;for(name in mapTypes){mapType=google.maps.MapTypeId[name];layers.push(new OpenLayers.Layer.Google("Google "+mapType.replace(/\w/,function(c){return c.toUpperCase()}),{type:mapType,typeName:name,MAX_ZOOM_LEVEL:mapTypes[name].MAX_ZOOM_LEVEL,maxExtent:new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34),restrictedExtent:new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34),projection:this.projection}))}this.store=new GeoExt.data.LayerStore({layers:layers,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"typeName"},{name:"abstract",type:"string"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(l){l.set("abstract",mapTypes[l.get("name")]["abstract"])});this.fireEvent("ready",this)},createLayerRecord:function(config){var record;var cmp=function(l){return l.get("name")===config.name};if(this.target.mapPanel.layers.findBy(cmp)==-1){record=this.store.getAt(this.store.findBy(cmp)).clone();var layer=record.getLayer();if(config.title){layer.setName(config.title);record.set("title",config.title)}if("visibility" in config){layer.visibility=config.visibility}record.set("selected",config.selected||false);record.set("source",config.source);record.set("name",config.name);if("group" in config){record.set("group",config.group)}record.commit()}return record}});gxp.plugins.GoogleSource.loader=new (Ext.extend(Ext.util.Observable,{ready:!!(window.google&&google.maps),loading:false,constructor:function(){this.addEvents("ready","failure");return Ext.util.Observable.prototype.constructor.apply(this,arguments)},onScriptLoad:function(){var monitor=gxp.plugins.GoogleSource.loader;if(!monitor.ready){monitor.ready=true;monitor.loading=false;monitor.fireEvent("ready")}},onLoad:function(options){if(this.ready){window.setTimeout(function(){options.callback.call(options.scope)},0)}else{if(!this.loading){this.loadScript(options)}else{this.on({ready:options.callback,failure:options.errback||Ext.emptyFn,scope:options.scope})}}},loadScript:function(options){var params={autoload:Ext.encode({modules:[{name:"maps",version:3.3,nocss:"true",callback:"gxp.plugins.GoogleSource.loader.onScriptLoad",other_params:options.otherParams}]})};var script=document.createElement("script");script.src="http://www.google.com/jsapi?"+Ext.urlEncode(params);var errback=options.errback||Ext.emptyFn;var timeout=options.timeout||gxp.plugins.GoogleSource.prototype.timeout;window.setTimeout((function(){if(!gxp.plugins.GoogleSource.loader.ready){this.loading=false;this.ready=false;document.getElementsByTagName("head")[0].removeChild(script);errback.call(options.scope);this.fireEvent("failure");this.purgeListeners()}}).createDelegate(this),timeout);this.on({ready:options.callback,scope:options.scope});this.loading=true;function append(){document.getElementsByTagName("head")[0].appendChild(script)}if(document.body){append()}else{Ext.onReady(append)}}}))();Ext.preg(gxp.plugins.GoogleSource.prototype.ptype,gxp.plugins.GoogleSource);Ext.namespace("gxp.plugins");gxp.plugins.OLSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_olsource",createLayerRecord:function(config){var record;var Class=window;var parts=config.type.split(".");for(var i=0,ii=parts.length;i<ii;++i){Class=Class[parts[i]];if(!Class){break}}if(Class&&Class.prototype&&Class.prototype.initialize){var Constructor=function(){Class.prototype.initialize.apply(this,config.args)};Constructor.prototype=Class.prototype;var layer=new Constructor();if("visibility" in config){layer.visibility=config.visibility}var Record=GeoExt.data.LayerRecord.create([{name:"name",type:"string"},{name:"source",type:"string"},{name:"group",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"},{name:"type",type:"string"},{name:"args"},{name:"queryable",type:"boolean"}]);var data={layer:layer,title:layer.name,name:config.name||layer.name,source:config.source,group:config.group,fixed:("fixed" in config)?config.fixed:false,selected:("selected" in config)?config.selected:false,queryable:("queryable" in config)?config.queryable:false,type:config.type,args:config.args,properties:("properties" in config)?config.properties:undefined};record=new Record(data,layer.id)}else{throw new Error("Cannot construct OpenLayers layer from given type: "+config.type)}return record},getConfigForRecord:function(record){var config=gxp.plugins.OLSource.superclass.getConfigForRecord.apply(this,arguments);var layer=record.getLayer();return Ext.apply(config,{type:record.get("type"),args:record.get("args")})}});Ext.preg(gxp.plugins.OLSource.prototype.ptype,gxp.plugins.OLSource);OpenLayers.Layer.OSM=OpenLayers.Class(OpenLayers.Layer.XYZ,{name:"OpenStreetMap",url:["http://a.tile.openstreetmap.org/${z}/${x}/${y}.png","http://b.tile.openstreetmap.org/${z}/${x}/${y}.png","http://c.tile.openstreetmap.org/${z}/${x}/${y}.png"],attribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",sphericalMercator:true,wrapDateLine:true,tileOptions:null,initialize:function(name,url,options){OpenLayers.Layer.XYZ.prototype.initialize.apply(this,arguments);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:"anonymous"},this.options&&this.options.tileOptions)},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.OSM(this.name,this.url,this.getOptions())}obj=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[obj]);return obj},CLASS_NAME:"OpenLayers.Layer.OSM"});Ext.namespace("gxp.plugins");gxp.plugins.OSMSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_osmsource",title:"OpenStreetMap Layers",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/' target='_blank'>OpenStreetMap</a>",createStore:function(){var options={projection:"EPSG:900913",maxExtent:new OpenLayers.Bounds(-128*156543.0339,-128*156543.0339,128*156543.0339,128*156543.0339),maxResolution:156543.03390625,numZoomLevels:19,units:"m",buffer:1,transitionEffect:"resize"};var layers=[new OpenLayers.Layer.OSM("OpenStreetMap",["http://a.tile.openstreetmap.org/${z}/${x}/${y}.png","http://b.tile.openstreetmap.org/${z}/${x}/${y}.png","http://c.tile.openstreetmap.org/${z}/${x}/${y}.png"],OpenLayers.Util.applyDefaults({attribution:this.mapnikAttribution,type:"mapnik"},options))];this.store=new GeoExt.data.LayerStore({layers:layers,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(l){l.set("group","background")});this.fireEvent("ready",this)},createLayerRecord:function(config){var record;var index=this.store.findExact("name",config.name);if(index>-1){record=this.store.getAt(index).copy(Ext.data.Record.id({}));var layer=record.getLayer().clone();if(config.title){layer.setName(config.title);record.set("title",config.title)}if("visibility" in config){layer.visibility=config.visibility}record.set("selected",config.selected||false);record.set("source",config.source);record.set("name",config.name);if("group" in config){record.set("group",config.group)}record.data.layer=layer;record.commit()}return record}});Ext.preg(gxp.plugins.OSMSource.prototype.ptype,gxp.plugins.OSMSource);OpenLayers.Layer.TMS=OpenLayers.Class(OpenLayers.Layer.Grid,{serviceVersion:"1.0.0",layername:null,type:null,isBaseLayer:true,tileOrigin:null,serverResolutions:null,zoomOffset:0,initialize:function(name,url,options){var newArguments=[];newArguments.push(name,url,{},options);OpenLayers.Layer.Grid.prototype.initialize.apply(this,newArguments)},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.TMS(this.name,this.url,this.getOptions())}obj=OpenLayers.Layer.Grid.prototype.clone.apply(this,[obj]);return obj},getURL:function(bounds){bounds=this.adjustBounds(bounds);var res=this.getServerResolution();var x=Math.round((bounds.left-this.tileOrigin.lon)/(res*this.tileSize.w));var y=Math.round((bounds.bottom-this.tileOrigin.lat)/(res*this.tileSize.h));var z=this.getServerZoom();var path=this.serviceVersion+"/"+this.layername+"/"+z+"/"+x+"/"+y+"."+this.type;var url=this.url;if(OpenLayers.Util.isArray(url)){url=this.selectUrl(path,url)}return url+path},setMap:function(map){OpenLayers.Layer.Grid.prototype.setMap.apply(this,arguments);if(!this.tileOrigin){this.tileOrigin=new OpenLayers.LonLat(this.map.maxExtent.left,this.map.maxExtent.bottom)}},CLASS_NAME:"OpenLayers.Layer.TMS"});Ext.namespace("gxp.plugins");gxp.plugins.MapBoxSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_mapboxsource",title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldGlassTitle:"World Glass",worldPrintTitle:"World Print",createStore:function(){var options={projection:"EPSG:900913",numZoomLevels:19,serverResolutions:[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135],buffer:1};var configs=[{name:"blue-marble-topo-bathy-jan",numZoomLevels:9},{name:"blue-marble-topo-bathy-jul",numZoomLevels:9},{name:"blue-marble-topo-jan",numZoomLevels:9},{name:"blue-marble-topo-jul",numZoomLevels:9},{name:"control-room",numZoomLevels:9},{name:"geography-class",numZoomLevels:9},{name:"natural-earth-hypso",numZoomLevels:7},{name:"natural-earth-hypso-bathy",numZoomLevels:7},{name:"natural-earth-1",numZoomLevels:7},{name:"natural-earth-2",numZoomLevels:7},{name:"world-dark",numZoomLevels:12},{name:"world-light",numZoomLevels:12},{name:"world-glass",numZoomLevels:11},{name:"world-print",numZoomLevels:10}];var len=configs.length;var layers=new Array(len);var config;for(var i=0;i<len;++i){config=configs[i];layers[i]=new OpenLayers.Layer.TMS(this[OpenLayers.String.camelize(config.name)+"Title"],["http://a.tiles.mapbox.com/mapbox/","http://b.tiles.mapbox.com/mapbox/","http://c.tiles.mapbox.com/mapbox/","http://d.tiles.mapbox.com/mapbox/"],OpenLayers.Util.applyDefaults({attribution:/^world/.test(name)?"<a href='http://mapbox.com'>MapBox</a> | Some Data &copy; OSM CC-BY-SA | <a href='http://mapbox.com/tos'>Terms of Service</a>":"<a href='http://mapbox.com'>MapBox</a> | <a href='http://mapbox.com/tos'>Terms of Service</a>",type:"png",tileOrigin:new OpenLayers.LonLat(-128*156543.03390625,-128*156543.03390625),layername:config.name,"abstract":'<div class="thumb-mapbox thumb-mapbox-'+config.name+'"></div>',numZoomLevels:config.numZoomLevels},options))}this.store=new GeoExt.data.LayerStore({layers:layers,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"layername"},{name:"abstract",type:"string"},{name:"group",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"}]});this.fireEvent("ready",this)},createLayerRecord:function(config){var record;var index=this.store.findExact("name",config.name);if(index>-1){record=this.store.getAt(index).copy(Ext.data.Record.id({}));var layer=record.getLayer().clone();if(config.title){layer.setName(config.title);record.set("title",config.title)}if("visibility" in config){layer.visibility=config.visibility}record.set("selected",config.selected||false);record.set("source",config.source);record.set("name",config.name);if("group" in config){record.set("group",config.group)}record.data.layer=layer;record.commit()}return record}});Ext.preg(gxp.plugins.MapBoxSource.prototype.ptype,gxp.plugins.MapBoxSource);Ext.namespace("gxp.plugins");gxp.plugins.MapQuestSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_mapquestsource",title:"MapQuest Layers",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery",createStore:function(){var options={projection:"EPSG:900913",maxExtent:new OpenLayers.Bounds(-128*156543.0339,-128*156543.0339,128*156543.0339,128*156543.0339),maxResolution:156543.03390625,numZoomLevels:19,units:"m",buffer:1,transitionEffect:"resize",tileOptions:{crossOriginKeyword:null}};var layers=[new OpenLayers.Layer.OSM(this.osmTitle,["http://otile1.mqcdn.com/tiles/1.0.0/map/${z}/${x}/${y}.png","http://otile2.mqcdn.com/tiles/1.0.0/map/${z}/${x}/${y}.png","http://otile3.mqcdn.com/tiles/1.0.0/map/${z}/${x}/${y}.png","http://otile4.mqcdn.com/tiles/1.0.0/map/${z}/${x}/${y}.png"],OpenLayers.Util.applyDefaults({attribution:this.osmAttribution,type:"osm"},options)),new OpenLayers.Layer.OSM(this.naipTitle,["http://otile1.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png","http://otile2.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png","http://otile3.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png","http://otile4.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png"],OpenLayers.Util.applyDefaults({attribution:this.naipAttribution,type:"naip"},options))];this.store=new GeoExt.data.LayerStore({layers:layers,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(l){l.set("group","background")});this.fireEvent("ready",this)},createLayerRecord:function(config){var record;var index=this.store.findExact("name",config.name);if(index>-1){record=this.store.getAt(index).copy(Ext.data.Record.id({}));var layer=record.getLayer().clone();if(config.title){layer.setName(config.title);record.set("title",config.title)}if("visibility" in config){layer.visibility=config.visibility}record.set("selected",config.selected||false);record.set("source",config.source);record.set("name",config.name);if("group" in config){record.set("group",config.group)}record.data.layer=layer;record.commit()}return record}});Ext.preg(gxp.plugins.MapQuestSource.prototype.ptype,gxp.plugins.MapQuestSource);OpenLayers.Format.WMSCapabilities=OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC,{defaultVersion:"1.1.1",profile:null,CLASS_NAME:"OpenLayers.Format.WMSCapabilities"});OpenLayers.Format.WMSCapabilities.v1=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{wms:"http://www.opengis.net/wms",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance"},defaultPrefix:"wms",read:function(data){if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}var raw=data;if(data&&data.nodeType==9){data=data.documentElement}var capabilities={};this.readNode(data,capabilities);if(capabilities.service===undefined){var parser=new OpenLayers.Format.OGCExceptionReport();capabilities.error=parser.read(raw)}return capabilities},readers:{wms:{Service:function(node,obj){obj.service={};this.readChildNodes(node,obj.service)},Name:function(node,obj){obj.name=this.getChildValue(node)},Title:function(node,obj){obj.title=this.getChildValue(node)},Abstract:function(node,obj){obj["abstract"]=this.getChildValue(node)},BoundingBox:function(node,obj){var bbox={};bbox.bbox=[parseFloat(node.getAttribute("minx")),parseFloat(node.getAttribute("miny")),parseFloat(node.getAttribute("maxx")),parseFloat(node.getAttribute("maxy"))];var res={x:parseFloat(node.getAttribute("resx")),y:parseFloat(node.getAttribute("resy"))};if(!(isNaN(res.x)&&isNaN(res.y))){bbox.res=res}return bbox},OnlineResource:function(node,obj){obj.href=this.getAttributeNS(node,this.namespaces.xlink,"href")},ContactInformation:function(node,obj){obj.contactInformation={};this.readChildNodes(node,obj.contactInformation)},ContactPersonPrimary:function(node,obj){obj.personPrimary={};this.readChildNodes(node,obj.personPrimary)},ContactPerson:function(node,obj){obj.person=this.getChildValue(node)},ContactOrganization:function(node,obj){obj.organization=this.getChildValue(node)},ContactPosition:function(node,obj){obj.position=this.getChildValue(node)},ContactAddress:function(node,obj){obj.contactAddress={};this.readChildNodes(node,obj.contactAddress)},AddressType:function(node,obj){obj.type=this.getChildValue(node)},Address:function(node,obj){obj.address=this.getChildValue(node)},City:function(node,obj){obj.city=this.getChildValue(node)},StateOrProvince:function(node,obj){obj.stateOrProvince=this.getChildValue(node)},PostCode:function(node,obj){obj.postcode=this.getChildValue(node)},Country:function(node,obj){obj.country=this.getChildValue(node)},ContactVoiceTelephone:function(node,obj){obj.phone=this.getChildValue(node)},ContactFacsimileTelephone:function(node,obj){obj.fax=this.getChildValue(node)},ContactElectronicMailAddress:function(node,obj){obj.email=this.getChildValue(node)},Fees:function(node,obj){var fees=this.getChildValue(node);if(fees&&fees.toLowerCase()!="none"){obj.fees=fees}},AccessConstraints:function(node,obj){var constraints=this.getChildValue(node);if(constraints&&constraints.toLowerCase()!="none"){obj.accessConstraints=constraints}},Capability:function(node,obj){obj.capability={nestedLayers:[],layers:[]};this.readChildNodes(node,obj.capability)},Request:function(node,obj){obj.request={};this.readChildNodes(node,obj.request)},GetCapabilities:function(node,obj){obj.getcapabilities={formats:[]};this.readChildNodes(node,obj.getcapabilities)},Format:function(node,obj){if(OpenLayers.Util.isArray(obj.formats)){obj.formats.push(this.getChildValue(node))}else{obj.format=this.getChildValue(node)}},DCPType:function(node,obj){this.readChildNodes(node,obj)},HTTP:function(node,obj){this.readChildNodes(node,obj)},Get:function(node,obj){obj.get={};this.readChildNodes(node,obj.get);if(!obj.href){obj.href=obj.get.href}},Post:function(node,obj){obj.post={};this.readChildNodes(node,obj.post);if(!obj.href){obj.href=obj.get.href}},GetMap:function(node,obj){obj.getmap={formats:[]};this.readChildNodes(node,obj.getmap)},GetFeatureInfo:function(node,obj){obj.getfeatureinfo={formats:[]};this.readChildNodes(node,obj.getfeatureinfo)},Exception:function(node,obj){obj.exception={formats:[]};this.readChildNodes(node,obj.exception)},Layer:function(node,obj){var parentLayer,capability;if(obj.capability){capability=obj.capability;parentLayer=obj}else{capability=obj}var attrNode=node.getAttributeNode("queryable");var queryable=(attrNode&&attrNode.specified)?node.getAttribute("queryable"):null;attrNode=node.getAttributeNode("cascaded");var cascaded=(attrNode&&attrNode.specified)?node.getAttribute("cascaded"):null;attrNode=node.getAttributeNode("opaque");var opaque=(attrNode&&attrNode.specified)?node.getAttribute("opaque"):null;var noSubsets=node.getAttribute("noSubsets");var fixedWidth=node.getAttribute("fixedWidth");var fixedHeight=node.getAttribute("fixedHeight");var parent=parentLayer||{},extend=OpenLayers.Util.extend;var layer={nestedLayers:[],styles:parentLayer?[].concat(parentLayer.styles):[],srs:parentLayer?extend({},parent.srs):{},metadataURLs:[],bbox:parentLayer?extend({},parent.bbox):{},llbbox:parent.llbbox,dimensions:parentLayer?extend({},parent.dimensions):{},authorityURLs:parentLayer?extend({},parent.authorityURLs):{},identifiers:{},keywords:[],queryable:(queryable&&queryable!=="")?(queryable==="1"||queryable==="true"):(parent.queryable||false),cascaded:(cascaded!==null)?parseInt(cascaded):(parent.cascaded||0),opaque:opaque?(opaque==="1"||opaque==="true"):(parent.opaque||false),noSubsets:(noSubsets!==null)?(noSubsets==="1"||noSubsets==="true"):(parent.noSubsets||false),fixedWidth:(fixedWidth!=null)?parseInt(fixedWidth):(parent.fixedWidth||0),fixedHeight:(fixedHeight!=null)?parseInt(fixedHeight):(parent.fixedHeight||0),minScale:parent.minScale,maxScale:parent.maxScale,attribution:parent.attribution};obj.nestedLayers.push(layer);layer.capability=capability;this.readChildNodes(node,layer);delete layer.capability;if(layer.name){var parts=layer.name.split(":"),request=capability.request,gfi=request.getfeatureinfo;if(parts.length>0){layer.prefix=parts[0]}capability.layers.push(layer);if(layer.formats===undefined){layer.formats=request.getmap.formats}if(layer.infoFormats===undefined&&gfi){layer.infoFormats=gfi.formats}}},Attribution:function(node,obj){obj.attribution={};this.readChildNodes(node,obj.attribution)},LogoURL:function(node,obj){obj.logo={width:node.getAttribute("width"),height:node.getAttribute("height")};this.readChildNodes(node,obj.logo)},Style:function(node,obj){var style={};obj.styles.push(style);this.readChildNodes(node,style)},LegendURL:function(node,obj){var legend={width:node.getAttribute("width"),height:node.getAttribute("height")};obj.legend=legend;this.readChildNodes(node,legend)},MetadataURL:function(node,obj){var metadataURL={type:node.getAttribute("type")};obj.metadataURLs.push(metadataURL);this.readChildNodes(node,metadataURL)},DataURL:function(node,obj){obj.dataURL={};this.readChildNodes(node,obj.dataURL)},FeatureListURL:function(node,obj){obj.featureListURL={};this.readChildNodes(node,obj.featureListURL)},AuthorityURL:function(node,obj){var name=node.getAttribute("name");var authority={};this.readChildNodes(node,authority);obj.authorityURLs[name]=authority.href},Identifier:function(node,obj){var authority=node.getAttribute("authority");obj.identifiers[authority]=this.getChildValue(node)},KeywordList:function(node,obj){this.readChildNodes(node,obj)},SRS:function(node,obj){obj.srs[this.getChildValue(node)]=true}}},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1"});OpenLayers.Format.WMSCapabilities.v1_1=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1,{readers:{wms:OpenLayers.Util.applyDefaults({WMT_MS_Capabilities:function(node,obj){this.readChildNodes(node,obj)},Keyword:function(node,obj){if(obj.keywords){obj.keywords.push(this.getChildValue(node))}},DescribeLayer:function(node,obj){obj.describelayer={formats:[]};this.readChildNodes(node,obj.describelayer)},GetLegendGraphic:function(node,obj){obj.getlegendgraphic={formats:[]};this.readChildNodes(node,obj.getlegendgraphic)},GetStyles:function(node,obj){obj.getstyles={formats:[]};this.readChildNodes(node,obj.getstyles)},PutStyles:function(node,obj){obj.putstyles={formats:[]};this.readChildNodes(node,obj.putstyles)},UserDefinedSymbolization:function(node,obj){var userSymbols={supportSLD:parseInt(node.getAttribute("SupportSLD"))==1,userLayer:parseInt(node.getAttribute("UserLayer"))==1,userStyle:parseInt(node.getAttribute("UserStyle"))==1,remoteWFS:parseInt(node.getAttribute("RemoteWFS"))==1};obj.userSymbols=userSymbols},LatLonBoundingBox:function(node,obj){obj.llbbox=[parseFloat(node.getAttribute("minx")),parseFloat(node.getAttribute("miny")),parseFloat(node.getAttribute("maxx")),parseFloat(node.getAttribute("maxy"))]},BoundingBox:function(node,obj){var bbox=OpenLayers.Format.WMSCapabilities.v1.prototype.readers.wms.BoundingBox.apply(this,[node,obj]);bbox.srs=node.getAttribute("SRS");obj.bbox[bbox.srs]=bbox},ScaleHint:function(node,obj){var min=node.getAttribute("min");var max=node.getAttribute("max");var rad2=Math.pow(2,0.5);var ipm=OpenLayers.INCHES_PER_UNIT.m;if(min!=0){obj.maxScale=parseFloat(((min/rad2)*ipm*OpenLayers.DOTS_PER_INCH).toPrecision(13))}if(max!=Number.POSITIVE_INFINITY){obj.minScale=parseFloat(((max/rad2)*ipm*OpenLayers.DOTS_PER_INCH).toPrecision(13))}},Dimension:function(node,obj){var name=node.getAttribute("name").toLowerCase();var dim={name:name,units:node.getAttribute("units"),unitsymbol:node.getAttribute("unitSymbol")};obj.dimensions[dim.name]=dim},Extent:function(node,obj){var name=node.getAttribute("name").toLowerCase();if(name in obj.dimensions){var extent=obj.dimensions[name];extent.nearestVal=node.getAttribute("nearestValue")==="1";extent.multipleVal=node.getAttribute("multipleValues")==="1";extent.current=node.getAttribute("current")==="1";extent["default"]=node.getAttribute("default")||"";var values=this.getChildValue(node);extent.values=values.split(",")}}},OpenLayers.Format.WMSCapabilities.v1.prototype.readers.wms)},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_1"});OpenLayers.Format.WMSCapabilities.v1_1_0=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1_1,{version:"1.1.0",readers:{wms:OpenLayers.Util.applyDefaults({SRS:function(node,obj){var srs=this.getChildValue(node);var values=srs.split(/ +/);for(var i=0,len=values.length;i<len;i++){obj.srs[values[i]]=true}}},OpenLayers.Format.WMSCapabilities.v1_1.prototype.readers.wms)},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_1_0"});OpenLayers.Format.WMSCapabilities.v1_1_1=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1_1,{version:"1.1.1",readers:{wms:OpenLayers.Util.applyDefaults({SRS:function(node,obj){obj.srs[this.getChildValue(node)]=true}},OpenLayers.Format.WMSCapabilities.v1_1.prototype.readers.wms)},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_1_1"});OpenLayers.Format.WMSCapabilities.v1_3=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1,{readers:{wms:OpenLayers.Util.applyDefaults({WMS_Capabilities:function(node,obj){this.readChildNodes(node,obj)},LayerLimit:function(node,obj){obj.layerLimit=parseInt(this.getChildValue(node))},MaxWidth:function(node,obj){obj.maxWidth=parseInt(this.getChildValue(node))},MaxHeight:function(node,obj){obj.maxHeight=parseInt(this.getChildValue(node))},BoundingBox:function(node,obj){var bbox=OpenLayers.Format.WMSCapabilities.v1.prototype.readers.wms.BoundingBox.apply(this,[node,obj]);bbox.srs=node.getAttribute("CRS");obj.bbox[bbox.srs]=bbox},CRS:function(node,obj){this.readers.wms.SRS.apply(this,[node,obj])},EX_GeographicBoundingBox:function(node,obj){obj.llbbox=[];this.readChildNodes(node,obj.llbbox)},westBoundLongitude:function(node,obj){obj[0]=this.getChildValue(node)},eastBoundLongitude:function(node,obj){obj[2]=this.getChildValue(node)},southBoundLatitude:function(node,obj){obj[1]=this.getChildValue(node)},northBoundLatitude:function(node,obj){obj[3]=this.getChildValue(node)},MinScaleDenominator:function(node,obj){obj.maxScale=parseFloat(this.getChildValue(node)).toPrecision(16)},MaxScaleDenominator:function(node,obj){obj.minScale=parseFloat(this.getChildValue(node)).toPrecision(16)},Dimension:function(node,obj){var name=node.getAttribute("name").toLowerCase();var dim={name:name,units:node.getAttribute("units"),unitsymbol:node.getAttribute("unitSymbol"),nearestVal:node.getAttribute("nearestValue")==="1",multipleVal:node.getAttribute("multipleValues")==="1","default":node.getAttribute("default")||"",current:node.getAttribute("current")==="1",values:this.getChildValue(node).split(",")};obj.dimensions[dim.name]=dim},Keyword:function(node,obj){var keyword={value:this.getChildValue(node),vocabulary:node.getAttribute("vocabulary")};if(obj.keywords){obj.keywords.push(keyword)}}},OpenLayers.Format.WMSCapabilities.v1.prototype.readers.wms),sld:{UserDefinedSymbolization:function(node,obj){this.readers.wms.UserDefinedSymbolization.apply(this,[node,obj]);obj.userSymbols.inlineFeature=parseInt(node.getAttribute("InlineFeature"))==1;obj.userSymbols.remoteWCS=parseInt(node.getAttribute("RemoteWCS"))==1},DescribeLayer:function(node,obj){this.readers.wms.DescribeLayer.apply(this,[node,obj])},GetLegendGraphic:function(node,obj){this.readers.wms.GetLegendGraphic.apply(this,[node,obj])}}},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_3"});OpenLayers.Format.WMSCapabilities.v1_3_0=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1_3,{version:"1.3.0",CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_3_0"});Ext.namespace("GeoExt.data");GeoExt.data.WMSCapabilitiesReader=function(meta,recordType){meta=meta||{};if(!meta.format){meta.format=new OpenLayers.Format.WMSCapabilities()}if(typeof recordType!=="function"){recordType=GeoExt.data.LayerRecord.create(recordType||meta.fields||[{name:"name",type:"string"},{name:"title",type:"string"},{name:"abstract",type:"string"},{name:"queryable",type:"boolean"},{name:"opaque",type:"boolean"},{name:"noSubsets",type:"boolean"},{name:"cascaded",type:"int"},{name:"fixedWidth",type:"int"},{name:"fixedHeight",type:"int"},{name:"minScale",type:"float"},{name:"maxScale",type:"float"},{name:"prefix",type:"string"},{name:"formats"},{name:"styles"},{name:"srs"},{name:"dimensions"},{name:"bbox"},{name:"llbbox"},{name:"attribution"},{name:"keywords"},{name:"identifiers"},{name:"authorityURLs"},{name:"metadataURLs"},{name:"infoFormats"}])}GeoExt.data.WMSCapabilitiesReader.superclass.constructor.call(this,meta,recordType)};Ext.extend(GeoExt.data.WMSCapabilitiesReader,Ext.data.DataReader,{attributionCls:"gx-attribution",read:function(request){var data=request.responseXML;if(!data||!data.documentElement){data=request.responseText}return this.readRecords(data)},serviceExceptionFormat:function(formats){if(OpenLayers.Util.indexOf(formats,"application/vnd.ogc.se_inimage")>-1){return"application/vnd.ogc.se_inimage"}if(OpenLayers.Util.indexOf(formats,"application/vnd.ogc.se_xml")>-1){return"application/vnd.ogc.se_xml"}return formats[0]},imageFormat:function(layer){var formats=layer.formats;if(layer.opaque&&OpenLayers.Util.indexOf(formats,"image/jpeg")>-1){return"image/jpeg"}if(OpenLayers.Util.indexOf(formats,"image/png")>-1){return"image/png"}if(OpenLayers.Util.indexOf(formats,"image/png; mode=24bit")>-1){return"image/png; mode=24bit"}if(OpenLayers.Util.indexOf(formats,"image/gif")>-1){return"image/gif"}return formats[0]},imageTransparent:function(layer){return layer.opaque==undefined||!layer.opaque},readRecords:function(data){if(typeof data==="string"||data.nodeType){data=this.meta.format.read(data)}if(!!data.error){throw new Ext.data.DataReader.Error("invalid-response",data.error)}var version=data.version;var capability=data.capability||{};var url=capability.request&&capability.request.getmap&&capability.request.getmap.href;var layers=capability.layers;var formats=capability.exception?capability.exception.formats:[];var exceptions=this.serviceExceptionFormat(formats);var records=[];if(url&&layers){var fields=this.recordType.prototype.fields;var layer,values,options,params,field,v;for(var i=0,lenI=layers.length;i<lenI;i++){layer=layers[i];if(layer.name){values={};for(var j=0,lenJ=fields.length;j<lenJ;j++){field=fields.items[j];v=layer[field.mapping||field.name]||field.defaultValue;v=field.convert(v);values[field.name]=v}options={attribution:layer.attribution?this.attributionMarkup(layer.attribution):undefined,minScale:layer.minScale,maxScale:layer.maxScale};if(this.meta.layerOptions){Ext.apply(options,this.meta.layerOptions)}params={layers:layer.name,exceptions:exceptions,format:this.imageFormat(layer),transparent:this.imageTransparent(layer),version:version};if(this.meta.layerParams){Ext.apply(params,this.meta.layerParams)}values.layer=new OpenLayers.Layer.WMS(layer.title||layer.name,url,params,options);records.push(new this.recordType(values,values.layer.id))}}}return{totalRecords:records.length,success:true,records:records}},attributionMarkup:function(attribution){var markup=[];if(attribution.logo){markup.push("<img class='"+this.attributionCls+"-image' src='"+attribution.logo.href+"' />")}if(attribution.title){markup.push("<span class='"+this.attributionCls+"-title'>"+attribution.title+"</span>")}if(attribution.href){for(var i=0;i<markup.length;i++){markup[i]="<a class='"+this.attributionCls+"-link' href="+attribution.href+">"+markup[i]+"</a>"}}return markup.join(" ")}});Ext.namespace("GeoExt.data");GeoExt.data.WMSCapabilitiesStore=function(c){c=c||{};GeoExt.data.WMSCapabilitiesStore.superclass.constructor.call(this,Ext.apply(c,{proxy:c.proxy||(!c.data?new Ext.data.HttpProxy({url:c.url,disableCaching:false,method:"GET"}):undefined),reader:new GeoExt.data.WMSCapabilitiesReader(c,c.fields)}))};Ext.extend(GeoExt.data.WMSCapabilitiesStore,Ext.data.Store);Ext.namespace("GeoExt.data");GeoExt.data.WMSDescribeLayerStore=function(c){c=c||{};GeoExt.data.WMSDescribeLayerStore.superclass.constructor.call(this,Ext.apply(c,{proxy:c.proxy||(!c.data?new Ext.data.HttpProxy({url:c.url,disableCaching:false,method:"GET"}):undefined),reader:new GeoExt.data.WMSDescribeLayerReader(c,c.fields)}))};Ext.extend(GeoExt.data.WMSDescribeLayerStore,Ext.data.Store);(function(){function keepRaw(data){var format=this.meta.format;if(typeof data==="string"||data.nodeType){data=format.read(data);var origRead=format.read;format.read=function(){format.read=origRead;return data}}this.raw=data}Ext.intercept(GeoExt.data.WMSCapabilitiesReader.prototype,"readRecords",keepRaw);GeoExt.data.AttributeReader&&Ext.intercept(GeoExt.data.AttributeReader.prototype,"readRecords",keepRaw)})();Ext.namespace("gxp.plugins");gxp.plugins.WMSSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_wmssource",baseParams:null,format:null,describeLayerStore:null,describedLayers:null,schemaCache:null,ready:false,requiredProperties:["title","bbox"],constructor:function(config){if(config&&config.forceLazy===true){config.requiredProperties=[];delete config.forceLazy;if(window.console){console.warn("Deprecated config option 'forceLazy: true' for layer source '"+config.id+"'. Use 'requiredProperties: []' instead.")}}gxp.plugins.WMSSource.superclass.constructor.apply(this,arguments);if(!this.format){this.format=new OpenLayers.Format.WMSCapabilities({keepData:true})}},init:function(target){gxp.plugins.WMSSource.superclass.init.apply(this,arguments);this.target.on("authorizationchange",this.onAuthorizationChange,this)},onAuthorizationChange:function(){if(this.disabled!==true&&this.store&&this.url.charAt(0)==="/"){var lastOptions=this.store.lastOptions||{params:{}};Ext.apply(lastOptions.params,{_dc:Math.random()});this.store.reload(lastOptions)}},destroy:function(){this.target.un("authorizationchange",this.onAuthorizationChange,this);gxp.plugins.WMSSource.superclass.destroy.apply(this,arguments)},isLazy:function(){var lazy=true;var mapConfig=this.target.initialConfig.map;if(mapConfig&&mapConfig.layers){var layerConfig;for(var i=0,ii=mapConfig.layers.length;i<ii;++i){layerConfig=mapConfig.layers[i];if(layerConfig.source===this.id){lazy=this.layerConfigComplete(layerConfig);if(lazy===false){break}}}}return lazy},layerConfigComplete:function(config){var lazy=true;if(!Ext.isObject(config.capability)){var props=this.requiredProperties;for(var i=props.length-1;i>=0;--i){lazy=!!config[props[i]];if(lazy===false){break}}}return lazy},createStore:function(){var baseParams=this.baseParams||{SERVICE:"WMS",REQUEST:"GetCapabilities"};if(this.version){baseParams.VERSION=this.version}var lazy=this.isLazy();this.store=new GeoExt.data.WMSCapabilitiesStore({url:this.trimUrl(this.url,baseParams),baseParams:baseParams,format:this.format,autoLoad:!lazy,layerParams:{exceptions:null},listeners:{load:function(){if(!this.store.reader.raw||!this.store.reader.raw.service){this.fireEvent("failure",this,"Invalid capabilities document.")}else{if(!this.title){this.title=this.store.reader.raw.service.title}if(!this.ready){this.ready=true;this.fireEvent("ready",this)}else{this.lazy=false}}delete this.format.data},exception:function(proxy,type,action,options,response,error){delete this.store;var msg,details="";if(type==="response"){if(typeof error=="string"){msg=error}else{msg="Invalid response from server.";var data=this.format&&this.format.data;if(data&&data.parseError){msg+="  "+data.parseError.reason+" - line: "+data.parseError.line}var status=response.status;if(status>=200&&status<300){var report=error&&error.arg&&error.arg.exceptionReport;details=gxp.util.getOGCExceptionText(report)}else{details="Status: "+status}}}else{msg="Trouble creating layer store from response.";details="Unable to handle response."}this.fireEvent("failure",this,msg,details);delete this.format.data},scope:this}});if(lazy){this.lazy=lazy;this.ready=true;this.fireEvent("ready",this)}},trimUrl:function(url,params,respectCase){var urlParams=OpenLayers.Util.getParameters(url);params=OpenLayers.Util.upperCaseObject(params);var keys=0;for(var key in urlParams){++keys;if(key.toUpperCase() in params){--keys;delete urlParams[key]}}return url.split("?").shift()+(keys?"?"+OpenLayers.Util.getParameterString(urlParams):"")},createLazyLayerRecord:function(config){config=Ext.apply({},config);var srs=config.srs||this.target.map.projection;config.srs={};config.srs[srs]=true;var bbox=config.bbox||this.target.map.maxExtent||OpenLayers.Projection.defaults[srs].maxExtent;config.bbox={};config.bbox[srs]={bbox:bbox};var record;if(this.store&&this.store instanceof GeoExt.data.WMSCapabilitiesStore){record=new this.store.recordType(config)}else{record=new GeoExt.data.LayerRecord(config)}record.setLayer(new OpenLayers.Layer.WMS(config.title||config.name,config.url||this.url,{layers:config.name,transparent:"transparent" in config?config.transparent:true,cql_filter:config.cql_filter,format:config.format},{projection:srs,eventListeners:{tileloaded:this.countAlive,tileerror:this.countAlive,scope:this}}));record.json=config;return record},countAlive:function(evt){if(!("_alive" in evt.object.metadata)){evt.object.metadata._alive=0;evt.object.events.register("loadend",this,this.removeDeadLayer)}evt.object.metadata._alive+=(evt.type=="tileerror"?-1:1)},removeDeadLayer:function(evt){evt.object.events.un({tileloaded:this.countAlive,tileerror:this.countAlive,loadend:this.removeDeadLayer,scope:this});if(evt.object.metadata._alive===0){this.target.mapPanel.map.removeLayer(evt.object);if(window.console){console.debug("Unavailable layer "+evt.object.name+" removed.")}}delete evt.object.metadata._alive},createLayerRecord:function(config){var record,original;var index=this.store.findExact("name",config.name);if(index>-1){original=this.store.getAt(index)}else{if(Ext.isObject(config.capability)){original=this.store.reader.readRecords({capability:{request:{getmap:{href:this.trimUrl(this.url,this.baseParams)}},layers:[config.capability]}}).records[0]}else{if(this.layerConfigComplete(config)){original=this.createLazyLayerRecord(config)}}}if(original){var layer=original.getLayer().clone();var projection=this.getMapProjection();var layerProjection=this.getProjection(original);if(layerProjection){layer.addOptions({projection:layerProjection})}var projCode=(layerProjection||projection).getCode(),bbox=original.get("bbox"),maxExtent;if(bbox&&bbox[projCode]){maxExtent=OpenLayers.Bounds.fromArray(bbox[projCode].bbox,layer.reverseAxisOrder())}else{var llbbox=original.get("llbbox");if(llbbox){llbbox[0]=Math.max(llbbox[0],-180);llbbox[1]=Math.max(llbbox[1],-90);llbbox[2]=Math.min(llbbox[2],180);llbbox[3]=Math.min(llbbox[3],90);maxExtent=OpenLayers.Bounds.fromArray(llbbox).transform("EPSG:4326",projection)}}layer.mergeNewParams({STYLES:config.styles,FORMAT:config.format,TRANSPARENT:config.transparent,CQL_FILTER:config.cql_filter});var singleTile=false;if("tiled" in config){singleTile=!config.tiled}else{if(original.data.dimensions&&original.data.dimensions.time){singleTile=true}}layer.setName(config.title||layer.name);layer.addOptions({attribution:layer.attribution||config.attribution,maxExtent:maxExtent,restrictedExtent:maxExtent,singleTile:singleTile,ratio:config.ratio||1,visibility:("visibility" in config)?config.visibility:true,opacity:("opacity" in config)?config.opacity:1,buffer:("buffer" in config)?config.buffer:1,dimensions:original.data.dimensions,transitionEffect:singleTile?"resize":null,minScale:config.minscale,maxScale:config.maxscale});var data=Ext.applyIf({title:layer.name,group:config.group,infoFormat:config.infoFormat,getFeatureInfo:config.getFeatureInfo,source:config.source,properties:"gxp_wmslayerpanel",fixed:config.fixed,selected:"selected" in config?config.selected:false,restUrl:this.restUrl,layer:layer},original.data);var fields=[{name:"source",type:"string"},{name:"group",type:"string"},{name:"properties",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"},{name:"restUrl",type:"string"},{name:"infoFormat",type:"string"},{name:"getFeatureInfo"}];original.fields.each(function(field){fields.push(field)});var Record=GeoExt.data.LayerRecord.create(fields);record=new Record(data,layer.id);record.json=config}else{if(window.console&&this.store.getCount()>0&&config.name!==undefined){console.warn("Could not create layer record for layer '"+config.name+"'. Check if the layer is found in the WMS GetCapabilities response.")}}return record},getProjection:function(layerRecord){var projection=this.getMapProjection();var compatibleProjection=projection;var availableSRS=layerRecord.get("srs");if(!availableSRS[projection.getCode()]){compatibleProjection=null;var p,srs;for(srs in availableSRS){if((p=new OpenLayers.Projection(srs)).equals(projection)){compatibleProjection=p;break}}}return compatibleProjection},initDescribeLayerStore:function(){var raw=this.store.reader.raw;if(this.lazy){raw={capability:{request:{describelayer:{href:this.url}}},version:this.version||"1.1.1"}}var req=raw.capability.request.describelayer;if(req){var version=raw.version;if(parseFloat(version)>1.1){version="1.1.1"}var params={SERVICE:"WMS",VERSION:version,REQUEST:"DescribeLayer"};this.describeLayerStore=new GeoExt.data.WMSDescribeLayerStore({url:this.trimUrl(req.href,params),baseParams:params})}},describeLayer:function(rec,callback,scope){if(!this.describeLayerStore){this.initDescribeLayerStore()}function delayedCallback(arg){window.setTimeout(function(){callback.call(scope,arg)},0)}if(!this.describeLayerStore){delayedCallback(false);return}if(!this.describedLayers){this.describedLayers={}}var layerName=rec.getLayer().params.LAYERS;var cb=function(){var recs=Ext.isArray(arguments[1])?arguments[1]:arguments[0];var rec,name;for(var i=recs.length-1;i>=0;i--){rec=recs[i];name=rec.get("layerName");if(name==layerName){this.describeLayerStore.un("load",arguments.callee,this);this.describedLayers[name]=true;callback.call(scope,rec);return}else{if(typeof this.describedLayers[name]=="function"){var fn=this.describedLayers[name];this.describeLayerStore.un("load",fn,this);fn.apply(this,arguments)}}}delete describedLayers[layerName];callback.call(scope,false)};var describedLayers=this.describedLayers;var index;if(!describedLayers[layerName]){describedLayers[layerName]=cb;this.describeLayerStore.load({params:{LAYERS:layerName},add:true,callback:cb,scope:this})}else{if((index=this.describeLayerStore.findExact("layerName",layerName))==-1){this.describeLayerStore.on("load",cb,this)}else{delayedCallback(this.describeLayerStore.getAt(index))}}},fetchSchema:function(url,typeName,callback,scope){var schema=this.schemaCache[typeName];if(schema){if(schema.getCount()==0){schema.on("load",function(){callback.call(scope,schema)},this,{single:true})}else{callback.call(scope,schema)}}else{schema=new GeoExt.data.AttributeStore({url:url,baseParams:{SERVICE:"WFS",VERSION:"1.1.0",REQUEST:"DescribeFeatureType",TYPENAME:typeName},autoLoad:true,listeners:{load:function(){callback.call(scope,schema)},scope:this}});this.schemaCache[typeName]=schema}},getSchema:function(rec,callback,scope){if(!this.schemaCache){this.schemaCache={}}this.describeLayer(rec,function(r){if(r&&r.get("owsType")=="WFS"){var typeName=r.get("typeName");var url=r.get("owsURL");this.fetchSchema(url,typeName,callback,scope)}else{if(!r){this.fetchSchema(this.url,rec.get("name"),callback,scope)}else{callback.call(scope,false)}}},this)},getWFSProtocol:function(record,callback,scope){this.getSchema(record,function(schema){var protocol=false;if(schema){var geometryName;var geomRegex=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;schema.each(function(r){var match=geomRegex.exec(r.get("type"));if(match){geometryName=r.get("name")}},this);protocol=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:record.getLayer().projection.getCode(),url:schema.url,featureType:schema.reader.raw.featureTypes[0].typeName,featureNS:schema.reader.raw.targetNamespace,geometryName:geometryName})}callback.call(scope,protocol,schema,record)},this)},getConfigForRecord:function(record){var config=Ext.applyIf(gxp.plugins.WMSSource.superclass.getConfigForRecord.apply(this,arguments),record.json),layer=record.getLayer(),params=layer.params,options=layer.options;var name=config.name,raw=this.store.reader.raw;if(raw){var capLayers=raw.capability.layers;for(var i=capLayers.length-1;i>=0;--i){if(capLayers[i].name===name){config.capability=Ext.apply({},capLayers[i]);var srs={};srs[layer.projection.getCode()]=true;config.capability.srs=srs;break}}}if(!config.capability){if(layer.maxExtent){config.bbox=layer.maxExtent.toArray()}config.srs=layer.projection.getCode()}return Ext.apply(config,{format:params.FORMAT,styles:params.STYLES,tiled:!options.singleTile,transparent:params.TRANSPARENT,cql_filter:params.CQL_FILTER,minscale:options.minScale,maxscale:options.maxScale,infoFormat:record.get("infoFormat"),attribution:layer.attribution})},disable:function(){this.disabled=true},getState:function(){var state=gxp.plugins.WMSSource.superclass.getState.apply(this,arguments);return Ext.applyIf(state,{title:this.title})}});Ext.preg(gxp.plugins.WMSSource.prototype.ptype,gxp.plugins.WMSSource);Ext.namespace("gxp.plugins");gxp.plugins.CatalogueSource=Ext.extend(gxp.plugins.WMSSource,{url:null,yx:null,title:null,lazy:true,hidden:true,proxyOptions:null,describeLayer:function(rec,callback,scope){var recordType=Ext.data.Record.create([{name:"owsType",type:"string"},{name:"owsURL",type:"string"},{name:"typeName",type:"string"}]);var record=new recordType({owsType:"WFS",owsURL:rec.get("url"),typeName:rec.get("name")});callback.call(scope,record)},destroy:function(){this.store&&this.store.destroy();this.store=null;gxp.plugins.CatalogueSource.superclass.destroy.apply(this,arguments)}});OpenLayers.Format.CSWGetRecords=function(options){options=OpenLayers.Util.applyDefaults(options,OpenLayers.Format.CSWGetRecords.DEFAULTS);var cls=OpenLayers.Format.CSWGetRecords["v"+options.version.replace(/\./g,"_")];if(!cls){throw"Unsupported CSWGetRecords version: "+options.version}return new cls(options)};OpenLayers.Format.CSWGetRecords.DEFAULTS={version:"2.0.2"};OpenLayers.Format.CSWGetRecords.v2_0_2=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{csw:"http://www.opengis.net/cat/csw/2.0.2",dc:"http://purl.org/dc/elements/1.1/",dct:"http://purl.org/dc/terms/",gmd:"http://www.isotc211.org/2005/gmd",geonet:"http://www.fao.org/geonetwork",ogc:"http://www.opengis.net/ogc",ows:"http://www.opengis.net/ows",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance",xmlns:"http://www.w3.org/2000/xmlns/"},defaultPrefix:"csw",version:"2.0.2",schemaLocation:"http://www.opengis.net/cat/csw/2.0.2 http://schemas.opengis.net/csw/2.0.2/CSW-discovery.xsd",requestId:null,resultType:null,outputFormat:null,outputSchema:null,startPosition:null,maxRecords:null,DistributedSearch:null,ResponseHandler:null,Query:null,regExes:{trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g)},initialize:function(options){OpenLayers.Format.XML.prototype.initialize.apply(this,[options])},read:function(data){if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}if(data&&data.nodeType==9){data=data.documentElement}var obj={};this.readNode(data,obj);return obj},readers:{csw:{GetRecordsResponse:function(node,obj){obj.records=[];this.readChildNodes(node,obj);var version=this.getAttributeNS(node,"","version");if(version!=""){obj.version=version}},RequestId:function(node,obj){obj.RequestId=this.getChildValue(node)},SearchStatus:function(node,obj){obj.SearchStatus={};var timestamp=this.getAttributeNS(node,"","timestamp");if(timestamp!=""){obj.SearchStatus.timestamp=timestamp}},SearchResults:function(node,obj){this.readChildNodes(node,obj);var attrs=node.attributes;var SearchResults={};for(var i=0,len=attrs.length;i<len;++i){if((attrs[i].name=="numberOfRecordsMatched")||(attrs[i].name=="numberOfRecordsReturned")||(attrs[i].name=="nextRecord")){SearchResults[attrs[i].name]=parseInt(attrs[i].nodeValue)}else{SearchResults[attrs[i].name]=attrs[i].nodeValue}}obj.SearchResults=SearchResults},SummaryRecord:function(node,obj){var record={type:"SummaryRecord"};this.readChildNodes(node,record);obj.records.push(record)},BriefRecord:function(node,obj){var record={type:"BriefRecord"};this.readChildNodes(node,record);obj.records.push(record)},DCMIRecord:function(node,obj){var record={type:"DCMIRecord"};this.readChildNodes(node,record);obj.records.push(record)},Record:function(node,obj){var record={type:"Record"};this.readChildNodes(node,record);obj.records.push(record)},"*":function(node,obj){var name=node.localName||node.nodeName.split(":").pop();obj[name]=this.getChildValue(node)}},geonet:{info:function(node,obj){var gninfo={};this.readChildNodes(node,gninfo);obj.gninfo=gninfo}},dc:{"*":function(node,obj){var name=node.localName||node.nodeName.split(":").pop();if(!(OpenLayers.Util.isArray(obj[name]))){obj[name]=[]}var dc_element={};var attrs=node.attributes;for(var i=0,len=attrs.length;i<len;++i){dc_element[attrs[i].name]=attrs[i].nodeValue}dc_element.value=this.getChildValue(node);if(dc_element.value!=""){obj[name].push(dc_element)}}},dct:{"*":function(node,obj){var name=node.localName||node.nodeName.split(":").pop();if(!(OpenLayers.Util.isArray(obj[name]))){obj[name]=[]}obj[name].push(this.getChildValue(node))}},ows:OpenLayers.Util.applyDefaults({BoundingBox:function(node,obj){if(obj.bounds){obj.BoundingBox=[{crs:obj.projection,value:[obj.bounds.left,obj.bounds.bottom,obj.bounds.right,obj.bounds.top]}];delete obj.projection;delete obj.bounds}OpenLayers.Format.OWSCommon.v1_0_0.prototype.readers.ows["BoundingBox"].apply(this,arguments)}},OpenLayers.Format.OWSCommon.v1_0_0.prototype.readers.ows)},write:function(options){var node=this.writeNode("csw:GetRecords",options);this.setAttributeNS(node,this.namespaces.xmlns,"xmlns:gmd",this.namespaces.gmd);return OpenLayers.Format.XML.prototype.write.apply(this,[node])},writers:{csw:{GetRecords:function(options){if(!options){options={}}var node=this.createElementNSPlus("csw:GetRecords",{attributes:{service:"CSW",version:this.version,requestId:options.requestId||this.requestId,resultType:options.resultType||this.resultType,outputFormat:options.outputFormat||this.outputFormat,outputSchema:options.outputSchema||this.outputSchema,startPosition:options.startPosition||this.startPosition,maxRecords:options.maxRecords||this.maxRecords}});if(options.DistributedSearch||this.DistributedSearch){this.writeNode("csw:DistributedSearch",options.DistributedSearch||this.DistributedSearch,node)}var ResponseHandler=options.ResponseHandler||this.ResponseHandler;if(OpenLayers.Util.isArray(ResponseHandler)&&ResponseHandler.length>0){for(var i=0,len=ResponseHandler.length;i<len;i++){this.writeNode("csw:ResponseHandler",ResponseHandler[i],node)}}this.writeNode("Query",options.Query||this.Query,node);return node},DistributedSearch:function(options){var node=this.createElementNSPlus("csw:DistributedSearch",{attributes:{hopCount:options.hopCount}});return node},ResponseHandler:function(options){var node=this.createElementNSPlus("csw:ResponseHandler",{value:options.value});return node},Query:function(options){if(!options){options={}}var node=this.createElementNSPlus("csw:Query",{attributes:{typeNames:options.typeNames||"csw:Record"}});var ElementName=options.ElementName;if(OpenLayers.Util.isArray(ElementName)&&ElementName.length>0){for(var i=0,len=ElementName.length;i<len;i++){this.writeNode("csw:ElementName",ElementName[i],node)}}else{this.writeNode("csw:ElementSetName",options.ElementSetName||{value:"summary"},node)}if(options.Constraint){this.writeNode("csw:Constraint",options.Constraint,node)}if(options.SortBy){this.writeNode("ogc:SortBy",options.SortBy,node)}return node},ElementName:function(options){var node=this.createElementNSPlus("csw:ElementName",{value:options.value});return node},ElementSetName:function(options){var node=this.createElementNSPlus("csw:ElementSetName",{attributes:{typeNames:options.typeNames},value:options.value});return node},Constraint:function(options){var node=this.createElementNSPlus("csw:Constraint",{attributes:{version:options.version}});if(options.Filter){var format=new OpenLayers.Format.Filter({version:options.version});node.appendChild(format.write(options.Filter))}else{if(options.CqlText){var child=this.createElementNSPlus("CqlText",{value:options.CqlText.value});node.appendChild(child)}}return node}},ogc:OpenLayers.Format.Filter.v1_1_0.prototype.writers.ogc},CLASS_NAME:"OpenLayers.Format.CSWGetRecords.v2_0_2"});Ext.namespace("GeoExt.data");GeoExt.data.CSWRecordsReader=function(meta,recordType){meta=meta||{};if(!meta.format){meta.format=new OpenLayers.Format.CSWGetRecords()}if(!meta.root){meta.root="records"}GeoExt.data.CSWRecordsReader.superclass.constructor.call(this,meta,recordType)};Ext.extend(GeoExt.data.CSWRecordsReader,Ext.data.JsonReader,{read:function(data){var o=data.data;if(!o){o=data.responseXML;if(!o||!o.documentElement){o=data.responseText}}return this.readRecords(o)},readRecords:function(data){if(typeof data==="string"||data.nodeType){data=this.meta.format.read(data)}if(data.success===false){throw new Ext.data.DataReader.Error("invalid-response",data)}var result=GeoExt.data.CSWRecordsReader.superclass.readRecords.call(this,data);Ext.each(result.records,function(record){for(var key in record.data){var value=record.data[key];if(value instanceof Array){for(var i=0,ii=value.length;i<ii;++i){if(value[i] instanceof Object){var size=0;for(var property in value[i]){if(value[i].hasOwnProperty(property)){size++}}if(size===1&&value[i].value){value[i]=value[i].value}}}}}});if(data.SearchResults){result.totalRecords=data.SearchResults.numberOfRecordsMatched}return result}});OpenLayers.Protocol.CSW=function(options){options=OpenLayers.Util.applyDefaults(options,OpenLayers.Protocol.CSW.DEFAULTS);var cls=OpenLayers.Protocol.CSW["v"+options.version.replace(/\./g,"_")];if(!cls){throw"Unsupported CSW version: "+options.version}return new cls(options)};OpenLayers.Protocol.CSW.DEFAULTS={version:"2.0.2"};OpenLayers.Protocol.CSW.v2_0_2=OpenLayers.Class(OpenLayers.Protocol,{formatOptions:null,initialize:function(options){OpenLayers.Protocol.prototype.initialize.apply(this,[options]);if(!options.format){this.format=new OpenLayers.Format.CSWGetRecords.v2_0_2(OpenLayers.Util.extend({},this.formatOptions))}},destroy:function(){if(this.options&&!this.options.format){this.format.destroy()}this.format=null;OpenLayers.Protocol.prototype.destroy.apply(this)},read:function(options){options=OpenLayers.Util.extend({},options);OpenLayers.Util.applyDefaults(options,this.options||{});var response=new OpenLayers.Protocol.Response({requestType:"read"});var data=this.format.write(options.params||options);response.priv=OpenLayers.Request.POST({url:options.url,callback:this.createCallback(this.handleRead,response,options),params:options.params,headers:options.headers,data:data});return response},handleRead:function(response,options){if(options.callback){var request=response.priv;if(request.status>=200&&request.status<300){response.data=this.parseData(request);response.code=OpenLayers.Protocol.Response.SUCCESS}else{response.code=OpenLayers.Protocol.Response.FAILURE}options.callback.call(options.scope,response)}},parseData:function(request){var doc=request.responseXML;if(!doc||!doc.documentElement){doc=request.responseText}if(!doc||doc.length<=0){return null}return this.format.read(doc)},CLASS_NAME:"OpenLayers.Protocol.CSW.v2_0_2"});Ext.namespace("gxp.plugins");gxp.plugins.CSWCatalogueSource=Ext.extend(gxp.plugins.CatalogueSource,{ptype:"gxp_cataloguesource",createStore:function(){this.store=new Ext.data.Store({proxy:new GeoExt.data.ProtocolProxy(Ext.apply({setParamsAsOptions:true,protocol:new OpenLayers.Protocol.CSW({url:this.url})},this.proxyOptions||{})),reader:new GeoExt.data.CSWRecordsReader({fields:["title","abstract","URI","bounds","projection","references"]})});gxp.plugins.LayerSource.prototype.createStore.apply(this,arguments)},getPagingStart:function(){return 1},getPagingParamNames:function(){return{start:"startPosition",limit:"maxRecords"}},getFullFilter:function(filter,otherFilters){var filters=[];if(filter!==undefined){filters.push(filter)}filters=filters.concat(otherFilters);if(filters.length<=1){return filters[0]}else{return new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:filters})}},filter:function(options){var filter=undefined;if(options.queryString!==""){filter=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,matchCase:false,property:"csw:AnyText",value:"*"+options.queryString+"*"})}var data={resultType:"results",maxRecords:options.limit,Query:{typeNames:"gmd:MD_Metadata",ElementSetName:{value:"full"}}};var fullFilter=this.getFullFilter(filter,options.filters);if(fullFilter!==undefined){Ext.apply(data.Query,{Constraint:{version:"1.1.0",Filter:fullFilter}})}Ext.apply(this.store.baseParams,data);this.store.load()}});Ext.preg(gxp.plugins.CSWCatalogueSource.prototype.ptype,gxp.plugins.CSWCatalogueSource);Ext.namespace("gxp.plugins");gxp.plugins.QueryForm=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_queryform",featureManager:null,autoHide:false,schema:null,queryActionText:"Query",cancelButtonText:"Cancel",queryMenuText:"Query layer",queryActionTip:"Query the selected layer",queryByLocationText:"Query by current map extent",queryByAttributesText:"Query by attributes",queryMsg:"Querying...",noFeaturesTitle:"No Match",noFeaturesMessage:"Your query did not return any results.",outputAction:0,autoExpand:null,addActions:function(actions){if(!this.initialConfig.actions&&!actions){actions=[{text:this.queryActionText,menuText:this.queryMenuText,iconCls:"gxp-icon-find",tooltip:this.queryActionTip,disabled:true,toggleGroup:this.toggleGroup,enableToggle:true,allowDepress:true,toggleHandler:function(button,pressed){if(this.autoExpand&&this.output.length>0){var expandContainer=Ext.getCmp(this.autoExpand);expandContainer[pressed?"expand":"collapse"]();if(pressed){expandContainer.expand();if(expandContainer.ownerCt&&expandContainer.ownerCt instanceof Ext.Panel){expandContainer.ownerCt.expand()}}else{this.target.tools[this.featureManager].loadFeatures()}}},scope:this}]}this.actions=gxp.plugins.QueryForm.superclass.addActions.apply(this,actions);if(this.actionTarget!==null&&this.actions){this.target.tools[this.featureManager].on("layerchange",function(mgr,rec,schema){for(var i=this.actions.length-1;i>=0;--i){this.actions[i].setDisabled(!schema)}},this)}},addOutput:function(config){var featureManager=this.target.tools[this.featureManager];config=Ext.apply({border:false,bodyStyle:"padding: 10px",layout:"form",width:320,autoScroll:true,items:[{xtype:"fieldset",ref:"spatialFieldset",title:this.queryByLocationText,anchor:"97%",style:"margin-bottom:0; border-left-color:transparent; border-right-color:transparent; border-width:1px 1px 0 1px; padding-bottom:0",checkboxToggle:true},{xtype:"fieldset",ref:"attributeFieldset",title:this.queryByAttributesText,anchor:"97%",style:"margin-bottom:0",checkboxToggle:true}],bbar:["->",{text:this.cancelButtonText,iconCls:"cancel",handler:function(){var ownerCt=this.outputTarget?queryForm.ownerCt:queryForm.ownerCt.ownerCt;if(ownerCt&&ownerCt instanceof Ext.Window){ownerCt.hide()}addFilterBuilder(featureManager,featureManager.layerRecord,featureManager.schema);featureManager.loadFeatures()}},{text:this.queryActionText,iconCls:"gxp-icon-find",handler:function(){var filters=[];if(queryForm.spatialFieldset.collapsed!==true){filters.push(new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:featureManager.featureStore.geometryName,value:this.target.mapPanel.map.getExtent()}))}if(queryForm.attributeFieldset.collapsed!==true){var attributeFilter=queryForm.filterBuilder.getFilter();attributeFilter&&filters.push(attributeFilter)}featureManager.loadFeatures(filters.length>1?new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:filters}):filters[0])},scope:this}]},config||{});var queryForm=gxp.plugins.QueryForm.superclass.addOutput.call(this,config);var expandContainer=null,userExpand=true;if(this.autoExpand){expandContainer=Ext.getCmp(this.autoExpand);function stopAutoExpand(){if(userExpand){expandContainer.un("expand",stopAutoExpand);expandContainer.un("collapse",stopAutoExpand);expandContainer=null}userExpand=true}expandContainer.on({expand:stopAutoExpand,collapse:stopAutoExpand})}var addFilterBuilder=function(mgr,rec,schema){queryForm.attributeFieldset.removeAll();queryForm.setDisabled(!schema);if(expandContainer){userExpand=false;expandContainer[schema?"expand":"collapse"]();if(schema&&expandContainer&&expandContainer.ownerCt&&expandContainer.ownerCt instanceof Ext.Panel){expandContainer.ownerCt.expand()}}if(schema){queryForm.attributeFieldset.add({xtype:"gxp_filterbuilder",ref:"../filterBuilder",attributes:schema,allowBlank:true,allowGroups:false});queryForm.spatialFieldset.expand();queryForm.attributeFieldset.expand()}else{queryForm.attributeFieldset.rendered&&queryForm.attributeFieldset.collapse();queryForm.spatialFieldset.rendered&&queryForm.spatialFieldset.collapse()}queryForm.attributeFieldset.doLayout()};featureManager.on("layerchange",addFilterBuilder);addFilterBuilder(featureManager,featureManager.layerRecord,featureManager.schema);featureManager.on({beforequery:function(){new Ext.LoadMask(queryForm.getEl(),{store:featureManager.featureStore,msg:this.queryMsg}).show()},query:function(tool,store){if(store){if(this.target.tools[this.featureManager].featureStore!==null){store.getCount()||Ext.Msg.show({title:this.noFeaturesTitle,msg:this.noFeaturesMessage,buttons:Ext.Msg.OK,icon:Ext.Msg.INFO});if(this.autoHide){var ownerCt=this.outputTarget?queryForm.ownerCt:queryForm.ownerCt.ownerCt;ownerCt instanceof Ext.Window&&ownerCt.hide()}}}},scope:this});return queryForm}});Ext.preg(gxp.plugins.QueryForm.prototype.ptype,gxp.plugins.QueryForm);Ext.namespace("GeoExt.data");GeoExt.data.WMSDescribeLayerReader=function(meta,recordType){meta=meta||{};if(!meta.format){meta.format=new OpenLayers.Format.WMSDescribeLayer()}if(!(typeof recordType==="function")){recordType=Ext.data.Record.create(recordType||meta.fields||[{name:"owsType",type:"string"},{name:"owsURL",type:"string"},{name:"typeName",type:"string"}])}GeoExt.data.WMSDescribeLayerReader.superclass.constructor.call(this,meta,recordType)};Ext.extend(GeoExt.data.WMSDescribeLayerReader,Ext.data.DataReader,{read:function(request){var data=request.responseXML;if(!data||!data.documentElement){data=request.responseText}return this.readRecords(data)},readRecords:function(data){if(typeof data==="string"||data.nodeType){data=this.meta.format.read(data)}if(!!data.error){throw new Ext.data.DataReader.Error("invalid-response",data.error)}var records=[],description;for(var i=0,len=data.length;i<len;i++){description=data[i];if(description){records.push(new this.recordType(description))}}return{totalRecords:records.length,success:true,records:records}}});OpenLayers.Format.WMSCapabilities.v1_1_1_WMSC=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1_1_1,{version:"1.1.1",profile:"WMSC",readers:{wms:OpenLayers.Util.applyDefaults({VendorSpecificCapabilities:function(node,obj){obj.vendorSpecific={tileSets:[]};this.readChildNodes(node,obj.vendorSpecific)},TileSet:function(node,vendorSpecific){var tileset={srs:{},bbox:{},resolutions:[]};this.readChildNodes(node,tileset);vendorSpecific.tileSets.push(tileset)},Resolutions:function(node,tileset){var res=this.getChildValue(node).split(" ");for(var i=0,len=res.length;i<len;i++){if(res[i]!=""){tileset.resolutions.push(parseFloat(res[i]))}}},Width:function(node,tileset){tileset.width=parseInt(this.getChildValue(node))},Height:function(node,tileset){tileset.height=parseInt(this.getChildValue(node))},Layers:function(node,tileset){tileset.layers=this.getChildValue(node)},Styles:function(node,tileset){tileset.styles=this.getChildValue(node)}},OpenLayers.Format.WMSCapabilities.v1_1_1.prototype.readers.wms)},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_1_1_WMSC"});Ext.namespace("gxp.plugins");gxp.plugins.WMSCSource=Ext.extend(gxp.plugins.WMSSource,{ptype:"gxp_wmscsource",version:"1.1.1",constructor:function(config){config.baseParams={SERVICE:"WMS",REQUEST:"GetCapabilities",TILED:true};if(!config.format){this.format=new OpenLayers.Format.WMSCapabilities({keepData:true,profile:"WMSC",allowFallback:true})}gxp.plugins.WMSCSource.superclass.constructor.apply(this,arguments)},createLayerRecord:function(config){var record=gxp.plugins.WMSCSource.superclass.createLayerRecord.apply(this,arguments);if(!record){return}var caps,srs;if(this.store.reader.raw){caps=this.store.reader.raw.capability}var tileSets=(caps&&caps.vendorSpecific)?caps.vendorSpecific.tileSets:(config.capability&&config.capability.tileSets);var layer=record.get("layer");if(tileSets){var mapProjection=this.getProjection(record)||this.getMapProjection();for(var i=0,len=tileSets.length;i<len;i++){var tileSet=tileSets[i];if(tileSet.layers===layer.params.LAYERS){var tileProjection;for(srs in tileSet.srs){tileProjection=new OpenLayers.Projection(srs);break}if(mapProjection.equals(tileProjection)){var bbox=tileSet.bbox[srs].bbox;layer.projection=tileProjection;layer.addOptions({resolutions:tileSet.resolutions,tileSize:new OpenLayers.Size(tileSet.width,tileSet.height),tileOrigin:new OpenLayers.LonLat(bbox[0],bbox[1])});break}}}}else{if(this.lazy){var tileSize=config.tileSize,tileOrigin=config.tileOrigin;layer.addOptions({resolutions:config.resolutions,tileSize:tileSize?new OpenLayers.Size(tileSize[0],tileSize[1]):undefined,tileOrigin:tileOrigin?OpenLayers.LonLat.fromArray(tileOrigin):undefined});if(!tileOrigin){var maxExtent;if(this.target.map.maxExtent){maxExtent=this.target.map.maxExtent}else{srs=config.srs||this.target.map.projection;maxExtent=OpenLayers.Projection.defaults[srs].maxExtent}if(maxExtent){layer.tileOrigin=OpenLayers.LonLat.fromArray(maxExtent)}}}}layer.params.TILED=config.tiled;return record},getConfigForRecord:function(record){var config=gxp.plugins.WMSCSource.superclass.getConfigForRecord.apply(this,arguments),name=config.name,tileSetsCap,layer=record.getLayer();if(config.capability&&this.store.reader.raw){var capability=this.store.reader.raw.capability;var tileSets=capability.vendorSpecific&&capability.vendorSpecific.tileSets;if(tileSets){for(var i=tileSets.length-1;i>=0;--i){tileSetsCap=tileSets[i];if(tileSetsCap.layers===name&&tileSetsCap.srs[layer.projection]){config.capability.tileSets=[tileSetsCap];break}}}}if(!(config.capability&&config.capability.tileSets)){var tileSize=layer.options.tileSize;if(tileSize){config.tileSize=[tileSize.w,tileSize.h]}config.tileOrigin=layer.options.tileOrigin;config.resolutions=layer.options.resolutions}return Ext.applyIf(config,{cached:!!layer.params.TILED})}});Ext.preg(gxp.plugins.WMSCSource.prototype.ptype,gxp.plugins.WMSCSource);Ext.namespace("gxp.plugins");gxp.plugins.ZoomToExtent=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_zoomtoextent",menuText:"Zoom To Max Extent",tooltip:"Zoom To Max Extent",extent:null,closest:true,iconCls:"gxp-icon-zoomtoextent",closest:true,constructor:function(config){gxp.plugins.ZoomToExtent.superclass.constructor.apply(this,arguments);if(this.extent instanceof Array){this.extent=OpenLayers.Bounds.fromArray(this.extent)}},addActions:function(){return gxp.plugins.ZoomToExtent.superclass.addActions.apply(this,[{text:this.buttonText,menuText:this.menuText,iconCls:this.iconCls,tooltip:this.tooltip,handler:function(){var map=this.target.mapPanel.map;var extent=typeof this.extent=="function"?this.extent():this.extent;if(!extent){var layer,extended;for(var i=0,len=map.layers.length;i<len;++i){layer=map.layers[i];if(layer.getVisibility()){extended=layer.restrictedExtent||layer.maxExtent;if(extent){extent.extend(extended)}else{if(extended){extent=extended.clone()}}}}}if(extent){var restricted=map.restrictedExtent||map.maxExtent;if(restricted){extent=new OpenLayers.Bounds(Math.max(extent.left,restricted.left),Math.max(extent.bottom,restricted.bottom),Math.min(extent.right,restricted.right),Math.min(extent.top,restricted.top))}map.zoomToExtent(extent,this.closest)}},scope:this}])}});Ext.preg(gxp.plugins.ZoomToExtent.prototype.ptype,gxp.plugins.ZoomToExtent);OpenLayers.Control.NavigationHistory=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOGGLE,previous:null,previousOptions:null,next:null,nextOptions:null,limit:50,autoActivate:true,clearOnDeactivate:false,registry:null,nextStack:null,previousStack:null,listeners:null,restoring:false,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,[options]);this.registry=OpenLayers.Util.extend({moveend:this.getState},this.registry);var previousOptions={trigger:OpenLayers.Function.bind(this.previousTrigger,this),displayClass:this.displayClass+" "+this.displayClass+"Previous"};OpenLayers.Util.extend(previousOptions,this.previousOptions);this.previous=new OpenLayers.Control.Button(previousOptions);var nextOptions={trigger:OpenLayers.Function.bind(this.nextTrigger,this),displayClass:this.displayClass+" "+this.displayClass+"Next"};OpenLayers.Util.extend(nextOptions,this.nextOptions);this.next=new OpenLayers.Control.Button(nextOptions);this.clear()},onPreviousChange:function(state,length){if(state&&!this.previous.active){this.previous.activate()}else{if(!state&&this.previous.active){this.previous.deactivate()}}},onNextChange:function(state,length){if(state&&!this.next.active){this.next.activate()}else{if(!state&&this.next.active){this.next.deactivate()}}},destroy:function(){OpenLayers.Control.prototype.destroy.apply(this);this.previous.destroy();this.next.destroy();this.deactivate();for(var prop in this){this[prop]=null}},setMap:function(map){this.map=map;this.next.setMap(map);this.previous.setMap(map)},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);this.next.draw();this.previous.draw()},previousTrigger:function(){var current=this.previousStack.shift();var state=this.previousStack.shift();if(state!=undefined){this.nextStack.unshift(current);this.previousStack.unshift(state);this.restoring=true;this.restore(state);this.restoring=false;this.onNextChange(this.nextStack[0],this.nextStack.length);this.onPreviousChange(this.previousStack[1],this.previousStack.length-1)}else{this.previousStack.unshift(current)}return state},nextTrigger:function(){var state=this.nextStack.shift();if(state!=undefined){this.previousStack.unshift(state);this.restoring=true;this.restore(state);this.restoring=false;this.onNextChange(this.nextStack[0],this.nextStack.length);this.onPreviousChange(this.previousStack[1],this.previousStack.length-1)}return state},clear:function(){this.previousStack=[];this.previous.deactivate();this.nextStack=[];this.next.deactivate()},getState:function(){return{center:this.map.getCenter(),resolution:this.map.getResolution(),projection:this.map.getProjectionObject(),units:this.map.getProjectionObject().getUnits()||this.map.units||this.map.baseLayer.units}},restore:function(state){var center,zoom;if(this.map.getProjectionObject()==state.projection){zoom=this.map.getZoomForResolution(state.resolution);center=state.center}else{center=state.center.clone();center.transform(state.projection,this.map.getProjectionObject());var sourceUnits=state.units;var targetUnits=this.map.getProjectionObject().getUnits()||this.map.units||this.map.baseLayer.units;var resolutionFactor=sourceUnits&&targetUnits?OpenLayers.INCHES_PER_UNIT[sourceUnits]/OpenLayers.INCHES_PER_UNIT[targetUnits]:1;zoom=this.map.getZoomForResolution(resolutionFactor*state.resolution)}this.map.setCenter(center,zoom)},setListeners:function(){this.listeners={};for(var type in this.registry){this.listeners[type]=OpenLayers.Function.bind(function(){if(!this.restoring){var state=this.registry[type].apply(this,arguments);this.previousStack.unshift(state);if(this.previousStack.length>1){this.onPreviousChange(this.previousStack[1],this.previousStack.length-1)}if(this.previousStack.length>(this.limit+1)){this.previousStack.pop()}if(this.nextStack.length>0){this.nextStack=[];this.onNextChange(null,0)}}return true},this)}},activate:function(){var activated=false;if(this.map){if(OpenLayers.Control.prototype.activate.apply(this)){if(this.listeners==null){this.setListeners()}for(var type in this.listeners){this.map.events.register(type,this,this.listeners[type])}activated=true;if(this.previousStack.length==0){this.initStack()}}}return activated},initStack:function(){if(this.map.getCenter()){this.listeners.moveend()}},deactivate:function(){var deactivated=false;if(this.map){if(OpenLayers.Control.prototype.deactivate.apply(this)){for(var type in this.listeners){this.map.events.unregister(type,this,this.listeners[type])}if(this.clearOnDeactivate){this.clear()}deactivated=true}}return deactivated},CLASS_NAME:"OpenLayers.Control.NavigationHistory"});Ext.namespace("gxp.plugins");gxp.plugins.NavigationHistory=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_navigationhistory",previousMenuText:"Zoom To Previous Extent",nextMenuText:"Zoom To Next Extent",previousTooltip:"Zoom To Previous Extent",nextTooltip:"Zoom To Next Extent",constructor:function(config){gxp.plugins.NavigationHistory.superclass.constructor.apply(this,arguments)},addActions:function(){var historyControl=new OpenLayers.Control.NavigationHistory();this.target.mapPanel.map.addControl(historyControl);var actions=[new GeoExt.Action({menuText:this.previousMenuText,iconCls:"gxp-icon-zoom-previous",tooltip:this.previousTooltip,disabled:true,control:historyControl.previous}),new GeoExt.Action({menuText:this.nextMenuText,iconCls:"gxp-icon-zoom-next",tooltip:this.nextTooltip,disabled:true,control:historyControl.next})];return gxp.plugins.NavigationHistory.superclass.addActions.apply(this,[actions])}});Ext.preg(gxp.plugins.NavigationHistory.prototype.ptype,gxp.plugins.NavigationHistory);Ext.namespace("gxp.plugins");gxp.plugins.Zoom=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_zoom",zoomMenuText:"Zoom Box",zoomInMenuText:"Zoom In",zoomOutMenuText:"Zoom Out",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Zoom in",zoomOutTooltip:"Zoom out",constructor:function(config){gxp.plugins.Zoom.superclass.constructor.apply(this,arguments)},addActions:function(){var actions=[{menuText:this.zoomInMenuText,iconCls:"gxp-icon-zoom-in",tooltip:this.zoomInTooltip,handler:function(){this.target.mapPanel.map.zoomIn()},scope:this},{menuText:this.zoomOutMenuText,iconCls:"gxp-icon-zoom-out",tooltip:this.zoomOutTooltip,handler:function(){this.target.mapPanel.map.zoomOut()},scope:this}];if(this.showZoomBoxAction){actions.unshift(new GeoExt.Action({menuText:this.zoomText,iconCls:"gxp-icon-zoom",tooltip:this.zoomTooltip,control:new OpenLayers.Control.ZoomBox(this.controlOptions),map:this.target.mapPanel.map,enableToggle:true,allowDepress:false,toggleGroup:this.toggleGroup}))}return gxp.plugins.Zoom.superclass.addActions.apply(this,[actions])}});Ext.preg(gxp.plugins.Zoom.prototype.ptype,gxp.plugins.Zoom);OpenLayers.Control.Measure=OpenLayers.Class(OpenLayers.Control,{callbacks:null,displaySystem:"metric",geodesic:false,displaySystemUnits:{geographic:["dd"],english:["mi","ft","in"],metric:["km","m"]},partialDelay:300,delayedTrigger:null,persist:false,immediate:false,initialize:function(handler,options){OpenLayers.Control.prototype.initialize.apply(this,[options]);var callbacks={done:this.measureComplete,point:this.measurePartial};if(this.immediate){callbacks.modify=this.measureImmediate}this.callbacks=OpenLayers.Util.extend(callbacks,this.callbacks);this.handlerOptions=OpenLayers.Util.extend({persist:this.persist},this.handlerOptions);this.handler=new handler(this,this.callbacks,this.handlerOptions)},deactivate:function(){this.cancelDelay();return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},cancel:function(){this.cancelDelay();this.handler.cancel()},setImmediate:function(immediate){this.immediate=immediate;if(this.immediate){this.callbacks.modify=this.measureImmediate}else{delete this.callbacks.modify}},updateHandler:function(handler,options){var active=this.active;if(active){this.deactivate()}this.handler=new handler(this,this.callbacks,options);if(active){this.activate()}},measureComplete:function(geometry){this.cancelDelay();this.measure(geometry,"measure")},measurePartial:function(point,geometry){this.cancelDelay();geometry=geometry.clone();if(this.handler.freehandMode(this.handler.evt)){this.measure(geometry,"measurepartial")}else{this.delayedTrigger=window.setTimeout(OpenLayers.Function.bind(function(){this.delayedTrigger=null;this.measure(geometry,"measurepartial")},this),this.partialDelay)}},measureImmediate:function(point,feature,drawing){if(drawing&&!this.handler.freehandMode(this.handler.evt)){this.cancelDelay();this.measure(feature.geometry,"measurepartial")}},cancelDelay:function(){if(this.delayedTrigger!==null){window.clearTimeout(this.delayedTrigger);this.delayedTrigger=null}},measure:function(geometry,eventType){var stat,order;if(geometry.CLASS_NAME.indexOf("LineString")>-1){stat=this.getBestLength(geometry);order=1}else{stat=this.getBestArea(geometry);order=2}this.events.triggerEvent(eventType,{measure:stat[0],units:stat[1],order:order,geometry:geometry})},getBestArea:function(geometry){var units=this.displaySystemUnits[this.displaySystem];var unit,area;for(var i=0,len=units.length;i<len;++i){unit=units[i];area=this.getArea(geometry,unit);if(area>1){break}}return[area,unit]},getArea:function(geometry,units){var area,geomUnits;if(this.geodesic){area=geometry.getGeodesicArea(this.map.getProjectionObject());geomUnits="m"}else{area=geometry.getArea();geomUnits=this.map.getUnits()}var inPerDisplayUnit=OpenLayers.INCHES_PER_UNIT[units];if(inPerDisplayUnit){var inPerMapUnit=OpenLayers.INCHES_PER_UNIT[geomUnits];area*=Math.pow((inPerMapUnit/inPerDisplayUnit),2)}return area},getBestLength:function(geometry){var units=this.displaySystemUnits[this.displaySystem];var unit,length;for(var i=0,len=units.length;i<len;++i){unit=units[i];length=this.getLength(geometry,unit);if(length>1){break}}return[length,unit]},getLength:function(geometry,units){var length,geomUnits;if(this.geodesic){length=geometry.getGeodesicLength(this.map.getProjectionObject());geomUnits="m"}else{length=geometry.getLength();geomUnits=this.map.getUnits()}var inPerDisplayUnit=OpenLayers.INCHES_PER_UNIT[units];if(inPerDisplayUnit){var inPerMapUnit=OpenLayers.INCHES_PER_UNIT[geomUnits];length*=(inPerMapUnit/inPerDisplayUnit)}return length},CLASS_NAME:"OpenLayers.Control.Measure"});Ext.namespace("gxp.plugins");gxp.plugins.Measure=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_measure",outputTarget:"map",buttonText:"Measure",lengthMenuText:"Length",areaMenuText:"Area",lengthTooltip:"Measure length",areaTooltip:"Measure area",measureTooltip:"Measure",constructor:function(config){gxp.plugins.Measure.superclass.constructor.apply(this,arguments)},destroy:function(){this.button=null;gxp.plugins.Measure.superclass.destroy.apply(this,arguments)},createMeasureControl:function(handlerType,title){var styleMap=new OpenLayers.StyleMap({"default":new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{Point:{pointRadius:4,graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:3,strokeOpacity:1,strokeColor:"#666666",strokeDashstyle:"dash"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#666666",fillColor:"white",fillOpacity:0.3}}})]})});var cleanup=function(){if(measureToolTip){measureToolTip.destroy()}};var makeString=function(metricData){var metric=metricData.measure;var metricUnit=metricData.units;measureControl.displaySystem="english";var englishData=metricData.geometry.CLASS_NAME.indexOf("LineString")>-1?measureControl.getBestLength(metricData.geometry):measureControl.getBestArea(metricData.geometry);var english=englishData[0];var englishUnit=englishData[1];measureControl.displaySystem="metric";var dim=metricData.order==2?"<sup>2</sup>":"";return metric.toFixed(2)+" "+metricUnit+dim+"<br>"+english.toFixed(2)+" "+englishUnit+dim};var measureToolTip;var controlOptions=Ext.apply({},this.initialConfig.controlOptions);Ext.applyIf(controlOptions,{geodesic:true,persist:true,handlerOptions:{layerOptions:{styleMap:styleMap}},eventListeners:{measurepartial:function(event){cleanup();measureToolTip=this.addOutput({xtype:"tooltip",html:makeString(event),title:title,autoHide:false,closable:true,draggable:false,mouseOffset:[0,0],showDelay:1,listeners:{hide:cleanup}});if(event.measure>0){var px=measureControl.handler.lastUp;var p0=this.target.mapPanel.getPosition();measureToolTip.targetXY=[p0[0]+px.x,p0[1]+px.y];measureToolTip.show()}},deactivate:cleanup,scope:this}});var measureControl=new OpenLayers.Control.Measure(handlerType,controlOptions);return measureControl},addActions:function(){this.activeIndex=0;this.button=new Ext.SplitButton({iconCls:"gxp-icon-measure-length",tooltip:this.measureTooltip,buttonText:this.buttonText,enableToggle:true,toggleGroup:this.toggleGroup,allowDepress:true,handler:function(button,event){if(button.pressed){button.menu.items.itemAt(this.activeIndex).setChecked(true)}},scope:this,listeners:{toggle:function(button,pressed){if(!pressed){button.menu.items.each(function(i){i.setChecked(false)})}},render:function(button){Ext.ButtonToggleMgr.register(button)}},menu:new Ext.menu.Menu({items:[new Ext.menu.CheckItem(new GeoExt.Action({text:this.lengthMenuText,iconCls:"gxp-icon-measure-length",toggleGroup:this.toggleGroup,group:this.toggleGroup,listeners:{checkchange:function(item,checked){this.activeIndex=0;this.button.toggle(checked);if(checked){this.button.setIconClass(item.iconCls)}},scope:this},map:this.target.mapPanel.map,control:this.createMeasureControl(OpenLayers.Handler.Path,this.lengthTooltip)})),new Ext.menu.CheckItem(new GeoExt.Action({text:this.areaMenuText,iconCls:"gxp-icon-measure-area",toggleGroup:this.toggleGroup,group:this.toggleGroup,allowDepress:false,listeners:{checkchange:function(item,checked){this.activeIndex=1;this.button.toggle(checked);if(checked){this.button.setIconClass(item.iconCls)}},scope:this},map:this.target.mapPanel.map,control:this.createMeasureControl(OpenLayers.Handler.Polygon,this.areaTooltip)}))]})});return gxp.plugins.Measure.superclass.addActions.apply(this,[this.button])}});Ext.preg(gxp.plugins.Measure.prototype.ptype,gxp.plugins.Measure);OpenLayers.Handler.Hover=OpenLayers.Class(OpenLayers.Handler,{delay:500,pixelTolerance:null,stopMove:false,px:null,timerId:null,mousemove:function(evt){if(this.passesTolerance(evt.xy)){this.clearTimer();this.callback("move",[evt]);this.px=evt.xy;evt=OpenLayers.Util.extend({},evt);this.timerId=window.setTimeout(OpenLayers.Function.bind(this.delayedCall,this,evt),this.delay)}return !this.stopMove},mouseout:function(evt){if(OpenLayers.Util.mouseLeft(evt,this.map.viewPortDiv)){this.clearTimer();this.callback("move",[evt])}return true},passesTolerance:function(px){var passes=true;if(this.pixelTolerance&&this.px){var dpx=Math.sqrt(Math.pow(this.px.x-px.x,2)+Math.pow(this.px.y-px.y,2));if(dpx<this.pixelTolerance){passes=false}}return passes},clearTimer:function(){if(this.timerId!=null){window.clearTimeout(this.timerId);this.timerId=null}},delayedCall:function(evt){this.callback("pause",[evt])},deactivate:function(){var deactivated=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.clearTimer();deactivated=true}return deactivated},CLASS_NAME:"OpenLayers.Handler.Hover"});OpenLayers.Control.WMSGetFeatureInfo=OpenLayers.Class(OpenLayers.Control,{hover:false,drillDown:false,maxFeatures:10,clickCallback:"click",output:"features",layers:null,queryVisible:false,url:null,layerUrls:null,infoFormat:"text/html",vendorParams:{},format:null,formatOptions:null,handler:null,hoverRequest:null,initialize:function(options){options=options||{};options.handlerOptions=options.handlerOptions||{};OpenLayers.Control.prototype.initialize.apply(this,[options]);if(!this.format){this.format=new OpenLayers.Format.WMSGetFeatureInfo(options.formatOptions)}if(this.drillDown===true){this.hover=false}if(this.hover){this.handler=new OpenLayers.Handler.Hover(this,{move:this.cancelHover,pause:this.getInfoForHover},OpenLayers.Util.extend(this.handlerOptions.hover||{},{delay:250}))}else{var callbacks={};callbacks[this.clickCallback]=this.getInfoForClick;this.handler=new OpenLayers.Handler.Click(this,callbacks,this.handlerOptions.click||{})}},getInfoForClick:function(evt){this.events.triggerEvent("beforegetfeatureinfo",{xy:evt.xy});OpenLayers.Element.addClass(this.map.viewPortDiv,"olCursorWait");this.request(evt.xy,{})},getInfoForHover:function(evt){this.events.triggerEvent("beforegetfeatureinfo",{xy:evt.xy});this.request(evt.xy,{hover:true})},cancelHover:function(){if(this.hoverRequest){this.hoverRequest.abort();this.hoverRequest=null}},findLayers:function(){var candidates=this.layers||this.map.layers;var layers=[];var layer,url;for(var i=candidates.length-1;i>=0;--i){layer=candidates[i];if(layer instanceof OpenLayers.Layer.WMS&&(!this.queryVisible||layer.getVisibility())){url=OpenLayers.Util.isArray(layer.url)?layer.url[0]:layer.url;if(this.drillDown===false&&!this.url){this.url=url}if(this.drillDown===true||this.urlMatches(url)){layers.push(layer)}}}return layers},urlMatches:function(url){var matches=OpenLayers.Util.isEquivalentUrl(this.url,url);if(!matches&&this.layerUrls){for(var i=0,len=this.layerUrls.length;i<len;++i){if(OpenLayers.Util.isEquivalentUrl(this.layerUrls[i],url)){matches=true;break}}}return matches},buildWMSOptions:function(url,layers,clickPosition,format){var layerNames=[],styleNames=[];for(var i=0,len=layers.length;i<len;i++){if(layers[i].params.LAYERS!=null){layerNames=layerNames.concat(layers[i].params.LAYERS);styleNames=styleNames.concat(this.getStyleNames(layers[i]))}}var firstLayer=layers[0];var projection=this.map.getProjection();var layerProj=firstLayer.projection;if(layerProj&&layerProj.equals(this.map.getProjectionObject())){projection=layerProj.getCode()}var params=OpenLayers.Util.extend({service:"WMS",version:firstLayer.params.VERSION,request:"GetFeatureInfo",exceptions:firstLayer.params.EXCEPTIONS,bbox:this.map.getExtent().toBBOX(null,firstLayer.reverseAxisOrder()),feature_count:this.maxFeatures,height:this.map.getSize().h,width:this.map.getSize().w,format:format,info_format:firstLayer.params.INFO_FORMAT||this.infoFormat},(parseFloat(firstLayer.params.VERSION)>=1.3)?{crs:projection,i:parseInt(clickPosition.x),j:parseInt(clickPosition.y)}:{srs:projection,x:parseInt(clickPosition.x),y:parseInt(clickPosition.y)});if(layerNames.length!=0){params=OpenLayers.Util.extend({layers:layerNames,query_layers:layerNames,styles:styleNames},params)}OpenLayers.Util.applyDefaults(params,this.vendorParams);return{url:url,params:OpenLayers.Util.upperCaseObject(params),callback:function(request){this.handleResponse(clickPosition,request,url)},scope:this}},getStyleNames:function(layer){var styleNames;if(layer.params.STYLES){styleNames=layer.params.STYLES}else{if(OpenLayers.Util.isArray(layer.params.LAYERS)){styleNames=new Array(layer.params.LAYERS.length)}else{styleNames=layer.params.LAYERS.replace(/[^,]/g,"")}}return styleNames},request:function(clickPosition,options){var layers=this.findLayers();if(layers.length==0){this.events.triggerEvent("nogetfeatureinfo");OpenLayers.Element.removeClass(this.map.viewPortDiv,"olCursorWait");return}options=options||{};if(this.drillDown===false){var wmsOptions=this.buildWMSOptions(this.url,layers,clickPosition,layers[0].params.FORMAT);var request=OpenLayers.Request.GET(wmsOptions);if(options.hover===true){this.hoverRequest=request}}else{this._requestCount=0;this._numRequests=0;this.features=[];var services={},url;for(var i=0,len=layers.length;i<len;i++){var layer=layers[i];var service,found=false;url=OpenLayers.Util.isArray(layer.url)?layer.url[0]:layer.url;if(url in services){services[url].push(layer)}else{this._numRequests++;services[url]=[layer]}}var layers;for(var url in services){layers=services[url];var wmsOptions=this.buildWMSOptions(url,layers,clickPosition,layers[0].params.FORMAT);OpenLayers.Request.GET(wmsOptions)}}},triggerGetFeatureInfo:function(request,xy,features){this.events.triggerEvent("getfeatureinfo",{text:request.responseText,features:features,request:request,xy:xy});OpenLayers.Element.removeClass(this.map.viewPortDiv,"olCursorWait")},handleResponse:function(xy,request,url){var doc=request.responseXML;if(!doc||!doc.documentElement){doc=request.responseText}var features=this.format.read(doc);if(this.drillDown===false){this.triggerGetFeatureInfo(request,xy,features)}else{this._requestCount++;if(this.output==="object"){this._features=(this._features||[]).concat({url:url,features:features})}else{this._features=(this._features||[]).concat(features)}if(this._requestCount===this._numRequests){this.triggerGetFeatureInfo(request,xy,this._features.concat());delete this._features;delete this._requestCount;delete this._numRequests}}},CLASS_NAME:"OpenLayers.Control.WMSGetFeatureInfo"});Ext.namespace("gxp.plugins");gxp.plugins.WMSGetFeatureInfo=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_wmsgetfeatureinfo",outputTarget:"map",popupCache:null,infoActionTip:"Get Feature Info",popupTitle:"Feature Info",buttonText:"Identify",format:"html",addActions:function(){this.popupCache={};var actions=gxp.plugins.WMSGetFeatureInfo.superclass.addActions.call(this,[{tooltip:this.infoActionTip,iconCls:"gxp-icon-getfeatureinfo",buttonText:this.buttonText,toggleGroup:this.toggleGroup,enableToggle:true,allowDepress:true,toggleHandler:function(button,pressed){for(var i=0,len=info.controls.length;i<len;i++){if(pressed){info.controls[i].activate()}else{info.controls[i].deactivate()}}}}]);var infoButton=this.actions[0].items[0];var info={controls:[]};var updateInfo=function(){var queryableLayers=this.target.mapPanel.layers.queryBy(function(x){return x.get("queryable")});var map=this.target.mapPanel.map;var control;for(var i=0,len=info.controls.length;i<len;i++){control=info.controls[i];control.deactivate();control.destroy()}info.controls=[];queryableLayers.each(function(x){var layer=x.getLayer();var vendorParams=Ext.apply({},this.vendorParams),param;if(this.layerParams){for(var i=this.layerParams.length-1;i>=0;--i){param=this.layerParams[i].toUpperCase();vendorParams[param]=layer.params[param]}}var infoFormat=x.get("infoFormat");if(infoFormat===undefined){infoFormat=this.format=="html"?"text/html":"application/vnd.ogc.gml"}var control=new OpenLayers.Control.WMSGetFeatureInfo(Ext.applyIf({url:layer.url,queryVisible:true,layers:[layer],infoFormat:infoFormat,vendorParams:vendorParams,eventListeners:{getfeatureinfo:function(evt){var title=x.get("title")||x.get("name");if(infoFormat=="text/html"){var match=evt.text.match(/<body[^>]*>([\s\S]*)<\/body>/);if(match&&!match[1].match(/^\s*$/)){this.displayPopup(evt,title,match[1])}}else{if(infoFormat=="text/plain"){this.displayPopup(evt,title,"<pre>"+evt.text+"</pre>")}else{if(evt.features&&evt.features.length>0){this.displayPopup(evt,title,null,x.get("getFeatureInfo"))}}}},scope:this}},this.controlOptions));map.addControl(control);info.controls.push(control);if(infoButton.pressed){control.activate()}},this)};this.target.mapPanel.layers.on("update",updateInfo,this);this.target.mapPanel.layers.on("add",updateInfo,this);this.target.mapPanel.layers.on("remove",updateInfo,this);return actions},displayPopup:function(evt,title,text,featureinfo){var popup;var popupKey=evt.xy.x+"."+evt.xy.y;featureinfo=featureinfo||{};if(!(popupKey in this.popupCache)){popup=this.addOutput({xtype:"gx_popup",title:this.popupTitle,layout:"accordion",fill:false,autoScroll:true,location:evt.xy,map:this.target.mapPanel,width:250,height:300,defaults:{layout:"fit",autoScroll:true,autoHeight:true,autoWidth:true,collapsible:true}});popup.on({close:(function(key){return function(panel){delete this.popupCache[key]}})(popupKey),scope:this});this.popupCache[popupKey]=popup}else{popup=this.popupCache[popupKey]}var features=evt.features,config=[];if(!text&&features){var feature;for(var i=0,ii=features.length;i<ii;++i){feature=features[i];config.push(Ext.apply({xtype:"gxp_editorgrid",readOnly:true,listeners:{beforeedit:function(e){return false}},title:feature.fid?feature.fid:title,feature:feature,fields:featureinfo.fields,propertyNames:featureinfo.propertyNames},this.itemConfig))}}else{if(text){config.push(Ext.apply({title:title,html:text},this.itemConfig))}}popup.add(config);popup.doLayout()}});Ext.preg(gxp.plugins.WMSGetFeatureInfo.prototype.ptype,gxp.plugins.WMSGetFeatureInfo);Ext.namespace("gxp.plugins");gxp.plugins.Navigation=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_navigation",menuText:"Pan Map",tooltip:"Pan Map",constructor:function(config){gxp.plugins.Navigation.superclass.constructor.apply(this,arguments)},addActions:function(){var control;if(!this.controlOptions){candidates=this.target.mapPanel.map.getControlsByClass("OpenLayers.Control.Navigation");if(candidates.length){control=candidates[0]}}else{this.controlOptions=this.controlOptions||{};Ext.applyIf(this.controlOptions,{dragPanOptions:{enableKinetic:true}});control=new OpenLayers.Control.Navigation(this.controlOptions)}var actions=[new GeoExt.Action({tooltip:this.tooltip,menuText:this.menuText,iconCls:"gxp-icon-pan",enableToggle:true,pressed:true,allowDepress:false,control:control,map:control.map?null:this.target.mapPanel.map,toggleGroup:this.toggleGroup})];return gxp.plugins.Navigation.superclass.addActions.apply(this,[actions])}});Ext.preg(gxp.plugins.Navigation.prototype.ptype,gxp.plugins.Navigation);Ext.namespace("gxp.plugins");gxp.plugins.LayerTree=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_layertree",shortTitle:"Layers",rootNodeText:"Layers",overlayNodeText:"Overlays",baseNodeText:"Base Layers",groups:null,defaultGroup:"default",treeNodeUI:null,constructor:function(config){gxp.plugins.LayerTree.superclass.constructor.apply(this,arguments);if(!this.groups){this.groups={"default":this.overlayNodeText,background:{title:this.baseNodeText,exclusive:true}}}if(!this.treeNodeUI){this.treeNodeUI=Ext.extend(GeoExt.tree.LayerNodeUI,new GeoExt.tree.TreeNodeUIEventMixin())}},addOutput:function(config){config=Ext.apply(this.createOutputConfig(),config||{});var output=gxp.plugins.LayerTree.superclass.addOutput.call(this,config);output.on({contextmenu:this.handleTreeContextMenu,beforemovenode:this.handleBeforeMoveNode,scope:this});return output},createOutputConfig:function(){var treeRoot=new Ext.tree.TreeNode({text:this.rootNodeText,expanded:true,isTarget:false,allowDrop:false});var baseAttrs;if(this.initialConfig.loader&&this.initialConfig.loader.baseAttrs){baseAttrs=this.initialConfig.loader.baseAttrs}var defaultGroup=this.defaultGroup,plugin=this,groupConfig,exclusive;for(var group in this.groups){groupConfig=typeof this.groups[group]=="string"?{title:this.groups[group]}:this.groups[group];exclusive=groupConfig.exclusive;treeRoot.appendChild(new GeoExt.tree.LayerContainer(Ext.apply({text:groupConfig.title,iconCls:"gxp-folder",expanded:true,group:group==this.defaultGroup?undefined:group,loader:new GeoExt.tree.LayerLoader({baseAttrs:exclusive?Ext.apply({checkedGroup:Ext.isString(exclusive)?exclusive:group},baseAttrs):baseAttrs,store:this.target.mapPanel.layers,filter:(function(group){return function(record){return(record.get("group")||defaultGroup)==group&&record.getLayer().displayInLayerSwitcher==true}})(group),createNode:function(attr){plugin.configureLayerNode(this,attr);return GeoExt.tree.LayerLoader.prototype.createNode.apply(this,arguments)}}),singleClickExpand:true,allowDrag:false,listeners:{append:function(tree,node){node.expand()}}},groupConfig)))}return{xtype:"treepanel",root:treeRoot,rootVisible:false,shortTitle:this.shortTitle,border:false,enableDD:true,selModel:new Ext.tree.DefaultSelectionModel({listeners:{beforeselect:this.handleBeforeSelect,scope:this}}),contextMenu:new Ext.menu.Menu({items:[]})}},configureLayerNode:function(loader,attr){attr.uiProvider=this.treeNodeUI;var layer=attr.layer;var store=attr.layerStore;if(layer&&store){var record=store.getAt(store.findBy(function(r){return r.getLayer()===layer}));if(record){attr.qtip=record.get("abstract");if(!record.get("queryable")&&!attr.iconCls){attr.iconCls="gxp-tree-rasterlayer-icon"}if(record.get("fixed")){attr.allowDrag=false}attr.listeners={rendernode:function(node){if(record===this.target.selectedLayer){node.select()}this.target.on("layerselectionchange",function(rec){if(!this.selectionChanging&&rec===record){node.select()}},this)},scope:this}}}},handleBeforeSelect:function(selModel,node){var changed=true;var layer=node&&node.layer;var record;if(layer){var store=node.layerStore;record=store.getAt(store.findBy(function(r){return r.getLayer()===layer}))}this.selectionChanging=true;changed=this.target.selectLayer(record);this.selectionChanging=false;return changed},handleTreeContextMenu:function(node,e){if(node&&node.layer){node.select();var tree=node.getOwnerTree();if(tree.getSelectionModel().getSelectedNode()===node){var c=tree.contextMenu;c.contextNode=node;c.items.getCount()>0&&c.showAt(e.getXY())}}},handleBeforeMoveNode:function(tree,node,oldParent,newParent,i){if(oldParent!==newParent){var store=newParent.loader.store;var index=store.findBy(function(r){return r.getLayer()===node.layer});var record=store.getAt(index);record.set("group",newParent.attributes.group)}}});Ext.preg(gxp.plugins.LayerTree.prototype.ptype,gxp.plugins.LayerTree);Ext.namespace("GeoExt.plugins");GeoExt.plugins.TreeNodeComponent=Ext.extend(Ext.util.Observable,{constructor:function(config){Ext.apply(this.initialConfig,Ext.apply({},config));Ext.apply(this,config);GeoExt.plugins.TreeNodeComponent.superclass.constructor.apply(this,arguments)},init:function(tree){tree.on({rendernode:this.onRenderNode,beforedestroy:this.onBeforeDestroy,scope:this})},onRenderNode:function(node){var rendered=node.rendered;var attr=node.attributes;var component=attr.component||this.component;if(!rendered&&component){var elt=Ext.DomHelper.append(node.ui.elNode,[{tag:"div"}]);if(typeof component=="function"){component=component(node,elt)}else{if(typeof component=="object"&&typeof component.fn=="function"){component=component.fn.apply(component.scope,[node,elt])}}if(typeof component=="object"&&typeof component.xtype=="string"){component=Ext.ComponentMgr.create(component)}if(component instanceof Ext.Component){component.render(elt);node.component=component}}},onBeforeDestroy:function(tree){tree.un("rendernode",this.onRenderNode,this);tree.un("beforedestroy",this.onBeforeDestroy,this)}});Ext.preg("gx_treenodecomponent",GeoExt.plugins.TreeNodeComponent);Ext.namespace("gxp.plugins");gxp.plugins.LayerManager=Ext.extend(gxp.plugins.LayerTree,{ptype:"gxp_layermanager",baseNodeText:"Base Maps",createOutputConfig:function(){var tree=gxp.plugins.LayerManager.superclass.createOutputConfig.apply(this,arguments);Ext.applyIf(tree,Ext.apply({cls:"gxp-layermanager-tree",lines:false,useArrows:true,plugins:[{ptype:"gx_treenodecomponent"}]},this.treeConfig));return tree},configureLayerNode:function(loader,attr){gxp.plugins.LayerManager.superclass.configureLayerNode.apply(this,arguments);var legendXType;if(OpenLayers.Layer.WMS&&attr.layer instanceof OpenLayers.Layer.WMS){legendXType="gx_wmslegend"}else{if(OpenLayers.Layer.Vector&&attr.layer instanceof OpenLayers.Layer.Vector){legendXType="gx_vectorlegend"}}if(legendXType){var baseParams;if(loader&&loader.baseAttrs&&loader.baseAttrs.baseParams){baseParams=loader.baseAttrs.baseParams}Ext.apply(attr,{component:{xtype:legendXType,hidden:!attr.layer.getVisibility(),baseParams:Ext.apply({transparent:true,format:"image/png",legend_options:"fontAntiAliasing:true;fontSize:11;fontName:Arial"},baseParams),layerRecord:this.target.mapPanel.layers.getByLayer(attr.layer),showTitle:false,cls:"legend"}})}}});Ext.preg(gxp.plugins.LayerManager.prototype.ptype,gxp.plugins.LayerManager);Ext.namespace("gxp");gxp.NewSourceDialog=Ext.extend(Ext.Panel,{title:"Add New Server...",cancelText:"Cancel",addServerText:"Add Server",invalidURLText:"Enter a valid URL to a WMS/TMS/REST endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Contacting Server...",bodyStyle:"padding: 0px",error:null,initComponent:function(){this.addEvents("urlselected");this.urlTextField=new Ext.form.TextField({fieldLabel:"URL",allowBlank:false,width:240,msgTarget:"under",validator:this.urlValidator.createDelegate(this),listeners:{specialkey:function(f,e){if(e.getKey()===e.ENTER){this.addServer()}},scope:this}});this.form=new Ext.form.FormPanel({items:[{xtype:"combo",width:240,name:"type",fieldLabel:"Type",value:"WMS",mode:"local",triggerAction:"all",store:[["WMS","Web Map Service (WMS)"],["TMS","Tiled Map Service (TMS)"],["REST","ArcGIS REST Service (REST)"]]},this.urlTextField],border:false,labelWidth:30,bodyStyle:"padding: 5px",autoWidth:true,autoHeight:true,listeners:{afterrender:function(){this.urlTextField.focus(false,true)},scope:this}});this.bbar=[new Ext.Button({text:this.cancelText,handler:this.hide,scope:this}),new Ext.Toolbar.Fill(),new Ext.Button({text:this.addServerText,iconCls:"add",handler:this.addServer,scope:this})];this.items=this.form;gxp.NewSourceDialog.superclass.initComponent.call(this);this.form.on("render",function(){this.loadMask=new Ext.LoadMask(this.form.getEl(),{msg:this.contactingServerText})},this);this.on({hide:this.reset,removed:this.reset,scope:this});this.on("urlselected",function(cmp,url){this.setLoading();var failure=function(){this.setError(this.sourceLoadFailureMessage)};this.addSource(url,this.hide,failure,this)},this)},addServer:function(){this.error=null;if(this.urlTextField.validate()){this.fireEvent("urlselected",this,this.urlTextField.getValue(),this.form.getForm().findField("type").getValue())}},reset:function(){this.error=null;this.urlTextField.reset();this.loadMask.hide()},urlRegExp:/^(http(s)?:)?\/\/([\w%]+:[\w%]+@)?([^@\/:]+)(:\d+)?\//i,urlValidator:function(url){var valid;if(!this.urlRegExp.test(url)){valid=this.invalidURLText}else{valid=!this.error||this.error}this.error=null;return valid},setLoading:function(){this.loadMask.show()},setError:function(error){this.loadMask.hide();this.error=error;this.urlTextField.validate()},addSource:function(url,success,failure,scope){}});Ext.reg("gxp_newsourcedialog",gxp.NewSourceDialog);Ext.namespace("gxp.plugins");gxp.plugins.FeedGetFeatureInfo=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_getfeedfeatureinfo",init:function(target){gxp.plugins.FeedGetFeatureInfo.superclass.init.apply(this,arguments);this.target.mapPanel.layers.on({add:this.addLayer,remove:this.removeLayer,scope:this})},addLayer:function(store,records,index){for(var i=0,ii=records.length;i<ii;++i){var record=records[i];var source=this.target.getSource(record);var layer=record.getLayer();if(source instanceof gxp.plugins.FeedSource){if(this.target.selectControl==null){this.target.selectControl=new OpenLayers.Control.SelectFeature(layer,{clickout:true,listeners:{clickoutFeature:function(){}},scope:this});this.target.mapPanel.map.addControl(this.target.selectControl)}else{var currentLayers=this.target.selectControl.layers?this.target.selectControl.layers:(this.target.selectControl.layer?[this.target.selectControl.layer]:[]);currentLayers.push(layer);this.target.selectControl.setLayer(currentLayers)}}}if(this.target.selectControl){this.target.selectControl.activate()}},removeLayer:function(store,records,index){if(!records.length){records=[records]}for(var i=0,ii=records.length;i<ii;++i){var layer=records[i].getLayer();var selectControl=this.target.selectControl;if(selectControl!=null){if(selectControl.layers){for(var x=0;x<selectControl.layers.length;x++){var selectLayer=selectControl.layers[x];var selectLayers=selectControl.layers;if(selectLayer.id===layer.id){selectLayers.splice(x,1);selectControl.setLayer(selectLayers)}}}else{if(selectControl.layer!=null){if(layer.id===selectControl.layer.id){selectControl.setLayer([])}}}}}}});Ext.preg(gxp.plugins.FeedGetFeatureInfo.prototype.ptype,gxp.plugins.FeedGetFeatureInfo);OpenLayers.Format.GeoRSS=OpenLayers.Class(OpenLayers.Format.XML,{rssns:"http://backend.userland.com/rss2",featureNS:"http://mapserver.gis.umn.edu/mapserver",georssns:"http://www.georss.org/georss",geons:"http://www.w3.org/2003/01/geo/wgs84_pos#",featureTitle:"Untitled",featureDescription:"No Description",gmlParser:null,xy:false,createGeometryFromItem:function(item){var point=this.getElementsByTagNameNS(item,this.georssns,"point");var lat=this.getElementsByTagNameNS(item,this.geons,"lat");var lon=this.getElementsByTagNameNS(item,this.geons,"long");var line=this.getElementsByTagNameNS(item,this.georssns,"line");var polygon=this.getElementsByTagNameNS(item,this.georssns,"polygon");var where=this.getElementsByTagNameNS(item,this.georssns,"where");var box=this.getElementsByTagNameNS(item,this.georssns,"box");if(point.length>0||(lat.length>0&&lon.length>0)){var location;if(point.length>0){location=OpenLayers.String.trim(point[0].firstChild.nodeValue).split(/\s+/);if(location.length!=2){location=OpenLayers.String.trim(point[0].firstChild.nodeValue).split(/\s*,\s*/)}}else{location=[parseFloat(lat[0].firstChild.nodeValue),parseFloat(lon[0].firstChild.nodeValue)]}var geometry=new OpenLayers.Geometry.Point(location[1],location[0])}else{if(line.length>0){var coords=OpenLayers.String.trim(this.getChildValue(line[0])).split(/\s+/);var components=[];var point;for(var i=0,len=coords.length;i<len;i+=2){point=new OpenLayers.Geometry.Point(coords[i+1],coords[i]);components.push(point)}geometry=new OpenLayers.Geometry.LineString(components)}else{if(polygon.length>0){var coords=OpenLayers.String.trim(this.getChildValue(polygon[0])).split(/\s+/);var components=[];var point;for(var i=0,len=coords.length;i<len;i+=2){point=new OpenLayers.Geometry.Point(coords[i+1],coords[i]);components.push(point)}geometry=new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing(components)])}else{if(where.length>0){if(!this.gmlParser){this.gmlParser=new OpenLayers.Format.GML({xy:this.xy})}var feature=this.gmlParser.parseFeature(where[0]);geometry=feature.geometry}else{if(box.length>0){var coords=OpenLayers.String.trim(box[0].firstChild.nodeValue).split(/\s+/);var components=[];var point;if(coords.length>3){point=new OpenLayers.Geometry.Point(coords[1],coords[0]);components.push(point);point=new OpenLayers.Geometry.Point(coords[1],coords[2]);components.push(point);point=new OpenLayers.Geometry.Point(coords[3],coords[2]);components.push(point);point=new OpenLayers.Geometry.Point(coords[3],coords[0]);components.push(point);point=new OpenLayers.Geometry.Point(coords[1],coords[0]);components.push(point)}geometry=new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing(components)])}}}}}if(geometry&&this.internalProjection&&this.externalProjection){geometry.transform(this.externalProjection,this.internalProjection)}return geometry},createFeatureFromItem:function(item){var geometry=this.createGeometryFromItem(item);var title=this._getChildValue(item,"*","title",this.featureTitle);var description=this._getChildValue(item,"*","description",this._getChildValue(item,"*","content",this._getChildValue(item,"*","summary",this.featureDescription)));var link=this._getChildValue(item,"*","link");if(!link){try{link=this.getElementsByTagNameNS(item,"*","link")[0].getAttribute("href")}catch(e){link=null}}var id=this._getChildValue(item,"*","id",null);var data={title:title,description:description,link:link};var feature=new OpenLayers.Feature.Vector(geometry,data);feature.fid=id;return feature},_getChildValue:function(node,nsuri,name,def){var value;var eles=this.getElementsByTagNameNS(node,nsuri,name);if(eles&&eles[0]&&eles[0].firstChild&&eles[0].firstChild.nodeValue){value=this.getChildValue(eles[0])}else{value=(def==undefined)?"":def}return value},read:function(doc){if(typeof doc=="string"){doc=OpenLayers.Format.XML.prototype.read.apply(this,[doc])}var itemlist=null;itemlist=this.getElementsByTagNameNS(doc,"*","item");if(itemlist.length==0){itemlist=this.getElementsByTagNameNS(doc,"*","entry")}var numItems=itemlist.length;var features=new Array(numItems);for(var i=0;i<numItems;i++){features[i]=this.createFeatureFromItem(itemlist[i])}return features},write:function(features){var georss;if(OpenLayers.Util.isArray(features)){georss=this.createElementNS(this.rssns,"rss");for(var i=0,len=features.length;i<len;i++){georss.appendChild(this.createFeatureXML(features[i]))}}else{georss=this.createFeatureXML(features)}return OpenLayers.Format.XML.prototype.write.apply(this,[georss])},createFeatureXML:function(feature){var geometryNode=this.buildGeometryNode(feature.geometry);var featureNode=this.createElementNS(this.rssns,"item");var titleNode=this.createElementNS(this.rssns,"title");titleNode.appendChild(this.createTextNode(feature.attributes.title?feature.attributes.title:""));var descNode=this.createElementNS(this.rssns,"description");descNode.appendChild(this.createTextNode(feature.attributes.description?feature.attributes.description:""));featureNode.appendChild(titleNode);featureNode.appendChild(descNode);if(feature.attributes.link){var linkNode=this.createElementNS(this.rssns,"link");linkNode.appendChild(this.createTextNode(feature.attributes.link));featureNode.appendChild(linkNode)}for(var attr in feature.attributes){if(attr=="link"||attr=="title"||attr=="description"){continue}var attrText=this.createTextNode(feature.attributes[attr]);var nodename=attr;if(attr.search(":")!=-1){nodename=attr.split(":")[1]}var attrContainer=this.createElementNS(this.featureNS,"feature:"+nodename);attrContainer.appendChild(attrText);featureNode.appendChild(attrContainer)}featureNode.appendChild(geometryNode);return featureNode},buildGeometryNode:function(geometry){if(this.internalProjection&&this.externalProjection){geometry=geometry.clone();geometry.transform(this.internalProjection,this.externalProjection)}var node;if(geometry.CLASS_NAME=="OpenLayers.Geometry.Polygon"){node=this.createElementNS(this.georssns,"georss:polygon");node.appendChild(this.buildCoordinatesNode(geometry.components[0]))}else{if(geometry.CLASS_NAME=="OpenLayers.Geometry.LineString"){node=this.createElementNS(this.georssns,"georss:line");node.appendChild(this.buildCoordinatesNode(geometry))}else{if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){node=this.createElementNS(this.georssns,"georss:point");node.appendChild(this.buildCoordinatesNode(geometry))}else{throw"Couldn't parse "+geometry.CLASS_NAME}}}return node},buildCoordinatesNode:function(geometry){var points=null;if(geometry.components){points=geometry.components}var path;if(points){var numPoints=points.length;var parts=new Array(numPoints);for(var i=0;i<numPoints;i++){parts[i]=points[i].y+" "+points[i].x}path=parts.join(" ")}else{path=geometry.y+" "+geometry.x}return this.createTextNode(path)},CLASS_NAME:"OpenLayers.Format.GeoRSS"});OpenLayers.Format.QueryStringFilter=(function(){var cmpToStr={};cmpToStr[OpenLayers.Filter.Comparison.EQUAL_TO]="eq";cmpToStr[OpenLayers.Filter.Comparison.NOT_EQUAL_TO]="ne";cmpToStr[OpenLayers.Filter.Comparison.LESS_THAN]="lt";cmpToStr[OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO]="lte";cmpToStr[OpenLayers.Filter.Comparison.GREATER_THAN]="gt";cmpToStr[OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO]="gte";cmpToStr[OpenLayers.Filter.Comparison.LIKE]="ilike";function regex2value(value){value=value.replace(/%/g,"\\%");value=value.replace(/\\\\\.(\*)?/g,function($0,$1){return $1?$0:"\\\\_"});value=value.replace(/\\\\\.\*/g,"\\\\%");value=value.replace(/(\\)?\.(\*)?/g,function($0,$1,$2){return $1||$2?$0:"_"});value=value.replace(/(\\)?\.\*/g,function($0,$1){return $1?$0:"%"});value=value.replace(/\\\./g,".");value=value.replace(/(\\)?\\\*/g,function($0,$1){return $1?$0:"*"});return value}return OpenLayers.Class(OpenLayers.Format,{wildcarded:false,srsInBBOX:false,write:function(filter,params){params=params||{};var className=filter.CLASS_NAME;var filterType=className.substring(className.lastIndexOf(".")+1);switch(filterType){case"Spatial":switch(filter.type){case OpenLayers.Filter.Spatial.BBOX:params.bbox=filter.value.toArray();if(this.srsInBBOX&&filter.projection){params.bbox.push(filter.projection.getCode())}break;case OpenLayers.Filter.Spatial.DWITHIN:params.tolerance=filter.distance;case OpenLayers.Filter.Spatial.WITHIN:params.lon=filter.value.x;params.lat=filter.value.y;break;default:OpenLayers.Console.warn("Unknown spatial filter type "+filter.type)}break;case"Comparison":var op=cmpToStr[filter.type];if(op!==undefined){var value=filter.value;if(filter.type==OpenLayers.Filter.Comparison.LIKE){value=regex2value(value);if(this.wildcarded){value="%"+value+"%"}}params[filter.property+"__"+op]=value;params.queryable=params.queryable||[];params.queryable.push(filter.property)}else{OpenLayers.Console.warn("Unknown comparison filter type "+filter.type)}break;case"Logical":if(filter.type===OpenLayers.Filter.Logical.AND){for(var i=0,len=filter.filters.length;i<len;i++){params=this.write(filter.filters[i],params)}}else{OpenLayers.Console.warn("Unsupported logical filter type "+filter.type)}break;default:OpenLayers.Console.warn("Unknown filter type "+filterType)}return params},CLASS_NAME:"OpenLayers.Format.QueryStringFilter"})})();OpenLayers.Strategy=OpenLayers.Class({layer:null,options:null,active:null,autoActivate:true,autoDestroy:true,initialize:function(options){OpenLayers.Util.extend(this,options);this.options=options;this.active=false},destroy:function(){this.deactivate();this.layer=null;this.options=null},setLayer:function(layer){this.layer=layer},activate:function(){if(!this.active){this.active=true;return true}return false},deactivate:function(){if(this.active){this.active=false;return true}return false},CLASS_NAME:"OpenLayers.Strategy"});OpenLayers.Strategy.BBOX=OpenLayers.Class(OpenLayers.Strategy,{bounds:null,resolution:null,ratio:2,resFactor:null,response:null,activate:function(){var activated=OpenLayers.Strategy.prototype.activate.call(this);if(activated){this.layer.events.on({moveend:this.update,refresh:this.update,visibilitychanged:this.update,scope:this});this.update()}return activated},deactivate:function(){var deactivated=OpenLayers.Strategy.prototype.deactivate.call(this);if(deactivated){this.layer.events.un({moveend:this.update,refresh:this.update,visibilitychanged:this.update,scope:this})}return deactivated},update:function(options){var mapBounds=this.getMapBounds();if(mapBounds!==null&&((options&&options.force)||(this.layer.visibility&&this.layer.calculateInRange()&&this.invalidBounds(mapBounds)))){this.calculateBounds(mapBounds);this.resolution=this.layer.map.getResolution();this.triggerRead(options)}},getMapBounds:function(){if(this.layer.map===null){return null}var bounds=this.layer.map.getExtent();if(bounds&&!this.layer.projection.equals(this.layer.map.getProjectionObject())){bounds=bounds.clone().transform(this.layer.map.getProjectionObject(),this.layer.projection)}return bounds},invalidBounds:function(mapBounds){if(!mapBounds){mapBounds=this.getMapBounds()}var invalid=!this.bounds||!this.bounds.containsBounds(mapBounds);if(!invalid&&this.resFactor){var ratio=this.resolution/this.layer.map.getResolution();invalid=(ratio>=this.resFactor||ratio<=(1/this.resFactor))}return invalid},calculateBounds:function(mapBounds){if(!mapBounds){mapBounds=this.getMapBounds()}var center=mapBounds.getCenterLonLat();var dataWidth=mapBounds.getWidth()*this.ratio;var dataHeight=mapBounds.getHeight()*this.ratio;this.bounds=new OpenLayers.Bounds(center.lon-(dataWidth/2),center.lat-(dataHeight/2),center.lon+(dataWidth/2),center.lat+(dataHeight/2))},triggerRead:function(options){if(this.response&&!(options&&options.noAbort===true)){this.layer.protocol.abort(this.response);this.layer.events.triggerEvent("loadend")}var evt={filter:this.createFilter()};this.layer.events.triggerEvent("loadstart",evt);this.response=this.layer.protocol.read(OpenLayers.Util.applyDefaults({filter:evt.filter,callback:this.merge,scope:this},options))},createFilter:function(){var filter=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:this.bounds,projection:this.layer.projection});if(this.layer.filter){filter=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[this.layer.filter,filter]})}return filter},merge:function(resp){this.layer.destroyFeatures();if(resp.success()){var features=resp.features;if(features&&features.length>0){var remote=this.layer.projection;var local=this.layer.map.getProjectionObject();if(!local.equals(remote)){var geom;for(var i=0,len=features.length;i<len;++i){geom=features[i].geometry;if(geom){geom.transform(remote,local)}}}this.layer.addFeatures(features)}}else{this.bounds=null}this.response=null;this.layer.events.triggerEvent("loadend",{response:resp})},CLASS_NAME:"OpenLayers.Strategy.BBOX"});OpenLayers.Strategy.Fixed=OpenLayers.Class(OpenLayers.Strategy,{preload:false,activate:function(){var activated=OpenLayers.Strategy.prototype.activate.apply(this,arguments);if(activated){this.layer.events.on({refresh:this.load,scope:this});if(this.layer.visibility==true||this.preload){this.load()}else{this.layer.events.on({visibilitychanged:this.load,scope:this})}}return activated},deactivate:function(){var deactivated=OpenLayers.Strategy.prototype.deactivate.call(this);if(deactivated){this.layer.events.un({refresh:this.load,visibilitychanged:this.load,scope:this})}return deactivated},load:function(options){var layer=this.layer;layer.events.triggerEvent("loadstart",{filter:layer.filter});layer.protocol.read(OpenLayers.Util.applyDefaults({callback:this.merge,filter:layer.filter,scope:this},options));layer.events.un({visibilitychanged:this.load,scope:this})},merge:function(resp){var layer=this.layer;layer.destroyFeatures();var features=resp.features;if(features&&features.length>0){var remote=layer.projection;var local=layer.map.getProjectionObject();if(!local.equals(remote)){var geom;for(var i=0,len=features.length;i<len;++i){geom=features[i].geometry;if(geom){geom.transform(remote,local)}}}layer.addFeatures(features)}layer.events.triggerEvent("loadend",{response:resp})},CLASS_NAME:"OpenLayers.Strategy.Fixed"});Ext.namespace("gxp.plugins");gxp.plugins.FeedSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_feedsource",title:"Feed Source",format:"OpenLayers.Format.GeoRSS",popupTemplate:'<a target="_blank" href="{link}">{description}</a>',fixed:true,createLayerRecord:function(config){var record;var layer=new OpenLayers.Layer.Vector(config.name,{projection:"projection" in config?config.projection:"EPSG:4326",visibility:"visibility" in config?config.visibility:true,strategies:[this.fixed?new OpenLayers.Strategy.Fixed():new OpenLayers.Strategy.BBOX({resFactor:1,ratio:1})],protocol:new OpenLayers.Protocol.HTTP({url:this.url,params:config.params,format:this.getFormat(config)}),styleMap:this.getStyleMap(config)});this.configureInfoPopup(layer);var Record=GeoExt.data.LayerRecord.create([{name:"name",type:"string"},{name:"source",type:"string"},{name:"group",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"},{name:"visibility",type:"boolean"},{name:"format",type:"string"},{name:"defaultStyle"},{name:"selectStyle"},{name:"params"}]);var formatConfig="format" in config?config.format:this.format;var data={layer:layer,name:config.name,source:config.source,group:config.group,fixed:("fixed" in config)?config.fixed:false,selected:("selected" in config)?config.selected:false,params:("params" in config)?config.params:{},visibility:("visibility" in config)?config.visibility:false,format:formatConfig instanceof String?formatConfig:null,defaultStyle:("defaultStyle" in config)?config.defaultStyle:{},selectStyle:("selectStyle" in config)?config.selectStyle:{}};record=new Record(data,layer.id);return record},getConfigForRecord:function(record){var config=gxp.plugins.FeedSource.superclass.getConfigForRecord.apply(this,arguments);return Ext.apply(config,{name:record.get("name"),group:record.get("group"),fixed:record.get("fixed"),selected:record.get("selected"),params:record.get("params"),visibility:record.getLayer().getVisibility(),format:record.get("format"),defaultStyle:record.getLayer().styleMap.styles["default"]["defaultStyle"],selectStyle:record.getLayer().styleMap.styles["select"]["defaultStyle"]})},getFormat:function(config){var Class=window;var formatConfig=("format" in config)?config.format:this.format;if(typeof formatConfig=="string"||formatConfig instanceof String){var parts=formatConfig.split(".");for(var i=0,ii=parts.length;i<ii;++i){Class=Class[parts[i]];if(!Class){break}}if(Class&&Class.prototype&&Class.prototype.initialize){var Constructor=function(){Class.prototype.initialize.apply(this)};Constructor.prototype=Class.prototype;var format=new Constructor();return format}}else{return formatConfig}},configureInfoPopup:function(layer){var tpl=new Ext.XTemplate(this.popupTemplate);layer.events.on({featureselected:function(featureObject){var feature=featureObject.feature;var pos=feature.geometry;if(this.target.selectControl){if(this.target.selectControl.popup){this.target.selectControl.popup.close()}this.target.selectControl.popup=new GeoExt.Popup({title:feature.attributes.title,closeAction:"destroy",location:feature,html:tpl.apply(feature.attributes)});this.target.selectControl.popup.show()}},featureunselected:function(){if(this.target.selectControl&&this.target.selectControl.popup){this.target.selectControl.popup.close()}},scope:this})},getStyleMap:function(config){return new OpenLayers.StyleMap({"default":new OpenLayers.Style("defaultStyle" in config?config.defaultStyle:{graphicName:"circle",pointRadius:5,fillOpacity:0.7,fillColor:"Red"},{title:config.name}),select:new OpenLayers.Style("selectStyle" in config?config.selectStyle:{graphicName:"circle",pointRadius:10,fillOpacity:1,fillColor:"Yellow"})})}});Ext.preg(gxp.plugins.FeedSource.prototype.ptype,gxp.plugins.FeedSource);Ext.namespace("gxp.plugins");gxp.plugins.PicasaFeedSource=Ext.extend(gxp.plugins.FeedSource,{ptype:"gxp_picasasource",url:"http://picasaweb.google.com/data/feed/base/all?thumbsize=160c&",format:"OpenLayers.Format.Picasa",title:"Picasa Photos",pointRadius:14,popupTemplate:'<tpl for="."><a target="_blank" href="{link}"><img  title="{title}" src="{thumbnail}"/></a></tpl>',fixed:false,createLayerRecord:function(config){if(Ext.isEmpty(config.params["max-results"])){config.params["max-results"]=50}config.url=this.url;this.format=new OpenLayers.Format.GeoRSS({createFeatureFromItem:function(item){var feature=OpenLayers.Format.GeoRSS.prototype.createFeatureFromItem.apply(this,arguments);feature.attributes.thumbnail=this.getElementsByTagNameNS(item,"http://search.yahoo.com/mrss/","thumbnail")[0].getAttribute("url");feature.attributes.content=OpenLayers.Util.getXmlNodeValue(this.getElementsByTagNameNS(item,"*","summary")[0]);return feature}});var record=gxp.plugins.PicasaFeedSource.superclass.createLayerRecord.apply(this,arguments);var layer=record.getLayer();layer.protocol.filterToParams=function(filter,params){if(filter.type===OpenLayers.Filter.Spatial.BBOX){var bbox=filter.value.toArray();params.bbox=[Math.max(-180,bbox[0]),Math.max(-90,bbox[1]),Math.min(180,bbox[2]),Math.min(90,bbox[3])]}return params};return record},configureInfoPopup:function(layer){var tpl=new Ext.XTemplate(this.popupTemplate);layer.events.on({featureselected:function(featureObject){var feature=featureObject.feature;var pos=feature.geometry;if(this.target.selectControl.popup!=null){this.target.selectControl.popup.close()}var content=document.createElement("div");content.innerHTML=feature.attributes.content;var popupFeature={link:content.getElementsByTagName("a")[0].getAttribute("href"),title:feature.attributes.title,thumbnail:feature.attributes.thumbnail};this.target.selectControl.popup=new GeoExt.Popup({title:feature.attributes.title,closeAction:"destroy",location:feature,width:175,height:200,html:tpl.apply(popupFeature)});this.target.selectControl.popup.show()},featureunselected:function(featureObject){if(this.target.selectControl&&this.target.selectControl.popup){this.target.selectControl.popup.close()}},scope:this})},getStyleMap:function(config){return new OpenLayers.StyleMap({"default":new OpenLayers.Style({externalGraphic:"${thumbnail}",pointRadius:this.pointRadius},{title:this.title}),select:new OpenLayers.Style({pointRadius:this.pointRadius+5})})}});Ext.preg(gxp.plugins.PicasaFeedSource.prototype.ptype,gxp.plugins.PicasaFeedSource);Ext.namespace("gxp.plugins");gxp.plugins.YouTubeFeedSource=Ext.extend(gxp.plugins.FeedSource,{ptype:"gxp_youtubesource",url:"http://gdata.youtube.com/feeds/api/videos?v=2&prettyprint=true&",format:"OpenLayers.Format.YouTube",title:"Youtube Videos",pointRadius:24,popupTemplate:'<tpl for="."><a target="_blank" href="{link}"><img height="180"  width="240" title="{title}" src="{thumbnail}"/></a></tpl>',fixed:false,createLayerRecord:function(config){if(Ext.isEmpty(config.params["max-results"])){config.params["max-results"]=50}else{config.params["max-results"]=Math.min(config.params["max-results"],50)}config.url=this.url;this.format=new OpenLayers.Format.GeoRSS({createFeatureFromItem:function(item){var feature=OpenLayers.Format.GeoRSS.prototype.createFeatureFromItem.apply(this,arguments);feature.attributes.thumbnail=this.getElementsByTagNameNS(item,"http://search.yahoo.com/mrss/","thumbnail")[4].getAttribute("url");feature.attributes.content=OpenLayers.Util.getXmlNodeValue(this.getElementsByTagNameNS(item,"*","summary")[0]);return feature}});var record=gxp.plugins.YouTubeFeedSource.superclass.createLayerRecord.apply(this,arguments);var layer=record.getLayer();layer.protocol.filterToParams=function(filter,params){if(filter.type===OpenLayers.Filter.Spatial.BBOX){var bounds=filter.value;var location=bounds.getCenterLonLat();var R=6378.137;var PI=3.1415926;var leftBounds=R*(bounds.left)/180/PI;var rightBounds=R*(bounds.right)/180/PI;var radius=Math.min((rightBounds-leftBounds)/2*2,1000);Ext.apply(params,{location:""+location.lat+","+location.lon,"location-radius":radius+"km"})}return params};return record},configureInfoPopup:function(layer){var tpl=new Ext.XTemplate(this.popupTemplate);layer.events.on({featureselected:function(featureObject){var feature=featureObject.feature;var pos=feature.geometry;if(this.target.selectControl.popup!=null){this.target.selectControl.popup.close()}this.target.selectControl.popup=new GeoExt.Popup({title:feature.attributes.title,location:feature,width:240,height:220,closeAction:"destroy",html:tpl.apply(feature.attributes)});this.target.selectControl.popup.show()},featureunselected:function(featureObject){if(this.target.selectControl&&this.target.selectControl.popup){this.target.selectControl.popup.close()}},scope:this})},getStyleMap:function(config){return new OpenLayers.StyleMap({"default":new OpenLayers.Style({externalGraphic:"${thumbnail}",pointRadius:24},{title:this.title}),select:new OpenLayers.Style({pointRadius:this.pointRadius+5})})}});Ext.preg(gxp.plugins.YouTubeFeedSource.prototype.ptype,gxp.plugins.YouTubeFeedSource);Ext.namespace("gxp");gxp.FeedSourceDialog=Ext.extend(Ext.Container,{feedTypeText:"Source",addPicasaText:"Picasa Photos",addYouTubeText:"YouTube Videos",addRSSText:"GeoRSS Feed",addFeedText:"Add to Map",addTitleText:"Title",keywordText:"Keyword",doneText:"Done",titleText:"Add Feeds",maxResultsText:"Max Items",width:300,autoHeight:true,closeAction:"destroy",initComponent:function(){this.addEvents("addfeed");if(!this.feedTypes){this.feedTypes=[[gxp.plugins.PicasaFeedSource.ptype,this.addPicasaText],[gxp.plugins.YouTubeFeedSource.ptype,this.addYouTubeText],[gxp.plugins.FeedSource.ptype,this.addRSSText]]}var feedStore=new Ext.data.ArrayStore({fields:["type","name"],data:this.feedTypes});var sourceTypeSelect=new Ext.form.ComboBox({store:feedStore,fieldLabel:this.feedTypeText,displayField:"name",valueField:"type",typeAhead:true,width:180,mode:"local",triggerAction:"all",emptyText:"Select a feed source...",selectOnFocus:true,listeners:{select:function(choice){if(choice.value==gxp.plugins.FeedSource.ptype){urlTextField.show();keywordTextField.hide();maxResultsField.hide();symbolizerField.show()}else{urlTextField.hide();keywordTextField.show();maxResultsField.show();symbolizerField.hide()}submitButton.setDisabled(choice.value==null)},scope:this}});var urlTextField=new Ext.form.TextField({fieldLabel:"URL",allowBlank:false,width:180,msgTarget:"right",validator:this.urlValidator.createDelegate(this)});var keywordTextField=new Ext.form.TextField({fieldLabel:this.keywordText,allowBlank:true,hidden:true,width:180,msgTarget:"right"});var titleTextField=new Ext.form.TextField({fieldLabel:this.addTitleText,allowBlank:true,width:180,msgTarget:"right"});var maxResultsField=new Ext.form.ComboBox({fieldLabel:this.maxResultsText,hidden:true,hiddenName:"max-results",store:new Ext.data.ArrayStore({fields:["max-results"],data:[[10],[25],[50],[100]]}),displayField:"max-results",mode:"local",triggerAction:"all",emptyText:"Choose number...",labelWidth:70,width:180,defaults:{labelWidth:70,width:180}});var symbolizerField=new gxp.PointSymbolizer({bodyStyle:{padding:"10px"},width:280,border:false,hidden:true,labelWidth:70,defaults:{labelWidth:70},symbolizer:{pointGraphics:"circle",pointRadius:"5"}});symbolizerField.find("name","rotation")[0].hidden=true;if(this.symbolType==="Point"&&this.pointGraphics){cfg.pointGraphics=this.pointGraphics}var submitButton=new Ext.Button({text:this.addFeedText,iconCls:"gxp-icon-addlayers",disabled:true,handler:function(){var ptype=sourceTypeSelect.getValue();var config={name:titleTextField.getValue()};if(ptype!="gxp_feedsource"){config.params={q:keywordTextField.getValue(),"max-results":maxResultsField.getValue()}}else{config.url=urlTextField.getValue();var symbolizer=symbolizerField.symbolizer;config.defaultStyle={};config.selectStyle={};Ext.apply(config.defaultStyle,symbolizer);Ext.apply(config.selectStyle,symbolizer);Ext.apply(config.selectStyle,{fillColor:"Yellow",pointRadius:parseInt(symbolizer.pointRadius)+2})}this.fireEvent("addfeed",ptype,config)},scope:this});var bbarItems=["->",submitButton,new Ext.Button({text:this.doneText,handler:function(){this.hide()},scope:this})];this.panel=new Ext.Panel({bbar:bbarItems,autoScroll:true,items:[sourceTypeSelect,titleTextField,urlTextField,keywordTextField,maxResultsField,symbolizerField],layout:"form",border:false,labelWidth:100,bodyStyle:"padding: 5px",autoWidth:true,autoHeight:true});this.items=this.panel;gxp.FeedSourceDialog.superclass.initComponent.call(this)},urlRegExp:/^(http(s)?:)?\/\/([\w%]+:[\w%]+@)?([^@\/:]+)(:\d+)?\//i,urlValidator:function(url){var valid;if(!this.urlRegExp.test(url)){valid=this.invalidURLText}else{valid=!this.error||this.error}this.error=null;return valid}});Ext.reg("gxp_feedsourcedialog",gxp.FeedSourceDialog);Ext.namespace("gxp.plugins");gxp.plugins.GeoNodeCatalogueSource=Ext.extend(gxp.plugins.CatalogueSource,{ptype:"gxp_geonodecataloguesource",rootProperty:"results",baseParams:null,fields:[{name:"title",convert:function(v){return[v]}},{name:"abstract",mapping:"description"},{name:"bounds",mapping:"bbox",convert:function(v){return{left:v.minx,right:v.maxx,bottom:v.miny,top:v.maxy}}},{name:"URI",mapping:"links",convert:function(v){var result=[];for(var key in v){result.push({value:v[key].url})}return result}}],createStore:function(){this.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy(Ext.apply({url:this.url,method:"GET"},this.proxyOptions||{})),baseParams:Ext.apply({type:"layer"},this.baseParams),reader:new Ext.data.JsonReader({root:this.rootProperty},this.fields)});gxp.plugins.LayerSource.prototype.createStore.apply(this,arguments)},getPagingStart:function(){return 0},getPagingParamNames:function(){return{start:"startIndex",limit:"limit"}},filter:function(options){var bbox=undefined;if(options.filters!==undefined){for(var i=0,ii=options.filters.length;i<ii;++i){var f=options.filters[i];if(f instanceof OpenLayers.Filter.Spatial){bbox=f.value.toBBOX();break}}}Ext.apply(this.store.baseParams,{q:options.queryString});if(options.limit!==undefined){Ext.apply(this.store.baseParams,{limit:options.limit})}if(bbox!==undefined){Ext.apply(this.store.baseParams,{bbox:bbox})}else{delete this.store.baseParams.bbox}this.store.load()},createLayerRecord:function(layerConfig){layerConfig.restUrl=this.restUrl;layerConfig.queryable=true;return gxp.plugins.GeoNodeCatalogueSource.superclass.createLayerRecord.apply(this,arguments)}});Ext.preg(gxp.plugins.GeoNodeCatalogueSource.prototype.ptype,gxp.plugins.GeoNodeCatalogueSource);Ext.namespace("gxp.form");gxp.form.CSWFilterField=Ext.extend(Ext.form.CompositeField,{clearTooltip:"Clear the filter for this category",emptyText:"Select filter",property:null,map:null,type:OpenLayers.Filter.Comparison.EQUAL_TO,name:null,comboFieldLabel:null,comboStoreData:null,target:null,getFilter:function(){if(this.property==="BoundingBox"){return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:this.property,projection:"EPSG:4326",value:this.map.getExtent().transform(this.map.getProjectionObject(),new OpenLayers.Projection("EPSG:4326"))})}else{return new OpenLayers.Filter.Comparison({type:this.type,property:this.property,value:this.combo.getValue()})}},initComponent:function(){this.items=[{ref:"combo",xtype:"combo",fieldLabel:this.comboFieldLabel,store:new Ext.data.ArrayStore({fields:["id","value"],data:this.comboStoreData}),displayField:"value",valueField:"id",mode:"local",listeners:{select:function(cmb,record){if(this.filter){this.target.removeFilter(this.filter)}this.filter=this.getFilter();this.target.addFilter(this.filter);return false},scope:this},emptyText:this.emptyText,triggerAction:"all"},{xtype:"button",iconCls:"gxp-icon-removelayers",tooltip:this.clearTooltip,handler:function(btn){this.target.removeFilter(this.filter);this.hide()},scope:this}];this.hidden=true;gxp.form.CSWFilterField.superclass.initComponent.apply(this,arguments)},destroy:function(){this.filter=null;this.target=null;this.map=null;gxp.form.CSWFilterField.superclass.destroy.call(this)}});Ext.reg("gxp_cswfilterfield",gxp.form.CSWFilterField);Ext.namespace("gxp");gxp.CatalogueSearchPanel=Ext.extend(Ext.Panel,{border:false,maxRecords:10,map:null,selectedSource:null,sources:null,searchFieldEmptyText:"Search",searchButtonText:"Search",addTooltip:"Create filter",addMapTooltip:"Add to map",advancedTitle:"Advanced",datatypeLabel:"Data type",extentLabel:"Spatial extent",categoryLabel:"Category",datasourceLabel:"Data source",filterLabel:"Filter search by",removeSourceTooltip:"Switch back to original source",initComponent:function(){var me=this;this.addEvents("addlayer");this.filters=[];var sourceComboData=[];for(var key in this.sources){sourceComboData.push([key,this.sources[key].title])}if(sourceComboData.length>=1){this.selectedSource=sourceComboData[0][0]}var filterOptions=[["datatype","data type"],["extent","spatial extent"],["category","category"]];if(sourceComboData.length>1){filterOptions.push(["csw","data source"])}this.sources[this.selectedSource].store.on("loadexception",function(proxy,o,response,e){if(response.success()){Ext.Msg.show({title:e.message,msg:gxp.util.getOGCExceptionText(e.arg.exceptionReport),icon:Ext.MessageBox.ERROR,buttons:Ext.MessageBox.OK})}});this.items=[{xtype:"form",border:false,ref:"form",hideLabels:true,autoHeight:true,style:"margin-left: 5px; margin-right: 5px; margin-bottom: 5px; margin-top: 5px",items:[{xtype:"compositefield",items:[{xtype:"textfield",emptyText:this.searchFieldEmptyText,ref:"../../search",name:"search",listeners:{specialkey:function(field,e){if(e.getKey()==e.ENTER){this.performQuery()}},scope:this},width:250},{xtype:"button",text:this.searchButtonText,handler:this.performQuery,scope:this}]},{xtype:"fieldset",collapsible:true,collapsed:true,hideLabels:false,hidden:true,title:this.advancedTitle,items:[{xtype:"gxp_cswfilterfield",name:"datatype",property:"apiso:Type",comboFieldLabel:this.datatypeLabel,comboStoreData:[["dataset","Dataset"],["datasetcollection","Dataset collection"],["application","Application"],["service","Service"]],target:this},{xtype:"gxp_cswfilterfield",name:"extent",property:"BoundingBox",map:this.map,comboFieldLabel:this.extentLabel,comboStoreData:[["map","spatial extent of the map"]],target:this},{xtype:"gxp_cswfilterfield",name:"category",property:"apiso:TopicCategory",comboFieldLabel:this.categoryLabel,comboStoreData:[["farming","Farming"],["biota","Biota"],["boundaries","Boundaries"],["climatologyMeteorologyAtmosphere","Climatology/Meteorology/Atmosphere"],["economy","Economy"],["elevation","Elevation"],["environment","Environment"],["geoscientificinformation","Geoscientific Information"],["health","Health"],["imageryBaseMapsEarthCover","Imagery/Base Maps/Earth Cover"],["intelligenceMilitary","Intelligence/Military"],["inlandWaters","Inland Waters"],["location","Location"],["oceans","Oceans"],["planningCadastre","Planning Cadastre"],["society","Society"],["structure","Structure"],["transportation","Transportation"],["utilitiesCommunications","Utilities/Communications"]],target:this},{xtype:"compositefield",id:"csw",ref:"../../cswCompositeField",hidden:true,items:[{xtype:"combo",ref:"../../../sourceCombo",fieldLabel:this.datasourceLabel,store:new Ext.data.ArrayStore({fields:["id","value"],data:sourceComboData}),displayField:"value",valueField:"id",mode:"local",listeners:{select:function(cmb,record){this.setSource(cmb.getValue())},render:function(){this.sourceCombo.setValue(this.selectedSource)},scope:this},triggerAction:"all"},{xtype:"button",iconCls:"gxp-icon-removelayers",tooltip:this.removeSourceTooltip,handler:function(btn){this.setSource(this.initialConfig.selectedSource);this.sourceCombo.setValue(this.initialConfig.selectedSource);this.cswCompositeField.hide()},scope:this}]},{xtype:"compositefield",items:[{xtype:"combo",fieldLabel:this.filterLabel,store:new Ext.data.ArrayStore({fields:["id","value"],data:filterOptions}),displayField:"value",valueField:"id",mode:"local",triggerAction:"all"},{xtype:"button",iconCls:"gxp-icon-addlayers",tooltip:this.addTooltip,handler:function(btn){btn.ownerCt.items.each(function(item){if(item.getXType()==="combo"){var id=item.getValue();item.clearValue();var field=this.form.getForm().findField(id);if(field){field.show()}}},this)},scope:this}]}]},{xtype:"grid",width:"100%",anchor:"99%",viewConfig:{scrollOffset:0,forceFit:true},border:false,ref:"../grid",bbar:new Ext.PagingToolbar({listeners:{beforechange:function(tb,params){var delta=me.sources[me.selectedSource].getPagingStart();if(params.startPosition){params.startPosition+=delta}}},onLoad:function(store,r,o){var delta=me.sources[me.selectedSource].getPagingStart();if(!this.rendered){this.dsLoaded=[store,r,o];return}var p=this.getParams();this.cursor=(o.params&&o.params[p.start])?o.params[p.start]-delta:0;var d=this.getPageData(),ap=d.activePage,ps=d.pages;this.afterTextItem.setText(String.format(this.afterPageText,d.pages));this.inputItem.setValue(ap);this.first.setDisabled(ap==1);this.prev.setDisabled(ap==1);this.next.setDisabled(ap==ps);this.last.setDisabled(ap==ps);this.refresh.enable();this.updateInfo();this.fireEvent("change",this,d)},paramNames:this.sources[this.selectedSource].getPagingParamNames(),store:this.sources[this.selectedSource].store,pageSize:this.maxRecords}),loadMask:true,hideHeaders:true,store:this.sources[this.selectedSource].store,columns:[{id:"title",xtype:"templatecolumn",tpl:new Ext.XTemplate("<b>{title}</b><br/>{abstract}"),sortable:true},{xtype:"actioncolumn",width:30,items:[{getClass:function(v,meta,rec){if(this.findWMS(rec.get("URI"))!==false||this.findWMS(rec.get("references"))!==false){return"gxp-icon-addlayers"}},tooltip:this.addMapTooltip,handler:function(grid,rowIndex,colIndex){var rec=this.grid.store.getAt(rowIndex);this.addLayer(rec)},scope:this}]}],autoExpandColumn:"title",autoHeight:true}]}];gxp.CatalogueSearchPanel.superclass.initComponent.apply(this,arguments)},destroy:function(){this.sources=null;this.map=null;gxp.CatalogueSearchPanel.superclass.destroy.call(this)},setSource:function(key){this.selectedSource=key;var store=this.sources[key].store;this.grid.reconfigure(store,this.grid.getColumnModel());this.grid.getBottomToolbar().bindStore(store)},performQuery:function(){var plugin=this.sources[this.selectedSource];plugin.filter({queryString:this.search.getValue(),limit:this.maxRecords,filters:this.filters})},addFilter:function(filter){this.filters.push(filter)},removeFilter:function(filter){this.filters.remove(filter)},findWMS:function(links){var protocols=["OGC:WMS-1.1.1-HTTP-GET-MAP","OGC:WMS"];var url=null,name=null,i,ii,link;for(i=0,ii=links.length;i<ii;++i){link=links[i];if(link.protocol&&protocols.indexOf(link.protocol.toUpperCase())!==-1&&link.value&&link.name){url=link.value;name=link.name;break}}if(url===null){for(i=0,ii=links.length;i<ii;++i){link=links[i];var value=link.value?link.value:link;if(value.toLowerCase().indexOf("service=wms")>0){var obj=OpenLayers.Util.createUrlObject(value);url=obj.protocol+"//"+obj.host+":"+obj.port+obj.pathname;name=obj.args.layers;break}}}if(url!==null&&name!==null){return{url:url,name:name}}else{return false}},addLayer:function(record){var uri=record.get("URI");var bounds=record.get("bounds");var bLeft=bounds.left,bRight=bounds.right,bBottom=bounds.bottom,bTop=bounds.top;var left=Math.min(bLeft,bRight),right=Math.max(bLeft,bRight),bottom=Math.min(bBottom,bTop),top=Math.max(bBottom,bTop);var wmsInfo=this.findWMS(uri);if(wmsInfo===false){var references=record.get("references");wmsInfo=this.findWMS(references)}if(wmsInfo!==false){this.fireEvent("addlayer",this,this.selectedSource,Ext.apply({title:record.get("title")[0],bbox:[left,bottom,right,top],srs:"EPSG:4326",projection:record.get("projection")},wmsInfo))}}});Ext.reg("gxp_cataloguesearchpanel",gxp.CatalogueSearchPanel);OpenLayers.Format.TMSCapabilities=OpenLayers.Class(OpenLayers.Format.XML,{defaultPrefix:"tms",readers:{tms:{Services:function(node,obj){obj.services=[];this.readChildNodes(node,obj)},TileMapService:function(node,obj){if(obj.services){obj.services.push({service:"TMS",version:node.getAttribute("version"),title:node.getAttribute("title"),href:node.getAttribute("href")})}else{this.readChildNodes(node,obj)}},TileMaps:function(node,obj){obj.tileMaps=[];this.readChildNodes(node,obj)},TileMap:function(node,obj){if(obj.tileMaps){obj.tileMaps.push({href:node.getAttribute("href"),srs:node.getAttribute("srs"),title:node.getAttribute("title"),profile:node.getAttribute("profile")})}else{obj.version=node.getAttribute("version");obj.tileMapService=node.getAttribute("tilemapservice");this.readChildNodes(node,obj)}},Title:function(node,obj){obj.title=this.getChildValue(node)},Abstract:function(node,obj){obj["abstract"]=this.getChildValue(node)},SRS:function(node,obj){obj.srs=this.getChildValue(node)},BoundingBox:function(node,obj){obj.bbox=new OpenLayers.Bounds(node.getAttribute("minx"),node.getAttribute("miny"),node.getAttribute("maxx"),node.getAttribute("maxy"))},Origin:function(node,obj){obj.origin=new OpenLayers.LonLat(node.getAttribute("x"),node.getAttribute("y"))},TileFormat:function(node,obj){obj.tileFormat={width:parseInt(node.getAttribute("width"),10),height:parseInt(node.getAttribute("height"),10),mimeType:node.getAttribute("mime-type"),extension:node.getAttribute("extension")}},TileSets:function(node,obj){obj.tileSets=[];this.readChildNodes(node,obj)},TileSet:function(node,obj){obj.tileSets.push({href:node.getAttribute("href"),unitsPerPixel:parseFloat(node.getAttribute("units-per-pixel")),order:parseInt(node.getAttribute("order"),10)})},TileMapServerError:function(node,obj){obj.error=true},Message:function(node,obj){obj.message=this.getChildValue(node)}}},read:function(data){if(typeof data=="string"){data=OpenLayers.Format.XML.prototype.read.apply(this,[data])}var raw=data;if(data&&data.nodeType==9){data=data.documentElement}var capabilities={};this.readNode(data,capabilities);return capabilities},CLASS_NAME:"OpenLayers.Format.TMSCapabilities"});Ext.ns("gxp.data","gxp.plugins");gxp.data.TMSCapabilitiesReader=Ext.extend(Ext.data.DataReader,{constructor:function(meta,recordType){meta=meta||{};if(!meta.format){meta.format=new OpenLayers.Format.TMSCapabilities()}if(typeof recordType!=="function"){recordType=GeoExt.data.LayerRecord.create(recordType||meta.fields||[{name:"name",type:"string"},{name:"title",type:"string"},{name:"tileMapUrl",type:"string"}])}gxp.data.TMSCapabilitiesReader.superclass.constructor.call(this,meta,recordType)},read:function(request){var data=request.responseXML;if(!data||!data.documentElement){data=request.responseText}return this.readRecords(data)},readRecords:function(data){var records=[],i,ii,url,proj;if(typeof data==="string"||data.nodeType){data=this.meta.format.read(data);this.raw=data;if(!data.tileMaps){if(data.tileSets){proj=new OpenLayers.Projection(data.srs);if(this.meta.mapProjection.equals(proj)){var serverResolutions=[];for(i=0,ii=data.tileSets.length;i<ii;++i){serverResolutions.push(data.tileSets[i].unitsPerPixel)}url=this.meta.baseUrl;var layerName=url.substring(url.indexOf(this.meta.version)+this.meta.version.length+1,url.lastIndexOf("/"));records.push(new this.recordType({layer:new OpenLayers.Layer.TMS(data.title,data.tileMapService.replace("/"+this.meta.version,""),{serverResolutions:serverResolutions,type:data.tileFormat.extension,layername:layerName}),title:data.title,name:data.title,tileMapUrl:this.meta.baseUrl}))}}}else{for(i=0,ii=data.tileMaps.length;i<ii;++i){var tileMap=data.tileMaps[i];proj=new OpenLayers.Projection(tileMap.srs);if(this.meta.mapProjection.equals(proj)){url=tileMap.href;var layername=url.substring(url.indexOf(this.meta.version+"/")+6);records.push(new this.recordType({layer:new OpenLayers.Layer.TMS(tileMap.title,(this.meta.baseUrl.indexOf(this.meta.version)!==-1)?this.meta.baseUrl.replace(this.meta.version+"/",""):this.meta.baseUrl,{layername:layername}),title:tileMap.title,name:tileMap.title,tileMapUrl:url}))}}}}return{totalRecords:records.length,success:true,records:records}}});gxp.plugins.TMSSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_tmssource",version:"1.0.0",constructor:function(config){gxp.plugins.TMSSource.superclass.constructor.apply(this,arguments);this.format=new OpenLayers.Format.TMSCapabilities();if(this.url.slice(-1)!=="/"){this.url=this.url+"/"}},createStore:function(){var format=this.format;this.store=new Ext.data.Store({autoLoad:true,listeners:{load:function(){this.title=this.store.reader.raw.title;this.fireEvent("ready",this)},exception:function(){var msg="Trouble creating TMS layer store from response.";var details="Unable to handle response.";this.fireEvent("failure",this,msg,details)},scope:this},proxy:new Ext.data.HttpProxy({url:this.url.indexOf(this.version)===-1?this.url+this.version:this.url,disableCaching:false,method:"GET"}),reader:new gxp.data.TMSCapabilitiesReader({baseUrl:this.url,version:this.version,mapProjection:this.getMapProjection()})})},createLayerRecord:function(config,callback,scope){var index=this.store.findExact("name",config.name);if(index>-1){var record=this.store.getAt(index);var layer=record.getLayer();if(layer.serverResolutions!==null){return record}else{Ext.Ajax.request({url:record.get("tileMapUrl"),success:function(response){var serverResolutions=[];var info=this.format.read(response.responseText);for(var i=0,ii=info.tileSets.length;i<ii;++i){serverResolutions.push(info.tileSets[i].unitsPerPixel)}layer.addOptions({serverResolutions:serverResolutions,type:info.tileFormat.extension});this.target.createLayerRecord({source:this.id,name:config.name},callback,scope)},scope:this})}}}});Ext.preg(gxp.plugins.TMSSource.prototype.ptype,gxp.plugins.TMSSource);OpenLayers.Layer.ArcGIS93Rest=OpenLayers.Class(OpenLayers.Layer.Grid,{DEFAULT_PARAMS:{format:"png"},isBaseLayer:true,initialize:function(name,url,params,options){var newArguments=[];params=OpenLayers.Util.upperCaseObject(params);newArguments.push(name,url,params,options);OpenLayers.Layer.Grid.prototype.initialize.apply(this,newArguments);OpenLayers.Util.applyDefaults(this.params,OpenLayers.Util.upperCaseObject(this.DEFAULT_PARAMS));if(this.params.TRANSPARENT&&this.params.TRANSPARENT.toString().toLowerCase()=="true"){if((options==null)||(!options.isBaseLayer)){this.isBaseLayer=false}if(this.params.FORMAT=="jpg"){this.params.FORMAT=OpenLayers.Util.alphaHack()?"gif":"png"}}},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.ArcGIS93Rest(this.name,this.url,this.params,this.getOptions())}obj=OpenLayers.Layer.Grid.prototype.clone.apply(this,[obj]);return obj},getURL:function(bounds){bounds=this.adjustBounds(bounds);var projWords=this.projection.getCode().split(":");var srid=projWords[projWords.length-1];var imageSize=this.getImageSize();var newParams={BBOX:bounds.toBBOX(),SIZE:imageSize.w+","+imageSize.h,F:"image",BBOXSR:srid,IMAGESR:srid};if(this.layerDefs){var layerDefStrList=[];var layerID;for(layerID in this.layerDefs){if(this.layerDefs.hasOwnProperty(layerID)){if(this.layerDefs[layerID]){layerDefStrList.push(layerID);layerDefStrList.push(":");layerDefStrList.push(this.layerDefs[layerID]);layerDefStrList.push(";")}}}if(layerDefStrList.length>0){newParams.LAYERDEFS=layerDefStrList.join("")}}var requestString=this.getFullRequestString(newParams);return requestString},setLayerFilter:function(id,queryDef){if(!this.layerDefs){this.layerDefs={}}if(queryDef){this.layerDefs[id]=queryDef}else{delete this.layerDefs[id]}},clearLayerFilter:function(id){if(id){delete this.layerDefs[id]}else{delete this.layerDefs}},mergeNewParams:function(newParams){var upperParams=OpenLayers.Util.upperCaseObject(newParams);var newArguments=[upperParams];return OpenLayers.Layer.Grid.prototype.mergeNewParams.apply(this,newArguments)},CLASS_NAME:"OpenLayers.Layer.ArcGIS93Rest"});Ext.namespace("gxp.plugins");gxp.plugins.ArcRestSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_arcrestsource",requiredProperties:["name"],constructor:function(config){this.config=config;gxp.plugins.ArcRestSource.superclass.constructor.apply(this,arguments)},createStore:function(){var baseUrl=this.url.split("?")[0];var source=this;var processResult=function(response){var json=Ext.decode(response.responseText);var layerProjection=source.getArcProjection(json.spatialReference.wkid);var layers=[];if(layerProjection!=null){for(var l=0;l<json.layers.length;l++){var layer=json.layers[l];var layerShow="show:"+layer.id;layers.push(new OpenLayers.Layer.ArcGIS93Rest(layer.name,baseUrl+"/export",{layers:layerShow,TRANSPARENT:true},{isBaseLayer:false,ratio:1,displayInLayerSwitcher:true,visibility:true,projection:layerProjection,queryable:json.capabilities&&json.capabilities.Identify}))}}else{processFailure(response)}source.title=json.documentInfo.Title;source.store=new GeoExt.data.LayerStore({layers:layers,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"name"},{name:"layerid",type:"string"},{name:"group",type:"string",defaultValue:this.title},{name:"fixed",type:"boolean",defaultValue:true},{name:"tiled",type:"boolean",defaultValue:true},{name:"queryable",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});source.fireEvent("ready",source)};var processFailure=function(response){Ext.Msg.alert("No ArcGIS Layers","Could not find any compatible layers  at "+source.config.url);source.fireEvent("failure",source)};this.lazy=this.isLazy();if(!this.lazy){Ext.Ajax.request({url:baseUrl,params:{f:"json",pretty:"false",keepPostParams:"true"},method:"POST",success:processResult,failure:processFailure})}else{this.fireEvent("ready")}},isLazy:function(){var lazy=true;var sourceFound=false;var mapConfig=this.target.initialConfig.map;if(mapConfig&&mapConfig.layers){var layerConfig;for(var i=0,ii=mapConfig.layers.length;i<ii;++i){layerConfig=mapConfig.layers[i];if(layerConfig.source===this.id){sourceFound=true;lazy=this.layerConfigComplete(layerConfig);if(lazy===false){break}}}}return(lazy&&sourceFound)},layerConfigComplete:function(config){var lazy=true;var props=this.requiredProperties;for(var i=props.length-1;i>=0;--i){lazy=!!config[props[i]];if(lazy===false){break}}return lazy},createLayerRecord:function(config){var record,layer;var cmp=function(l){return l.get("name")===config.name};var recordExists=this.lazy||(this.store&&this.store.findBy(cmp)>-1);if(this.target.mapPanel.layers.findBy(cmp)==-1&&recordExists){if(!this.lazy&&this.store.findBy(cmp)>-1){record=this.store.getAt(this.store.findBy(cmp)).clone()}else{record=this.createLazyLayerRecord(config)}layer=record.getLayer();if(config.title){layer.setName(config.title);record.set("title",config.title)}if("visibility" in config){layer.visibility=config.visibility}if("opacity" in config){layer.opacity=config.opacity}if("format" in config){layer.params.FORMAT=config.format;record.set("format",config.format)}var singleTile=false;if("tiled" in config){singleTile=!config.tiled}record.set("tiled",!singleTile);record.set("selected",config.selected||false);record.set("queryable",config.queryable||true);record.set("source",config.source);record.set("name",config.name);record.set("layerid",config.layerid);record.set("properties","gxp_wmslayerpanel");if("group" in config){record.set("group",config.group)}record.commit()}return record},getArcProjection:function(srs){var projection=this.getMapProjection();var compatibleProjection=projection;var layerSRS="EPSG:"+srs+"";if(layerSRS!==projection.getCode()){compatibleProjection=null;if((p=new OpenLayers.Projection(layerSRS)).equals(projection)){compatibleProjection=p}}return compatibleProjection},createLazyLayerRecord:function(config){var srs=config.srs||this.target.map.projection;config.srs={};config.srs[srs]=true;var bbox=config.bbox||this.target.map.maxExtent||OpenLayers.Projection.defaults[srs].maxExtent;config.bbox={};config.bbox[srs]={bbox:bbox};var record=new GeoExt.data.LayerRecord(config);record.set("name",config.name);record.set("layerid",config.layerid||"show:0");record.set("format",config.format||"png");record.set("tiled","tiled" in config?config.tiled:true);record.setLayer(new OpenLayers.Layer.ArcGIS93Rest(config.name,this.url.split("?")[0]+"/export",{layers:config.layerid,TRANSPARENT:true,FORMAT:"format" in config?config.format:"png"},{isBaseLayer:false,displayInLayerSwitcher:true,projection:srs,singleTile:"tiled" in config?!config.tiled:false,queryable:"queryable" in config?config.queryable:false}));return record},getConfigForRecord:function(record){var layer=record.getLayer();return{source:record.get("source"),name:record.get("name"),title:record.get("title"),tiled:record.get("tiled"),visibility:layer.getVisibility(),layerid:layer.params.LAYERS,format:layer.params.FORMAT,opacity:layer.opacity||undefined,group:record.get("group"),fixed:record.get("fixed"),selected:record.get("selected")}}});Ext.preg(gxp.plugins.ArcRestSource.prototype.ptype,gxp.plugins.ArcRestSource);Ext.namespace("gxp.plugins");gxp.plugins.AddLayers=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_addlayers",addActionMenuText:"Add layers",findActionMenuText:"Find layers",addFeedActionMenuText:"Add feeds",addActionTip:"Add layers",addServerText:"Add a New Server",addButtonText:"Add layers",untitledText:"Untitled",addLayerSourceErrorText:"Error getting {type} capabilities ({msg}).\nPlease check the url and try again.",availableLayersText:"Available Layers",searchText:"Search for layers",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",panelTitleText:"Title",layerSelectionText:"View available data from:",doneText:"Done",uploadRoles:["ROLE_ADMINISTRATOR"],uploadText:"Upload layers",relativeUploadOnly:true,startSourceId:null,catalogSourceKey:null,selectedSource:null,addServerId:null,constructor:function(config){this.addEvents("sourceselected");gxp.plugins.AddLayers.superclass.constructor.apply(this,arguments)},addActions:function(){var commonOptions={tooltip:this.addActionTip,text:this.addActionText,menuText:this.addActionMenuText,disabled:true,iconCls:"gxp-icon-addlayers"};var options,uploadButton;if(this.initialConfig.search||(this.uploadSource)){var items=[new Ext.menu.Item({iconCls:"gxp-icon-addlayers",text:this.addActionMenuText,handler:this.showCapabilitiesGrid,scope:this})];if(this.initialConfig.search&&this.initialConfig.search.selectedSource&&this.target.sources[this.initialConfig.search.selectedSource]){var search=new Ext.menu.Item({iconCls:"gxp-icon-addlayers",text:this.findActionMenuText,handler:this.showCatalogueSearch,scope:this});items.push(search);Ext.Ajax.request({method:"GET",url:this.target.sources[this.initialConfig.search.selectedSource].url,callback:function(options,success,response){if(success===false){this.target.layerSources[this.initialConfig.search.selectedSource].disable();search.hide()}},scope:this})}if(this.initialConfig.feeds){items.push(new Ext.menu.Item({iconCls:"gxp-icon-addlayers",text:this.addFeedActionMenuText,handler:this.showFeedDialog,scope:this}))}if(this.uploadSource){uploadButton=this.createUploadButton(Ext.menu.Item);if(uploadButton){items.push(uploadButton)}}options=Ext.apply(commonOptions,{menu:new Ext.menu.Menu({items:items})})}else{options=Ext.apply(commonOptions,{handler:this.showCapabilitiesGrid,scope:this})}var actions=gxp.plugins.AddLayers.superclass.addActions.apply(this,[options]);this.target.on("ready",function(){if(this.uploadSource){var source=this.target.layerSources[this.uploadSource];if(source){this.setSelectedSource(source)}else{delete this.uploadSource;if(uploadButton){uploadButton.hide()}}}actions[0].enable()},this);return actions},showCatalogueSearch:function(){var selectedSource=this.initialConfig.search.selectedSource;var sources={};var found=false;for(var key in this.target.layerSources){var source=this.target.layerSources[key];if(source instanceof gxp.plugins.CatalogueSource){var obj={};obj[key]=source;Ext.apply(sources,obj);found=true}}if(found===false){if(window.console){window.console.debug("No catalogue source specified")}return}var output=gxp.plugins.AddLayers.superclass.addOutput.apply(this,[{sources:sources,title:this.searchText,height:300,width:315,selectedSource:selectedSource,xtype:"gxp_cataloguesearchpanel",map:this.target.mapPanel.map}]);output.on({addlayer:function(cmp,sourceKey,layerConfig){var source=this.target.layerSources[sourceKey];var bounds=OpenLayers.Bounds.fromArray(layerConfig.bbox,(source.yx&&source.yx[layerConfig.projection]===true));var mapProjection=this.target.mapPanel.map.getProjection();var bbox=bounds.transform(layerConfig.srs,mapProjection);layerConfig.srs=mapProjection;layerConfig.bbox=bbox.toArray();layerConfig.source=this.initialConfig.catalogSourceKey!==null?this.initialConfig.catalogSourceKey:sourceKey;var record=source.createLayerRecord(layerConfig);this.target.mapPanel.layers.add(record);if(bbox){this.target.mapPanel.map.zoomToExtent(bbox)}},scope:this});var popup=output.findParentByType("window");popup&&popup.center();return output},showCapabilitiesGrid:function(){if(!this.capGrid){this.initCapGrid()}else{if(!(this.capGrid instanceof Ext.Window)){this.addOutput(this.capGrid)}}this.capGrid.show()},showFeedDialog:function(){if(!this.feedDialog){var Cls=this.outputTarget?Ext.Panel:Ext.Window;this.feedDialog=new Cls(Ext.apply({closeAction:"hide",autoScroll:true,title:this.addFeedActionMenuText,items:[{xtype:"gxp_feedsourcedialog",target:this.target,listeners:{addfeed:function(ptype,config){var sourceConfig={config:{ptype:ptype}};if(config.url){sourceConfig.config.url=config.url}var source=this.target.addLayerSource(sourceConfig);config.source=source.id;var feedRecord=source.createLayerRecord(config);this.target.mapPanel.layers.add([feedRecord]);this.feedDialog.hide()},scope:this}}]},this.initialConfig.outputConfig));if(Cls===Ext.Panel){this.addOutput(this.feedDialog)}}if(!(this.feedDialog instanceof Ext.Window)){this.addOutput(this.feedDialog)}this.feedDialog.show()},initCapGrid:function(){var source,data=[],target=this.target;for(var id in target.layerSources){source=target.layerSources[id];if(source.store&&!source.hidden){data.push([id,source.title||id,source.url])}}var sources=new Ext.data.ArrayStore({fields:["id","title","url"],data:data});var expander=this.createExpander();function addLayers(){var source=this.selectedSource;var records=capGridPanel.getSelectionModel().getSelections();var recordsToAdd=[],numRecords=records.length;function collectRecords(record){if(recordsToAdd){recordsToAdd.push(record)}numRecords--;if(numRecords===0){this.addLayers(recordsToAdd)}}for(var i=0,ii=records.length;i<ii;++i){var record=source.createLayerRecord({name:records[i].get("name"),source:source.id},collectRecords,this);if(record){collectRecords.call(this,record)}}}var idx=0;if(this.startSourceId!==null){sources.each(function(record){if(record.get("id")===this.startSourceId){idx=sources.indexOf(record)}},this)}source=this.target.layerSources[data[idx][0]];var capGridPanel=new Ext.grid.GridPanel({store:source.store,autoScroll:true,autoExpandColumn:"title",plugins:[expander],loadMask:true,colModel:new Ext.grid.ColumnModel([expander,{id:"title",header:this.panelTitleText,dataIndex:"title",sortable:true},{header:"Id",dataIndex:"name",width:120,sortable:true}]),listeners:{rowdblclick:addLayers,scope:this}});var sourceComboBox=new Ext.form.ComboBox({ref:"../../sourceComboBox",width:165,store:sources,valueField:"id",displayField:"title",tpl:'<tpl for="."><div ext:qtip="{url}" class="x-combo-list-item">{title}</div></tpl>',triggerAction:"all",editable:false,allowBlank:false,forceSelection:true,mode:"local",value:data[idx][0],listeners:{select:function(combo,record,index){var id=record.get("id");if(id===this.addServerId){showNewSourceDialog();sourceComboBox.reset();return}var source=this.target.layerSources[id];capGridPanel.reconfigure(source.store,capGridPanel.getColumnModel());capGridPanel.getView().focusRow(0);this.setSelectedSource(source);(function(){combo.triggerBlur();combo.el.blur()}).defer(100)},focus:function(field){if(target.proxy){field.reset()}},scope:this}});var capGridToolbar=null,container;if(this.target.proxy||data.length>1){container=new Ext.Container({cls:"gxp-addlayers-sourceselect",items:[new Ext.Toolbar.TextItem({text:this.layerSelectionText}),sourceComboBox]});capGridToolbar=[container]}if(this.target.proxy){this.addServerId=Ext.id();sources.loadData([[this.addServerId,this.addServerText+"..."]],true)}var newSourceDialog={xtype:"gxp_newsourcedialog",header:false,listeners:{hide:function(cmp){if(!this.outputTarget){cmp.ownerCt.hide()}},urlselected:function(newSourceDialog,url,type){newSourceDialog.setLoading();var ptype;switch(type){case"TMS":ptype="gxp_tmssource";break;case"REST":ptype="gxp_arcrestsource";break;default:ptype="gxp_wmscsource"}this.target.addLayerSource({config:{url:url,ptype:ptype},callback:function(id){var record=new sources.recordType({id:id,title:this.target.layerSources[id].title||this.untitledText});sources.insert(0,[record]);sourceComboBox.onSelect(record,0);newSourceDialog.hide()},fallback:function(source,msg){newSourceDialog.setError(new Ext.Template(this.addLayerSourceErrorText).apply({type:type,msg:msg}))},scope:this})},scope:this}};var me=this;function showNewSourceDialog(){if(me.outputTarget){me.addOutput(newSourceDialog)}else{new Ext.Window({title:gxp.NewSourceDialog.prototype.title,modal:true,hideBorders:true,width:300,items:newSourceDialog}).show()}}var items={xtype:"container",region:"center",layout:"fit",hideBorders:true,items:[capGridPanel]};if(this.instructionsText){items.items.push({xtype:"box",autoHeight:true,autoEl:{tag:"p",cls:"x-form-item",style:"padding-left: 5px; padding-right: 5px"},html:this.instructionsText})}var bbarItems=["->",new Ext.Button({text:this.addButtonText,iconCls:"gxp-icon-addlayers",handler:addLayers,scope:this}),new Ext.Button({text:this.doneText,handler:function(){this.capGrid.hide()},scope:this})];var uploadButton;if(!this.uploadSource){uploadButton=this.createUploadButton();if(uploadButton){bbarItems.unshift(uploadButton)}}var Cls=this.outputTarget?Ext.Panel:Ext.Window;this.capGrid=new Cls(Ext.apply({title:this.availableLayersText,closeAction:"hide",layout:"border",height:300,width:315,modal:true,items:items,tbar:capGridToolbar,bbar:bbarItems,listeners:{hide:function(win){capGridPanel.getSelectionModel().clearSelections()},show:function(win){if(this.selectedSource===null){this.setSelectedSource(this.target.layerSources[data[idx][0]])}else{this.setSelectedSource(this.selectedSource)}},scope:this}},this.initialConfig.outputConfig));if(Cls===Ext.Panel){this.addOutput(this.capGrid)}},addLayers:function(records,isUpload){var source=this.selectedSource;var layerStore=this.target.mapPanel.layers,extent,record,layer;for(var i=0,ii=records.length;i<ii;++i){record=source.createLayerRecord({name:records[i].get("name"),source:source.id})||records[i];if(record){layer=record.getLayer();if(layer.maxExtent){if(!extent){extent=record.getLayer().maxExtent.clone()}else{extent.extend(record.getLayer().maxExtent)}}if(record.get("group")==="background"){layerStore.insert(1,[record])}else{layerStore.add([record])}}}if(extent){this.target.mapPanel.map.zoomToExtent(extent)}if(records.length===1&&record){this.target.selectLayer(record);if(isUpload&&this.postUploadAction){var outputConfig,actionPlugin=this.postUploadAction;if(!Ext.isString(actionPlugin)){outputConfig=actionPlugin.outputConfig;actionPlugin=actionPlugin.plugin}this.target.tools[actionPlugin].addOutput(outputConfig)}}},setSelectedSource:function(source,callback){this.selectedSource=source;var store=source.store;this.fireEvent("sourceselected",this,source);if(this.capGrid&&source.lazy){source.store.load({callback:(function(){var sourceComboBox=this.capGrid.sourceComboBox,store=sourceComboBox.store,valueField=sourceComboBox.valueField,index=store.findExact(valueField,sourceComboBox.getValue()),rec=store.getAt(index),source=this.target.layerSources[rec.get("id")];if(source){if(source.title!==rec.get("title")&&!Ext.isEmpty(source.title)){rec.set("title",source.title);sourceComboBox.setValue(rec.get(valueField))}}else{store.remove(rec)}}).createDelegate(this)})}},createUploadButton:function(Cls){Cls=Cls||Ext.Button;var button;var uploadConfig=this.initialConfig.upload||!!this.initialConfig.uploadSource;var url;if(uploadConfig){if(typeof uploadConfig==="boolean"){uploadConfig={}}button=new Cls({text:this.uploadText,iconCls:"gxp-icon-filebrowse",hidden:!this.uploadSource,handler:function(){this.target.doAuthorized(this.uploadRoles,function(){var panel=new gxp.LayerUploadPanel(Ext.apply({title:this.outputTarget?this.uploadText:undefined,url:url,width:300,border:false,bodyStyle:"padding: 10px 10px 0 10px;",labelWidth:65,autoScroll:true,defaults:{anchor:"99%",allowBlank:false,msgTarget:"side"},listeners:{uploadcomplete:function(panel,detail){var layers=detail["import"].tasks;var item,names={},resource,layer;for(var i=0,len=layers.length;i<len;++i){item=layers[i];if(item.state==="ERROR"){Ext.Msg.alert(item.layer.originalName,item.errorMessage);return}var ws;if(item.target.dataStore){ws=item.target.dataStore.workspace.name}else{if(item.target.coverageStore){ws=item.target.coverageStore.workspace.name}}names[ws+":"+item.layer.name]=true}this.selectedSource.store.load({params:{_dc:Math.random()},callback:function(records,options,success){var gridPanel,sel;if(this.capGrid&&this.capGrid.isVisible()){gridPanel=this.capGrid.get(0).get(0);sel=gridPanel.getSelectionModel();sel.clearSelections()}var newRecords=[];var last=0;this.selectedSource.store.each(function(record,index){if(record.get("name") in names){last=index;newRecords.push(record)}});if(gridPanel){window.setTimeout(function(){sel.selectRecords(newRecords);gridPanel.getView().focusRow(last)},100)}else{this.addLayers(newRecords,true)}},scope:this});if(this.outputTarget){panel.hide()}else{win.close()}},scope:this}},uploadConfig));var win;if(this.outputTarget){this.addOutput(panel)}else{win=new Ext.Window({title:this.uploadText,modal:true,resizable:false,items:[panel]});win.show()}},this)},scope:this});var urlCache={};function getStatus(url,callback,scope){if(url in urlCache){window.setTimeout(function(){callback.call(scope,urlCache[url])},0)}else{Ext.Ajax.request({url:url,disableCaching:false,callback:function(options,success,response){var status=response.status;urlCache[url]=status;callback.call(scope,status)}})}}this.on({sourceselected:function(tool,source){button[this.uploadSource?"show":"hide"]();var show=false;if(this.isEligibleForUpload(source)){url=this.getGeoServerRestUrl(source.url);if(this.target.isAuthorized()){getStatus(url+"/imports",function(status){button.setVisible(status===200)},this)}}},scope:this})}return button},getGeoServerRestUrl:function(url){var parts=url.split("/");parts.pop();parts.push("rest");return parts.join("/")},isEligibleForUpload:function(source){return(source.url&&(this.relativeUploadOnly?(source.url.charAt(0)==="/"):true)&&(this.nonUploadSources||[]).indexOf(source.id)===-1)},createExpander:function(){return new Ext.grid.RowExpander({tpl:new Ext.Template(this.expanderTemplateText)})}});Ext.preg(gxp.plugins.AddLayers.prototype.ptype,gxp.plugins.AddLayers);Ext.namespace("gxp.plugins");gxp.plugins.RemoveLayer=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_removelayer",removeMenuText:"Remove layer",removeActionTip:"Remove layer",addActions:function(){var selectedLayer;var actions=gxp.plugins.RemoveLayer.superclass.addActions.apply(this,[{menuText:this.removeMenuText,iconCls:"gxp-icon-removelayers",disabled:true,tooltip:this.removeActionTip,handler:function(){var record=selectedLayer;if(record){this.target.mapPanel.layers.remove(record)}},scope:this}]);var removeLayerAction=actions[0];this.target.on("layerselectionchange",function(record){selectedLayer=record;removeLayerAction.setDisabled(this.target.mapPanel.layers.getCount()<=1||!record)},this);var enforceOne=function(store){removeLayerAction.setDisabled(!selectedLayer||store.getCount()<=1)};this.target.mapPanel.layers.on({add:enforceOne,remove:enforceOne});return actions}});Ext.preg(gxp.plugins.RemoveLayer.prototype.ptype,gxp.plugins.RemoveLayer);Ext.namespace("gxp.plugins");gxp.plugins.LayerProperties=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_layerproperties",menuText:"Layer Properties",toolTip:"Layer Properties",constructor:function(config){gxp.plugins.LayerProperties.superclass.constructor.apply(this,arguments);if(!this.outputConfig){this.outputConfig={width:325,autoHeight:true}}},addActions:function(){var actions=gxp.plugins.LayerProperties.superclass.addActions.apply(this,[{menuText:this.menuText,iconCls:"gxp-icon-layerproperties",disabled:true,tooltip:this.toolTip,handler:function(){this.removeOutput();this.addOutput()},scope:this}]);var layerPropertiesAction=actions[0];this.target.on("layerselectionchange",function(record){layerPropertiesAction.setDisabled(!record||!record.get("properties"))},this);return actions},addOutput:function(config){config=config||{};var record=this.target.selectedLayer;var origCfg=this.initialConfig.outputConfig||{};this.outputConfig.title=origCfg.title||this.menuText+": "+record.get("title");this.outputConfig.shortTitle=record.get("title");var xtype=record.get("properties")||"gxp_layerpanel";var panelConfig=this.layerPanelConfig;if(panelConfig&&panelConfig[xtype]){Ext.apply(config,panelConfig[xtype])}var output=gxp.plugins.LayerProperties.superclass.addOutput.call(this,Ext.apply({xtype:xtype,authorized:this.target.isAuthorized(),layerRecord:record,source:this.target.getSource(record),defaults:{style:"padding: 10px",autoHeight:this.outputConfig.autoHeight}},config));output.on({added:function(cmp){if(!this.outputTarget){cmp.on("afterrender",function(){cmp.ownerCt.ownerCt.center()},this,{single:true})}},scope:this});return output}});Ext.preg(gxp.plugins.LayerProperties.prototype.ptype,gxp.plugins.LayerProperties);Ext.namespace("gxp.plugins");gxp.plugins.ZoomToLayerExtent=Ext.extend(gxp.plugins.ZoomToExtent,{ptype:"gxp_zoomtolayerextent",menuText:"Zoom to layer extent",tooltip:"Zoom to layer extent",iconCls:"gxp-icon-zoom-to",destroy:function(){this.selectedRecord=null;gxp.plugins.ZoomToLayerExtent.superclass.destroy.apply(this,arguments)},extent:function(){var layer=this.selectedRecord.getLayer(),dataExtent;if(OpenLayers.Layer.Vector){dataExtent=layer instanceof OpenLayers.Layer.Vector&&layer.getDataExtent()}return layer.restrictedExtent||dataExtent||layer.maxExtent||map.maxExtent},addActions:function(){var actions=gxp.plugins.ZoomToLayerExtent.superclass.addActions.apply(this,arguments);actions[0].disable();this.target.on("layerselectionchange",function(record){this.selectedRecord=record;actions[0].setDisabled(!record||!record.get("layer"))},this);return actions}});Ext.preg(gxp.plugins.ZoomToLayerExtent.prototype.ptype,gxp.plugins.ZoomToLayerExtent);Ext.namespace("gxp.plugins");gxp.plugins.ZoomToSelectedFeatures=Ext.extend(gxp.plugins.ZoomToExtent,{ptype:"gxp_zoomtoselectedfeatures",menuText:"Zoom to selected features",tooltip:"Zoom to selected features",closest:false,layer:null,iconCls:"gxp-icon-zoom-to",extent:function(){var layer=this.target.tools[this.featureManager].featureLayer;var bounds,geom,extent,features=layer.selectedFeatures;for(var i=features.length-1;i>=0;--i){geom=features[i].geometry;if(geom){extent=geom.getBounds();if(bounds){bounds.extend(extent)}else{bounds=extent.clone()}}}return bounds},addActions:function(){var actions=gxp.plugins.ZoomToSelectedFeatures.superclass.addActions.apply(this,arguments);actions[0].disable();var handlers={featureselected:function(evt){if(actions[0].isDisabled()&&evt.feature.geometry!==null){actions[0].enable()}},featureunselected:function(){if(this.layer.selectedFeatures.length===0){actions[0].disable()}},scope:this};var featureManager=this.target.tools[this.featureManager];function register(){if(this.layer){this.layer.events.un(handlers)}this.layer=featureManager.featureLayer;if(this.layer){this.layer.events.on(handlers)}}this.target.on("layerselectionchange",register);featureManager.on("query",function(){actions[0].disable()});register.call(this);return actions}});Ext.preg(gxp.plugins.ZoomToSelectedFeatures.prototype.ptype,gxp.plugins.ZoomToSelectedFeatures);Ext.namespace("gxp.plugins");gxp.plugins.Legend=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_legend",menuText:"Legend",tooltip:"Show Legend",actionTarget:null,constructor:function(config){gxp.plugins.Legend.superclass.constructor.apply(this,arguments);if(!this.outputConfig){this.outputConfig={width:300,height:400}}Ext.applyIf(this.outputConfig,{title:this.menuText})},addActions:function(){var actions=[{menuText:this.menuText,iconCls:"gxp-icon-legend",tooltip:this.tooltip,handler:function(){this.removeOutput();this.addOutput(this.outputConfig)},scope:this}];return gxp.plugins.Legend.superclass.addActions.apply(this,[actions])},getLegendPanel:function(){return this.output[0]},addOutput:function(config){return gxp.plugins.Legend.superclass.addOutput.call(this,Ext.apply({xtype:"gx_legendpanel",ascending:false,border:false,hideMode:"offsets",layerStore:this.target.mapPanel.layers,defaults:{cls:"gxp-legend-item"}},config))}});Ext.preg(gxp.plugins.Legend.prototype.ptype,gxp.plugins.Legend);Ext.namespace("gxp.plugins");gxp.plugins.Print=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_print",printService:null,printCapabilities:null,customParams:null,includeLegend:false,menuText:"Print Map",tooltip:"Print Map",buttonText:"Print",notAllNotPrintableText:"Not All Layers Can Be Printed",nonePrintableText:"None of your current map layers can be printed",previewText:"Print Preview",openInNewWindow:false,constructor:function(config){gxp.plugins.Print.superclass.constructor.apply(this,arguments)},addActions:function(){if(this.printService!==null||this.printCapabilities!=null){var printProvider=new GeoExt.data.PrintProvider({capabilities:this.printCapabilities,url:this.printService,customParams:this.customParams,autoLoad:false,listeners:{beforedownload:function(provider,url){if(this.openInNewWindow===true){window.open(url);return false}},beforeencodelegend:function(provider,jsonData,legend){if(legend&&legend.ptype==="gxp_layermanager"){var encodedLegends=[];var output=legend.output;if(output&&output[0]){output[0].getRootNode().cascade(function(node){if(node.component&&!node.component.hidden){var cmp=node.component;var encFn=this.encoders.legends[cmp.getXType()];encodedLegends=encodedLegends.concat(encFn.call(this,cmp,jsonData.pages[0].scale))}},provider)}jsonData.legends=encodedLegends;return false}},beforeprint:function(){printWindow.items.get(0).printMapPanel.layers.each(function(l){var params=l.get("layer").params;for(var p in params){if(params[p] instanceof Array){params[p]=params[p].join(",")}}})},loadcapabilities:function(){if(printButton){printButton.initialConfig.disabled=false;printButton.enable()}},print:function(){try{printWindow.close()}catch(err){}},printException:function(cmp,response){this.target.displayXHRTrouble&&this.target.displayXHRTrouble(response)},scope:this}});var actions=gxp.plugins.Print.superclass.addActions.call(this,[{menuText:this.menuText,buttonText:this.buttonText,tooltip:this.tooltip,iconCls:"gxp-icon-print",disabled:this.printCapabilities!==null?false:true,handler:function(){var supported=getPrintableLayers();if(supported.length>0){var printWindow=createPrintWindow.call(this);showPrintWindow.call(this);return printWindow}else{Ext.Msg.alert(this.notAllNotPrintableText,this.nonePrintableText)}},scope:this,listeners:{render:function(){printProvider.loadCapabilities()}}}]);var printButton=actions[0].items[0];var printWindow;function destroyPrintComponents(){if(printWindow){try{var panel=printWindow.items.first();panel.printMapPanel.printPage.destroy()}catch(err){}printWindow=null}}var mapPanel=this.target.mapPanel;function getPrintableLayers(){var supported=[];mapPanel.layers.each(function(record){var layer=record.getLayer();if(isPrintable(layer)){supported.push(layer)}});return supported}function isPrintable(layer){return layer.getVisibility()===true&&(layer instanceof OpenLayers.Layer.WMS||layer instanceof OpenLayers.Layer.OSM)}function createPrintWindow(){var legend=null;if(this.includeLegend===true){var key,tool;for(key in this.target.tools){tool=this.target.tools[key];if(tool.ptype==="gxp_legend"){legend=tool.getLegendPanel();break}}if(legend===null){for(key in this.target.tools){tool=this.target.tools[key];if(tool.ptype==="gxp_layermanager"){legend=tool;break}}}}printWindow=new Ext.Window({title:this.previewText,modal:true,border:false,autoHeight:true,resizable:false,width:360,items:[new GeoExt.ux.PrintPreview({minWidth:336,mapTitle:this.target.about&&this.target.about.title,comment:this.target.about&&this.target.about["abstract"],printMapPanel:{autoWidth:true,height:Math.min(420,Ext.get(document.body).getHeight()-150),limitScales:true,map:Ext.applyIf({controls:[new OpenLayers.Control.Navigation({zoomWheelEnabled:false,zoomBoxEnabled:false}),new OpenLayers.Control.PanPanel(),new OpenLayers.Control.ZoomPanel(),new OpenLayers.Control.Attribution()],eventListeners:{preaddlayer:function(evt){return isPrintable(evt.layer)}}},mapPanel.initialConfig.map),items:[{xtype:"gx_zoomslider",vertical:true,height:100,aggressive:true}],listeners:{afterlayout:function(evt){printWindow.setWidth(Math.max(360,this.getWidth()+24));printWindow.center()}}},printProvider:printProvider,includeLegend:this.includeLegend,legend:legend,sourceMap:mapPanel})],listeners:{beforedestroy:destroyPrintComponents}});return printWindow}function showPrintWindow(){printWindow.show();printWindow.setWidth(0);var tb=printWindow.items.get(0).items.get(0);var w=0;tb.items.each(function(item){if(item.getEl()){w+=item.getWidth()}});printWindow.setWidth(Math.max(printWindow.items.get(0).printMapPanel.getWidth(),w+20));printWindow.center()}return actions}}});Ext.preg(gxp.plugins.Print.prototype.ptype,gxp.plugins.Print);Ext.namespace("gxp.plugins");gxp.plugins.WMSRasterStylesDialog={isRaster:null,init:function(target){Ext.apply(target,gxp.plugins.WMSRasterStylesDialog)},createRule:function(){var symbolizers=[new OpenLayers.Symbolizer[this.isRaster?"Raster":this.symbolType]];return new OpenLayers.Rule({symbolizers:symbolizers})},addRule:function(){var legend=this.items.get(2).items.get(0);if(this.isRaster){legend.rules.push(this.createPseudoRule());legend.rules.length==1&&legend.rules.push(this.createPseudoRule());this.savePseudoRules()}else{this.selectedStyle.get("userStyle").rules.push(this.createRule());legend.update();this.selectedStyle.store.afterEdit(this.selectedStyle)}this.updateRuleRemoveButton()},removeRule:function(){if(this.isRaster){var legend=this.items.get(2).items.get(0);var rule=this.selectedRule;legend.unselect();legend.rules.remove(rule);legend.rules.length==1&&legend.rules.remove(legend.rules[0]);this.savePseudoRules()}else{gxp.WMSStylesDialog.prototype.removeRule.apply(this,arguments)}},duplicateRule:function(){var legend=this.items.get(2).items.get(0);if(this.isRaster){legend.rules.push(this.createPseudoRule({quantity:this.selectedRule.name,label:this.selectedRule.title,color:this.selectedRule.symbolizers[0].fillColor,opacity:this.selectedRule.symbolizers[0].fillOpacity}));this.savePseudoRules()}else{var newRule=this.selectedRule.clone();newRule.name=gxp.util.uniqueName((newRule.title||newRule.name)+" (copy)");delete newRule.title;this.selectedStyle.get("userStyle").rules.push(newRule);legend.update()}this.updateRuleRemoveButton()},editRule:function(){this.isRaster?this.editPseudoRule():gxp.WMSStylesDialog.prototype.editRule.apply(this,arguments)},editPseudoRule:function(){var me=this;var rule=this.selectedRule;var pseudoRuleDlg=new Ext.Window({title:"Color Map Entry: "+rule.name,width:340,autoHeight:true,modal:true,items:[{bodyStyle:"padding-top: 5px",border:false,defaults:{autoHeight:true,hideMode:"offsets"},items:[{xtype:"form",border:false,labelAlign:"top",defaults:{border:false},style:{padding:"0.3em 0 0 1em"},items:[{layout:"column",defaults:{border:false,style:{"padding-right":"1em"}},items:[{layout:"form",width:70,items:[{xtype:"numberfield",anchor:"95%",value:rule.name,allowBlank:false,fieldLabel:"Quantity",validator:function(value){var rules=me.items.get(2).items.get(0).rules;for(var i=rules.length-1;i>=0;i--){if(rule!==rules[i]&&rules[i].name==value){return"Quantity "+value+" is already defined"}}return true},listeners:{valid:function(cmp){this.selectedRule.name=String(cmp.getValue());this.savePseudoRules()},scope:this}}]},{layout:"form",width:130,items:[{xtype:"textfield",fieldLabel:"Label",anchor:"95%",value:rule.title,listeners:{valid:function(cmp){this.selectedRule.title=cmp.getValue();this.savePseudoRules()},scope:this}}]},{layout:"form",width:70,items:[new GeoExt.FeatureRenderer({symbolType:this.symbolType,symbolizers:[rule.symbolizers[0]],isFormField:true,fieldLabel:"Appearance"})]}]}]},{xtype:"gxp_polygonsymbolizer",symbolizer:rule.symbolizers[0],bodyStyle:{padding:"10px"},border:false,labelWidth:70,defaults:{labelWidth:70},listeners:{change:function(symbolizer){var symbolizerSwatch=pseudoRuleDlg.findByType(GeoExt.FeatureRenderer)[0];symbolizerSwatch.setSymbolizers([symbolizer],{draw:symbolizerSwatch.rendered});this.selectedRule.symbolizers[0]=symbolizer;this.savePseudoRules()},scope:this}}]}]});var strokeSymbolizer=pseudoRuleDlg.findByType("gxp_strokesymbolizer")[0];strokeSymbolizer.ownerCt.remove(strokeSymbolizer);pseudoRuleDlg.show()},savePseudoRules:function(){var style=this.selectedStyle;var legend=this.items.get(2).items.get(0);var userStyle=style.get("userStyle");var pseudoRules=legend.rules;pseudoRules.sort(function(a,b){var left=parseFloat(a.name);var right=parseFloat(b.name);return left===right?0:(left<right?-1:1)});var symbolizer=userStyle.rules[0].symbolizers[0];symbolizer.colorMap=pseudoRules.length>0?new Array(pseudoRules.length):undefined;var pseudoRule;for(var i=0,len=pseudoRules.length;i<len;++i){pseudoRule=pseudoRules[i];symbolizer.colorMap[i]={quantity:parseFloat(pseudoRule.name),label:pseudoRule.title||undefined,color:pseudoRule.symbolizers[0].fillColor||undefined,opacity:pseudoRule.symbolizers[0].fill==false?0:pseudoRule.symbolizers[0].fillOpacity}}this.afterRuleChange(this.selectedRule)},createLegend:function(rules,options){var R=OpenLayers.Symbolizer.Raster;if(R&&rules[0]&&rules[0].symbolizers[0] instanceof R){this.getComponent("rulesfieldset").setTitle("Color Map Entries");this.isRaster=true;this.addRasterLegend(rules,options)}else{this.isRaster=false;this.addVectorLegend(rules)}},addRasterLegend:function(rules,options){options=options||{};var symbolizer=rules[0].symbolizers[0];var colorMap=symbolizer.colorMap||[];var pseudoRules=[];var colorMapEntry;for(var i=0,len=colorMap.length;i<len;i++){pseudoRules.push(this.createPseudoRule(colorMap[i]))}this.selectedRule=options.selectedRuleIndex!=null?pseudoRules[options.selectedRuleIndex]:null;return this.addVectorLegend(pseudoRules,{symbolType:"Polygon",enableDD:false})},createPseudoRule:function(colorMapEntry){var quantity=-1;if(!colorMapEntry){var fieldset=this.items.get(2);if(fieldset.items){rules=fieldset.items.get(0).rules;for(var i=rules.length-1;i>=0;i--){quantity=Math.max(quantity,parseFloat(rules[i].name))}}}colorMapEntry=Ext.applyIf(colorMapEntry||{},{quantity:++quantity,color:"#000000",opacity:1});return new OpenLayers.Rule({title:colorMapEntry.label,name:String(colorMapEntry.quantity),symbolizers:[new OpenLayers.Symbolizer.Polygon({fillColor:colorMapEntry.color,fillOpacity:colorMapEntry.opacity,stroke:false,fill:colorMapEntry.opacity!==0})]})},updateRuleRemoveButton:function(){this.items.get(3).items.get(1).setDisabled(!this.selectedRule||(this.isRaster===false&&this.items.get(2).items.get(0).rules.length<=1))}};Ext.preg("gxp_wmsrasterstylesdialog",gxp.plugins.WMSRasterStylesDialog);Ext.namespace("gxp.plugins");gxp.plugins.Styler=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_styler",menuText:"Edit Styles",tooltip:"Manage layer styles",roles:["ROLE_ADMINISTRATOR"],sameOriginStyling:true,rasterStyling:false,requireDescribeLayer:true,constructor:function(config){gxp.plugins.Styler.superclass.constructor.apply(this,arguments);if(!this.outputConfig){this.outputConfig={autoHeight:true,width:265}}Ext.applyIf(this.outputConfig,{closeAction:"close"})},init:function(target){gxp.plugins.Styler.superclass.init.apply(this,arguments);this.target.on("authorizationchange",this.enableOrDisable,this)},destroy:function(){this.target.un("authorizationchange",this.enableOrDisable,this);gxp.plugins.Styler.superclass.destroy.apply(this,arguments)},enableOrDisable:function(){if(this.target&&this.target.selectedLayer!==null){this.handleLayerChange(this.target.selectedLayer)}},addActions:function(){var layerProperties;var actions=gxp.plugins.Styler.superclass.addActions.apply(this,[{menuText:this.menuText,iconCls:"gxp-icon-palette",disabled:true,tooltip:this.tooltip,handler:function(){this.target.doAuthorized(this.roles,this.addOutput,this)},scope:this}]);this.launchAction=actions[0];this.target.on({layerselectionchange:this.handleLayerChange,scope:this});return actions},handleLayerChange:function(record){this.launchAction.disable();if(record){var source=this.target.getSource(record);if(source instanceof gxp.plugins.WMSSource){source.describeLayer(record,function(describeRec){this.checkIfStyleable(record,describeRec)},this)}}},checkIfStyleable:function(layerRec,describeRec){if(describeRec){var owsTypes=["WFS"];if(this.rasterStyling===true){owsTypes.push("WCS")}}if(describeRec?owsTypes.indexOf(describeRec.get("owsType"))!==-1:!this.requireDescribeLayer){var editableStyles=false;var source=this.target.layerSources[layerRec.get("source")];var url;var restUrl=layerRec.get("restUrl");if(restUrl){url=restUrl+"/styles"}else{url=source.url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest/styles")}if(this.sameOriginStyling){editableStyles=url.charAt(0)==="/";if(this.target.authenticate&&editableStyles){this.launchAction.enable();return}}else{editableStyles=true}if(editableStyles){if(this.target.isAuthorized()){this.enableActionIfAvailable(url)}}}},enableActionIfAvailable:function(url){Ext.Ajax.request({method:"PUT",url:url,callback:function(options,success,response){this.launchAction.setDisabled(response.status!==405)},scope:this})},addOutput:function(config){config=config||{};var record=this.target.selectedLayer;var origCfg=this.initialConfig.outputConfig||{};this.outputConfig.title=origCfg.title||this.menuText+": "+record.get("title");this.outputConfig.shortTitle=record.get("title");Ext.apply(config,gxp.WMSStylesDialog.createGeoServerStylerConfig(record));if(this.rasterStyling===true){config.plugins.push({ptype:"gxp_wmsrasterstylesdialog"})}Ext.applyIf(config,{style:"padding: 10px"});var output=gxp.plugins.Styler.superclass.addOutput.call(this,config);if(!(output.ownerCt.ownerCt instanceof Ext.Window)){output.dialogCls=Ext.Panel;output.showDlg=function(dlg){dlg.layout="fit";dlg.autoHeight=false;output.ownerCt.add(dlg)}}output.stylesStore.on("load",function(){if(!this.outputTarget&&output.ownerCt.ownerCt instanceof Ext.Window){output.ownerCt.ownerCt.center()}})}});Ext.preg(gxp.plugins.Styler.prototype.ptype,gxp.plugins.Styler);Ext.namespace("gxp.plugins");gxp.plugins.GoogleEarth=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_googleearth",timeout:7000,menuText:"3D Viewer",tooltip:"Switch to 3D Viewer",tooltipMap:"Switch back to normal map view",constructor:function(config){gxp.plugins.GoogleEarth.superclass.constructor.apply(this,arguments)},addActions:function(){var actions=[{menuText:this.menuText,enableToggle:true,iconCls:"gxp-icon-googleearth",tooltip:this.tooltip,toggleHandler:function(button,state){this.actions[0].each(function(cmp){if(cmp.toggle){cmp.toggle(false,true)}});this.togglePanelDisplay(state)},scope:this}];return gxp.plugins.GoogleEarth.superclass.addActions.apply(this,[actions])},togglePanelDisplay:function(displayed){var ownerCt=this.target.mapPanel.ownerCt;var layout=ownerCt&&ownerCt.getLayout();if(layout&&layout instanceof Ext.layout.CardLayout){if(displayed===true){gxp.plugins.GoogleEarth.loader.onLoad({callback:function(){layout.setActiveItem(1);this.actions[0].enable();this.actions[0].items[0].setTooltip(this.tooltipMap);this.actions[0].each(function(cmp){if(cmp.toggle){cmp.toggle(true,true)}})},scope:this})}else{layout.setActiveItem(0);this.actions[0].items[0].setTooltip(this.tooltip)}}},getHost:function(){var name=window.location.host.split(":").shift();var port=window.location.port||"80";return name+":"+port}});gxp.plugins.GoogleEarth.loader=new (Ext.extend(Ext.util.Observable,{ready:!!(window.google&&window.google.earth),loading:false,constructor:function(){this.addEvents("ready","failure");return Ext.util.Observable.prototype.constructor.apply(this,arguments)},onScriptLoad:function(){var monitor=gxp.plugins.GoogleEarth.loader;if(!monitor.ready){monitor.ready=true;monitor.loading=false;monitor.fireEvent("ready")}},onLoad:function(options){if(this.ready){window.setTimeout(function(){options.callback.call(options.scope)},0)}else{if(!this.loading){this.loadScript(options)}else{this.on({ready:options.callback,failure:options.errback||Ext.emptyFn,scope:options.scope})}}},loadScript:function(options){if(window.google){delete google.loader}var params={autoload:Ext.encode({modules:[{name:"earth",version:"1",callback:"gxp.plugins.GoogleEarth.loader.onScriptLoad"}]})};var script=document.createElement("script");script.src="//www.google.com/jsapi?"+Ext.urlEncode(params);var errback=options.errback||Ext.emptyFn;var timeout=options.timeout||gxp.plugins.GoogleSource.prototype.timeout;window.setTimeout((function(){if(!gxp.plugins.GoogleEarth.loader.ready){this.fireEvent("failure");this.unload()}}).createDelegate(this),timeout);this.on({ready:options.callback,failure:options.errback||Ext.emptyFn,scope:options.scope});this.loading=true;function append(){document.getElementsByTagName("head")[0].appendChild(script)}if(document.body){append()}else{Ext.onReady(append)}this.script=script},unload:function(){this.purgeListeners();if(this.script){document.getElementsByTagName("head")[0].removeChild(this.script);delete this.script}this.loading=false;this.ready=false;delete google.loader;delete google.earth}}))();Ext.preg(gxp.plugins.GoogleEarth.prototype.ptype,gxp.plugins.GoogleEarth);Ext.ns("Ext.ux.form");Ext.ux.form.FileUploadField=Ext.extend(Ext.form.TextField,{buttonText:"Browse...",buttonOnly:false,buttonOffset:3,readOnly:true,autoSize:Ext.emptyFn,initComponent:function(){Ext.ux.form.FileUploadField.superclass.initComponent.call(this);this.addEvents("fileselected")},onRender:function(ct,position){Ext.ux.form.FileUploadField.superclass.onRender.call(this,ct,position);this.wrap=this.el.wrap({cls:"x-form-field-wrap x-form-file-wrap"});this.el.addClass("x-form-file-text");this.el.dom.removeAttribute("name");this.createFileInput();var btnCfg=Ext.applyIf(this.buttonCfg||{},{text:this.buttonText});this.button=new Ext.Button(Ext.apply(btnCfg,{renderTo:this.wrap,cls:"x-form-file-btn"+(btnCfg.iconCls?" x-btn-icon":"")}));if(this.buttonOnly){this.el.hide();this.wrap.setWidth(this.button.getEl().getWidth())}this.bindListeners();this.resizeEl=this.positionEl=this.wrap},bindListeners:function(){this.fileInput.on({scope:this,mouseenter:function(){this.button.addClass(["x-btn-over","x-btn-focus"])},mouseleave:function(){this.button.removeClass(["x-btn-over","x-btn-focus","x-btn-click"])},mousedown:function(){this.button.addClass("x-btn-click")},mouseup:function(){this.button.removeClass(["x-btn-over","x-btn-focus","x-btn-click"])},change:function(){var v=this.fileInput.dom.value;this.setValue(v);this.fireEvent("fileselected",this,v)}})},createFileInput:function(){this.fileInput=this.wrap.createChild({id:this.getFileInputId(),name:this.name||this.getId(),cls:"x-form-file",tag:"input",type:"file",size:1})},reset:function(){this.fileInput.remove();this.createFileInput();this.bindListeners();Ext.ux.form.FileUploadField.superclass.reset.call(this)},getFileInputId:function(){return this.id+"-file"},onResize:function(w,h){Ext.ux.form.FileUploadField.superclass.onResize.call(this,w,h);this.wrap.setWidth(w);if(!this.buttonOnly){var w=this.wrap.getWidth()-this.button.getEl().getWidth()-this.buttonOffset;this.el.setWidth(w)}},onDestroy:function(){Ext.ux.form.FileUploadField.superclass.onDestroy.call(this);Ext.destroy(this.fileInput,this.button,this.wrap)},onDisable:function(){Ext.ux.form.FileUploadField.superclass.onDisable.call(this);this.doDisable(true)},onEnable:function(){Ext.ux.form.FileUploadField.superclass.onEnable.call(this);this.doDisable(false)},doDisable:function(disabled){this.fileInput.dom.disabled=disabled;this.button.setDisabled(disabled)},preFocus:Ext.emptyFn,alignErrorIcon:function(){this.errorIcon.alignTo(this.wrap,"tl-tr",[2,0])}});Ext.reg("fileuploadfield",Ext.ux.form.FileUploadField);Ext.form.FileUploadField=Ext.ux.form.FileUploadField;Ext.grid.RowExpander=function(config){Ext.apply(this,config);this.addEvents({beforeexpand:true,expand:true,beforecollapse:true,collapse:true});Ext.grid.RowExpander.superclass.constructor.call(this);if(this.tpl){if(typeof this.tpl=="string"){this.tpl=new Ext.Template(this.tpl)}this.tpl.compile()}this.state={};this.bodyContent={}};Ext.extend(Ext.grid.RowExpander,Ext.util.Observable,{header:"",width:20,sortable:false,fixed:true,menuDisabled:true,dataIndex:"",id:"expander",lazyRender:true,enableCaching:true,getRowClass:function(record,rowIndex,p,ds){p.cols=p.cols-1;var content=this.bodyContent[record.id];if(!content&&!this.lazyRender){content=this.getBodyContent(record,rowIndex)}if(content){p.body=content}return this.state[record.id]?"x-grid3-row-expanded":"x-grid3-row-collapsed"},init:function(grid){this.grid=grid;var view=grid.getView();view.getRowClass=this.getRowClass.createDelegate(this);view.enableRowBody=true;grid.on("render",function(){view.mainBody.on("mousedown",this.onMouseDown,this)},this)},getBodyContent:function(record,index){if(!this.enableCaching){return this.tpl.apply(record.data)}var content=this.bodyContent[record.id];if(!content){content=this.tpl.apply(record.data);this.bodyContent[record.id]=content}return content},onMouseDown:function(e,t){if(t.className=="x-grid3-row-expander"){e.stopEvent();var row=e.getTarget(".x-grid3-row");this.toggleRow(row)}},renderer:function(v,p,record){p.cellAttr='rowspan="2"';return'<div class="x-grid3-row-expander">&#160;</div>'},beforeExpand:function(record,body,rowIndex){if(this.fireEvent("beforeexpand",this,record,body,rowIndex)!==false){if(this.tpl&&this.lazyRender){body.innerHTML=this.getBodyContent(record,rowIndex)}return true}else{return false}},toggleRow:function(row){if(typeof row=="number"){row=this.grid.view.getRow(row)}this[Ext.fly(row).hasClass("x-grid3-row-collapsed")?"expandRow":"collapseRow"](row)},expandRow:function(row){if(typeof row=="number"){row=this.grid.view.getRow(row)}var record=this.grid.store.getAt(row.rowIndex);var body=Ext.DomQuery.selectNode("tr:nth(2) div.x-grid3-row-body",row);if(this.beforeExpand(record,body,row.rowIndex)){this.state[record.id]=true;Ext.fly(row).replaceClass("x-grid3-row-collapsed","x-grid3-row-expanded");this.fireEvent("expand",this,record,body,row.rowIndex)}},collapseRow:function(row){if(typeof row=="number"){row=this.grid.view.getRow(row)}var record=this.grid.store.getAt(row.rowIndex);var body=Ext.fly(row).child("tr:nth(1) div.x-grid3-row-body",true);if(this.fireEvent("beforecollapse",this,record,body,row.rowIndex)!==false){this.state[record.id]=false;Ext.fly(row).replaceClass("x-grid3-row-expanded","x-grid3-row-collapsed");this.fireEvent("collapse",this,record,body,row.rowIndex)}}});Ext.namespace("Ext.ux");Ext.ux.ColorPicker=function(config){config.bodyStyle={padding:"3px"};Ext.ux.ColorPicker.superclass.constructor.call(this,config);this.initialize(config)};Ext.extend(Ext.ux.ColorPicker,Ext.util.Observable,{HCHARS:"0123456789ABCDEF",initialize:function(config){this.events={};this.config=this.config||config;this.config.captions=this.config.captions||{};this.config.pickerHotPoint=this.config.pickerHotPoint||{x:3,y:3};this._HSV={h:0,s:100,v:100};this._RGB={r:255,g:255,b:255};this._HEX="000000";this.lastXYRgb={x:0,y:0};this.lastYHue=0;this.domElement=this.config.renderTo||Ext.DomHelper.append(document.body,{},true);this.domElement.addClass("x-cp-panel");this.cpCreateDomObjects();if(this.config.hidePanel){this.formContainer.hide()}this.rgbPicker.on("mousedown",this.rgbPickerClick.createDelegate(this),this);this.huePicker.on("mousedown",this.huePickerClick.createDelegate(this),this);this.wsColorContainer.on("mousedown",this.setColorFromWebsafe.createDelegate(this),this);this.inColorContainer.on("mousedown",this.setColorFromInvert.createDelegate(this),this);Ext.getCmp("redValue"+this.domElement.id).on("change",this.changeRGBField.createDelegate(this));Ext.getCmp("greenValue"+this.domElement.id).on("change",this.changeRGBField.createDelegate(this));Ext.getCmp("blueValue"+this.domElement.id).on("change",this.changeRGBField.createDelegate(this));Ext.getCmp("hueValue"+this.domElement.id).on("change",this.changeHSVField.createDelegate(this));Ext.getCmp("saturationValue"+this.domElement.id).on("change",this.changeHSVField.createDelegate(this));Ext.getCmp("brightnessValue"+this.domElement.id).on("change",this.changeHSVField.createDelegate(this));Ext.getCmp("colorValue"+this.domElement.id).on("change",this.changeHexaField.createDelegate(this));Ext.getCmp("redValue"+this.domElement.id).on("specialkey",this.changeRGBField.createDelegate(this));Ext.getCmp("greenValue"+this.domElement.id).on("specialkey",this.changeRGBField.createDelegate(this));Ext.getCmp("blueValue"+this.domElement.id).on("specialkey",this.changeRGBField.createDelegate(this));Ext.getCmp("hueValue"+this.domElement.id).on("specialkey",this.changeHSVField.createDelegate(this));Ext.getCmp("saturationValue"+this.domElement.id).on("specialkey",this.changeHSVField.createDelegate(this));Ext.getCmp("brightnessValue"+this.domElement.id).on("specialkey",this.changeHSVField.createDelegate(this));Ext.getCmp("colorValue"+this.domElement.id).on({specialkey:function(field,evt){if(evt.getKey()===evt.ENTER){this.changeHexaField(field,field.getValue())}},scope:this});this.checkConfig();this.addEvents({pickcolor:true,changergb:true,changehsv:true,changehexa:true})},cpCreateDomObjects:function(){this.rgbPicker=Ext.DomHelper.append(this.domElement,{tag:"div",cls:"x-cp-rgb-msk"},true);this.rgbPointer=Ext.DomHelper.append(this.rgbPicker,{tag:"div",cls:"x-cp-rgb-picker"},true);this.rgbPointer.setXY([this.rgbPicker.getLeft()-this.config.pickerHotPoint.x,this.rgbPicker.getTop()-this.config.pickerHotPoint.y]);this.huePicker=Ext.DomHelper.append(this.domElement,{tag:"div",cls:"x-cp-hue-msk"},true);this.huePointer=Ext.DomHelper.append(this.huePicker,{tag:"div",cls:"x-cp-hue-picker"},true);this.huePointer.setXY([this.huePicker.getLeft()+(this.huePointer.getWidth()/2)+1,this.huePicker.getTop()-this.config.pickerHotPoint.y]);this.formContainer=Ext.DomHelper.append(Ext.DomHelper.append(this.domElement,{tag:"div",cls:"x-cp-control-container x-unselectable"},true),{tag:"div",cls:"x-cp-rgb-container x-unselectable",style:"clear:both"},true);this.colorContainer=Ext.DomHelper.append(this.formContainer,{cls:"x-cp-coloro-container x-unselectable"},true).update(this.config.captions.color||"Color");this.form=new Ext.FormPanel({frame:true,width:"auto",height:227,cls:"x-cp-form",labelWidth:12,items:[{xtype:"fieldset",title:"RGB",autoHeight:true,style:"padding: 2px",defaultType:"numberfield",items:[{fieldLabel:"Red",id:"redValue"+this.domElement.id},{fieldLabel:"Green",id:"greenValue"+this.domElement.id},{fieldLabel:"Blue",id:"blueValue"+this.domElement.id}]},{xtype:"fieldset",title:"HSV",autoHeight:true,style:"padding: 2px",defaultType:"numberfield",items:[{fieldLabel:"Hue",id:"hueValue"+this.domElement.id},{fieldLabel:"Satur.",id:"saturationValue"+this.domElement.id},{fieldLabel:"Bright.",id:"brightnessValue"+this.domElement.id}]},{xtype:"fieldset",title:"Color",autoHeight:true,style:"padding: 2px",defaultType:"textfield",items:[{fieldLabel:"Color",id:"colorValue"+this.domElement.id}]}]});this.form.render(this.formContainer);var temp=Ext.DomHelper.append(this.form.body,{cls:"x-cp-colors-container x-unselectable"},true);this.wsColorContainer=Ext.DomHelper.append(temp,{cls:"x-cp-color-container x-unselectable"},true).update(this.config.captions.websafe||"Websafe");this.inColorContainer=Ext.DomHelper.append(temp,{cls:"x-cp-color-container x-unselectable"},true).update(this.config.captions.inverse||"Inverse");Ext.DomHelper.append(temp,{tag:"div",style:"height:0px;border:none;clear:both;font-size:1px;"});this.form.render(this.formContainer);Ext.DomHelper.append(this.domElement,{tag:"div",style:"height:0px;border:none;clear:both;font-size:1px;"})},realToDec:function(n){return Math.min(255,Math.round(n*256))},hsvToRgb:function(h,s,v){if(h instanceof Array){return this.hsvToRgb.call(this,h[0],h[1],h[2])}var r,g,b,i,f,p,q,t;i=Math.floor((h/60)%6);f=(h/60)-i;p=v*(1-s);q=v*(1-f*s);t=v*(1-(1-f)*s);switch(i){case 0:r=v;g=t;b=p;break;case 1:r=q;g=v;b=p;break;case 2:r=p;g=v;b=t;break;case 3:r=p;g=q;b=v;break;case 4:r=t;g=p;b=v;break;case 5:r=v;g=p;b=q;break}return[this.realToDec(r),this.realToDec(g),this.realToDec(b)]},rgbToHsv:function(r,g,b){if(r instanceof Array){return this.rgbToHsv.call(this,r[0],r[1],r[2])}r=r/255;g=g/255;b=b/255;var min,max,delta,h,s,v;min=Math.min(Math.min(r,g),b);max=Math.max(Math.max(r,g),b);delta=max-min;switch(max){case min:h=0;break;case r:h=60*(g-b)/delta;if(g<b){h+=360}break;case g:h=(60*(b-r)/delta)+120;break;case b:h=(60*(r-g)/delta)+240;break}s=(max===0)?0:1-(min/max);return[Math.round(h),s,max]},rgbToHex:function(r,g,b){if(r instanceof Array){return this.rgbToHex.call(this,r[0],r[1],r[2])}return this.decToHex(r)+this.decToHex(g)+this.decToHex(b)},decToHex:function(n){n=parseInt(n,10);n=(!isNaN(n))?n:0;n=(n>255||n<0)?0:n;return this.HCHARS.charAt((n-n%16)/16)+this.HCHARS.charAt(n%16)},getHCharPos:function(c){return this.HCHARS.indexOf(c.toUpperCase())},hexToDec:function(hex){var s=hex.split("");return((this.getHCharPos(s[0])*16)+this.getHCharPos(s[1]))},hexToRgb:function(hex){return[this.hexToDec(hex.substr(0,2)),this.hexToDec(hex.substr(2,2)),this.hexToDec(hex.substr(4,2))]},checkSafeNumber:function(v){if(!isNaN(v)){v=Math.min(Math.max(0,v),255);var i,next;for(i=0;i<256;i=i+51){next=i+51;if(v>=i&&v<=next){return(v-i>25)?next:i}}}return v},websafe:function(r,g,b){if(r instanceof Array){return this.websafe.call(this,r[0],r[1],r[2])}return[this.checkSafeNumber(r),this.checkSafeNumber(g),this.checkSafeNumber(b)]},invert:function(r,g,b){if(r instanceof Array){return this.invert.call(this,r[0],r[1],r[2])}return[255-r,255-g,255-b]},getHue:function(y){var hue=360-Math.round(((this.huePicker.getHeight()-y)/this.huePicker.getHeight())*360);return hue===360?0:hue},getHPos:function(hue){return hue*(this.huePicker.getHeight()/360)},getSaturation:function(x){return x/this.rgbPicker.getWidth()},getSPos:function(saturation){return saturation*this.rgbPicker.getWidth()},getValue:function(y){return(this.rgbPicker.getHeight()-y)/this.rgbPicker.getHeight()},getVPos:function(value){return this.rgbPicker.getHeight()-(value*this.rgbPicker.getHeight())},updateColorsFromRGBPicker:function(){this._HSV={h:this._HSV.h,s:this.getSaturation(this.lastXYRgb.x),v:this.getValue(this.lastXYRgb.y)}},updateColorsFromHUEPicker:function(){this._HSV.h=this.getHue(this.lastYHue);var temp=this.hsvToRgb(this._HSV.h,1,1);temp=this.rgbToHex(temp[0],temp[1],temp[2]);this.rgbPicker.setStyle({backgroundColor:"#"+temp})},updateColorsFromRGBFields:function(){var temp=this.rgbToHsv(Ext.getCmp("redValue"+this.domElement.id).getValue(),Ext.getCmp("greenValue"+this.domElement.id).getValue(),Ext.getCmp("blueValue"+this.domElement.id).getValue());this._HSV={h:temp[0],s:temp[1],v:temp[2]}},updateColorsFromHexaField:function(){var temp=this.hexToRgb(this._HEX);this._RGB={r:temp[0],g:temp[1],b:temp[2]};temp=this.rgbToHsv(temp[0],temp[1],temp[2]);this._HSV={h:temp[0],s:temp[1],v:temp[2]}},updateColorsFromHSVFields:function(){var temp=this.hsvToRgb(this._HSV.h,this._HSV.s,this._HSV.v);this._RGB={r:temp[0],g:temp[1],b:temp[2]}},updateRGBFromHSV:function(){var temp=this.hsvToRgb(this._HSV.h,this._HSV.s,this._HSV.v);this._RGB={r:temp[0],g:temp[1],b:temp[2]}},updateInputFields:function(){Ext.getCmp("redValue"+this.domElement.id).setValue(this._RGB.r);Ext.getCmp("greenValue"+this.domElement.id).setValue(this._RGB.g);Ext.getCmp("blueValue"+this.domElement.id).setValue(this._RGB.b);Ext.getCmp("hueValue"+this.domElement.id).setValue(this._HSV.h);Ext.getCmp("saturationValue"+this.domElement.id).setValue(Math.round(this._HSV.s*100));Ext.getCmp("brightnessValue"+this.domElement.id).setValue(Math.round(this._HSV.v*100));Ext.getCmp("colorValue"+this.domElement.id).setValue(this._HEX)},updateColor:function(){this._HEX=this.rgbToHex(this._RGB.r,this._RGB.g,this._RGB.b);this.colorContainer.setStyle({backgroundColor:"#"+this._HEX});this.colorContainer.set({title:"#"+this._HEX});var temp=this.rgbToHex(this.websafe(this._RGB.r,this._RGB.g,this._RGB.b));this.wsColorContainer.setStyle({backgroundColor:"#"+temp});this.wsColorContainer.set({title:"#"+temp});this.wsColorContainer.setStyle({color:"#"+this.rgbToHex(this.invert(this.websafe(this._RGB.r,this._RGB.g,this._RGB.b)))});var temp=this.rgbToHex(this.invert(this._RGB.r,this._RGB.g,this._RGB.b));this.inColorContainer.setStyle({backgroundColor:"#"+temp});this.inColorContainer.setStyle({color:"#"+this._HEX});this.inColorContainer.set({title:"#"+temp});this.colorContainer.setStyle({color:"#"+temp});this.updateInputFields();this.fireEvent("pickcolor",this,this._HEX)},updatePickers:function(){this.lastXYRgb={x:this.getSPos(this._HSV.s),y:this.getVPos(this._HSV.v)};this.rgbPointer.setXY([this.lastXYRgb.x-this.config.pickerHotPoint.x+this.rgbPicker.getLeft(),this.lastXYRgb.y-this.config.pickerHotPoint.y+this.rgbPicker.getTop()],this.config.animate);this.lastYHue=this.getHPos(this._HSV.h);this.huePointer.setXY([this.huePicker.getLeft()+(this.huePointer.getWidth()/2)+1,this.lastYHue+this.huePicker.getTop()-this.config.pickerHotPoint.y],this.config.animate);var temp=this.hsvToRgb(this._HSV.h,1,1);temp=this.rgbToHex(temp[0],temp[1],temp[2]);this.rgbPicker.setStyle({backgroundColor:"#"+temp})},rgbPickerClick:function(event,cp){this.lastXYRgb={x:event.getPageX()-this.rgbPicker.getLeft(),y:event.getPageY()-this.rgbPicker.getTop()};this.rgbPointer.setXY([event.getPageX()-this.config.pickerHotPoint.x,event.getPageY()-this.config.pickerHotPoint.y],this.config.animate);this.updateColorsFromRGBPicker();this.updateRGBFromHSV();this.updateColor()},huePickerClick:function(event,cp){this.lastYHue=event.getPageY()-this.huePicker.getTop();this.huePointer.setY([event.getPageY()-3],this.config.animate);this.updateColorsFromHUEPicker();this.updateRGBFromHSV();this.updateColor()},changeRGBField:function(element,newValue,oldValue){if(!(newValue instanceof String)){newValue=element.getValue()}if(newValue<0){newValue=0}if(newValue>255){newValue=255}if(element==Ext.getCmp("redValue"+this.domElement.id)){this._RGB.r=newValue}else{if(element==Ext.getCmp("greenValue"+this.domElement.id)){this._RGB.g=newValue}else{if(element==Ext.getCmp("blueValue"+this.domElement.id)){this._RGB.b=newValue}}}this.updateColorsFromRGBFields();this.updateColor();this.updatePickers();this.fireEvent("changergb",this,this._RGB)},changeHSVField:function(element,newValue,oldValue){if(!(newValue instanceof String)){newValue=element.getValue()}if(element==Ext.getCmp("hueValue"+this.domElement.id)){if(newValue<0){newValue=0}if(newValue>360){newValue=360}this._HSV.h=newValue}else{if(newValue<0){newValue=0}if(newValue>100){newValue=100}if(element==Ext.getCmp("saturationValue"+this.domElement.id)){this._HSV.s=(newValue/100)}else{if(element==Ext.getCmp("brightnessValue"+this.domElement.id)){this._HSV.v=(newValue/100)}}}this.updateColorsFromHSVFields();this.updateColor();this.updatePickers();this.fireEvent("changehsv",this,this._HSV)},changeHexaField:function(element,newValue,oldValue){newValue=newValue.trim().substring(0,6);if(newValue.length===3){newValue=newValue[0]+newValue[0]+newValue[1]+newValue[1]+newValue[2]+newValue[2]}if(!newValue.match(/^[0-9a-f]{6}$/i)){newValue="000000"}this._HEX=newValue;this.updateColorsFromHexaField();this.updateColor();this.updatePickers();this.fireEvent("changehexa",this,this._HEX)},setColorFromWebsafe:function(){this.setColor(this.wsColorContainer.getColor("backgroundColor","",""))},setColorFromInvert:function(){this.setColor(this.inColorContainer.getColor("backgroundColor","",""))},checkConfig:function(){if(this.config){if(this.config.color){this.setColor(this.config.color)}else{if(this.config.hsv){this.setHSV(this.config.hsv)}else{if(this.config.rgb){this.setRGB(this.config.rgb)}}}}},setColor:function(hexa){var temp=this.hexToRgb(hexa);this._RGB={r:temp[0],g:temp[1],b:temp[2]};var temp=this.rgbToHsv(temp);this._HSV={h:temp[0],s:temp[1],v:temp[2]};this.updateColor();this.updatePickers()},setRGB:function(rgb){this._RGB=rgb;var temp=this.rgbToHsv(rgb.r,rgb.g,rgb.b);this._HSV={h:temp[0],s:temp[1],v:temp[2]};this.updateColor();this.updatePickers()},setHSV:function(hsv){this._HSV={h:hsv.h,s:(hsv.s/100),v:(hsv.v/100)};var temp=this.hsvToRgb(hsv.h,(hsv.s/100),(hsv.v/100));this._RGB={r:temp[0],g:temp[1],b:temp[2]};this.updateColor();this.updatePickers()},getColor:function(hash){return(hash?"":"#")+this._HEX},getRGB:function(){return this._RGB},getHSV:function(){return this._HSV},setPanelVisible:function(show,animate){return this.formContainer.setVisible(show,animate)},isPanelVisible:function(){return this.formContainer.isDisplayed()},showPicker:function(){this.domElement.show()},hidePicker:function(){this.domElement.hide()}});Ext.ux.ColorPanel=function(config){this.config=config;this.config.renderTo=this.config.renderTo||Ext.DomHelper.append(document.body,{},true);Ext.ux.ColorPanel.superclass.constructor.call(this,config);this.domElement=Ext.get(this.config.renderTo);this.render(this.domElement);this.config.renderTo=this.body;this.initialize(this.config);this.getEl().addClass("x-cp-panel");this.domElement.removeClass("x-cp-panel");this.body.setStyle({padding:"5px"})};Ext.extend(Ext.ux.ColorPanel,Ext.Panel);Ext.applyIf(Ext.ux.ColorPanel.prototype,Ext.ux.ColorPicker.prototype);Ext.ux.ColorDialog=function(config){this.config=config;this.config.resizable=false;this.config.renderTo=this.config.renderTo||Ext.DomHelper.append(document.body,{},true);Ext.ux.ColorDialog.superclass.constructor.call(this,config);this.domElement=Ext.get(this.config.renderTo);this.render(this.domElement);this.config.renderTo=this.body;this.initialize(this.config);this.body.addClass("x-cp-panel");this.body.setStyle({padding:"5px"});this.setSize(398,300)};Ext.extend(Ext.ux.ColorDialog,Ext.Window);Ext.applyIf(Ext.ux.ColorDialog.prototype,Ext.ux.ColorPicker.prototype);Ext.namespace("Styler");Styler.ColorManager=function(config){Ext.apply(this,config)};Ext.apply(Styler.ColorManager.prototype,{field:null,init:function(field){this.register(field)},destroy:function(){if(this.field){this.unregister(this.field)}},register:function(field){if(this.field){this.unregister(this.field)}this.field=field;field.on({focus:this.fieldFocus,destroy:this.destroy,scope:this})},unregister:function(field){field.un("focus",this.fieldFocus,this);field.un("destroy",this.destroy,this);if(Styler.ColorManager.picker&&field==this.field){Styler.ColorManager.picker.un("pickcolor",this.setFieldValue,this)}this.field=null},fieldFocus:function(field){if(!Styler.ColorManager.pickerWin){Styler.ColorManager.picker=new Ext.ux.ColorPanel({hidePanel:false,autoHeight:false});Styler.ColorManager.pickerWin=new Ext.Window({title:"Color Picker",layout:"fit",closeAction:"hide",width:405,height:300,plain:true,items:Styler.ColorManager.picker})}Styler.ColorManager.picker.purgeListeners();this.setPickerValue();Styler.ColorManager.picker.on({pickcolor:this.setFieldValue,scope:this});Styler.ColorManager.pickerWin.show()},setFieldValue:function(picker,color){if(this.field.isVisible()){this.field.setValue("#"+color)}},setPickerValue:function(){var field=this.field;var hex=field.getHexValue?field.getHexValue():field.getValue();if(hex){Styler.ColorManager.picker.setColor(hex.substring(1))}}});(function(){Ext.util.Observable.observeClass(gxp.form.ColorField);gxp.form.ColorField.on({render:function(field){var manager=new Styler.ColorManager();manager.register(field)}})})();Styler.ColorManager.picker=null;Styler.ColorManager.pickerWin=null;Ext.namespace("GeoExt.ux");GeoExt.ux.PrintPreview=Ext.extend(Ext.Container,{paperSizeText:"Paper size:",resolutionText:"Resolution:",printText:"Print",emptyTitleText:"Enter map title here.",includeLegendText:"Include legend?",emptyCommentText:"Enter comments here.",creatingPdfText:"Creating PDF...",printProvider:null,sourceMap:null,printMapPanel:null,mapTitleField:"mapTitle",commentField:"comment",legend:null,includeLegend:false,mapTitle:null,comment:null,addMapOverlay:true,busyMask:null,form:null,autoEl:"center",cls:"x-panel-body x-panel-body-noheader",initComponent:function(){var printMapPanelOptions={sourceMap:this.sourceMap,printProvider:this.printProvider};if(this.printMapPanel){if(!(this.printMapPanel instanceof GeoExt.PrintMapPanel)){printMapPanelOptions.xtype="gx_printmappanel";this.printMapPanel=new GeoExt.PrintMapPanel(Ext.applyIf(this.printMapPanel,printMapPanelOptions))}}else{this.printMapPanel=new GeoExt.PrintMapPanel(printMapPanelOptions)}this.sourceMap=this.printMapPanel.sourceMap;this.printProvider=this.printMapPanel.printProvider;this.form=this.createForm();if(!this.items){this.items=[]}this.items.push(this.createToolbar(),{xtype:"container",cls:"gx-printpreview",autoHeight:this.autoHeight,autoWidth:this.autoWidth,items:[this.form,this.printMapPanel]});GeoExt.ux.PrintPreview.superclass.initComponent.call(this);this.addMapOverlay&&this.printMapPanel.add(this.createMapOverlay());this.printMapPanel.on({resize:this.updateSize,scope:this});this.on({render:function(){if(!this.busyMask){this.busyMask=new Ext.LoadMask(this.getEl(),{msg:this.creatingPdfText})}this.printProvider.on({beforeprint:this.busyMask.show,print:this.busyMask.hide,printexception:this.busyMask.hide,scope:this.busyMask})},scope:this})},createToolbar:function(){var items=[];this.printProvider.layouts.getCount()>1&&items.push(this.paperSizeText,{xtype:"combo",width:98,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider}),store:this.printProvider.layouts,displayField:"name",typeAhead:true,mode:"local",forceSelection:true,triggerAction:"all",selectOnFocus:true},"&nbsp;");this.printProvider.dpis.getCount()>1&&items.push(this.resolutionText,{xtype:"combo",width:62,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider}),store:this.printProvider.dpis,displayField:"name",tpl:'<tpl for="."><div class="x-combo-list-item">{name} dpi</div></tpl>',typeAhead:true,mode:"local",forceSelection:true,triggerAction:"all",selectOnFocus:true,setValue:function(v){v=parseInt(v)+" dpi";Ext.form.ComboBox.prototype.setValue.apply(this,arguments)}},"&nbsp;");items.push("->",{text:this.printText,iconCls:"icon-print",handler:function(){this.printMapPanel.print(this.includeLegend&&{legend:this.legend})},scope:this});return{xtype:"toolbar",items:items}},createForm:function(){var titleCfg={xtype:"textfield",name:this.mapTitleField,value:this.mapTitle,emptyText:this.emptyTitleText,margins:"0 5 0 0",flex:1,anchor:"100%",hideLabel:true,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider})};if(this.legend){var legendCheckbox=new Ext.form.Checkbox({name:"legend",checked:this.includeLegend,boxLabel:this.includeLegendText,hideLabel:true,ctCls:"gx-item-nowrap",handler:function(cb,checked){this.includeLegend=checked},scope:this})}return new Ext.form.FormPanel({autoHeight:true,border:false,defaults:{anchor:"100%"},items:[this.legend?{xtype:"container",layout:"hbox",cls:"x-form-item",items:[titleCfg,legendCheckbox]}:titleCfg,{xtype:"textarea",name:this.commentField,value:this.comment,emptyText:this.emptyCommentText,hideLabel:true,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider})}]})},createMapOverlay:function(){var map=this.printMapPanel.map;var scaleLine=new OpenLayers.Control.ScaleLine({geodesic:!(map.getProjectionObject()||new OpenLayers.Projection(map.projection||"EPSG:4326")).equals("EPSG:4326")});map.addControl(scaleLine);scaleLine.activate();return new Ext.Panel({cls:"gx-map-overlay",layout:"column",width:235,bodyStyle:"padding:5px",items:[{xtype:"box",el:scaleLine.div,width:scaleLine.maxWidth},{xtype:"container",layout:"form",style:"padding: .2em 5px 0 0;",columnWidth:1,cls:"x-small-editor x-form-item",items:{xtype:"combo",name:"scale",anchor:"100%",hideLabel:true,store:this.printMapPanel.previewScales,displayField:"name",typeAhead:true,mode:"local",forceSelection:true,triggerAction:"all",selectOnFocus:true,getListParent:function(){return this.el.up(".x-window")||document.body},plugins:new GeoExt.plugins.PrintPageField({printPage:this.printMapPanel.printPage})}},{xtype:"box",autoEl:{tag:"div",cls:"gx-northarrow"}}],listeners:{render:function(){function stop(evt){evt.stopPropagation()}this.getEl().on({click:stop,dblclick:stop,mousedown:stop})}}})},updateSize:function(){this.suspendEvents();var mapWidth=this.printMapPanel.getWidth();this.form.setWidth(mapWidth);this.form.items.get(0).setWidth(mapWidth);var minWidth=this.initialConfig.minWidth||0;this.items.get(0).setWidth(this.form.ownerCt.el.getPadding("lr")+Math.max(mapWidth,minWidth));var parent=this.ownerCt;if(parent&&parent instanceof Ext.Window){this.ownerCt.syncShadow()}this.resumeEvents()},beforeDestroy:function(){if(this.busyMask){this.printProvider.un("beforeprint",this.busyMask.show,this.busyMask);this.printProvider.un("print",this.busyMask.hide,this.busyMask)}this.printMapPanel.un("resize",this.updateSize,this);GeoExt.ux.PrintPreview.superclass.beforeDestroy.apply(this,arguments)}});Ext.reg("gxux_printpreview",GeoExt.ux.PrintPreview);Ext.USE_NATIVE_JSON=true;Ext.override(Ext.dd.DragTracker,{onMouseMove:function(e,target){if(this.active&&Ext.isIE&&!Ext.isIE9&&!e.browserEvent.button){e.preventDefault();this.onMouseUp(e);return}e.preventDefault();var xy=e.getXY(),s=this.startXY;this.lastXY=xy;if(!this.active){if(Math.abs(s[0]-xy[0])>this.tolerance||Math.abs(s[1]-xy[1])>this.tolerance){this.triggerStart(e)}else{return}}this.fireEvent("mousemove",this,e);this.onDrag(e);this.fireEvent("drag",this,e)}});(function(){Ext.preg("gx_wmssource",gxp.plugins.WMSSource);Ext.preg("gx_olsource",gxp.plugins.OLSource);Ext.preg("gx_googlesource",gxp.plugins.GoogleSource);Ext.preg("gx_bingsource",gxp.plugins.BingSource);Ext.preg("gx_osmsource",gxp.plugins.OSMSource);Ext.preg("gxp_layertree",gxp.plugins.LayerManager)})();var GeoExplorer=Ext.extend(gxp.Viewer,{zoomSliderText:"<div>Zoom Level: {zoom}</div><div>Scale: 1:{scale}</div>",loadConfigErrorText:"Trouble reading saved configuration: <br />",loadConfigErrorDefaultText:"Server Error.",xhrTroubleText:"Communication Trouble: Status ",layersText:"Layers",titleText:"Title",bookmarkText:"Bookmark URL",permakinkText:"Permalink",appInfoText:"GeoExplorer",aboutText:"About GeoExplorer",mapInfoText:"Map Info",descriptionText:"Description",contactText:"Contact",aboutThisMapText:"About this Map",aboutUrl:"../about.html",mapPanel:null,constructor:function(config){this.mapItems=[{xtype:"gxp_scaleoverlay"},{xtype:"gx_zoomslider",vertical:true,height:100,plugins:new GeoExt.ZoomSliderTip({template:this.zoomSliderText})}];config.viewerTools=[{hidden:true,actions:["layerchooser"],checked:true},{hidden:true,actions:["-"],checked:true},{leaf:true,text:gxp.plugins.Print.prototype.tooltip,ptype:"gxp_print",iconCls:"gxp-icon-print",customParams:{outputFilename:"GeoExplorer-print"},printService:config.printService,checked:true},{leaf:true,text:gxp.plugins.Navigation.prototype.tooltip,checked:true,iconCls:"gxp-icon-pan",ptype:"gxp_navigation",toggleGroup:"navigation"},{leaf:true,text:gxp.plugins.WMSGetFeatureInfo.prototype.infoActionTip,checked:true,iconCls:"gxp-icon-getfeatureinfo",ptype:"gxp_wmsgetfeatureinfo",format:"grid",toggleGroup:"interaction"},{leaf:true,text:gxp.plugins.Measure.prototype.measureTooltip,checked:true,iconCls:"gxp-icon-measure-length",ptype:"gxp_measure",controlOptions:{immediate:true},toggleGroup:"interaction"},{leaf:true,text:gxp.plugins.Zoom.prototype.zoomInTooltip+" / "+gxp.plugins.Zoom.prototype.zoomOutTooltip,checked:true,iconCls:"gxp-icon-zoom-in",ptype:"gxp_zoom"},{leaf:true,text:gxp.plugins.NavigationHistory.prototype.previousTooltip+" / "+gxp.plugins.NavigationHistory.prototype.nextTooltip,checked:true,iconCls:"gxp-icon-zoom-previous",ptype:"gxp_navigationhistory"},{leaf:true,text:gxp.plugins.ZoomToExtent.prototype.tooltip,checked:true,iconCls:gxp.plugins.ZoomToExtent.prototype.iconCls,ptype:"gxp_zoomtoextent"},{leaf:true,text:gxp.plugins.Legend.prototype.tooltip,checked:true,iconCls:"gxp-icon-legend",ptype:"gxp_legend"},{leaf:true,text:gxp.plugins.GoogleEarth.prototype.tooltip,checked:true,iconCls:"gxp-icon-googleearth",ptype:"gxp_googleearth"},{hidden:true,actions:["->"],checked:true},{hidden:true,actions:["aboutbutton"],checked:true}];GeoExplorer.superclass.constructor.apply(this,arguments)},loadConfig:function(config){var mapUrl=window.location.hash.substr(1);var match=mapUrl.match(/^maps\/(\d+)$/);if(match){this.id=Number(match[1]);Ext.Ajax.request({url:"../"+mapUrl,success:function(request){var addConfig=Ext.util.JSON.decode(request.responseText);delete addConfig.tools;this.applyConfig(Ext.applyIf(addConfig,config))},failure:function(request){var obj;try{obj=Ext.util.JSON.decode(request.responseText)}catch(err){}var msg=this.loadConfigErrorText;if(obj&&obj.error){msg+=obj.error}else{msg+=this.loadConfigErrorDefaultText}this.on({ready:function(){this.displayXHRTrouble(msg,request.status)},scope:this});delete this.id;window.location.hash="";this.applyConfig(config)},scope:this})}else{var query=Ext.urlDecode(document.location.search.substr(1));if(query){if(query.q){var queryConfig=Ext.util.JSON.decode(query.q);Ext.apply(config,queryConfig)}if(query.layers){var layers=query.layers.split(/\s*,\s*/);for(var i=0,ii=layers.length;i<ii;++i){config.map.layers.push({source:"local",name:layers[i],visibility:true,bbox:query.lazy&&query.bbox?query.bbox.split(","):undefined})}}if(query.bbox){delete config.map.zoom;delete config.map.center;config.map.extent=query.bbox.split(/\s*,\s*/)}if(query.lazy&&config.sources.local){config.sources.local.requiredProperties=[]}}this.applyConfig(config)}},displayXHRTrouble:function(msg,status){Ext.Msg.show({title:this.xhrTroubleText+status,msg:msg,icon:Ext.MessageBox.WARNING})},initPortal:function(){this.createTools();GeoExplorer.superclass.initPortal.apply(this,arguments)},createTools:function(){new Ext.Button({id:"aboutbutton",text:this.appInfoText,iconCls:"icon-geoexplorer",handler:this.displayAppInfo,scope:this})},showUrl:function(request){if(request.status==200){var win=new Ext.Window({title:this.bookmarkText,layout:"form",labelAlign:"top",modal:true,bodyStyle:"padding: 5px",width:300,items:[{xtype:"textfield",fieldLabel:this.permakinkText,readOnly:true,anchor:"100%",selectOnFocus:true,value:window.location.href}]});win.show();win.items.first().selectText()}else{var response=Ext.util.JSON.decode(request.responseText);this.displayXHRTrouble(response.error,request.status)}},getBookmark:function(){var params=Ext.apply(OpenLayers.Util.getParameters(),{q:Ext.util.JSON.encode(this.getState())});var url=document.location.href.split("?").shift()+"?"+Ext.urlEncode(params);return url},displayAppInfo:function(){var appInfo=new Ext.Panel({title:this.appInfoText,html:"<iframe style='border: none; height: 100%; width: 100%' src='"+this.aboutUrl+"' frameborder='0' border='0'><a target='_blank' href='"+this.aboutUrl+"'>"+this.aboutText+"</a> </iframe>"});var about=Ext.applyIf(this.about,{title:"","abstract":"",contact:""});var mapInfo=new Ext.Panel({title:this.mapInfoText,html:'<div class="gx-info-panel"><h2>'+this.titleText+"</h2><p>"+about.title+"</p><h2>"+this.descriptionText+"</h2><p>"+about["abstract"]+"</p> <h2>"+this.contactText+"</h2><p>"+about.contact+"</p></div>",height:"auto",width:"auto"});var tabs=new Ext.TabPanel({activeTab:0,items:[mapInfo,appInfo]});var win=new Ext.Window({title:this.aboutThisMapText,modal:true,layout:"fit",width:300,height:300,items:[tabs]});win.show()},getState:function(){var state=GeoExplorer.superclass.getState.apply(this,arguments);delete state.tools;return state}});GeoExplorer.Composer=Ext.extend(GeoExplorer,{cookieParamName:"geoexplorer-user",mapText:"Map",saveMapText:"Save map",exportMapText:"Export map",toolsTitle:"Choose tools to include in the toolbar:",previewText:"Preview",backText:"Back",nextText:"Next",loginText:"Login",logoutText:"Logout, {user}",loginErrorText:"Invalid username or password.",userFieldText:"User",passwordFieldText:"Password",tableText:"Table",queryText:"Query",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?",constructor:function(config){if(config.authStatus===401){this.authorizedRoles=[]}else{if(config.authStatus!==404){this.authorizedRoles=["ROLE_ADMINISTRATOR"]}}delete config.authStatus;config.tools=[{ptype:"gxp_layermanager",outputConfig:{id:"layers",tbar:[],autoScroll:true},outputTarget:"tree"},{ptype:"gxp_addlayers",actionTarget:"layers.tbar",outputTarget:"tree",uploadSource:"local",postUploadAction:{plugin:"styler"},catalogSourceKey:"local",search:{selectedSource:"csw"}},{ptype:"gxp_removelayer",actionTarget:["layers.tbar","layers.contextMenu"]},{ptype:"gxp_layerproperties",id:"layerproperties",outputConfig:{defaults:{autoScroll:true},width:320},actionTarget:["layers.tbar","layers.contextMenu"],outputTarget:"tree"},{ptype:"gxp_styler",id:"styler",outputConfig:{autoScroll:true,width:320},actionTarget:["layers.tbar","layers.contextMenu"],outputTarget:"tree"},{ptype:"gxp_zoomtolayerextent",actionTarget:{target:"layers.contextMenu",index:0}},{ptype:"gxp_googleearth",actionTarget:["map.tbar","globe.tbar"]},{ptype:"gxp_navigation",toggleGroup:"navigation"},{ptype:"gxp_zoom",toggleGroup:"navigation",showZoomBoxAction:true,controlOptions:{zoomOnClick:false}},{ptype:"gxp_navigationhistory"},{ptype:"gxp_zoomtoextent"},{actions:["aboutbutton"],actionTarget:"paneltbar"},{actions:["-"],actionTarget:"paneltbar"},{actions:["mapmenu"],actionTarget:"paneltbar"},{ptype:"gxp_print",customParams:{outputFilename:"GeoExplorer-print"},printService:config.printService,actionTarget:"paneltbar",showButtonText:true},{actions:["-"],actionTarget:"paneltbar"},{ptype:"gxp_wmsgetfeatureinfo",format:"grid",toggleGroup:"interaction",showButtonText:true,actionTarget:"paneltbar"},{ptype:"gxp_featuremanager",id:"querymanager",selectStyle:{cursor:""},autoLoadFeatures:true,maxFeatures:50,paging:true,pagingType:gxp.plugins.FeatureManager.WFS_PAGING},{ptype:"gxp_queryform",featureManager:"querymanager",autoExpand:"query",actionTarget:"paneltbar",outputTarget:"query"},{ptype:"gxp_featuregrid",featureManager:"querymanager",showTotalResults:true,autoLoadFeature:false,alwaysDisplayOnMap:true,controlOptions:{multiple:true},displayMode:"selected",outputTarget:"table",outputConfig:{id:"featuregrid",columnsSortable:false}},{ptype:"gxp_zoomtoselectedfeatures",featureManager:"querymanager",actionTarget:["featuregrid.contextMenu","featuregrid.bbar"]},{ptype:"gxp_measure",toggleGroup:"interaction",controlOptions:{immediate:true},showButtonText:true,actionTarget:"paneltbar"},{ptype:"gxp_featuremanager",id:"featuremanager",maxFeatures:20,paging:false},{ptype:"gxp_featureeditor",featureManager:"featuremanager",autoLoadFeature:true,splitButton:true,showButtonText:true,toggleGroup:"interaction",actionTarget:"paneltbar"},{actions:["->"],actionTarget:"paneltbar"},{actions:["loginbutton"],actionTarget:"paneltbar"}];GeoExplorer.Composer.superclass.constructor.apply(this,arguments)},loadConfig:function(config){GeoExplorer.Composer.superclass.loadConfig.apply(this,arguments);var query=Ext.urlDecode(document.location.search.substr(1));if(query&&query.styler){for(var i=config.map.layers.length-1;i>=0;--i){delete config.map.layers[i].selected}config.map.layers.push({source:"local",name:query.styler,selected:true,bbox:query.lazy&&query.bbox?query.bbox.split(","):undefined});this.on("layerselectionchange",function(rec){var styler=this.tools.styler,layer=rec.getLayer(),extent=layer.maxExtent;if(extent&&!query.bbox){this.mapPanel.map.zoomToExtent(extent)}this.doAuthorized(styler.roles,styler.addOutput,styler)},this,{single:true})}},setCookieValue:function(param,value){document.cookie=param+"="+escape(value)},clearCookieValue:function(param){document.cookie=param+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/"},getCookieValue:function(param){var i,x,y,cookies=document.cookie.split(";");for(i=0;i<cookies.length;i++){x=cookies[i].substr(0,cookies[i].indexOf("="));y=cookies[i].substr(cookies[i].indexOf("=")+1);x=x.replace(/^\s+|\s+$/g,"");if(x==param){return unescape(y)}}return null},logout:function(){var callback=function(){this.clearCookieValue("JSESSIONID");this.clearCookieValue(this.cookieParamName);this.setAuthorizedRoles([]);window.location.reload()};Ext.Msg.show({title:this.logoutConfirmTitle,msg:this.logoutConfirmMessage,buttons:Ext.Msg.YESNOCANCEL,icon:Ext.MessageBox.WARNING,fn:function(btn){if(btn==="yes"){this.save(callback,this)}else{if(btn==="no"){callback.call(this)}}},scope:this})},authenticate:function(){var panel=new Ext.FormPanel({url:"../login/",frame:true,labelWidth:60,defaultType:"textfield",errorReader:{read:function(response){var success=false;var records=[];if(response.status===200){success=true}else{records=[{data:{id:"username",msg:this.loginErrorText}},{data:{id:"password",msg:this.loginErrorText}}]}return{success:success,records:records}}},items:[{fieldLabel:this.userFieldText,name:"username",width:137,allowBlank:false,listeners:{render:function(){this.focus(true,100)}}},{fieldLabel:this.passwordFieldText,name:"password",width:137,inputType:"password",allowBlank:false}],buttons:[{text:this.loginText,formBind:true,handler:submitLogin,scope:this}],keys:[{key:[Ext.EventObject.ENTER],handler:submitLogin,scope:this}]});function submitLogin(){panel.buttons[0].disable();panel.getForm().submit({success:function(form,action){Ext.getCmp("paneltbar").items.each(function(tool){if(tool.needsAuthorization===true){tool.enable()}});var user=form.findField("username").getValue();this.setCookieValue(this.cookieParamName,user);this.setAuthorizedRoles(["ROLE_ADMINISTRATOR"]);this.showLogout(user);win.un("beforedestroy",this.cancelAuthentication,this);win.close()},failure:function(form,action){this.authorizedRoles=[];panel.buttons[0].enable();form.markInvalid({username:this.loginErrorText,password:this.loginErrorText})},scope:this})}var win=new Ext.Window({title:this.loginText,layout:"fit",width:235,height:130,plain:true,border:false,modal:true,items:[panel],listeners:{beforedestroy:this.cancelAuthentication,scope:this}});win.show()},applyLoginState:function(iconCls,text,handler,scope){var loginButton=Ext.getCmp("loginbutton");loginButton.setIconClass(iconCls);loginButton.setText(text);loginButton.setHandler(handler,scope)},showLogin:function(){var text=this.loginText;var handler=this.authenticate;this.applyLoginState("login",text,handler,this)},showLogout:function(user){var text=new Ext.Template(this.logoutText).applyTemplate({user:user});var handler=this.logout;this.applyLoginState("logout",text,handler,this)},initPortal:function(){var westPanel=new gxp.CrumbPanel({id:"tree",region:"west",width:320,split:true,collapsible:true,collapseMode:"mini",hideCollapseTool:true,header:false});var southPanel=new Ext.Panel({region:"south",id:"south",height:220,border:false,split:true,collapsible:true,collapseMode:"mini",collapsed:true,hideCollapseTool:true,header:false,layout:"border",items:[{region:"center",id:"table",title:this.tableText,layout:"fit"},{region:"west",width:320,id:"query",title:this.queryText,split:true,collapsible:true,collapseMode:"mini",collapsed:true,hideCollapseTool:true,layout:"fit"}]});var toolbar=new Ext.Toolbar({disabled:true,id:"paneltbar",items:[]});this.on("ready",function(){var disabled=toolbar.items.filterBy(function(item){return item.initialConfig&&item.initialConfig.disabled});toolbar.enable();disabled.each(function(item){item.disable()})});var googleEarthPanel=new gxp.GoogleEarthPanel({mapPanel:this.mapPanel,id:"globe",tbar:[],listeners:{beforeadd:function(record){return record.get("group")!=="background"}}});var preGoogleDisabled=[];googleEarthPanel.on("show",function(){preGoogleDisabled.length=0;toolbar.items.each(function(item){if(item.disabled){preGoogleDisabled.push(item)}});toolbar.disable();for(var key in this.tools){var tool=this.tools[key];if(tool.outputTarget==="map"){tool.removeOutput()}}var layersContainer=Ext.getCmp("tree");var layersToolbar=layersContainer&&layersContainer.getTopToolbar();if(layersToolbar){layersToolbar.items.each(function(item){if(item.disabled){preGoogleDisabled.push(item)}});layersToolbar.disable()}},this);googleEarthPanel.on("hide",function(){toolbar.enable();var layersContainer=Ext.getCmp("tree");var layersToolbar=layersContainer&&layersContainer.getTopToolbar();if(layersToolbar){layersToolbar.enable()}for(var i=0,ii=preGoogleDisabled.length;i<ii;++i){preGoogleDisabled[i].disable()}},this);this.mapPanelContainer=new Ext.Panel({layout:"card",region:"center",defaults:{border:false},items:[this.mapPanel,googleEarthPanel],activeItem:0});this.portalItems=[{region:"center",layout:"border",tbar:toolbar,items:[this.mapPanelContainer,westPanel,southPanel]}];GeoExplorer.Composer.superclass.initPortal.apply(this,arguments)},createTools:function(){GeoExplorer.Composer.superclass.createTools.apply(this,arguments);new Ext.Button({id:"loginbutton"});if(this.authorizedRoles){if(this.authorizedRoles.length===0){this.showLogin()}else{var user=this.getCookieValue(this.cookieParamName);if(user===null){user="unknown"}this.showLogout(user)}}new Ext.Button({id:"mapmenu",text:this.mapText,iconCls:"icon-map",menu:new Ext.menu.Menu({items:[{text:this.exportMapText,handler:function(){this.doAuthorized(["ROLE_ADMINISTRATOR"],function(){this.save(this.showEmbedWindow)},this)},scope:this,iconCls:"icon-export"},{text:this.saveMapText,handler:function(){this.doAuthorized(["ROLE_ADMINISTRATOR"],function(){this.save(this.showUrl)},this)},scope:this,iconCls:"icon-save"}]})})},openPreview:function(embedMap){var preview=new Ext.Window({title:this.previewText,layout:"fit",resizable:false,items:[{border:false,html:embedMap.getIframeHTML()}]});preview.show();var body=preview.items.get(0).body;var iframe=body.dom.firstChild;var loading=new Ext.LoadMask(body);loading.show();Ext.get(iframe).on("load",function(){loading.hide()})},showEmbedWindow:function(){var toolsArea=new Ext.tree.TreePanel({title:this.toolsTitle,autoScroll:true,root:{nodeType:"async",expanded:true,children:this.viewerTools},rootVisible:false,id:"geobuilder-0"});var previousNext=function(incr){var l=Ext.getCmp("geobuilder-wizard-panel").getLayout();var i=l.activeItem.id.split("geobuilder-")[1];var next=parseInt(i,10)+incr;l.setActiveItem(next);Ext.getCmp("wizard-prev").setDisabled(next==0);Ext.getCmp("wizard-next").setDisabled(next==1);if(incr==1){this.save()}};var embedMap=new gxp.EmbedMapDialog({id:"geobuilder-1",url:"../viewer/#maps/"+this.id});var wizard={id:"geobuilder-wizard-panel",border:false,layout:"card",activeItem:0,defaults:{border:false,hideMode:"offsets"},bbar:[{id:"preview",text:this.previewText,handler:function(){this.save(this.openPreview.createDelegate(this,[embedMap]))},scope:this},"->",{id:"wizard-prev",text:this.backText,handler:previousNext.createDelegate(this,[-1]),scope:this,disabled:true},{id:"wizard-next",text:this.nextText,handler:previousNext.createDelegate(this,[1]),scope:this}],items:[toolsArea,embedMap]};new Ext.Window({layout:"fit",width:500,height:300,title:this.exportMapText,items:[wizard]}).show()}});Ext.namespace("GeoExplorer");GeoExplorer.Viewer=Ext.extend(GeoExplorer,{applyConfig:function(config){var allTools=config.viewerTools||this.viewerTools;var tools=[];var toolConfig;for(var i=0,len=allTools.length;i<len;i++){var tool=allTools[i];if(tool.checked===true){var properties=["checked","iconCls","id","leaf","loader","text"];for(var key in properties){delete tool[properties[key]]}toolConfig=Ext.applyIf({actionTarget:"paneltbar"},tool);tools.push(toolConfig)}}config.tools=tools;GeoExplorer.Viewer.superclass.applyConfig.call(this,config)},initPortal:function(){this.toolbar=new Ext.Toolbar({disabled:true,id:"paneltbar"});this.on("ready",function(){this.toolbar.enable()},this);this.mapPanelContainer=new Ext.Panel({layout:"card",region:"center",defaults:{border:false},items:[this.mapPanel,new gxp.GoogleEarthPanel({mapPanel:this.mapPanel,listeners:{beforeadd:function(record){return record.get("group")!=="background"}}})],activeItem:0});this.portalItems=[{region:"center",layout:"border",tbar:this.toolbar,items:[this.mapPanelContainer]}];GeoExplorer.Viewer.superclass.initPortal.apply(this,arguments)},createTools:function(){GeoExplorer.Viewer.superclass.createTools.apply(this,arguments);Ext.getCmp("aboutbutton").setText(null).setIconClass("icon-about");new Ext.Button({id:"layerchooser",tooltip:"Layer Switcher",iconCls:"icon-layer-switcher",menu:new gxp.menu.LayerMenu({layers:this.mapPanel.layers})})}});Ext.namespace("GeoExt");GeoExt.Lang=new (Ext.extend(Ext.util.Observable,{locale:navigator.language||navigator.userLanguage,dict:null,constructor:function(){this.addEvents("localize");this.dict={};Ext.util.Observable.constructor.apply(this,arguments)},add:function(locale,lookup){var obj=this.dict[locale];if(!obj){this.dict[locale]=Ext.apply({},lookup)}else{for(var key in lookup){obj[key]=Ext.apply(obj[key]||{},lookup[key])}}if(!locale||locale===this.locale){this.set(locale)}else{if(this.locale.indexOf(locale+"-")===0){this.set(this.locale)}}},set:function(locale){var tags=locale?locale.split("-"):[];var id="";var lookup={},parent;for(var i=0,ii=tags.length;i<ii;++i){id+=(id&&"-"||"")+tags[i];if(id in this.dict){parent=this.dict[id];for(var str in parent){if(str in lookup){Ext.apply(lookup[str],parent[str])}else{lookup[str]=Ext.apply({},parent[str])}}}}for(var str in lookup){var obj=window;var parts=str.split(".");var missing=false;for(var i=0,ii=parts.length;i<ii;++i){var name=parts[i];if(name in obj){obj=obj[name]}else{missing=true;break}}if(!missing){Ext.apply(obj,lookup[str])}}this.locale=locale;this.fireEvent("localize",locale)}}))();GeoExt.Lang.add("ca",{"GeoExplorer.prototype":{zoomSliderText:"<div>Grau de detall: {zoom}</div><div>Escala: 1:{scale}</div>",loadConfigErrorText:"Problemes llegint la configuració desada: <br />",loadConfigErrorDefaultText:"Error del servidor.",xhrTroubleText:"Problemes de comunicació. Estat ",layersText:"Capes",titleText:"Títol",bookmarkText:"URL del marcador",permakinkText:"Enllaç permanent",appInfoText:"GeoExplorer",aboutText:"Quant a GeoExplorer",mapInfoText:"Informació del mapa",descriptionText:"Descripció",contactText:"Contacte",aboutThisMapText:"Quant a aquest mapa"},"GeoExplorer.Composer.prototype":{mapText:"Mapa",tableText:"Table",queryText:"Query",exportMapText:"Exporta el Mapa",saveMapText:"Desa el Mapa",toolsTitle:"Escolliu els elements que desitgeu incloure a la barra d'eines:",previewText:"Vista prèvia",backText:"Anterior",nextText:"Següent",loginText:"Login",loginErrorText:"Invalid username or password.",userFieldText:"User",passwordFieldText:"Password",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?"}});GeoExt.Lang.add("de",{"GeoExplorer.prototype":{zoomSliderText:"<div>Zoomstufe: {zoom}</div><div>Maßstab: 1:{scale}</div>",loadConfigErrorText:"Gespeicherte Konfiguration kann nicht gelesen werden: <br />",loadConfigErrorDefaultText:"Server Fehler.",xhrTroubleText:"Kommunikationsfehler: Status ",layersText:"Layer",titleText:"Titel",zoomLevelText:"Zoomstufe",bookmarkText:"Bookmark URL",permakinkText:"Permalink",appInfoText:"GeoExplorer",aboutText:"Über GeoExplorer",mapInfoText:"Karteninfo",descriptionText:"Beschreibung",contactText:"Kontakt",aboutThisMapText:"Über diese Karte"},"GeoExplorer.Composer.prototype":{mapText:"Karte",tableText:"Tabelle",queryText:"Abfrage",exportMapText:"Karte veröffentlichen",saveMapText:"Karte speichern",toolsTitle:"Werkzeuge, die in der Werkzeugleiste zur Verfügung stehen sollen:",previewText:"Vorschau",backText:"Zurück",nextText:"Weiter",loginText:"Login",loginErrorText:"Ungültiger Benutzername oder ungültiges Kennwort.",userFieldText:"Benutzer",passwordFieldText:"Kennwort",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?"}});GeoExt.Lang.add("en",{"GeoExplorer.prototype":{zoomSliderText:"<div>Zoom Level: {zoom}</div><div>Scale: 1:{scale}</div>",loadConfigErrorText:"Trouble reading saved configuration: <br />",loadConfigErrorDefaultText:"Server Error.",xhrTroubleText:"Communication Trouble: Status ",layersText:"Layers",titleText:"Title",zoomLevelText:"Zoom level",bookmarkText:"Bookmark URL",permakinkText:"Permalink",appInfoText:"GeoExplorer",aboutText:"About GeoExplorer",mapInfoText:"Map info",descriptionText:"Description",contactText:"Contact",aboutThisMapText:"About this map"},"GeoExplorer.Composer.prototype":{mapText:"Map",tableText:"Table",queryText:"Query",exportMapText:"Publish map",saveMapText:"Save map",toolsTitle:"Choose tools to include in the toolbar:",previewText:"Preview",backText:"Back",nextText:"Next",loginText:"Login",loginErrorText:"Invalid username or password.",userFieldText:"User",passwordFieldText:"Password",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?"}});GeoExt.Lang.add("es",{"GeoExplorer.prototype":{zoomSliderText:"<div>Nivel de detalle: {zoom}</div><div>Escala: 1:{scale}</div>",loadConfigErrorText:"Problemas leyendo la configuración guardada: <br />",loadConfigErrorDefaultText:"Error del servidor.",xhrTroubleText:"Problemas de comunicación: Estado ",layersText:"Capas",titleText:"Título",bookmarkText:"URL del marcador",permakinkText:"Enlace permanente",appInfoText:"GeoExplorer",aboutText:"Acerca de GeoExplorer",mapInfoText:"Información del mapa",descriptionText:"Descripción",contactText:"Contacto",aboutThisMapText:"Acerca de este mapa"},"GeoExplorer.Composer.prototype":{mapText:"Mapa",tableText:"Table",queryText:"Query",exportMapText:"Exportar Mapa",saveMapText:"Guardar Mapa",toolsTitle:"Escoja los elementos que desea incluir en la barra de herramientas:",previewText:"Vista previa",backText:"Anterior",nextText:"Siguiente",loginText:"Login",loginErrorText:"Invalid username or password.",userFieldText:"User",passwordFieldText:"Password",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?"}});GeoExt.Lang.add("fr",{"GeoExplorer.prototype":{zoomSliderText:"<div> Niveau de zoom: {zoom}</div><div Echelle: 1:{scale}</div>",loadConfigErrorText:"Difficulté à lire configuration enregistrée: <br>",loadConfigErrorDefaultText:"Erreur du serveur.",xhrTroubleText:"Trouble de la communication: état",layersText:"Layers",titleText:"Titre",bookmarkText:"Mettre en favori URL",permakinkText:"Permalink",appInfoText:"GeoExplorer",aboutText:"À propos de GeoExplorer",mapInfoText:"Info carte",descriptionText:"Description",contactText:"Contact",aboutThisMapText:"À propos de cette carte"},"GeoExplorer.Composer.prototype":{mapText:"Carte",tableText:"Table",queryText:"Query",exportMapText:"Carte Export",saveMapText:"Enregistrez la carte",toolsTitle:"Choose tools to include in the toolbar:",previewText:"Preview",backText:"Back",nextText:"Next",loginText:"Login",loginErrorText:"Invalid username or password.",userFieldText:"User",passwordFieldText:"Password",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?"}});GeoExt.Lang.add("no",{"GeoExplorer.prototype":{zoomSliderText:"<div>Zoom nivå: {zoom}</div><div>Målestokk: 1:{scale}</div>",loadConfigErrorText:"Problemer med å lese lagret konfigurasjon: <br />",loadConfigErrorDefaultText:"Server Feil.",xhrTroubleText:"Kommunikasjons Problem: Status ",layersText:"Kartlag",titleText:"Titel",zoomLevelText:"Zoom nivå",bookmarkText:"Bokmerk URL",permakinkText:"Permalenke",appInfoText:"GeoExplorer",aboutText:"Om GeoExplorer",mapInfoText:"Kart Info",descriptionText:"Beskrivelse",contactText:"Kontakt",aboutThisMapText:"Om dette kartet"},"GeoExplorer.Composer.prototype":{mapText:"Kart",tableText:"Tabell",queryText:"Spørring",exportMapText:"Publiser kart",saveMapText:"Lagre kart",toolsTitle:"Velg verktøy og legge til i verktøyslinjen:",previewText:"Forhåndsvisning",backText:"Tilbake",nextText:"Neste",loginText:"Login",loginErrorText:"Ugylding brukernavn eller passord.",userFieldText:"Bruker",passwordFieldText:"Passord",logoutConfirmTitle:"Advarsel",logoutConfirmMessage:"Logge ut vil fjerne siste endringer, fjerne kartlag du har lagt til, og tilbakestille kart komposisjonen. Vil du lagre din komposisjon først?"}});GeoExt.Lang.add("ca",{"gxp.menu.LayerMenu.prototype":{layerText:"Capa"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Afegeix Capes",addActionTip:"Afegeix Capes",addServerText:"Afegeix servidor",addButtonText:"Afegeix Capes",untitledText:"Sense Títol",addLayerSourceErrorText:"Error obtenint les capabilities del WMS ({msg}).\nSi us plau, comproveu la URL i torneu-ho a intentar.",availableLayersText:"Capes disponibles",expanderTemplateText:"<p><b>Resum:</b> {abstract}</p>",panelTitleText:"Títol",layerSelectionText:"Veure dades disponibles de:",doneText:"Fet",uploadText:"Puja dades",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Capes Bing",roadTitle:"Bing Carrerer",aerialTitle:"Bing Fotografia Aèria",labeledAerialTitle:"Bing Fotografia Aèria amb Etiquetes"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Crea nou element",editFeatureActionTip:"Edita element existent",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Mostra al mapa",firstPageTip:"Primera pàgina",previousPageTip:"Pàgina anterior",zoomPageExtentTip:"Ajusta vista a l'extensió de la pàgina",nextPageTip:"Pàgina següent",lastPageTip:"Pàgina anterior",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"Vista 3D",tooltip:"Vista 3D"},"gxp.plugins.GoogleSource.prototype":{title:"Capes Google",roadmapAbstract:"Mostra carrerer",satelliteAbstract:"Mostra imatges de satèl·lit",hybridAbstract:"Mostra imatges amb noms de carrer",terrainAbstract:"Mostra carrerer amb terreny"},"gxp.plugins.LayerProperties.prototype":{menuText:"Propietats de la capa",toolTip:"Propietats de la capa"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Capes",rootNodeText:"Capes",overlayNodeText:"Capes addicionals",baseNodeText:"Capa base"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Capa base"},"gxp.plugins.Legend.prototype":{menuText:"Mostra Llegenda",tooltip:"Mostra Llegenda"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Loading Map..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Mesura",lengthMenuText:"Longitud",areaMenuText:"Àrea",lengthTooltip:"Mesura Longitud",areaTooltip:"Mesura Àrea",measureTooltip:"Mesura"},"gxp.plugins.Navigation.prototype":{menuText:"Desplaça mapa",tooltip:"Desplaça mapa"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Vista anterior",nextMenuText:"Vista següent",previousTooltip:"Vista anterior",nextTooltip:"Vista següent"},"gxp.plugins.OSMSource.prototype":{title:"Capes OpenStreetMap",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Daded CC-By-SA de <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Imprimeix",menuText:"Imprimeix mapa",tooltip:"Imprimeix mapa",previewText:"Vista prèvia",notAllNotPrintableText:"No es poden imprimir totes les capes",nonePrintableText:"No es pot imprimir cap de les capes del mapa"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Layers",osmAttribution:"Tessel·les cortesia de <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tessel·les cortesia de <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imatge"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Consulta",queryMenuText:"Consulta layer",queryActionTip:"Consulta la capa sel·leccionada",queryByLocationText:"Query by current map extent",queryByAttributesText:"Consulta per atributs",queryMsg:"Consultant...",cancelButtonText:"Cancel·la",noFeaturesTitle:"Sense coincidències",noFeaturesMessage:"La vostra consulta no ha produït resultats."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Elimina Capa",removeActionTip:"Elimina Capa"},"gxp.plugins.Styler.prototype":{menuText:"Edita Estils",tooltip:"Gestiona els estils de les capes"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Consulta elements",popupTitle:"Informació dels elements"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Apropa",zoomOutMenuText:"Allunya",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Apropa",zoomOutTooltip:"Allunya"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Mostra l'extensió total",tooltip:"Mostra l'extensió total"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Mostra tota la capa",tooltip:"Mostra tota la capa"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Mostra tota la capa",tooltip:"Mostra tota la capa"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Mostra els elements seleccionats",tooltip:"Mostra els elements seleccionats"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Desitgeu desar els canvis?",closeMsg:"Els canvis en aquest element no s'han desat. Desitja desar-los?",deleteMsgTitle:"Desitgeu esborrar l'element?",deleteMsg:"Esteu segurs de voler esborrar aquest element?",editButtonText:"Edita",editButtonTooltip:"Fes que aquest element sigui editable",deleteButtonText:"Esborra",deleteButtonTooltip:"Esborra aquest element",cancelButtonText:"Cancel·la",cancelButtonTooltip:"Deixa d'editar, descarta els canvis",saveButtonText:"Desa",saveButtonTooltip:"Desa els canvis"},"gxp.FillSymbolizer.prototype":{fillText:"Farcit",colorText:"Color",opacityText:"Opacitat"},"gxp.FilterBuilder.prototype":{builderTypeNames:["alguna de","totes","cap de","no totes"],preComboText:"Acompleix",postComboText:"les condicions següents:",addConditionText:"afegeix condició",addGroupText:"afegeix grup",removeConditionText:"treu condició"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Nom",titleHeaderText:"Títol",queryableHeaderText:"Consultable",layerSelectionLabel:"Llista les capes de:",layerAdditionLabel:"o afegeix un altre servidor.",expanderTemplateText:"<p><b>Resum:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"cercle",graphicSquareText:"quadrat",graphicTriangleText:"triangle",graphicStarText:"estrella",graphicCrossText:"creu",graphicXText:"x",graphicExternalText:"extern",urlText:"URL",opacityText:"opacitat",symbolText:"Símbol",sizeText:"Mides",rotationText:"Gir"},"gxp.QueryPanel.prototype":{queryByLocationText:"Consulta per lloc",currentTextText:"Vista actual",queryByAttributesText:"Consulta per atributs",layerText:"Capa"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Escala 1:{scale}",labelFeaturesText:"Etiqueta elements",labelsText:"Etiquetes",basicText:"Bàsic",advancedText:"Avançat",limitByScaleText:"Restringeix per escala",limitByConditionText:"Restringeix per condició",symbolText:"Símbol",nameText:"Nom"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Escala 1:{scale}",minScaleLimitText:"Escala mínima",maxScaleLimitText:"Escala màxima"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"continu",dashStrokeName:"guions",dotStrokeName:"punts",titleText:"Traç",styleText:"Estil",colorText:"Color",widthText:"Amplada",opacityText:"Opacitad"},"gxp.StylePropertiesDialog.prototype":{titleText:"General",nameFieldText:"Nom",titleFieldText:"Títol",abstractFieldText:"Resum"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Etiquetatge",haloText:"Halo",sizeText:"Mida"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"Quant a",titleText:"Títol",nameText:"Nom",descriptionText:"Descripció",displayText:"Mostra",opacityText:"Opacitat",formatText:"Format",transparentText:"Transparent",cacheText:"Caché",cacheFieldText:"Utiliza la versió en caché",stylesText:"Estils disponibles",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Ja podeu incloure el vostre mapa a altres webs! Simplement copieu el següent codi HTML allà on desitgeu incrustar-ho:",heightLabel:"Alçària",widthLabel:"Amplada",mapSizeLabel:"Mida",miniSizeLabel:"Mínima",smallSizeLabel:"Petita",premiumSizeLabel:"Premium",largeSizeLabel:"Gran"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Afegeix",addStyleTip:"Afegeix nou estil",chooseStyleText:"Escull estil",deleteStyleText:"Treu",deleteStyleTip:"Esborra l'estil sel·leccionat",editStyleText:"Canvia",editStyleTip:"Edita l'estil sel·leccionat",duplicateStyleText:"Clona",duplicateStyleTip:"Duplica l'estil sel·leccionat",addRuleText:"Afegeix",addRuleTip:"Afegeix nova regla",newRuleText:"Nova regla",deleteRuleText:"Treu",deleteRuleTip:"Esborra la regla sel·leccionada",editRuleText:"Edita",editRuleTip:"Edita la regla sel·leccionada",duplicateRuleText:"Clona",duplicateRuleTip:"Duplica la regla sel·leccionada",cancelText:"Cancel·la",saveText:"Desa",styleWindowTitle:"Estil: {0}",ruleWindowTitle:"Regla: {0}",stylesFieldsetTitle:"Estils",rulesFieldsetTitle:"Regles"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Títol",titleEmptyText:"Títol de la capa",abstractLabel:"Descripció",abstractEmptyText:"Descripció de la capa",fileLabel:"Dades",fieldEmptyText:"Navegueu per les dades...",uploadText:"Puja",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Pugeu les vostres dades...",invalidFileExtensionText:"L'extensió del fitxer ha de ser alguna d'aquestes: ",optionsText:"Opcions",workspaceLabel:"Espai de treball",workspaceEmptyText:"Espai de treball per defecte",dataStoreLabel:"Magatzem",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Magatzem de dades per defecte"},"gxp.NewSourceDialog.prototype":{title:"Afegeix Servidor...",cancelText:"Cancel·la",addServerText:"Afegeix Servidor",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Connectant amb el Servidor..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Escala"},"gxp.Viewer.prototype":{saveErrorText:"Problemes desant: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Font",addPicasaText:"Picasa fotos",addYouTubeText:"YouTube Videos",addRSSText:"Feed GeoRSS Un altre",addFeedText:"Afegeix a Mapa",addTitleText:"Títol",keywordText:"Paraula clau",doneText:"Fet",titleText:"Afegir Feeds",maxResultsText:"Productes Max"}});GeoExt.Lang.add("de",{"gxp.menu.LayerMenu.prototype":{layerText:"Layer"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Layer hinzufügen",addActionTip:"Layer hinzufügen",addServerText:"Server hinzufügen",addButtonText:"Layer hinzufügen",untitledText:"ohne Titel",addLayerSourceErrorText:"Fehler beim Abfragen der WMS Capabilities ({msg}).\nBitte URL prüfen und erneut versuchen.",availableLayersText:"verfügbare Layer",expanderTemplateText:"<p><b>Kurzbeschreibung:</b> {abstract}</p>",panelTitleText:"Titel",layerSelectionText:"Verfügbare Daten anzeigen von:",doneText:"Fertig",uploadText:"Daten hochladen",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Bing Layer",roadTitle:"Bing Strassen",aerialTitle:"Bing Luftbilder",labeledAerialTitle:"Bing Luftbilder mit Beschriftung"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Editieren",createFeatureActionText:"Erzeugen",editFeatureActionText:"Bearbeiten",createFeatureActionTip:"neues Objekt erstellen",editFeatureActionTip:"bestehendes Objekt bearbeiten",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"auf der Karte darstellen",firstPageTip:"erste Seite",previousPageTip:"vorherige Seite",zoomPageExtentTip:"Zoom zur max. Ausdehnung",nextPageTip:"nächste Seite",lastPageTip:"letzte Seite",totalMsg:"{1} bis {2} von {0} Datensätzen"},"gxp.plugins.GoogleEarth.prototype":{menuText:"3D Viewer",tooltip:"zum 3D Viewer wechseln"},"gxp.plugins.GoogleSource.prototype":{title:"Google Layers",roadmapAbstract:"Strassenkarte zeigen",satelliteAbstract:"Luftbilder zeigen",hybridAbstract:"Luftbilder mit Strassennamen zeigen",terrainAbstract:"Strassenkarte mit Gelände zeigen"},"gxp.plugins.LayerProperties.prototype":{menuText:"Layer Eigenschaften",toolTip:"Layer Eigenschaften"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Layer",rootNodeText:"Layer",overlayNodeText:"überlagernde Layer",baseNodeText:"Basiskarten"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Basiskarte"},"gxp.plugins.Legend.prototype":{menuText:"Legende zeigen",tooltip:"Legende zeigen"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Karte laden..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Messen",lengthMenuText:"Länge",areaMenuText:"Fläche",lengthTooltip:"Länge messen",areaTooltip:"Fläche messen",measureTooltip:"Messen"},"gxp.plugins.Navigation.prototype":{menuText:"Kartenausschnitt verschieben",tooltip:"Kartenausschnitt verschieben"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Kartenausschnitt zurück",nextMenuText:"Kartenausschnitt vorwärts",previousTooltip:"Vorherigen Kartenausschnitt anzeigen",nextTooltip:"Nächsten Kartenausschnit anzeigen"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap Layer",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Drucken",menuText:"Karte drucken",tooltip:"Karte drucken",previewText:"Druckansicht",notAllNotPrintableText:"Es können nicht alle Layer gedruckt werden.",nonePrintableText:"Keiner der aktuellen Kartenlayer kann gedruckt werden."},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Layers",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Abfrage",queryMenuText:"Abfrage Layer",queryActionTip:"selektierten Layer abfragen",queryByLocationText:"Abfrage nach aktuellem Kartenauscchnitt",queryByAttributesText:"Attributabfrage",queryMsg:"Abfrage wird ausgeführt",cancelButtonText:"Abbrechen",noFeaturesTitle:"keine Übereinstimmung",noFeaturesMessage:"Ihre Abfrage liefert keine Resultate."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Layer löschen",removeActionTip:"Layer löschen"},"gxp.plugins.Styler.prototype":{menuText:"Style bearbeiten",tooltip:"Layer Styles verwalten"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Objektinformation",infoActionTip:"Objektinformation abfragen",popupTitle:"Objektinformation"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Vergrössern",zoomOutMenuText:"Verkleinern",zoomTooltip:"Box aufziehen zum Zoomen",zoomInTooltip:"Vergrössern",zoomOutTooltip:"Verkleinern"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Maximale Ausdehnung",tooltip:"Maximale Ausdehnung anzeigen"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Auf Layer zoomen",tooltip:"Auf Layer zoomen"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Auf Layer zoomen",tooltip:"Auf Layer zoomen"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Auf selektierte Objekte zoomen",tooltip:"Auf selektierte Objekte zoomen"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Änderung speichern?",closeMsg:"Ungespeicherte Änderungen. Möchten Sie die Änderungen speichern?",deleteMsgTitle:"Objekt löschen?",deleteMsg:"Sind Sie sicher, dass Sie dieses Objekt löschen möchten?",editButtonText:"Bearbeiten",editButtonTooltip:"Objekt editieren",deleteButtonText:"Löschen",deleteButtonTooltip:"Objekt löschen",cancelButtonText:"Abbrechen",cancelButtonTooltip:"Bearbeitung beenden, Änderungen verwerfen.",saveButtonText:"Speichern",saveButtonTooltip:"Änderungen speichern"},"gxp.FillSymbolizer.prototype":{fillText:"Füllung",colorText:"Farbe",opacityText:"Transparenz"},"gxp.FilterBuilder.prototype":{builderTypeNames:["beliebige","alle","keine","nicht alle"],preComboText:"Match",postComboText:"der folgenden:",addConditionText:"Bedingung hinzufügen",addGroupText:"Gruppe hinzufügen",removeConditionText:"Bedingung entfernen"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Name",titleHeaderText:"Titel",queryableHeaderText:"abfragbar",layerSelectionLabel:"Verfügbare Daten anzeigen von:",layerAdditionLabel:"oder neuen Server hinzufügen.",expanderTemplateText:"<p><b>Kurzbeschreibung:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"Kreis",graphicSquareText:"Rechteck",graphicTriangleText:"Dreieck",graphicStarText:"Stern",graphicCrossText:"Kreuz",graphicXText:"x",graphicExternalText:"extern",urlText:"URL",opacityText:"Transparenz",symbolText:"Symbol",sizeText:"Grösse",rotationText:"Rotation"},"gxp.QueryPanel.prototype":{queryByLocationText:"lagebezogene Abfrage",currentTextText:"aktuelle Ausdehnung",queryByAttributesText:"Attributabfrage",layerText:"Layer"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Massstab 1:{scale}",labelFeaturesText:"Objekte beschriften",labelsText:"Beschriftung",basicText:"Basic",advancedText:"Erweitert",limitByScaleText:"Massstabsbeschränkung",limitByConditionText:"Einschränkung durch Bedingung",symbolText:"Symbol",nameText:"Name"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Massstab 1:{scale}",minScaleLimitText:"Minimale Massstabsgrenze",maxScaleLimitText:"Maximale Massstabsgrenze"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"ausgezogen",dashStrokeName:"gestrichelt",dotStrokeName:"gepunktet",titleText:"Linie",styleText:"Style",colorText:"Farbe",widthText:"Breite",opacityText:"Transparenz"},"gxp.StylePropertiesDialog.prototype":{titleText:"Allgemein",nameFieldText:"Name",titleFieldText:"Titel",abstractFieldText:"Kurzbeschreibung"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Label values",haloText:"Halo",sizeText:"Grösse"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"Über",titleText:"Titel",nameText:"Name",descriptionText:"Beschreibung",displayText:"Anzeige",opacityText:"Transparenz",formatText:"Format",transparentText:"transparent",cacheText:"Cache",cacheFieldText:"Version aus dem Cache benützen",stylesText:"Verfügbare Styles",infoFormatText:"Info Format",infoFormatEmptyText:"Format auswählen",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Ihre Karte ist für die Publikation im Web bereit. Kopieren Sie einfach den folgenden HTML-Code, um die Karte in Ihre Webseite einzubinden:",heightLabel:"Höhe",widthLabel:"Breite",mapSizeLabel:"Kartengrösse",miniSizeLabel:"Mini",smallSizeLabel:"Klein",premiumSizeLabel:"Premium",largeSizeLabel:"Gross"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Hinzufügen",addStyleTip:"neuen Style hinzufügen",chooseStyleText:"Style auswählen",deleteStyleText:"Löschen",deleteStyleTip:"selektierten Style löschen",editStyleText:"Bearbeiten",editStyleTip:"selektierten Style bearbeiten",duplicateStyleText:"Duplizieren",duplicateStyleTip:"selektierten Style duplizieren",addRuleText:"Hinzufügen",addRuleTip:"neue Regel hinzufügen",newRuleText:"neue Regel",deleteRuleText:"Entfernen",deleteRuleTip:"selektierte Regel löschen",editRuleText:"Bearbeiten",editRuleTip:"selektierte Regel bearbeiten",duplicateRuleText:"Duplizieren",duplicateRuleTip:"selektierte Regel duplizieren",cancelText:"Abbrechen",saveText:"Speichern",styleWindowTitle:"User Style: {0}",ruleWindowTitle:"Style Regel: {0}",stylesFieldsetTitle:"Styles",rulesFieldsetTitle:"Regeln"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Titel",titleEmptyText:"Layertitel",abstractLabel:"Beschreibung",abstractEmptyText:"Layerbeschreibung",fileLabel:"Daten",fieldEmptyText:"Datenarchiv durchsuchen...",uploadText:"Hochladen",uploadFailedText:"Hochladen fehlgeschlagen",processingUploadText:"Upload wird bearbeitet",waitMsgText:"Ihre Daten werden hochgeladen...",invalidFileExtensionText:"Dateierweiterung muss eine sein von: ",optionsText:"Optionen",workspaceLabel:"Workspace",workspaceEmptyText:"Standard Workspace",dataStoreLabel:"Store",dataStoreEmptyText:"Neuen Store erzeugen",defaultDataStoreEmptyText:"Default Datastore"},"gxp.NewSourceDialog.prototype":{title:"neuen Server hinzufügen...",cancelText:"Abbrechen",addServerText:"Server hinzufügen",invalidURLText:"Fügen Sie eine gültige URL zu einem WMS ein (z.B. http://example.com/geoserver/wms)",contactingServerText:"Server wird kontaktiert..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Zoomstufe"},"gxp.Viewer.prototype":{saveErrorText:"Beim Speichern ist ein Problem aufgetreten: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Source",addPicasaText:"Picasa Fotos",addYouTubeText:"YouTube Videos",addRSSText:"Andere GeoRSS Feed",addFeedText:"zur Karte hinzufügen",addTitleText:"Titel",keywordText:"Keyword",doneText:"Fertig",titleText:"Add-Feeds",maxResultsText:"Max Items"}});GeoExt.Lang.add("el",{"gxp.menu.LayerMenu.prototype":{layerText:"Επιφάνεια"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Προσθέστε επιφάνειες",addActionTip:"Προσθέστε επιφάνειες",addServerText:"Προσθέστε ένα Νέο Διακομιστή",addButtonText:"Προσθέστε επιφάνειες",untitledText:"Χωρίς τίτλο",addLayerSourceErrorText:"Σφάλμα στην ανάκτηση δυνατοτήτων WMS ({msg}).\nΠαρακαλώ ελέγξτε το url και δοκιμάστε ξανά.",availableLayersText:"Διαθέσιμες Επιφάνειες",expanderTemplateText:"<p><b>Περίληψη:</b> {abstract}</p>",panelTitleText:"Τίτλος",layerSelectionText:"Δείτε διαθέσιμα δεδομένα από:",doneText:"Ολοκληρώθηκε",uploadText:"Ανεβάστε Δεδομένα",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Επιφάνειες Bing",roadTitle:"Δρόμοι Bing",aerialTitle:"Εναέριες Bing",labeledAerialTitle:"Εναέριες Bing με Ετικέτες"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Δημιουργήστε ένα νέο χαρακτηριστικό",editFeatureActionTip:"Τροποποιήστε υπάρχον χαρακτηριστικό",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Προβολή στον χάρτη",firstPageTip:"Πρώτη σελίδα",previousPageTip:"Προηγούμενη σελίδα",zoomPageExtentTip:"Ζουμ στο εύρος της σελίδας",nextPageTip:"Επόμενη σελίδα",nextPageTip:"Τελευταία σελίδα",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{apiKeyPrompt:"Παρακαλώ εισάγετε το Google API κλειδί για ",menuText:"3D Προβολή",tooltip:"Αλλάξτε σε 3D Προβολή"},"gxp.plugins.GoogleSource.prototype":{title:"Επιφάνειες Google",roadmapAbstract:"Προβολή οδικού χάρτη",satelliteAbstract:"Προβολή εικόνων από δορυφόρο",hybridAbstract:"Προβολή εικόνων με ονόματα οδών",terrainAbstract:"Προβολή οδικού χάρτη με ανάγλυφο εδάφους"},"gxp.plugins.LayerProperties.prototype":{menuText:"Επιλογές Επιφάνειας",toolTip:"Επιλογές Επιφάνειας"},"gxp.plugins.LayerTree.prototype":{rootNodeText:"Επιφάνειες",overlayNodeText:"Επιστρώματα",baseNodeText:"Υπόβαθρα"},"gxp.plugins.Legend.prototype":{menuText:"Προβολή Υπομνήματος",tooltip:"Προβολή Υπομνήματος"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Φόρτωση Χάρτη..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Μέτρο",lengthMenuText:"Απόσταση",areaMenuText:"Εμβαδόν",lengthTooltip:"Υπολογίστε απόσταση",areaTooltip:"Υπολογίστε εμβαδόν",measureTooltip:"Μέτρο"},"gxp.plugins.Navigation.prototype":{menuText:"Μετακινήστε Χάρτη",tooltip:"Μετακινήστε Χάρτη"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Ζουμ Στο Προηγούμενο Επίπεδο",nextMenuText:"Ζουμ Στο Επόμενο Επίπεδο",previousTooltip:"Ζουμ Στο Προηγούμενο Επίπεδο",nextTooltip:"Ζουμ Στο Επόμενο Επίπεδο"},"gxp.plugins.OSMSource.prototype":{title:"Επιφάνειες OpenStreetMap",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Δεδομένα CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Εκτύπωση",menuText:"Εκτύπωση Χάρτη",tooltip:"Εκτύπωση Χάρτη",previewText:"Προεπισκόπηση Εκτύπωσης",notAllNotPrintableText:"Δεν Μπορούν Να Εκτυπωθούν Όλες Οι Επιφάνειες",nonePrintableText:"Καμία από τις επιφάνειες του τρέχοντος χάρτη δεν μπορεί να εκτυπωθεί"},"gxp.plugins.MapQuestSource.prototype":{title:"Επιφάνειες MapQuest",osmAttribution:"Πλακίδια Προσφορά Των <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Πλακίδια Προσφορά Των of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"Εικόνες MapQuest"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Επερώτηση",queryMenuText:"Επιφάνεια επερώτησης",queryActionTip:"Κάντε επερώτηση στην επιλεγμένη επιφάνεια",queryByLocationText:"Query by current map extent",queryByAttributesText:"Επερώτηση βάσει χαρακτηριστικών",queryMsg:"Γίνεται επερώτηση...",cancelButtonText:"Ακύρωση",noFeaturesTitle:"Κανένα Αποτέλεσμα",noFeaturesMessage:"Η επερώτηση σας δεν επέστρεψε αποτελέσματα."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Κατάργηση επιφάνειας",removeActionTip:"Κατάργηση επιφάνειας"},"gxp.plugins.Styler.prototype":{menuText:"Επεξεργασία Στυλ",tooltip:"Επεξεργασία στυλ επιφάνειας"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Πάρτε Πληροφορίες Χαρακτηριστικού",popupTitle:"Πληροφορίες Χαρακτηριστικού"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Ζουμ Μέσα",zoomOutMenuText:"Ζουμ Έξω",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Ζουμ Μέσα",zoomOutTooltip:"Ζουμ Έξω"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Ζουμ Στο Μέγιστο Εύρος",tooltip:"Ζουμ Στο Μέγιστο Εύρος"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Ζουμ στο εύρος επιφάνειας",tooltip:"Ζουμ στο εύρος επιφάνειας"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Ζουμ στο εύρος επιφάνειας",tooltip:"Ζουμ στο εύρος επιφάνειας"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Ζουμ στα συγκεκριμένα χαρακτηριστικά",tooltip:"Ζουμ στα συγκεκριμένα χαρακτηριστικά"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Αποθήκευση Αλλαγών;",closeMsg:"Αυτό το χαρακτηριστικό έχει τροποποιήσεις που δεν έχουν αποθηκευτεί. Θέλετε να φυλάξετε τις αλλαγές σας;",deleteMsgTitle:"Διαγραφή Χαρακτηριστικού",deleteMsg:"Είστε σίγουροι οτι θέλετε να διαγράψετε το συγκεκριμένο χαρακτηριστικό",editButtonText:"Τροποποίηση",editButtonTooltip:"Κάντε αυτό το χαρακτηριστικό τροποποιήσιμο",deleteButtonText:"Διαγραφή",deleteButtonTooltip:"Διαγράψτε αυτό το χαρακτηριστικό",cancelButtonText:"Ακύρωση",cancelButtonTooltip:"Σταματήστε την τροποποίηση, απορρίπτοντας οποιεσδήποτε αλλαγές",saveButtonText:"Αποθήκευση",saveButtonTooltip:"Αποθήκευση αλλαγών"},"gxp.FillSymbolizer.prototype":{fillText:"Γέμισμα",colorText:"Χρώμα",opacityText:"Αδιαφάνεια"},"gxp.FilterBuilder.prototype":{builderTypeNames:["οποιοδήποτε","όλα","κανένα","όχι όλα"],preComboText:"Ταύτιση",postComboText:"των ακόλουθων:",addConditionText:"προσθήκη συνθήκης",addGroupText:"προσθήκη ομάδας",removeConditionText:"κατάργηση συνθήκης"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Όνομα",titleHeaderText:"Τίτλος",queryableHeaderText:"Μπορούν να γίνουν επερωτήσεις",layerSelectionLabel:"Δείτε διαθέσιμα δεδομένα από:",layerAdditionLabel:"ή προσθέστε νέο διακομιστή.",expanderTemplateText:"<p><b>Περιγραφή:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"κύκλος",graphicSquareText:"τετράγωνο",graphicTriangleText:"τρίγωνο",graphicStarText:"αστέρι",graphicCrossText:"σταυρός",graphicXText:"χ",graphicExternalText:"εξωτερικό",urlText:"URL",opacityText:"αδιαφάνεια",symbolText:"Σύμβολο",sizeText:"Εύρος",rotationText:"Περιστροφή"},"gxp.QueryPanel.prototype":{queryByLocationText:"Επερώτηση βάσει τοποθεσίας",currentTextText:"Τρέχον εύρος",queryByAttributesText:"Επερώτηση βάσει χαρακτηριστικών",layerText:"Επιφάνεια"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Κλίμακα 1:{scale}",labelFeaturesText:"Χαρακτηριστικά Επιφάνειας",labelsText:"Ετικέτες",basicText:"Απλή",advancedText:"Προηγμένη",limitByScaleText:"Περιορισμός βάσει κλίμακας",limitByConditionText:"Περιορισμός βάσει συνθήκης",symbolText:"Σύμβολο",nameText:"Όνομα"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Κλίμακα 1:{scale}",minScaleLimitText:"Όριο ελάχιστης κλίμακας",maxScaleLimitText:"Όριο μέγιστης κλίμακας"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"συμπαγής",dashStrokeName:"με παύλες",dotStrokeName:"με κουκίδες",titleText:"Πέρασμα",styleText:"Στύλο",colorText:"Χρώμα",widthText:"Πλάτος",opacityText:"Αδιαφάνεια"},"gxp.StylePropertiesDialog.prototype":{titleText:"Γενικά",nameFieldText:"Όνομα",titleFieldText:"Τίτλος",abstractFieldText:"Περίληψη"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Τιμές ετικέτας",haloText:"Φωτοστέφανο",sizeText:"Μέγεθος"},"gxp.WMSLayerPanel.prototype":{aboutText:"Σχετικά με",titleText:"Τίτλος",nameText:"Όνομα",descriptionText:"Περιγραφή",displayText:"Προβολή",opacityText:"Αδιαφάνεια",formatText:"Τύπος",transparentText:"Διαφανές",cacheText:"Cache",cacheFieldText:"Χρησιμοποίησε την cached έκδοση",stylesText:"Διαθέσιμες Στυλ",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Ο χάρτης σας είναι έτοιμος να δημοσιευτεί στο διαδίκτυο! Απλά αντιγράψτε τον ακόλουθο HTML κώδικα για να ενσωματώσετε τον χάρτη στην ιστοσελίδα σας:",heightLabel:"Ύψος",widthLabel:"Πλάτος",mapSizeLabel:"Μέγεθος Χάρτη",miniSizeLabel:"Μικρογραφία",smallSizeLabel:"Μικρό",premiumSizeLabel:"Εξαιρετικά ποιοτικό",largeSizeLabel:"Μεγάλος"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Προσθήκη",addStyleTip:"Προσθήκη νέου στυλ",chooseStyleText:"Επιλογή στυλ",deleteStyleText:"Αφαίρεση",deleteStyleTip:"Διαγραφή του επιλεγμένου στυλ",editStyleText:"Επεξεργασία",editStyleTip:"Επεξεργασία του επιλεγμένου στυλ",duplicateStyleText:"Διπλότυπο",duplicateStyleTip:"Φτιάξτε διπλότυπο του επιλεγμένου στύλ",addRuleText:"Προσθήκη",addRuleTip:"Προσθήκη νέου κανόνα",newRuleText:"Νέος Κανόνας",deleteRuleText:"Αφαίρεση",deleteRuleTip:"Διαγράψτε τον επιλεγμένο κανόνα",editRuleText:"Επεξεργασία",editRuleTip:"Επεξεργαστείτε τον επιλεγμένο κανόνα",duplicateRuleText:"Διπλότυπο",duplicateRuleTip:"Φτιάξτε διπλότυπο του επιλεγμένου κανόνα",cancelText:"Ακύρωση",saveText:"Αποθήκευση",styleWindowTitle:"Στυλ Χρήστη: {0}",ruleWindowTitle:"Κανόνες Στυλ: {0}",stylesFieldsetTitle:"Στυλ",rulesFieldsetTitle:"Κανόνες"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Τίτλος",titleEmptyText:"Τίτλος επιφάνειας",abstractLabel:"Περιγραφή",abstractEmptyText:"Περιγραφή επιφάνειας",fileLabel:"Δεδομένα",fieldEmptyText:"Βρείτε το μονοπάτι για ένα αρχείο δεδομένων...",uploadText:"Ανέβασμα",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Τα δεδομένα σας ανεβαίνουν...",invalidFileExtensionText:"Ο τύπος αρχείου πρέπει να είναι ένας από τους: ",optionsText:"Επιλογές",workspaceLabel:"Χώρος εργασίας",workspaceEmptyText:"Προεπιλεγμένος χώρος εργασίας",dataStoreLabel:"Αποθήκη",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Προεπιλεγμένη αποθήκη"},"gxp.NewSourceWindow.prototype":{title:"Προσθήκη Νέου Διακομιστή...",cancelText:"Ακύρωση",addServerText:"Προσθήκη Διακομιστή",invalidURLText:"Είσαγετε ένα έγκυρο URL για ένα WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Επικοινωνία με Διακομιστή..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Επίπεδο ζουμ"},"gxp.Viewer.prototype":{saveErrorText:"Trouble saving: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Πηγή",addPicasaText:"Φωτογραφίες Picasa",addYouTubeText:"YouTube βίντεο",addRSSText:"Άλλα Feed GeoRSS",addFeedText:"Προσθήκη στο χάρτη",addTitleText:"Τίτλος",keywordText:"Λέξη-κλειδί",doneText:"Done",titleText:"Προσθήκη ροής",maxResultsText:"Max Είδη"}});GeoExt.Lang.add("en",{"gxp.menu.LayerMenu.prototype":{layerText:"Layer"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Add layers",addActionTip:"Add layers",addServerText:"Add a New Server",addButtonText:"Add layers",untitledText:"Untitled",addLayerSourceErrorText:"Error getting WMS capabilities ({msg}).\nPlease check the url and try again.",availableLayersText:"Available Layers",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",panelTitleText:"Title",layerSelectionText:"View available data from:",doneText:"Done",uploadText:"Upload layers",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Bing Layers",roadTitle:"Bing Roads",aerialTitle:"Bing Aerial",labeledAerialTitle:"Bing Aerial With Labels"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Create a new feature",editFeatureActionTip:"Edit existing feature",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Display on map",firstPageTip:"First page",previousPageTip:"Previous page",zoomPageExtentTip:"Zoom to page extent",nextPageTip:"Next page",lastPageTip:"Last page",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"3D Viewer",tooltip:"Switch to 3D Viewer"},"gxp.plugins.GoogleSource.prototype":{title:"Google Layers",roadmapAbstract:"Show street map",satelliteAbstract:"Show satellite imagery",hybridAbstract:"Show imagery with street names",terrainAbstract:"Show street map with terrain"},"gxp.plugins.LayerProperties.prototype":{menuText:"Layer Properties",toolTip:"Layer Properties"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Layers",rootNodeText:"Layers",overlayNodeText:"Overlays",baseNodeText:"Base Layers"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Base Maps"},"gxp.plugins.Legend.prototype":{menuText:"Show legend",tooltip:"Show legend"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Loading map..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Measure",lengthMenuText:"Length",areaMenuText:"Area",lengthTooltip:"Measure length",areaTooltip:"Measure area",measureTooltip:"Measure"},"gxp.plugins.Navigation.prototype":{menuText:"Pan map",tooltip:"Pan map"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Zoom to previous extent",nextMenuText:"Zoom to next extent",previousTooltip:"Zoom to previous extent",nextTooltip:"Zoom to next extent"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap Layers",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Print",menuText:"Print map",tooltip:"Print map",previewText:"Print Preview",notAllNotPrintableText:"Not All Layers Can Be Printed",nonePrintableText:"None of your current map layers can be printed"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Layers",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Query",queryMenuText:"Query layer",queryActionTip:"Query the selected layer",queryByLocationText:"Query by current map extent",queryByAttributesText:"Query by attributes",queryMsg:"Querying...",cancelButtonText:"Cancel",noFeaturesTitle:"No Match",noFeaturesMessage:"Your query did not return any results."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Remove layer",removeActionTip:"Remove layer"},"gxp.plugins.Styler.prototype":{menuText:"Layer Styles",tooltip:"Layer Styles"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Get Feature Info",popupTitle:"Feature Info"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom box",zoomInMenuText:"Zoom in",zoomOutMenuText:"Zoom out",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Zoom in",zoomOutTooltip:"Zoom out"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Zoom to max extent",tooltip:"Zoom to max extent"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Zoom to layer extent",tooltip:"Zoom to layer extent"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Zoom to layer extent",tooltip:"Zoom to layer extent"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Zoom to selected features",tooltip:"Zoom to selected features"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Save Changes?",closeMsg:"This feature has unsaved changes. Would you like to save your changes?",deleteMsgTitle:"Delete Feature?",deleteMsg:"Are you sure you want to delete this feature?",editButtonText:"Edit",editButtonTooltip:"Make this feature editable",deleteButtonText:"Delete",deleteButtonTooltip:"Delete this feature",cancelButtonText:"Cancel",cancelButtonTooltip:"Stop editing, discard changes",saveButtonText:"Save",saveButtonTooltip:"Save changes"},"gxp.FillSymbolizer.prototype":{fillText:"Fill",colorText:"Color",opacityText:"Opacity"},"gxp.FilterBuilder.prototype":{builderTypeNames:["any","all","none","not all"],preComboText:"Match",postComboText:"of the following:",addConditionText:"add condition",addGroupText:"add group",removeConditionText:"remove condition"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Name",titleHeaderText:"Title",queryableHeaderText:"Queryable",layerSelectionLabel:"View available data from:",layerAdditionLabel:"or add a new server.",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"circle",graphicSquareText:"square",graphicTriangleText:"triangle",graphicStarText:"star",graphicCrossText:"cross",graphicXText:"x",graphicExternalText:"external",urlText:"URL",opacityText:"opacity",symbolText:"Symbol",sizeText:"Size",rotationText:"Rotation"},"gxp.QueryPanel.prototype":{queryByLocationText:"Query by location",currentTextText:"Current extent",queryByAttributesText:"Query by attributes",layerText:"Layer"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Scale 1:{scale}",labelFeaturesText:"Label Features",labelsText:"Labels",basicText:"Basic",advancedText:"Advanced",limitByScaleText:"Limit by scale",limitByConditionText:"Limit by condition",symbolText:"Symbol",nameText:"Name"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Scale 1:{scale}",minScaleLimitText:"Min scale limit",maxScaleLimitText:"Max scale limit"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"solid",dashStrokeName:"dash",dotStrokeName:"dot",titleText:"Stroke",styleText:"Style",colorText:"Color",widthText:"Width",opacityText:"Opacity"},"gxp.StylePropertiesDialog.prototype":{titleText:"General",nameFieldText:"Name",titleFieldText:"Title",abstractFieldText:"Abstract"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Label values",haloText:"Halo",sizeText:"Size"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"About",titleText:"Title",nameText:"Name",descriptionText:"Description",displayText:"Display",opacityText:"Opacity",formatText:"Format",transparentText:"Transparent",cacheText:"Cache",cacheFieldText:"Use cached version",stylesText:"Available Styles",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Your map is ready to be published to the web! Simply copy the following HTML to embed the map in your website:",heightLabel:"Height",widthLabel:"Width",mapSizeLabel:"Map Size",miniSizeLabel:"Mini",smallSizeLabel:"Small",premiumSizeLabel:"Premium",largeSizeLabel:"Large"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Add",addStyleTip:"Add a new style",chooseStyleText:"Choose style",deleteStyleText:"Remove",deleteStyleTip:"Delete the selected style",editStyleText:"Edit",editStyleTip:"Edit the selected style",duplicateStyleText:"Duplicate",duplicateStyleTip:"Duplicate the selected style",addRuleText:"Add",addRuleTip:"Add a new rule",newRuleText:"New Rule",deleteRuleText:"Remove",deleteRuleTip:"Delete the selected rule",editRuleText:"Edit",editRuleTip:"Edit the selected rule",duplicateRuleText:"Duplicate",duplicateRuleTip:"Duplicate the selected rule",cancelText:"Cancel",saveText:"Save",styleWindowTitle:"User Style: {0}",ruleWindowTitle:"Style Rule: {0}",stylesFieldsetTitle:"Styles",rulesFieldsetTitle:"Rules"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Title",titleEmptyText:"Layer title",abstractLabel:"Description",abstractEmptyText:"Layer description",fileLabel:"Data",fieldEmptyText:"Browse for data archive...",uploadText:"Upload",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Uploading your data...",invalidFileExtensionText:"File extension must be one of: ",optionsText:"Options",workspaceLabel:"Workspace",workspaceEmptyText:"Default workspace",dataStoreLabel:"Store",dataStoreEmptyText:"Choose a store",dataStoreNewText:"Create new store",crsLabel:"CRS",crsEmptyText:"Coordinate Reference System ID",invalidCrsText:"CRS identifier should be an EPSG code (e.g. EPSG:4326)"},"gxp.NewSourceDialog.prototype":{title:"Add new server...",cancelText:"Cancel",addServerText:"Add Server",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Contacting Server..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Zoom level"},"gxp.Viewer.prototype":{saveErrorText:"Trouble saving: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Source",addPicasaText:"Picasa Photos",addYouTubeText:"YouTube Videos",addRSSText:"Other GeoRSS Feed",addFeedText:"Add to Map",addTitleText:"Title",keywordText:"Keyword",doneText:"Done",titleText:"Add Feeds",maxResultsText:"Max Items"}});GeoExt.Lang.add("es",{"gxp.menu.LayerMenu.prototype":{layerText:"Capa"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Añadir Capas",addActionTip:"Añadir Capas",addServerText:"Añadir servidor",addButtonText:"Añadir Capas",untitledText:"Sin Título",addLayerSourceErrorText:"Error obteniendo capabilities de WMS ({msg}).\nPor favor, compruebe la URL y vuelva a intentarlo.",availableLayersText:"Capas disponibles",expanderTemplateText:"<p><b>Resumen:</b> {abstract}</p>",panelTitleText:"Título",layerSelectionText:"Ver datos disponibles de:",doneText:"Hecho",uploadText:"Subir Datos",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Capas Bing",roadTitle:"Bing Carreteras",aerialTitle:"Bing Foto Aérea",labeledAerialTitle:"Bing Híbrido"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Crear nuevo elemento",editFeatureActionTip:"Editar elemento existente",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Mostrar en el mapa",firstPageTip:"Primera página",previousPageTip:"Página anterior",zoomPageExtentTip:"Zoom a la extensión de la página",nextPageTip:"Página siguiente",lastPageTip:"Última página",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"Vista 3D",tooltip:"Vista 3D"},"gxp.plugins.GoogleSource.prototype":{title:"Capas Google",roadmapAbstract:"Mostrar Callejero",satelliteAbstract:"Mostrar imágenes aéreas",hybridAbstract:"Mostrar imágenes con nombres de calle",terrainAbstract:"Mostrar callejero con terreno"},"gxp.plugins.LayerProperties.prototype":{menuText:"Propiedades de la capa",toolTip:"Propiedades de la capa"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Capas",rootNodeText:"Capas",overlayNodeText:"Capas superpuestas",baseNodeText:"Capa base"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Capa base"},"gxp.plugins.Legend.prototype":{menuText:"Leyenda",tooltip:"Leyenda"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Loading Map..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Medir",lengthMenuText:"Longitud",areaMenuText:"Área",lengthTooltip:"Medir Longitud",areaTooltip:"Medir Área",measureTooltip:"Medir"},"gxp.plugins.Navigation.prototype":{menuText:"Desplazar mapa",tooltip:"Desplazar mapa"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Vista anterior",nextMenuText:"Vista siguiente",previousTooltip:"Vista anterior",nextTooltip:"Vista siguiente"},"gxp.plugins.OSMSource.prototype":{title:"Capas OpenStreetMap",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Datos CC-By-SA de <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Imprimir",menuText:"Imprimir mapa",tooltip:"Imprimir mapa",previewText:"Vista previa",notAllNotPrintableText:"No se pueden imprimir todas las capas",nonePrintableText:"No se puede imprimir ninguna de las capas del mapa"},"gxp.plugins.MapQuestSource.prototype":{title:"Capas MapQuest",osmAttribution:"Teselas cortesía de <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Teselas cortesía de <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imágenes"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Consultar",queryMenuText:"Consultar capa",queryActionTip:"Consultar la capa seleccionada",queryByLocationText:"Query by current map extent",queryByAttributesText:"Consultar por atributos",queryMsg:"Consultando...",cancelButtonText:"Cancelar",noFeaturesTitle:"Sin coincidencias",noFeaturesMessage:"Su consulta no produjo resultados."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Eliminar Capa",removeActionTip:"Eliminar Capa"},"gxp.plugins.Styler.prototype":{menuText:"Editar estilos",tooltip:"Gestionar estilos de capa"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Consultar elementos",popupTitle:"Información de elementos"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Acercar",zoomOutMenuText:"Alejar",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Acercar",zoomOutTooltip:"Alejar"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Ver extensión total",tooltip:"Ver extensión total"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Ver toda la capa",tooltip:"Ver toda la capa"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Ver toda la la capa",tooltip:"Ver toda la capa"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Ver los elementos seleccionados",tooltip:"Ver los elementos seleccionados"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"¿Desea guardar los cambios?",closeMsg:"Los cambios en este elemento no se han guardado. ¿Desea guardar los cambios?",deleteMsgTitle:"¿Desea borrar el elemento?",deleteMsg:"¿Está seguro de querer borrar este elemento?",editButtonText:"Editar",editButtonTooltip:"Hacer editable este elemento",deleteButtonText:"Borrar",deleteButtonTooltip:"Borrar este elemento",cancelButtonText:"Cancelar",cancelButtonTooltip:"Dejar de editar, descartar cambios",saveButtonText:"Guardar",saveButtonTooltip:"Guardar cambios"},"gxp.FillSymbolizer.prototype":{fillText:"Relleno",colorText:"Color",opacityText:"Opacidad"},"gxp.FilterBuilder.prototype":{builderTypeNames:["cualquiera de","todas","ninguna de","no todas"],preComboText:"Cumplir",postComboText:"las condiciones siguientes:",addConditionText:"añadir condición",addGroupText:"añadir grupo",removeConditionText:"eliminar condición"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Nombre",titleHeaderText:"Título",queryableHeaderText:"Consultable",layerSelectionLabel:"Ver datos disponibles de:",layerAdditionLabel:"o añadir otro servidor.",expanderTemplateText:"<p><b>Resumen:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"círculo",graphicSquareText:"cuadrado",graphicTriangleText:"triángulo",graphicStarText:"estrella",graphicCrossText:"cruz",graphicXText:"x",graphicExternalText:"externo",urlText:"URL",opacityText:"opacidad",symbolText:"Símbolo",sizeText:"Tamaño",rotationText:"Giro"},"gxp.QueryPanel.prototype":{queryByLocationText:"Consultar por localización",currentTextText:"Extensión actual",queryByAttributesText:"Consultar por atributo",layerText:"Capa"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Escala 1:{scale}",labelFeaturesText:"Etiquetado de elementos",labelsText:"Etiquetas",basicText:"Básico",advancedText:"Advanzado",limitByScaleText:"Limitar por escala",limitByConditionText:"Limitar por condición",symbolText:"Símbolo",nameText:"Nombre"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Escala 1:{scale}",minScaleLimitText:"Escala mínima",maxScaleLimitText:"Escala máxima"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"continuo",dashStrokeName:"guiones",dotStrokeName:"puntos",titleText:"Trazo",styleText:"Estilo",colorText:"Color",widthText:"Ancho",opacityText:"Opacidad"},"gxp.StylePropertiesDialog.prototype":{titleText:"General",nameFieldText:"Nombre",titleFieldText:"Título",abstractFieldText:"Resumen"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Etiquetado",haloText:"Halo",sizeText:"Tamaño"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"Acerca de",titleText:"Título",nameText:"Nombre",descriptionText:"Descripción",displayText:"Mostrar",opacityText:"Opacidad",formatText:"Formato",transparentText:"Transparente",cacheText:"Caché",cacheFieldText:"Usar la versión en caché",stylesText:"Estilos disponibles",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"¡Ya puede publicar su mapa en otras webs! Simplemente copie el siguiente código HTML en el lugar donde desee incrustarlo:",heightLabel:"Alto",widthLabel:"Ancho",mapSizeLabel:"Tamaño",miniSizeLabel:"Mínimo",smallSizeLabel:"Pequeño",premiumSizeLabel:"Premium",largeSizeLabel:"Grande"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Añadir",addStyleTip:"Añadir un estilo",chooseStyleText:"Escoger estilo",deleteStyleText:"Quitar",deleteStyleTip:"Borrar el estilo seleccionado",editStyleText:"Cambiar",editStyleTip:"Editar el estilo seleccionado",duplicateStyleText:"Clonar",duplicateStyleTip:"Duplicar el estilo seleccionado",addRuleText:"Añadir",addRuleTip:"Añadir una regla",newRuleText:"Nueva regla",deleteRuleText:"Quitar",deleteRuleTip:"Borrar la regla seleccionada",editRuleText:"Cambiar",editRuleTip:"Editar la regla seleccionada",duplicateRuleText:"Duplicar",duplicateRuleTip:"Duplicar la regla seleccionada",cancelText:"Cancelar",saveText:"Guardar",styleWindowTitle:"Estilo: {0}",ruleWindowTitle:"Regla: {0}",stylesFieldsetTitle:"Estilos",rulesFieldsetTitle:"Reglas"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Título",titleEmptyText:"Título de la capa",abstractLabel:"Descripción",abstractEmptyText:"Descripción de la capa",fileLabel:"Datos",fieldEmptyText:"Navegue por los datos...",uploadText:"Subir",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Suba sus datos data...",invalidFileExtensionText:"El fichero debe tener alguna de estas extensiones: ",optionsText:"Opciones",workspaceLabel:"Espacio de trabajo",workspaceEmptyText:"Espacio de trabajo por defecto",dataStoreLabel:"Almacén de datos",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Almacén de datos por defecto"},"gxp.NewSourceDialog.prototype":{title:"Añadir Servidor...",cancelText:"Cancelar",addServerText:"Añadir Servidor",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Conectando con el Servidor..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Escala"},"gxp.Viewer.prototype":{saveErrorText:"Problemas guardando: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Fuente",addPicasaText:"Picasa fotos",addYouTubeText:"YouTube Videos",addRSSText:"Feed GeoRSS Otro",addFeedText:"Agregar al Mapa",addTitleText:"Título",keywordText:"Palabra clave",doneText:"Hecho",titleText:"Agregar Feeds",maxResultsText:"Productos Max"}});GeoExt.Lang.add("fr",{"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Ajouter des calques",addActionTip:"Ajouter des calques",addServerText:"Ajouter un nouveau serveur",untitledText:"Sans titre",addLayerSourceErrorText:"Impossible d'obtenir les capacités WMS ({msg}).\nVeuillez vérifier l'URL et essayez à nouveau.",availableLayersText:"Couches disponibles",doneText:"Terminé",uploadText:"Télécharger des données",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Calques Bing",roadTitle:"Bing routes",aerialTitle:"Bing images aériennes",labeledAerialTitle:"Bing images aériennes avec étiquettes"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Créer un nouvel objet",editFeatureActionTip:"Modifier un objet existant",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Afficher sur la carte",firstPageTip:"Première page",previousPageTip:"Page précédente",zoomPageExtentTip:"Zoom sur la page",nextPageTip:"Page suivante",lastPageTip:"Dernière page",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"Passer à la visionneuse 3D",tooltip:"Passer à la visionneuse 3D"},"gxp.plugins.GoogleSource.prototype":{title:"Calques Google",roadmapAbstract:"Carte routière",satelliteAbstract:"Images satellite",hybridAbstract:"Images avec routes",terrainAbstract:"Carte routière avec le terrain"},"gxp.plugins.LayerProperties.prototype":{menuText:"Propriétés de la couche",toolTip:"Afficher les propriétés de la couche"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Layers",rootNodeText:"Layers",overlayNodeText:"Surimpressions",baseNodeText:"Couches"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Couche"},"gxp.plugins.Legend.prototype":{menuText:"Légende",tooltip:"Afficher la légende"},"gxp.plugins.Measure.prototype":{buttonText:"Mesure",lengthMenuText:"Longueur",areaMenuText:"Surface",lengthTooltip:"Mesurer une longueur",areaTooltip:"Mesurer une surface",measureTooltip:"Mesurer"},"gxp.plugins.Navigation.prototype":{menuText:"Panner",tooltip:"Faire glisser la carte"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Position précédente",nextMenuText:"Position suivante",previousTooltip:"Retourner à la position précédente",nextTooltip:"Aller à la position suivante"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Chargement de la carte..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.OSMSource.prototype":{title:"Calques OpenStreetMap",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Données CC-By-SA par <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Imprimer",menuText:"Imprimer la carte",tooltip:"Imprimer la carte",previewText:"Aperçu avant impression",notAllNotPrintableText:"Non, toutes les couches peuvent être imprimées",nonePrintableText:"Aucune de vos couches ne peut être imprimée"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Layers",osmAttribution:"Avec la permission de tuiles <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Avec la permission de tuiles <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Interrogation",queryMenuText:"Couche de requêtes",queryActionTip:"Interroger la couche sélectionnée",queryByLocationText:"Query by current map extent",queryByAttributesText:"Requête par attributs"},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Enlever la couche",removeActionTip:"Enlever la couche"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Get Feature Info",popupTitle:"Info sur l'objet"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Zoom avant",zoomOutMenuText:"Zoom arrière",zoomTooltip:"Zoomer en dessinant un rectangle",zoomInTooltip:"Zoomer",zoomOutTooltip:"Dézoomer"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Zoomer sur la carte max",tooltip:"Zoomer sur la carte max"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Zoomer sur la couche",tooltip:"Zoomer sur la couche"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Zoomer sur la couche",tooltip:"Zoomer sur la couche"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Zoomer sur les objets sélectionnés",tooltip:"Zoomer sur les objets sélectionnés"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Enregistrer les modifications ?",closeMsg:"Cet objet a des modifications non enregistrées. Voulez-vous enregistrer vos modifications ?",deleteMsgTitle:"Supprimer l'objet ?",deleteMsg:"Etes-vous sûr de vouloir supprimer cet objet ?",editButtonText:"Modifier",editButtonTooltip:"Modifier cet objet",deleteButtonText:"Supprimer",deleteButtonTooltip:"Supprimer cet objet",cancelButtonText:"Annuler",cancelButtonTooltip:"Arrêter de modifier, annuler les modifications",saveButtonText:"Enregistrer",saveButtonTooltip:"Enregistrer les modifications"},"gxp.FillSymbolizer.prototype":{fillText:"Remplir",colorText:"Couleur",opacityText:"Opacité"},"gxp.FilterBuilder.prototype":{builderTypeNames:["Tout","tous","aucun","pas tout"],preComboText:"Match",postComboText:"de ce qui suit:",addConditionText:"Ajouter la condition",addGroupText:"Ajouter un groupe",removeConditionText:"Supprimer la condition"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Nom",titleHeaderText:"Titre",queryableHeaderText:"Interrogeable",layerSelectionLabel:"Voir les données disponibles à partir de :",layerAdditionLabel:"ou ajouter un nouveau serveur.",expanderTemplateText:"<p><b>Résumé:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"Cercle",graphicSquareText:"Carré",graphicTriangleText:"Triangle",graphicStarText:"Étoile",graphicCrossText:"Croix",graphicXText:"x",graphicExternalText:"Externe",urlText:"URL",opacityText:"Opacité",symbolText:"Symbole",sizeText:"Taille",rotationText:"Rotation"},"gxp.QueryPanel.prototype":{queryByLocationText:"Interrogation selon le lieu",currentTextText:"Mesure actuelle",queryByAttributesText:"Requête par attributs",layerText:"Calque"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} échelle 1:{scale}",labelFeaturesText:"Label Caractéristiques",advancedText:"Avancé",limitByScaleText:"Limiter par l'échelle",limitByConditionText:"Limiter par condition",symbolText:"Symbole",nameText:"Nom"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} échelle 1:{scale}",maxScaleLimitText:"Échelle maximale"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Label valeurs",haloText:"Halo",sizeText:"Taille"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"A propos",titleText:"Titre",nameText:"Nom",descriptionText:"Description",displayText:"Affichage",opacityText:"Opacité",formatText:"Format",transparentText:"Transparent",cacheText:"Cache",cacheFieldText:"Utiliser la version mise en cache",stylesText:"Available styles",infoFormatText:"Info format",infoFormatEmptyText:"Choisissez un format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Votre carte est prête à être publiée sur le web. Il suffit de copier le code HTML suivant pour intégrer la carte dans votre site Web :",heightLabel:"Hauteur",widthLabel:"Largeur",mapSizeLabel:"Taille de la carte",miniSizeLabel:"Mini",smallSizeLabel:"Petit",premiumSizeLabel:"Premium",largeSizeLabel:"Large"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Titre",titleEmptyText:"Titre de la couche",abstractLabel:"Description",abstractEmptyText:"Description couche",fileLabel:"Données",fieldEmptyText:"Parcourir pour ...",uploadText:"Upload",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Transfert de vos données ...",invalidFileExtensionText:"L'extension du fichier doit être : ",optionsText:"Options",workspaceLabel:"Espace de travail",workspaceEmptyText:"Espace de travail par défaut",dataStoreLabel:"Magasin de données",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Magasin de données par défaut"},"gxp.NewSourceDialog.prototype":{title:"Ajouter un nouveau serveur...",cancelText:"Annuler",addServerText:"Ajouter un serveur",invalidURLText:"Indiquez l'URL valide d'un serveur WMS (e.g. http://example.com/geoserver/wms)",contactingServerText:"Interrogation du serveur..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Niveau de zoom"},"gxp.Viewer.prototype":{saveErrorText:"Sauver Trouble: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Source",addPicasaText:"Picasa Photos",addYouTubeText:"YouTube Vidéos",addRSSText:"GeoRSS Autre",addFeedText:"Ajouter à la carte",addTitleText:"Titre",keywordText:"Mot-clé",doneText:"Terminé",titletext:"Ajouter RSS",maxResultsText:"Articles Max"}});GeoExt.Lang.add("id",{"gxp.menu.LayerMenu.prototype":{layerText:"Layer"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Tambahkan layer",addActionTip:"Tambahkan layer",addServerText:"Tambahkan server baru",addButtonText:"Add layers",untitledText:"Untitled",addLayerSourceErrorText:"Kesalahan mendapatkan kemampuan WMS ({msg}). \nSilakan cek url dan coba lagi.",availableLayersText:"Layer tersedia",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",panelTitleText:"Title",layerSelectionText:"View available data from:",doneText:"Selesai",uploadText:"Unggah data",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Layers Bing",roadTitle:"Jalan Bing",aerialTitle:"Udara Bing",labeledAerialTitle:"Udara Bing dengan label"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Membuat sebuah fitur",editFeatureActionTip:"Edit fitur",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Tampilkan pada peta",firstPageTip:"Halaman pertama",previousPageTip:"Halaman sebelumnya",zoomPageExtentTip:"Zoom sampai batas halaman",nextPageTip:"Halaman berikut",lastPageTip:"Halaman terakhir",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"3D Viewer",tooltip:"Switch to 3D Viewer"},"gxp.plugins.GoogleSource.prototype":{title:"Google Layers",roadmapAbstract:"Tampilkan peta jalan",satelliteAbstract:"Tampilkan citra satelit",hybridAbstract:"Tampilkan citra dengan nama jalan",terrainAbstract:"Tampilkan peta jalan dengan peta medan"},"gxp.plugins.LayerProperties.prototype":{menuText:"Properti layer",toolTip:"Properti layer"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Layer-layer",rootNodeText:"Layer-layer",overlayNodeText:"Superimposisi",baseNodeText:"Layer dasar"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Layer dasar"},"gxp.plugins.Legend.prototype":{menuText:"Tampilkan legend",tooltip:"Tampilkan legend"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Loading Map..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Pengukuran",lengthMenuText:"Panjang",areaMenuText:"Luas",lengthTooltip:"Pengukuran panjang",areaTooltip:"Pengukuran luas",measureTooltip:"Pengukuran"},"gxp.plugins.Navigation.prototype":{menuText:"Pan peta",tooltip:"Pan peta"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Zoom ke luas sebelumnya",nextMenuText:"Zoom ke luas setelahnya",previousTooltip:"Zoom ke luas sebelumnya",nextTooltip:"Zoom ke luas setelahnya"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap Layers",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Cetak",menuText:"Cetak peta",tooltip:"Cetak peta",previewText:"Preview cetak",notAllNotPrintableText:"Tidak semua layer dapat dicetak",nonePrintableText:"Tidak ada peta yang dapat dicetak"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Layers",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"Citra MapQuest"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Query",queryMenuText:"Queryable Layer",queryActionTip:"Query layer yang dipilih",queryByLocationText:"Query by current map extent",queryByAttributesText:"Query atribut",queryMsg:"Querying...",cancelButtonText:"Batal",noFeaturesTitle:"Tidak sesuai",noFeaturesMessage:"Permintaan anda tidak berhasil."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Hapus layer",removeActionTip:"Hapus layer"},"gxp.plugins.Styler.prototype":{menuText:"Edit Styles",tooltip:"Manage layer styles"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Get Feature Info",popupTitle:"Info fitur"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Memperbesar",zoomOutMenuText:"Memperkecil",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Memperbesar",zoomOutTooltip:"Memperkecil"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Pembesaran maksimum",tooltip:"Pembesaran maksimum"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Pembesaran batas layer",tooltip:"Pembesaran batas layer"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Pembesaran batas layer",tooltip:"Pembesaran batas layer"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Pembesaran pada fitur terpilih",tooltip:"Pembesaran pada fitur terpilih"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Simpan update?",closeMsg:"Fitur belum di simpan. Apakah ingin disimpan?",deleteMsgTitle:"Hapus Fitur?",deleteMsg:"Anda yakin untuk menghapus fitur ini?",editButtonText:"Edit",editButtonTooltip:"Jadikan fitur dapat diedit",deleteButtonText:"Hapus",deleteButtonTooltip:"Hapus fitur ini",cancelButtonText:"Batal",cancelButtonTooltip:"Berhenti mengedit, batalkan perubahan",saveButtonText:"Simpan",saveButtonTooltip:"Simpan Update"},"gxp.FillSymbolizer.prototype":{fillText:"Isikan warna",colorText:"Warna",opacityText:"Kepekatan"},"gxp.FilterBuilder.prototype":{builderTypeNames:["any","all","none","not all"],preComboText:"Sesuai",postComboText:"of the following:",addConditionText:"tambahkan kondisi",addGroupText:"tambahkan grup",removeConditionText:"Hilangkan kondisi"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Nama",titleHeaderText:"Judul",queryableHeaderText:"Queryable",layerSelectionLabel:"Melihat data dari:",layerAdditionLabel:"atau tambahkan sebagai server baru.",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"Lingkaran",graphicSquareText:"square",graphicTriangleText:"Segitiga",graphicStarText:"Bintang",graphicCrossText:"Silang",graphicXText:"x",graphicExternalText:"dari luar",urlText:"URL",opacityText:"Kepekatan",symbolText:"Simbol",sizeText:"Ukuran",rotationText:"Rotasi"},"gxp.QueryPanel.prototype":{queryByLocationText:"Query lokasi",currentTextText:"Sejauh ini",queryByAttributesText:"Query atribut",layerText:"Layer"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Scale 1:{scale}",labelFeaturesText:"Label Fitur",labelsText:"Labels",basicText:"Basic",advancedText:"Tingkat lanjut",limitByScaleText:"Batasan oleh skala",limitByConditionText:"Batasan oleh kondisi",symbolText:"Simbol",nameText:"Nama"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Scale 1:{scale}",minScaleLimitText:"Min scale limit",maxScaleLimitText:"Batas skala maksimum"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"solid",dashStrokeName:"dash",dotStrokeName:"dot",titleText:"Stroke",styleText:"Style",colorText:"Color",widthText:"Width",opacityText:"Opacity"},"gxp.StylePropertiesDialog.prototype":{titleText:"General",nameFieldText:"Name",titleFieldText:"Title",abstractFieldText:"Abstract"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Label nilai",haloText:"Halo",sizeText:"Ukuran"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"Tentang Program",titleText:"Judul",nameText:"Nama",descriptionText:"Deskripsi",displayText:"Tampilan",opacityText:"Kecerahan",formatText:"Format",transparentText:"Transparent",cacheText:"Cache",cacheFieldText:"Menggunakan versi cached",stylesText:"Styles tersedia",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Peta anda siap dipublikasikan melalui web! Cukup salin HTML berikut untuk meletakkan peta dalam situs web Anda:",heightLabel:"Tinggi",widthLabel:"Lebar",mapSizeLabel:"Ukuran peta",miniSizeLabel:"Mini",smallSizeLabel:"Kecil",premiumSizeLabel:"Premium",largeSizeLabel:"Besar"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Tambah",addStyleTip:"Tambah style baru",chooseStyleText:"Choose style",deleteStyleText:"Hilangkan",deleteStyleTip:"Hapus style yang dipilih",editStyleText:"Edit",editStyleTip:"Edit style yang dipilih",duplicateStyleText:"Duplikat",duplicateStyleTip:"Duplikat style yang dipilih",addRuleText:"Tambah",addRuleTip:"Tambah Rule baru",newRuleText:"New Rule",deleteRuleText:"Hilangkan",deleteRuleTip:"Hapus Rule yang dipilih",editRuleText:"Edit",editRuleTip:"Edit ule yang dipilih",duplicateRuleText:"Duplikat",duplicateRuleTip:"Duplikat style yang dipilih",cancelText:"Batal",saveText:"Save",styleWindowTitle:"User Style: {0}",ruleWindowTitle:"Style Rule: {0}",stylesFieldsetTitle:"Styles",rulesFieldsetTitle:"Rules"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Judul",titleEmptyText:"Judul Layer",abstractLabel:"Deskripsi",abstractEmptyText:"Deskripsi Layer",fileLabel:"Data",fieldEmptyText:"Pencarian arsip data...",uploadText:"Pengisian",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Mengisi Data anda...",invalidFileExtensionText:"Ekstensi file harus salah satu: ",optionsText:"Pilihan",workspaceLabel:"Ruang Kerja",workspaceEmptyText:"Ruang kerja Default",dataStoreLabel:"Penyimpanan",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Penyimpanan data Default"},"gxp.NewSourceDialog.prototype":{title:"Add New Server...",cancelText:"Cancel",addServerText:"Add Server",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Contacting Server..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Zoom level"},"gxp.Viewer.prototype":{saveErrorText:"Trouble saving: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Sumber",addPicasaText:"Picasa Foto",addYouTubeText:"YouTube Video",addRSSText:"GeoRSS Pakan lain",addFeedText:"Tambah ke Peta",addTitleText:"Judul",keywordText:"Kata Kunci",doneText:"Selesai",titleText:"Tambah Blog",maxResultsText:"Produk Max"}});GeoExt.Lang.add("nl",{"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Voeg kaartlagen toe",addActionTip:"Voeg kaartlagen toe",addServerText:"Voeg service toe",untitledText:"Onbekend",addLayerSourceErrorText:"Probleem bij het ophalen van de Error WMS GetCapabilities ({msg}).\nControleer de URL en probeer opnieuw.",availableLayersText:"Beschikbare kaartlagen",doneText:"Klaar",addFeedActionMenuText:"Add feeds",searchText:"Zoek naar kaartlagen"},"gxp.plugins.BingSource.prototype":{title:"Bing kaartlagen",roadTitle:"Bing wegen",aerialTitle:"Bing luchtfoto's",labeledAerialTitle:"Bing luchtfoto's met labels"},"gxp.plugins.FeatureEditor.prototype":{createFeatureActionTip:"Maak een nieuw object",editFeatureActionTip:"Wijzig een bestand object",commitTitle:"Wijzingsbeschrijving",commitText:"Voor a.u.b. een beschrijving in voor de wijziging:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Toon op kaart",firstPageTip:"Eerste pagina",previousPageTip:"Vorige pagina",zoomPageExtentTip:"Zoom naar de uitsnede van de pagina",nextPageTip:"Volgende pagina",lastPageTip:"Laatste pagina",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"3D weergave",tooltip:"Bekijk kaart in 3D"},"gxp.plugins.GoogleSource.prototype":{title:"Google Maps kaartlagen",roadmapAbstract:"Toon stratenkaart",satelliteAbstract:"Toon satellietbeeld",hybridAbstract:"Toon rasterbeelden met labels",terrainAbstract:"Toon stratenkaart met terrein"},"gxp.plugins.LayerProperties.prototype":{menuText:"Kaartlaag eigenschappen",toolTip:"Kaartlaag eigenschappen"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Kaartlagen",rootNodeText:"Kaartlagen",overlayNodeText:"Kaart overlays",baseNodeText:"Basis Kaarten"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Basis Kaart"},"gxp.plugins.Legend.prototype":{menuText:"Toon legenda",tooltip:"Toon legenda"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Laden van de kaart..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",buttonText:"Meten",lengthMenuText:"Lengte",areaMenuText:"Oppervlakte",lengthTooltip:"Meet lengte",areaTooltip:"Meet oppervlakte",measureTooltip:"Meten"},"gxp.plugins.Navigation.prototype":{menuText:"Verschuif kaart",tooltip:"Verschuif kaart"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Zoom naar de vorige uitsnede",nextMenuText:"Zoom naar de volgende uitsnede",previousTooltip:"Zoom naar de vorige uitsnede",nextTooltip:"Zoom naar de volgende uitsnede"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap kaartlagen",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Afdrukken",menuText:"Afdrukken kaart",tooltip:"Afdrukken kaart",previewText:"Voorvertoning",notAllNotPrintableText:"Niet alle lagen kunnen worden afgedrukt",nonePrintableText:"Geen van de huidige lagen kunnen worden afgedrukt"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest kaartlagen",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Rasterbeelden"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Bevraag",queryMenuText:"Bevraag kaartlaag",queryActionTip:"Bevraag de geselecteerde kaartlaag",queryByLocationText:"Query by current map extent",queryByAttributesText:"Bevraag middels attributen",queryMsg:"Bevragen...",cancelButtonText:"Annuleren",noFeaturesTitle:"Niks gevonden",noFeaturesMessage:"De bevraging heeft geen resultaten opgeleverd."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Verwijder kaartlaag",removeActionTip:"Verwijder kaartlaag"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Attribuut-informatie",popupTitle:"Attribuut-informatie"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Inzoomen",zoomOutMenuText:"Uitzoomen",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Inzoomen",zoomOutTooltip:"Uitzoomen"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Zoom naar de maximale uitsnede",tooltip:"Zoom naar de maximale uitsnede"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Zoom naar de uitsnede van de kaartlaag",tooltip:"Zoom naar de uitsnede van de kaartlaag"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Zoom naar de uitsnede van de kaartlaag",tooltip:"Zoom naar de uitsnede van de kaartlaag"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Zoom naar de geselecteerde objecten",tooltip:"Zoom naar de geselecteerde objecten"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Wijzigingen opslaan?",closeMsg:"Het object is gewijzigd. Wilt u de wijzigingen opslaan?",deleteMsgTitle:"Verwijder object?",deleteMsg:"Weet u zeker dat u dit object wilt verwijderen?",editButtonText:"Wijzigen",editButtonTooltip:"Wijzig dit object",deleteButtonText:"Verwijderen",deleteButtonTooltip:"Verwijder dit object",cancelButtonText:"Annuleren",cancelButtonTooltip:"Stop met wijzigen, wijzigingen worden ongedaan gemaakt",saveButtonText:"Opslaan",saveButtonTooltip:"Wijzigingen opslaan"},"gxp.FillSymbolizer.prototype":{fillText:"Opvulling",colorText:"Kleur",opacityText:"Opaciteit"},"gxp.FilterBuilder.prototype":{builderTypeNames:["om het even welk","alle","geen","niet alle"],preComboText:"Overeenkomst",postComboText:"van de volgende:",addConditionText:"voeg voorwaarde toe",addGroupText:"voeg groep toe",removeConditionText:"verwijder voorwaarde"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Naam",titleHeaderText:"Titel",queryableHeaderText:"Bevraagbaar",layerSelectionLabel:"Bekijk beschikbare data van:",layerAdditionLabel:"of voeg een nieuwe server toe.",expanderTemplateText:"<p><b>Samenvatting:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"cirkel",graphicSquareText:"vierkant",graphicTriangleText:"driehoek",graphicStarText:"ster",graphicCrossText:"kruis",graphicXText:"x",graphicExternalText:"extern",urlText:"URL",opacityText:"opaciteit",symbolText:"Symbool",sizeText:"Grootte",rotationText:"Rotatie"},"gxp.QueryPanel.prototype":{queryByLocationText:"Bevraag middels locatie",currentTextText:"Huidige uitsnede",queryByAttributesText:"Bevraag middels attributen",layerText:"Kaartlaag"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Schaal 1:{scale}",labelFeaturesText:"Label objecten",advancedText:"Geavanceerd",limitByScaleText:"Beperk middels schaal",limitByConditionText:"Beperk middels voorwaarde",symbolText:"Symbool",nameText:"Naam"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Schaal 1:{scale}",maxScaleLimitText:"Maximale schaal"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Label waardes",haloText:"Halo",sizeText:"Grootte"},"gxp.WMSLayerPanel.prototype":{attributionText:"Bronvermelding",aboutText:"Informatie",titleText:"Titel",nameText:"Naam",descriptionText:"Omschrijving",displayText:"Toon",opacityText:"Opaciteit",formatText:"Formaat",transparentText:"Transparant",cacheText:"Cache",cacheFieldText:"Gebruik de versie vanuit de cache",stylesText:"Beschikbare Stijlen",infoFormatText:"Info formaat",infoFormatEmptyText:"Selecteer een formaat",displayOptionsText:"Weergave opties",queryText:"Begrens d.m.v. query",scaleText:"Bregens d.m.v. schaal",minScaleText:"Minimum schaal",maxScaleText:"Maximum schaal",switchToFilterBuilderText:"Terug naar de querybuilder",cqlPrefixText:"of ",cqlText:"gebruik een CQL filter",singleTileText:"Enkele kaarttegel",singleTileFieldText:"Gebruik 1 kaarttegel"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Uw map is klaar voor publicatie! Kopieer de volgende HTML in uw website om de kaart in te voegen:",heightLabel:"Hoogte",widthLabel:"Breedte",mapSizeLabel:"Kaartgrootte",miniSizeLabel:"Mini",smallSizeLabel:"Klein",premiumSizeLabel:"Extra groot",largeSizeLabel:"Groot"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Voeg toe",addStyleTip:"Voeg een nieuwe stijl toe",deleteStyleText:"Verwijder",deleteStyleTip:"Verwijder de geselecteerde stijl",editStyleText:"Wijzig",editStyleTip:"Wijzig de geselecteerde stijl",duplicateStyleText:"Dupliceer",duplicateStyleTip:"Dupliceer de geselecteerde stijl",addRuleText:"Voeg toe",addRuleTip:"Voeg een nieuwe klasse toe",deleteRuleText:"Verwijder",deleteRuleTip:"Verwijder de geselecteerde klasse",editRuleText:"Wijzig",editRuleTip:"Wijzig de geselecteerde klasse",duplicateRuleText:"Dupliceer",duplicateRuleTip:"Dupliceer de geselecteerde klasse",cancelText:"Annuleer",styleWindowTitle:"Kaartstijl: {0}",ruleWindowTitle:"Klasse: {0}",stylesFieldsetTitle:"Kaartstijlen",rulesFieldsetTitle:"Klassen"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Titel",titleEmptyText:"Kaartlaag titel",abstractLabel:"Omschrijving",abstractEmptyText:"Kaartlaag omschrijving",fileLabel:"Data",fieldEmptyText:"Kies data archief...",uploadText:"Upload",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Bezig met uploaden van de data...",invalidFileExtensionText:"Bestandsextensie is een van: ",optionsText:"Opties",workspaceLabel:"Werkruimte",workspaceEmptyText:"Standaard werkruimte",dataStoreLabel:"Archief",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Standaard archief"},"gxp.NewSourceDialog.prototype":{title:"Add New Server...",cancelText:"Cancel",addServerText:"Add Server",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Contacting Server..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Zoom niveau"},"gxp.Viewer.prototype":{saveErrorText:"Problemen bij het opslaan: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Bron",addPicasaText:"Picasa Foto's",addYouTubeText:"YouTube video's",addRSSText:"Andere GeoRSS Feed",addFeedText:"Voeg toe aan Map",addTitleText:"Titel",keywordText:"Trefwoord",doneText:"Klaar",titleText:"Voeg Feeds",maxResultsText:"Max Items"}});GeoExt.Lang.add("no",{"gxp.menu.LayerMenu.prototype":{layerText:"Kartlag"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Legg til kartlag",addActionTip:"Legg til kartlag",addServerText:"Legg til en ny server",addButtonText:"Legg til kartlag",untitledText:"Uten titel",addLayerSourceErrorText:"Feil ved henting av WMS capabilities ({msg}).\nSjekk urlen og prøv igjen.",availableLayersText:"Tilgjengelige kartlag",expanderTemplateText:"<p><b>Abstrakt:</b> {abstract}</p>",panelTitleText:"Titel",layerSelectionText:"Vis tilgjengelige data fra:",doneText:"Ferdig",uploadText:"Last opp kartlag",addFeedActionMenuText:"Legg til feeds",searchText:"Søk etter kartlag"},"gxp.plugins.BingSource.prototype":{title:"Bing kartlag",roadTitle:"Bing Roads",aerialTitle:"Bing Aerial",labeledAerialTitle:"Bing Aerial med Etikett"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Editer",createFeatureActionText:"Lag",editFeatureActionText:"Modifiser",createFeatureActionTip:"Lag en ny feature",editFeatureActionTip:"Editer eksisterende feature",commitTitle:"Sjekk inn melding",commitText:"Skriv in en innsjekkingsmelding for denne editeringen:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Vis på kart",firstPageTip:"Første side",previousPageTip:"Neste side",zoomPageExtentTip:"Zoom til side utstrekning",nextPageTip:"Neste side",lastPageTip:"Siste side",totalMsg:"Features {1} til {2} av {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"3D Visning",tooltip:"Bytt til 3D Visning"},"gxp.plugins.GoogleSource.prototype":{title:"Google kartlag",roadmapAbstract:"Vis street map",satelliteAbstract:"Vis satelitt bilder",hybridAbstract:"Vis bilder med gatenavn",terrainAbstract:"Vis street map med terreng"},"gxp.plugins.LayerProperties.prototype":{menuText:"Kartlag Egenskaper",toolTip:"Kartlag Egenskaper"},"gxp.plugins.LayerTree.prototype":{shortTitle:"kartlag",rootNodeText:"Kartlag",overlayNodeText:"Kartlag",baseNodeText:"Bakgrunnskart"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Bakgrunnskart"},"gxp.plugins.Legend.prototype":{menuText:"Vis tegnforklaring",tooltip:"Vis tegnforklaring"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Laster kart..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox kartlag",blueMarbleTopoBathyJanTitle:"Blue Marble Topografi & Batymetri (januar)",blueMarbleTopoBathyJulTitle:"Blue Marble Topografi & Batymetri (Juli)",blueMarbleTopoJanTitle:"Blue Marble Topografi (januar)",blueMarbleTopoJulTitle:"Blue Marble Topografi (Juli)",controlRoomTitle:"Kontrollrom",geographyClassTitle:"Geografi Klasse",naturalEarthHypsoTitle:"Naturlig Jordklode Hypsometri",naturalEarthHypsoBathyTitle:"Naturlig Jordklode  Hypsometri & Batymetri",naturalEarth1Title:"Naturlig Jordklode I",naturalEarth2Title:"Naturlig Jordklode II",worldDarkTitle:"Verden Mørk",worldLightTitle:"Verden Lys",worldPrintTitle:"Verden utskrift"},"gxp.plugins.Measure.prototype":{buttonText:"Mål",lengthMenuText:"Lengde",areaMenuText:"Areal",lengthTooltip:"Mål lengde",areaTooltip:"Mål areal",measureTooltip:"Mål"},"gxp.plugins.Navigation.prototype":{menuText:"Panorer kart",tooltip:"Panorer kart"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Zoom til forrige utstrekning",nextMenuText:"Zoom til neste utstrekning",previousTooltip:"Zoom til forrige utstrekning",nextTooltip:"Zoom til neste utstrekning"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap Kartlag",mapnikAttribution:"&kopier; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> bidragsytere",osmarenderAttribution:"Data CC-By-SA av <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Skriv ut",menuText:"Skriv ut kart",tooltip:"Skriv ut kart",previewText:"Forhåndsvinsning av utskrift",notAllNotPrintableText:"Ikke alle kartlag kan skrives ut",nonePrintableText:"Ingen av dine valgte kartlag kan skrives ut"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Kartlag",osmAttribution:"Titler levert av <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tutker levert av <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest bilder"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Spør",queryMenuText:"Spør kartlag",queryActionTip:"Spør det valgte kartlaget",queryByLocationText:"Spør ved valgt kartlags utstrekning",queryByAttributesText:"Spør ved attributter",queryMsg:"Spørring...",cancelButtonText:"Kanseler",noFeaturesTitle:"Ingen treff",noFeaturesMessage:"Din spørring gav ingen treff."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Fjern kartlag",removeActionTip:"Fjern kartlag"},"gxp.plugins.Styler.prototype":{menuText:"Kartlag Stiler",tooltip:"Kartlag Stiler"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identifiser",infoActionTip:"Hent Feature Info",popupTitle:"Feature Info"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom firkant",zoomInMenuText:"Zoom inn",zoomOutMenuText:"Zoom ut",zoomTooltip:"Zoom ved å tegne en firkant",zoomInTooltip:"Zoom inn",zoomOutTooltip:"Zoom ut"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Zoom til maks utstrekning",tooltip:"Zoom til maks utstrekning"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Zoom til kartlagets utstrekning",tooltip:"Zoom til kartlagets utstrekning"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Zoom til kartlagets utstrekning",tooltip:"Zoom til kartlagets utstrekning"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Zoom til valgte features",tooltip:"Zoom til valgte features"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Lagre Endringer?",closeMsg:"Denne featuren har nye endringer som ikke er lagret. Vill du lagre endringene?",deleteMsgTitle:"Slett Feature?",deleteMsg:"Er du sikker på at du vil slette denne featuren?",editButtonText:"Editer",editButtonTooltip:"Gjør denne featuren editerbar",deleteButtonText:"Slett",deleteButtonTooltip:"Slett denne featuren",cancelButtonText:"Kanseler",cancelButtonTooltip:"Stopp editering, forkast endringer",saveButtonText:"Lagre",saveButtonTooltip:"Lagre endringer"},"gxp.FillSymbolizer.prototype":{fillText:"Fyll ut",colorText:"Farge",opacityText:"Gjennomskinnelighet"},"gxp.FilterBuilder.prototype":{builderTypeNames:["en","alle","ingen","ikke alle"],preComboText:"Treff",postComboText:"av følgende:",addConditionText:"legg til betingelse",addGroupText:"Legg til gruppe",removeConditionText:"fjern betingelse"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Navn",titleHeaderText:"Tittel",queryableHeaderText:"Mulig å spørre",layerSelectionLabel:"Vis tilgjengelig data fra:",layerAdditionLabel:"eller legg til en ny server.",expanderTemplateText:"<p><b>Abstrakt:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"sirkel",graphicSquareText:"firkant",graphicTriangleText:"triangel",graphicStarText:"stjerne",graphicCrossText:"kryss",graphicXText:"x",graphicExternalText:"ekstern",urlText:"URL",opacityText:"gjennomskinnelighet",symbolText:"Symbol",sizeText:"Størrelse",rotationText:"Rotasjon"},"gxp.QueryPanel.prototype":{queryByLocationText:"Spør etter plassering",currentTextText:"Nåværende utstrekning",queryByAttributesText:"Spør etter attributter",layerText:"Kartlag"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Målestokk 1:{scale}",labelFeaturesText:"Etikett Features",labelsText:"Etiketter",basicText:"Grunnleggende",advancedText:"Avansert",limitByScaleText:"Målestokksbegrensning",limitByConditionText:"Begrensning på tilstand",symbolText:"Symbol",nameText:"Navn"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Målestokk 1:{scale}",minScaleLimitText:"Minimum målestokksgrense",maxScaleLimitText:"Maximum målestokksgrense"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"solid",dashStrokeName:"dash",dotStrokeName:"dot",titleText:"Strek",styleText:"Stil",colorText:"Farge",widthText:"Bredde",opacityText:"gjennomskinnelighet"},"gxp.StylePropertiesDialog.prototype":{titleText:"Generel",nameFieldText:"Navn",titleFieldText:"Tittel",abstractFieldText:"Abstrakt"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Etikett verdier",haloText:"Halo",sizeText:"Størrelse"},"gxp.WMSLayerPanel.prototype":{attributionText:"Tilskrivende",aboutText:"Om",titleText:"Tittel",nameText:"Navn",descriptionText:"Beskrivelse",displayText:"Visning",opacityText:"Gjennomskinnelighet",formatText:"Format",transparentText:"Gjennomskinnelighet",cacheText:"Cache",cacheFieldText:"Bruk cachet versjon",stylesText:"Tilgjengelige Stiler",infoFormatText:"Info format",infoFormatEmptyText:"Velg et format",displayOptionsText:"Visningsvalg",queryText:"Begrensning ved filter",scaleText:"Begrensning ved målestokk",minScaleText:"Minimum målestokk",maxScaleText:"Maximum målestokk",switchToFilterBuilderText:"Bytt tilbake til filter bygger",cqlPrefixText:"eller ",cqlText:"bruk CQL filter istedenfor",singleTileText:"Enkel tile",singleTileFieldText:"Bruk enkel tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Ditt kartlag kan publisers til web!! Kopier følgende HTML for å legge ditt kartlag til din webside:",heightLabel:"Høyde",widthLabel:"Bredde",mapSizeLabel:"Kart størrelse",miniSizeLabel:"Mini",smallSizeLabel:"Liten",premiumSizeLabel:"Premium",largeSizeLabel:"Stor"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Legg til",addStyleTip:"Legg til en ny stil",chooseStyleText:"Velg en stil",deleteStyleText:"Fjern",deleteStyleTip:"Slett den valgte stilen",editStyleText:"Editer",editStyleTip:"Editer den valgte stilen",duplicateStyleText:"Reproduser",duplicateStyleTip:"Reproduser den valgte stilen",addRuleText:"Legg til",addRuleTip:"Legg til ny regel",newRuleText:"Ny Regel",deleteRuleText:"Fjern",deleteRuleTip:"Slett den valgte regelen",editRuleText:"Editer",editRuleTip:"Editer den valgte regelen",duplicateRuleText:"Reproduser",duplicateRuleTip:"Reproduser den valgte regelen",cancelText:"Kanseler",saveText:"Lagre",styleWindowTitle:"Bruker Stil: {0}",ruleWindowTitle:"Stil regel: {0}",stylesFieldsetTitle:"Stiler",rulesFieldsetTitle:"Regler"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Titel",titleEmptyText:"Kartlags titel",abstractLabel:"Beskrivelse",abstractEmptyText:"Kartlag beskrivelse",fileLabel:"Data",fieldEmptyText:"Bla igjennom data arkiv...",uploadText:"Last opp",uploadFailedText:"Opplasting feilet",processingUploadText:"Prosesserer opplasting...",waitMsgText:"Laster opp dataene...",invalidFileExtensionText:"Filtype må være en av: ",optionsText:"Valt",workspaceLabel:"arbeidsområde",workspaceEmptyText:"standard arbeidsområde",dataStoreLabel:"Lagre",dataStoreEmptyText:"Velg et lagringsmedium",dataStoreNewText:"Velg et nytt lagringsmedium",crsLabel:"KRS",crsEmptyText:"Koordinat Referanse System ID",invalidCrsText:"KRS identifikatorer må være en EPSG kode (e.g. EPSG:4326)"},"gxp.NewSourceDialog.prototype":{title:"Legg til ny Server...",cancelText:"Kanseler",addServerText:"Legg til Server",invalidURLText:"Skriv inn en gyldig URL til et WMS endepunkt (f.eks. http://example.com/geoserver/wms)",contactingServerText:"Kontakter Server..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Zoom nivå"},"gxp.Viewer.prototype":{saveErrorText:"Problemer med å lagre: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Kilde",addPicasaText:"Picasa Foto",addYouTubeText:"YouTube Videoer",addRSSText:"Andre GeoRSS Feed",addFeedText:"Legg til Kart",addTitleText:"Tittel",keywordText:"Nøkkelord",doneText:"Ferdig",titleText:"Legg til Feeds",maxResultsText:"Max elementer"}});GeoExt.Lang.add("pl",{"gxp.menu.LayerMenu.prototype":{layerText:"Warstwa"},"gxp.plugins.AddLayers.prototype":{addMenuText:"Dodaj warstwy",addActionTip:"Dodaj warstwy",addServerText:"Dodaj serwer",addButtonText:"Dodaj warstwy",untitledText:"Bez tytułu",addLayerSourceErrorText:"Błąd w czasie pobierania parametrów serwera WMS ({msg}).\nProszę sprawdzić adres.",availableLayersText:"Dostępne warstwy",expanderTemplateText:"<p><b>Opis:</b> {abstract}</p>",panelTitleText:"Tytuł",layerSelectionText:"Pokaż dostępne warstwy z:",doneText:"Gotowe",uploadText:"Wyślij dane",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Bing Maps",roadTitle:"Bing - drogi",aerialTitle:"Bing - ortofoto",labeledAerialTitle:"Bing - ortofoto z etykietami"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Utwórz nowy obiekt",editFeatureActionTip:"Edytuj istniejący obiekt",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Pokaż na mapie",firstPageTip:"Pierwsza strona",previousPageTip:"Poprzednia strona",zoomPageExtentTip:"Powiększ do zasięgu strony",nextPageTip:"Następna strona",lastPageTip:"Ostatnia strona",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"Przeglądarka 3D",tooltip:"Przełącz do widoku 3D"},"gxp.plugins.GoogleSource.prototype":{title:"Google Maps",roadmapAbstract:"Mapa drogowa",satelliteAbstract:"Zdjęcia satelitarne",hybridAbstract:"Zdjęcia satelitarne z etykietami",terrainAbstract:"Mapa terenowa z etykietami"},"gxp.plugins.LayerProperties.prototype":{menuText:"Właściwości",toolTip:"Właściwości"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Mapa",rootNodeText:"Mapa",overlayNodeText:"Warstwy",baseNodeText:"Mapa referencyjna"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Mapa referencyjna"},"gxp.plugins.Legend.prototype":{menuText:"Legenda mapy",tooltip:"Legenda mapy"},"gxp.plugins.Measure.prototype":{buttonText:"Pomiary",lengthMenuText:"Długość",areaMenuText:"Powierzchnia",lengthTooltip:"Pomiar odległości",areaTooltip:"Pomiar powierzchni",measureTooltip:"Pomiary"},"gxp.plugins.Navigation.prototype":{menuText:"Przesuń mapę",tooltip:"Przesuń mapę"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Poprzedni widok",nextMenuText:"Kolejny widok",previousTooltip:"Poprzedni widok",nextTooltip:"Kolejny widok"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Drukuj",menuText:"Drukuj",tooltip:"Drukuj",previewText:"Podgląd wydruku",notAllNotPrintableText:"Nie wszystkie warstwy mogą być wydrukowane",nonePrintableText:"Żadna z warstw nie może byc wydrukowana"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Wyszukaj",queryMenuText:"Przeszukaj warstwę",queryActionTip:"Przeszukaj zaznaczoną warstwę",queryByLocationText:"Query by current map extent",queryByAttributesText:"Przeszukaj po atrybutach",queryMsg:"Przeszukiwanie...",cancelButtonText:"Anuluj",noFeaturesTitle:"Brak danych",noFeaturesMessage:"Przeszukanie nie zwróciło żadnych danych."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Usuń warstwę",removeActionTip:"Usuń warstwę"},"gxp.plugins.Styler.prototype":{menuText:"Eycja styli",tooltip:"Zarządzanie stylami warstwy"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Info o obiekcie",popupTitle:"Info o obiekcie"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Powiększ",zoomOutMenuText:"Pomniejsz",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Powiększ",zoomOutTooltip:"Pomniejsz"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Cała mapa",tooltip:"Cała mapa"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Powiększ do zasięgu całej warstwy",tooltip:"Powiększ do zasięgu całej warstwy"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Powiększ do zasięgu całej warstwy",tooltip:"Powiększ do zasięgu całej warstwy"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Powiększ do wybranych obiektów",tooltip:"Powiększ do wybranych obiektów"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Zapisać zmiany?",closeMsg:"Istnieją nie zapisane zmiany. Chcesz je zapisać?",deleteMsgTitle:"Usunąć obiekt?",deleteMsg:"Jesteś pewien że chcesz usunąć ten obiekt?",editButtonText:"Edytuj",editButtonTooltip:"Edytuj ten obiekt",deleteButtonText:"Usuń",deleteButtonTooltip:"Usuń ten obiekt",cancelButtonText:"Anuluj",cancelButtonTooltip:"Anuluj edycję i nie zapisuj zmian",saveButtonText:"Zapisz",saveButtonTooltip:"Zapisz zmiany"},"gxp.FillSymbolizer.prototype":{fillText:"Wypełnienie",colorText:"Kolor",opacityText:"Prześwit"},"gxp.FilterBuilder.prototype":{builderTypeNames:["dowolny","wszystkie","żaden","odwrotność"],preComboText:"Dopasuj",postComboText:"sposród:",addConditionText:"dodaj warunek",addGroupText:"dodaj grupę",removeConditionText:"usuń warunek"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Nazwa",titleHeaderText:"Tytuł",queryableHeaderText:"Przeszukiwalna",layerSelectionLabel:"Zobacz dostępne dane z:",layerAdditionLabel:"lub dodaj serwer.",expanderTemplateText:"<p><b>Opis:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"koło",graphicSquareText:"kwadrat",graphicTriangleText:"trójkąt",graphicStarText:"gwiazda",graphicCrossText:"krzyż",graphicXText:"x",graphicExternalText:"inny",urlText:"URL",opacityText:"Prześwit",symbolText:"Symbol",sizeText:"Rozmiar",rotationText:"Obrót"},"gxp.QueryPanel.prototype":{queryByLocationText:"Zapytanie przestrzenne",currentTextText:"Aktualne powiększenie",queryByAttributesText:"Zapytanie atrybutowe",layerText:"Warstwa"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Skala 1:{scale}",labelFeaturesText:"Etykiety obiektów",labelsText:"Etykiety",basicText:"Podstawowa",advancedText:"Zaawansowana",limitByScaleText:"Ograniczenie skalowe",limitByConditionText:"Ograniczenie warunkowe",symbolText:"Symbol",nameText:"Nazwa"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Skala 1:{scale}",minScaleLimitText:"Skala min.",maxScaleLimitText:"Skala max"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"ciągły",dashStrokeName:"kreskowany",dotStrokeName:"kropkowany",titleText:"Obrys",styleText:"Styl",colorText:"Kolor",widthText:"Grubość",opacityText:"Prześwit"},"gxp.StylePropertiesDialog.prototype":{titleText:"Ogólny",nameFieldText:"Nazwa",titleFieldText:"Tytuł",abstractFieldText:"Opis"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Wartości etykiet",haloText:"Efekt Halo",sizeText:"Rozmiar"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"O",titleText:"Tytuł",nameText:"Nazwa",descriptionText:"Opis",displayText:"Wyświetlanie",opacityText:"Prześwit",formatText:"Format",transparentText:"Przeźr.",cacheText:"Cache",cacheFieldText:"Użyj wersji cache",stylesText:"Dostępne Style",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Twoja mapa jest gotowa do publikacji! Po prostu wklej poniższy kod na swojej witrynie:",heightLabel:"Wysokość",widthLabel:"Szerokość",mapSizeLabel:"Rozmiar mapy",miniSizeLabel:"Mini",smallSizeLabel:"Mały",premiumSizeLabel:"Średni",largeSizeLabel:"Duży"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Dodaj",addStyleTip:"Dodaj nowy styl",chooseStyleText:"Wybierz styl",deleteStyleText:"Usuń",deleteStyleTip:"Usuń styl",editStyleText:"Edytuj",editStyleTip:"Edytuj wybrany styl",duplicateStyleText:"Stwórz kopię",duplicateStyleTip:"Stwórz kopię wybranego stylu",addRuleText:"Dodaj",addRuleTip:"Dodaj nową regułę",newRuleText:"Nowa reguła",deleteRuleText:"Usuń",deleteRuleTip:"Usuń wybraną regułę",editRuleText:"Edytuj",editRuleTip:"Edytuj wybraną regułę",duplicateRuleText:"Stwórz kopię",duplicateRuleTip:"Skopiuj wybraną regułę",cancelText:"Anuluj",saveText:"Zapisz",styleWindowTitle:"Styl użytkownika: {0}",ruleWindowTitle:"Reguła stylu: {0}",stylesFieldsetTitle:"Style",rulesFieldsetTitle:"Reguły"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Tytuł",titleEmptyText:"Tytuł warstwy",abstractLabel:"Opis",abstractEmptyText:"Opis warstwy",fileLabel:"Dane",fieldEmptyText:"Wskaż lokalizację danych...",uploadText:"Prześlij",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",importText:"Importing upload...",waitMsgText:"Przesyłanie danych...",invalidFileExtensionText:"Typ pliku musi być jednym z poniższych: ",optionsText:"Opcje",workspaceLabel:"Obszar roboczy",workspaceEmptyText:"Domyślny obszar roboczy",dataStoreLabel:"Magazyn danych",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Domyślny magazyn danych"},"gxp.NewSourceDialog.prototype":{title:"Dodaj serwer...",cancelText:"Anuluj",addServerText:"Dodaj serwer",invalidURLText:"Podaj prawidłowy adres URL usługi WMS (n.p. http://example.com/geoserver/wms)",contactingServerText:"Łączenie z serwerem..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Poziom powiększenia"},"gxp.Viewer.prototype":{saveErrorText:"Trouble saving: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Źródło",addPicasaText:"Picasa zdjęcia",addYouTubeText:"YouTube Videos",addRSSText:"Inne GeoRSS",addFeedText:"Dodaj do mapy",addTitleText:"Tytuł",keywordText:"Słowo",doneText:"Gotowe",titleText:"Dodaj kanały",maxResultsText:"Rzeczy Max"}});
