var OpenLayers={VERSION_NUMBER:"Release 2.13 dev",singleFile:true,_getScriptLocation:(function(){var f=new RegExp("(^|(.*?\\/))(OpenLayers[^\\/]*?\\.js)(\\?|$)"),e=document.getElementsByTagName("script"),g,b,c="";for(var d=0,a=e.length;d<a;d++){g=e[d].getAttribute("src");if(g){b=g.match(f);if(b){c=b[1];break}}}return(function(){return c})})(),ImgPath:""};OpenLayers.Class=function(){var a=arguments.length;var d=arguments[0];var c=arguments[a-1];var e=typeof c.initialize=="function"?c.initialize:function(){d.prototype.initialize.apply(this,arguments)};if(a>1){var b=[e,d].concat(Array.prototype.slice.call(arguments).slice(1,a-1),c);OpenLayers.inherit.apply(null,b)}else{e.prototype=c}return e};OpenLayers.inherit=function(f,d){var c=function(){};c.prototype=d.prototype;f.prototype=new c;var b,a,e;for(b=2,a=arguments.length;b<a;b++){e=arguments[b];if(typeof e==="function"){e=e.prototype}OpenLayers.Util.extend(f.prototype,e)}};OpenLayers.Util=OpenLayers.Util||{};OpenLayers.Util.extend=function(a,e){a=a||{};if(e){for(var d in e){var c=e[d];if(c!==undefined){a[d]=c}}var b=typeof window.Event=="function"&&e instanceof window.Event;if(!b&&e.hasOwnProperty&&e.hasOwnProperty("toString")){a.toString=e.toString}}return a};OpenLayers.String={startsWith:function(b,a){return(b.indexOf(a)==0)},contains:function(b,a){return(b.indexOf(a)!=-1)},trim:function(a){return a.replace(/^\s\s*/,"").replace(/\s\s*$/,"")},camelize:function(f){var d=f.split("-");var b=d[0];for(var c=1,a=d.length;c<a;c++){var e=d[c];b+=e.charAt(0).toUpperCase()+e.substring(1)}return b},format:function(d,c,a){if(!c){c=window}var b=function(j,e){var h;var g=e.split(/\.+/);for(var f=0;f<g.length;f++){if(f==0){h=c}if(h===undefined){break}h=h[g[f]]}if(typeof h=="function"){h=a?h.apply(null,a):h()}if(typeof h=="undefined"){return"undefined"}else{return h}};return d.replace(OpenLayers.String.tokenRegEx,b)},tokenRegEx:/\$\{([\w.]+?)\}/g,numberRegEx:/^([+-]?)(?=\d|\.\d)\d*(\.\d*)?([Ee]([+-]?\d+))?$/,isNumeric:function(a){return OpenLayers.String.numberRegEx.test(a)},numericIf:function(b,c){var a=b;if(c===true&&b!=null&&b.replace){b=b.replace(/^\s*|\s*$/g,"")}return OpenLayers.String.isNumeric(b)?parseFloat(b):a}};OpenLayers.Number={decimalSeparator:".",thousandsSeparator:",",limitSigDigs:function(a,c){var b=0;if(c>0){b=parseFloat(a.toPrecision(c))}return b},format:function(c,a,g,i){a=(typeof a!="undefined")?a:0;g=(typeof g!="undefined")?g:OpenLayers.Number.thousandsSeparator;i=(typeof i!="undefined")?i:OpenLayers.Number.decimalSeparator;if(a!=null){c=parseFloat(c.toFixed(a))}var b=c.toString().split(".");if(b.length==1&&a==null){a=0}var d=b[0];if(g){var e=/(-?[0-9]+)([0-9]{3})/;while(e.test(d)){d=d.replace(e,"$1"+g+"$2")}}var f;if(a==0){f=d}else{var h=b.length>1?b[1]:"0";if(a!=null){h=h+new Array(a-h.length+1).join("0")}f=d+i+h}return f},zeroPad:function(b,a,c){var d=b.toString(c||10);while(d.length<a){d="0"+d}return d}};OpenLayers.Function={bind:function(c,b){var a=Array.prototype.slice.apply(arguments,[2]);return function(){var d=a.concat(Array.prototype.slice.apply(arguments,[0]));return c.apply(b,d)}},bindAsEventListener:function(b,a){return function(c){return b.call(a,c||window.event)}},False:function(){return false},True:function(){return true},Void:function(){}};OpenLayers.Array={filter:function(g,f,b){var d=[];if(Array.prototype.filter){d=g.filter(f,b)}else{var a=g.length;if(typeof f!="function"){throw new TypeError()}for(var c=0;c<a;c++){if(c in g){var e=g[c];if(f.call(b,e,c,g)){d.push(e)}}}}return d}};OpenLayers.Bounds=OpenLayers.Class({left:null,bottom:null,right:null,top:null,centerLonLat:null,initialize:function(d,a,b,c){if(OpenLayers.Util.isArray(d)){c=d[3];b=d[2];a=d[1];d=d[0]}if(d!=null){this.left=OpenLayers.Util.toFloat(d)}if(a!=null){this.bottom=OpenLayers.Util.toFloat(a)}if(b!=null){this.right=OpenLayers.Util.toFloat(b)}if(c!=null){this.top=OpenLayers.Util.toFloat(c)}},clone:function(){return new OpenLayers.Bounds(this.left,this.bottom,this.right,this.top)},equals:function(b){var a=false;if(b!=null){a=((this.left==b.left)&&(this.right==b.right)&&(this.top==b.top)&&(this.bottom==b.bottom))}return a},toString:function(){return[this.left,this.bottom,this.right,this.top].join(",")},toArray:function(a){if(a===true){return[this.bottom,this.left,this.top,this.right]}else{return[this.left,this.bottom,this.right,this.top]}},toBBOX:function(b,e){if(b==null){b=6}var g=Math.pow(10,b);var f=Math.round(this.left*g)/g;var d=Math.round(this.bottom*g)/g;var c=Math.round(this.right*g)/g;var a=Math.round(this.top*g)/g;if(e===true){return d+","+f+","+a+","+c}else{return f+","+d+","+c+","+a}},toGeometry:function(){return new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(this.left,this.bottom),new OpenLayers.Geometry.Point(this.right,this.bottom),new OpenLayers.Geometry.Point(this.right,this.top),new OpenLayers.Geometry.Point(this.left,this.top)])])},getWidth:function(){return(this.right-this.left)},getHeight:function(){return(this.top-this.bottom)},getSize:function(){return new OpenLayers.Size(this.getWidth(),this.getHeight())},getCenterPixel:function(){return new OpenLayers.Pixel((this.left+this.right)/2,(this.bottom+this.top)/2)},getCenterLonLat:function(){if(!this.centerLonLat){this.centerLonLat=new OpenLayers.LonLat((this.left+this.right)/2,(this.bottom+this.top)/2)}return this.centerLonLat},scale:function(e,c){if(c==null){c=this.getCenterLonLat()}var a,h;if(c.CLASS_NAME=="OpenLayers.LonLat"){a=c.lon;h=c.lat}else{a=c.x;h=c.y}var g=(this.left-a)*e+a;var b=(this.bottom-h)*e+h;var d=(this.right-a)*e+a;var f=(this.top-h)*e+h;return new OpenLayers.Bounds(g,b,d,f)},add:function(a,b){if((a==null)||(b==null)){throw new TypeError("Bounds.add cannot receive null values")}return new OpenLayers.Bounds(this.left+a,this.bottom+b,this.right+a,this.top+b)},extend:function(a){if(a){switch(a.CLASS_NAME){case"OpenLayers.LonLat":this.extendXY(a.lon,a.lat);break;case"OpenLayers.Geometry.Point":this.extendXY(a.x,a.y);break;case"OpenLayers.Bounds":this.centerLonLat=null;if((this.left==null)||(a.left<this.left)){this.left=a.left}if((this.bottom==null)||(a.bottom<this.bottom)){this.bottom=a.bottom}if((this.right==null)||(a.right>this.right)){this.right=a.right}if((this.top==null)||(a.top>this.top)){this.top=a.top}break}}},extendXY:function(a,b){this.centerLonLat=null;if((this.left==null)||(a<this.left)){this.left=a}if((this.bottom==null)||(b<this.bottom)){this.bottom=b}if((this.right==null)||(a>this.right)){this.right=a}if((this.top==null)||(b>this.top)){this.top=b}},containsLonLat:function(f,c){if(typeof c==="boolean"){c={inclusive:c}}c=c||{};var d=this.contains(f.lon,f.lat,c.inclusive),e=c.worldBounds;if(e&&!d){var g=e.getWidth();var a=(e.left+e.right)/2;var b=Math.round((f.lon-a)/g);d=this.containsLonLat({lon:f.lon-b*g,lat:f.lat},{inclusive:c.inclusive})}return d},containsPixel:function(b,a){return this.contains(b.x,b.y,a)},contains:function(b,d,a){if(a==null){a=true}if(b==null||d==null){return false}b=OpenLayers.Util.toFloat(b);d=OpenLayers.Util.toFloat(d);var c=false;if(a){c=((b>=this.left)&&(b<=this.right)&&(d>=this.bottom)&&(d<=this.top))}else{c=((b>this.left)&&(b<this.right)&&(d>this.bottom)&&(d<this.top))}return c},intersectsBounds:function(a,m){if(typeof m==="boolean"){m={inclusive:m}}m=m||{};if(m.worldBounds){var l=this.wrapDateLine(m.worldBounds);a=a.wrapDateLine(m.worldBounds)}else{l=this}if(m.inclusive==null){m.inclusive=true}var h=false;var i=(l.left==a.right||l.right==a.left||l.top==a.bottom||l.bottom==a.top);if(m.inclusive||!i){var j=(((a.bottom>=l.bottom)&&(a.bottom<=l.top))||((l.bottom>=a.bottom)&&(l.bottom<=a.top)));var k=(((a.top>=l.bottom)&&(a.top<=l.top))||((l.top>a.bottom)&&(l.top<a.top)));var d=(((a.left>=l.left)&&(a.left<=l.right))||((l.left>=a.left)&&(l.left<=a.right)));var c=(((a.right>=l.left)&&(a.right<=l.right))||((l.right>=a.left)&&(l.right<=a.right)));h=((j||k)&&(d||c))}if(m.worldBounds&&!h){var g=m.worldBounds;var b=g.getWidth();var f=!g.containsBounds(l);var e=!g.containsBounds(a);if(f&&!e){a=a.add(-b,0);h=l.intersectsBounds(a,{inclusive:m.inclusive})}else{if(e&&!f){l=l.add(-b,0);h=a.intersectsBounds(l,{inclusive:m.inclusive})}}}return h},containsBounds:function(g,b,a){if(b==null){b=false}if(a==null){a=true}var c=this.contains(g.left,g.bottom,a);var d=this.contains(g.right,g.bottom,a);var f=this.contains(g.left,g.top,a);var e=this.contains(g.right,g.top,a);return(b)?(c||d||f||e):(c&&d&&f&&e)},determineQuadrant:function(c){var b="";var a=this.getCenterLonLat();b+=(c.lat<a.lat)?"b":"t";b+=(c.lon<a.lon)?"l":"r";return b},transform:function(d,b){this.centerLonLat=null;var e=OpenLayers.Projection.transform({x:this.left,y:this.bottom},d,b);var a=OpenLayers.Projection.transform({x:this.right,y:this.bottom},d,b);var c=OpenLayers.Projection.transform({x:this.left,y:this.top},d,b);var f=OpenLayers.Projection.transform({x:this.right,y:this.top},d,b);this.left=Math.min(e.x,c.x);this.bottom=Math.min(e.y,a.y);this.right=Math.max(a.x,f.x);this.top=Math.max(c.y,f.y);return this},wrapDateLine:function(a,c){c=c||{};var e=c.leftTolerance||0;var b=c.rightTolerance||0;var g=this.clone();if(a){var d=a.getWidth();while(g.left<a.left&&g.right-b<=a.left){g=g.add(d,0)}while(g.left+e>=a.right&&g.right>a.right){g=g.add(-d,0)}var f=g.left+e;if(f<a.right&&f>a.left&&g.right-b>a.right){g=g.add(-d,0)}}return g},CLASS_NAME:"OpenLayers.Bounds"});OpenLayers.Bounds.fromString=function(c,b){var a=c.split(",");return OpenLayers.Bounds.fromArray(a,b)};OpenLayers.Bounds.fromArray=function(b,a){return a===true?new OpenLayers.Bounds(b[1],b[0],b[3],b[2]):new OpenLayers.Bounds(b[0],b[1],b[2],b[3])};OpenLayers.Bounds.fromSize=function(a){return new OpenLayers.Bounds(0,a.h,a.w,0)};OpenLayers.Bounds.oppositeQuadrant=function(a){var b="";b+=(a.charAt(0)=="t")?"b":"t";b+=(a.charAt(1)=="l")?"r":"l";return b};OpenLayers.Element={visible:function(a){return OpenLayers.Util.getElement(a).style.display!="none"},toggle:function(){for(var c=0,a=arguments.length;c<a;c++){var b=OpenLayers.Util.getElement(arguments[c]);var d=OpenLayers.Element.visible(b)?"none":"";b.style.display=d}},remove:function(a){a=OpenLayers.Util.getElement(a);a.parentNode.removeChild(a)},getHeight:function(a){a=OpenLayers.Util.getElement(a);return a.offsetHeight},hasClass:function(b,a){var c=b.className;return(!!c&&new RegExp("(^|\\s)"+a+"(\\s|$)").test(c))},addClass:function(b,a){if(!OpenLayers.Element.hasClass(b,a)){b.className+=(b.className?" ":"")+a}return b},removeClass:function(b,a){var c=b.className;if(c){b.className=OpenLayers.String.trim(c.replace(new RegExp("(^|\\s+)"+a+"(\\s+|$)")," "))}return b},toggleClass:function(b,a){if(OpenLayers.Element.hasClass(b,a)){OpenLayers.Element.removeClass(b,a)}else{OpenLayers.Element.addClass(b,a)}return b},getStyle:function(c,d){c=OpenLayers.Util.getElement(c);var e=null;if(c&&c.style){e=c.style[OpenLayers.String.camelize(d)];if(!e){if(document.defaultView&&document.defaultView.getComputedStyle){var b=document.defaultView.getComputedStyle(c,null);e=b?b.getPropertyValue(d):null}else{if(c.currentStyle){e=c.currentStyle[OpenLayers.String.camelize(d)]}}}var a=["left","top","right","bottom"];if(window.opera&&(OpenLayers.Util.indexOf(a,d)!=-1)&&(OpenLayers.Element.getStyle(c,"position")=="static")){e="auto"}}return e=="auto"?null:e}};OpenLayers.LonLat=OpenLayers.Class({lon:0,lat:0,initialize:function(b,a){if(OpenLayers.Util.isArray(b)){a=b[1];b=b[0]}this.lon=OpenLayers.Util.toFloat(b);this.lat=OpenLayers.Util.toFloat(a)},toString:function(){return("lon="+this.lon+",lat="+this.lat)},toShortString:function(){return(this.lon+", "+this.lat)},clone:function(){return new OpenLayers.LonLat(this.lon,this.lat)},add:function(b,a){if((b==null)||(a==null)){throw new TypeError("LonLat.add cannot receive null values")}return new OpenLayers.LonLat(this.lon+OpenLayers.Util.toFloat(b),this.lat+OpenLayers.Util.toFloat(a))},equals:function(b){var a=false;if(b!=null){a=((this.lon==b.lon&&this.lat==b.lat)||(isNaN(this.lon)&&isNaN(this.lat)&&isNaN(b.lon)&&isNaN(b.lat)))}return a},transform:function(c,b){var a=OpenLayers.Projection.transform({x:this.lon,y:this.lat},c,b);this.lon=a.x;this.lat=a.y;return this},wrapDateLine:function(a){var b=this.clone();if(a){while(b.lon<a.left){b.lon+=a.getWidth()}while(b.lon>a.right){b.lon-=a.getWidth()}}return b},CLASS_NAME:"OpenLayers.LonLat"});OpenLayers.LonLat.fromString=function(b){var a=b.split(",");return new OpenLayers.LonLat(a[0],a[1])};OpenLayers.LonLat.fromArray=function(a){var b=OpenLayers.Util.isArray(a),d=b&&a[0],c=b&&a[1];return new OpenLayers.LonLat(d,c)};OpenLayers.Pixel=OpenLayers.Class({x:0,y:0,initialize:function(a,b){this.x=parseFloat(a);this.y=parseFloat(b)},toString:function(){return("x="+this.x+",y="+this.y)},clone:function(){return new OpenLayers.Pixel(this.x,this.y)},equals:function(a){var b=false;if(a!=null){b=((this.x==a.x&&this.y==a.y)||(isNaN(this.x)&&isNaN(this.y)&&isNaN(a.x)&&isNaN(a.y)))}return b},distanceTo:function(a){return Math.sqrt(Math.pow(this.x-a.x,2)+Math.pow(this.y-a.y,2))},add:function(a,b){if((a==null)||(b==null)){throw new TypeError("Pixel.add cannot receive null values")}return new OpenLayers.Pixel(this.x+a,this.y+b)},offset:function(a){var b=this.clone();if(a){b=this.add(a.x,a.y)}return b},CLASS_NAME:"OpenLayers.Pixel"});OpenLayers.Size=OpenLayers.Class({w:0,h:0,initialize:function(a,b){this.w=parseFloat(a);this.h=parseFloat(b)},toString:function(){return("w="+this.w+",h="+this.h)},clone:function(){return new OpenLayers.Size(this.w,this.h)},equals:function(b){var a=false;if(b!=null){a=((this.w==b.w&&this.h==b.h)||(isNaN(this.w)&&isNaN(this.h)&&isNaN(b.w)&&isNaN(b.h)))}return a},CLASS_NAME:"OpenLayers.Size"});OpenLayers.Console={log:function(){},debug:function(){},info:function(){},warn:function(){},error:function(){},userError:function(a){alert(a)},assert:function(){},dir:function(){},dirxml:function(){},trace:function(){},group:function(){},groupEnd:function(){},time:function(){},timeEnd:function(){},profile:function(){},profileEnd:function(){},count:function(){},CLASS_NAME:"OpenLayers.Console"};(function(){var b=document.getElementsByTagName("script");for(var c=0,a=b.length;c<a;++c){if(b[c].src.indexOf("firebug.js")!=-1){if(console){OpenLayers.Util.extend(OpenLayers.Console,console);break}}}})();OpenLayers.Lang={code:null,defaultCode:"en",getCode:function(){if(!OpenLayers.Lang.code){OpenLayers.Lang.setCode()}return OpenLayers.Lang.code},setCode:function(b){var d;if(!b){b=(OpenLayers.BROWSER_NAME=="msie")?navigator.userLanguage:navigator.language}var c=b.split("-");c[0]=c[0].toLowerCase();if(typeof OpenLayers.Lang[c[0]]=="object"){d=c[0]}if(c[1]){var a=c[0]+"-"+c[1].toUpperCase();if(typeof OpenLayers.Lang[a]=="object"){d=a}}if(!d){OpenLayers.Console.warn("Failed to find OpenLayers.Lang."+c.join("-")+" dictionary, falling back to default language");d=OpenLayers.Lang.defaultCode}OpenLayers.Lang.code=d},translate:function(b,a){var d=OpenLayers.Lang[OpenLayers.Lang.getCode()];var c=d&&d[b];if(!c){c=b}if(a){c=OpenLayers.String.format(c,a)}return c}};OpenLayers.i18n=OpenLayers.Lang.translate;OpenLayers.Util=OpenLayers.Util||{};OpenLayers.Util.getElement=function(){var d=[];for(var c=0,a=arguments.length;c<a;c++){var b=arguments[c];if(typeof b=="string"){b=document.getElementById(b)}if(arguments.length==1){return b}d.push(b)}return d};OpenLayers.Util.isElement=function(a){return !!(a&&a.nodeType===1)};OpenLayers.Util.isArray=function(b){return(Object.prototype.toString.call(b)==="[object Array]")};OpenLayers.Util.removeItem=function(c,b){for(var a=c.length-1;a>=0;a--){if(c[a]==b){c.splice(a,1)}}return c};OpenLayers.Util.indexOf=function(d,c){if(typeof d.indexOf=="function"){return d.indexOf(c)}else{for(var b=0,a=d.length;b<a;b++){if(d[b]==c){return b}}return -1}};OpenLayers.Util.dotless=/\./g;OpenLayers.Util.modifyDOMElement=function(e,h,d,f,a,c,g,b){if(h){e.id=h.replace(OpenLayers.Util.dotless,"_")}if(d){e.style.left=d.x+"px";e.style.top=d.y+"px"}if(f){e.style.width=f.w+"px";e.style.height=f.h+"px"}if(a){e.style.position=a}if(c){e.style.border=c}if(g){e.style.overflow=g}if(parseFloat(b)>=0&&parseFloat(b)<1){e.style.filter="alpha(opacity="+(b*100)+")";e.style.opacity=b}else{if(parseFloat(b)==1){e.style.filter="";e.style.opacity=""}}};OpenLayers.Util.createDiv=function(a,i,h,f,e,c,b,g){var d=document.createElement("div");if(f){d.style.backgroundImage="url("+f+")"}if(!a){a=OpenLayers.Util.createUniqueID("OpenLayersDiv")}if(!e){e="absolute"}OpenLayers.Util.modifyDOMElement(d,a,i,h,e,c,b,g);return d};OpenLayers.Util.createImage=function(a,i,h,e,d,c,f,j){var b=document.createElement("img");if(!a){a=OpenLayers.Util.createUniqueID("OpenLayersDiv")}if(!d){d="relative"}OpenLayers.Util.modifyDOMElement(b,a,i,h,d,c,null,f);if(j){b.style.display="none";function g(){b.style.display="";OpenLayers.Event.stopObservingElement(b)}OpenLayers.Event.observe(b,"load",g);OpenLayers.Event.observe(b,"error",g)}b.style.alt=a;b.galleryImg="no";if(e){b.src=e}return b};OpenLayers.IMAGE_RELOAD_ATTEMPTS=0;OpenLayers.Util.alphaHackNeeded=null;OpenLayers.Util.alphaHack=function(){if(OpenLayers.Util.alphaHackNeeded==null){var d=navigator.appVersion.split("MSIE");var a=parseFloat(d[1]);var b=false;try{b=!!(document.body.filters)}catch(c){}OpenLayers.Util.alphaHackNeeded=(b&&(a>=5.5)&&(a<7))}return OpenLayers.Util.alphaHackNeeded};OpenLayers.Util.modifyAlphaImageDiv=function(a,b,j,i,g,f,c,d,h){OpenLayers.Util.modifyDOMElement(a,b,j,i,f,null,null,h);var e=a.childNodes[0];if(g){e.src=g}OpenLayers.Util.modifyDOMElement(e,a.id+"_innerImage",null,i,"relative",c);if(OpenLayers.Util.alphaHack()){if(a.style.display!="none"){a.style.display="inline-block"}if(d==null){d="scale"}a.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+e.src+"', sizingMethod='"+d+"')";if(parseFloat(a.style.opacity)>=0&&parseFloat(a.style.opacity)<1){a.style.filter+=" alpha(opacity="+a.style.opacity*100+")"}e.style.filter="alpha(opacity=0)"}};OpenLayers.Util.createAlphaImageDiv=function(b,j,i,g,f,c,d,h,k){var a=OpenLayers.Util.createDiv();var e=OpenLayers.Util.createImage(null,null,null,null,null,null,null,k);e.className="olAlphaImg";a.appendChild(e);OpenLayers.Util.modifyAlphaImageDiv(a,b,j,i,g,f,c,d,h);return a};OpenLayers.Util.upperCaseObject=function(b){var a={};for(var c in b){a[c.toUpperCase()]=b[c]}return a};OpenLayers.Util.applyDefaults=function(d,c){d=d||{};var b=typeof window.Event=="function"&&c instanceof window.Event;for(var a in c){if(d[a]===undefined||(!b&&c.hasOwnProperty&&c.hasOwnProperty(a)&&!d.hasOwnProperty(a))){d[a]=c[a]}}if(!b&&c&&c.hasOwnProperty&&c.hasOwnProperty("toString")&&!d.hasOwnProperty("toString")){d.toString=c.toString}return d};OpenLayers.Util.getParameterString=function(c){var b=[];for(var h in c){var g=c[h];if((g!=null)&&(typeof g!="function")){var d;if(typeof g=="object"&&g.constructor==Array){var e=[];var i;for(var a=0,f=g.length;a<f;a++){i=g[a];e.push(encodeURIComponent((i===null||i===undefined)?"":i))}d=e.join(",")}else{d=encodeURIComponent(g)}b.push(encodeURIComponent(h)+"="+d)}}return b.join("&")};OpenLayers.Util.urlAppend=function(a,b){var d=a;if(b){var c=(a+" ").split(/[?&]/);d+=(c.pop()===" "?b:c.length?"&"+b:"?"+b)}return d};OpenLayers.Util.getImagesLocation=function(){return OpenLayers.ImgPath||(OpenLayers._getScriptLocation()+"img/")};OpenLayers.Util.getImageLocation=function(a){return OpenLayers.Util.getImagesLocation()+a};OpenLayers.Util.Try=function(){var d=null;for(var c=0,a=arguments.length;c<a;c++){var b=arguments[c];try{d=b();break}catch(f){}}return d};OpenLayers.Util.getXmlNodeValue=function(a){var b=null;OpenLayers.Util.Try(function(){b=a.text;if(!b){b=a.textContent}if(!b){b=a.firstChild.nodeValue}},function(){b=a.textContent});return b};OpenLayers.Util.mouseLeft=function(a,c){var b=(a.relatedTarget)?a.relatedTarget:a.toElement;while(b!=c&&b!=null){b=b.parentNode}return(b!=c)};OpenLayers.Util.DEFAULT_PRECISION=14;OpenLayers.Util.toFloat=function(b,a){if(a==null){a=OpenLayers.Util.DEFAULT_PRECISION}if(typeof b!=="number"){b=parseFloat(b)}return a===0?b:parseFloat(b.toPrecision(a))};OpenLayers.Util.rad=function(a){return a*Math.PI/180};OpenLayers.Util.deg=function(a){return a*180/Math.PI};OpenLayers.Util.VincentyConstants={a:6378137,b:6356752.3142,f:1/298.257223563};OpenLayers.Util.distVincenty=function(g,e){var k=OpenLayers.Util.VincentyConstants;var N=k.a,M=k.b,H=k.f;var n=OpenLayers.Util.rad(e.lon-g.lon);var K=Math.atan((1-H)*Math.tan(OpenLayers.Util.rad(g.lat)));var J=Math.atan((1-H)*Math.tan(OpenLayers.Util.rad(e.lat)));var m=Math.sin(K),i=Math.cos(K);var l=Math.sin(J),h=Math.cos(J);var t=n,o=2*Math.PI;var r=20;while(Math.abs(t-o)>1e-12&&--r>0){var D=Math.sin(t),c=Math.cos(t);var O=Math.sqrt((h*D)*(h*D)+(i*l-m*h*c)*(i*l-m*h*c));if(O==0){return 0}var F=m*l+i*h*c;var z=Math.atan2(O,F);var j=Math.asin(i*h*D/O);var G=Math.cos(j)*Math.cos(j);var q=F-2*m*l/G;var w=H/16*G*(4+H*(4-3*G));o=t;t=n+(1-w)*H*Math.sin(j)*(z+w*O*(q+w*F*(-1+2*q*q)))}if(r==0){return NaN}var v=G*(N*N-M*M)/(M*M);var y=1+v/16384*(4096+v*(-768+v*(320-175*v)));var x=v/1024*(256+v*(-128+v*(74-47*v)));var E=x*O*(q+x/4*(F*(-1+2*q*q)-x/6*q*(-3+4*O*O)*(-3+4*q*q)));var u=M*y*(z-E);var I=u.toFixed(3)/1000;return I};OpenLayers.Util.destinationVincenty=function(l,Q,F){var o=OpenLayers.Util;var i=o.VincentyConstants;var R=i.a,P=i.b,K=i.f;var O=l.lon;var g=l.lat;var r=F;var E=o.rad(Q);var H=Math.sin(E);var h=Math.cos(E);var G=(1-K)*Math.tan(o.rad(g));var c=1/Math.sqrt((1+G*G)),j=G*c;var q=Math.atan2(G,h);var z=c*H;var J=1-z*z;var v=J*(R*R-P*P)/(P*P);var y=1+v/16384*(4096+v*(-768+v*(320-175*v)));var w=v/1024*(256+v*(-128+v*(74-47*v)));var x=r/(P*y),M=2*Math.PI;while(Math.abs(x-M)>1e-12){var m=Math.cos(2*q+x);var S=Math.sin(x);var I=Math.cos(x);var D=w*S*(m+w/4*(I*(-1+2*m*m)-w/6*m*(-3+4*S*S)*(-3+4*m*m)));M=x;x=r/(P*y)+D}var N=j*S-c*I*h;var d=Math.atan2(j*I+c*S*h,(1-K)*Math.sqrt(z*z+N*N));var n=Math.atan2(S*H,c*I-j*S*h);var t=K/16*J*(4+K*(4-3*J));var k=n-(1-t)*K*z*(x+t*S*(m+t*I*(-1+2*m*m)));var e=Math.atan2(z,-N);return new OpenLayers.LonLat(O+o.deg(k),o.deg(d))};OpenLayers.Util.getParameters=function(b,n){n=n||{};b=(b===null||b===undefined)?window.location.href:b;var a="";if(OpenLayers.String.contains(b,"?")){var c=b.indexOf("?")+1;var f=OpenLayers.String.contains(b,"#")?b.indexOf("#"):b.length;a=b.substring(c,f)}var m={};var d=a.split(/[&;]/);for(var h=0,j=d.length;h<j;++h){var g=d[h].split("=");if(g[0]){var l=g[0];try{l=decodeURIComponent(l)}catch(e){l=unescape(l)}var k=(g[1]||"").replace(/\+/g," ");try{k=decodeURIComponent(k)}catch(e){k=unescape(k)}if(n.splitArgs!==false){k=k.split(",")}if(k.length==1){k=k[0]}m[l]=k}}return m};OpenLayers.Util.lastSeqID=0;OpenLayers.Util.createUniqueID=function(a){if(a==null){a="id_"}else{a=a.replace(OpenLayers.Util.dotless,"_")}OpenLayers.Util.lastSeqID+=1;return a+OpenLayers.Util.lastSeqID};OpenLayers.INCHES_PER_UNIT={inches:1,ft:12,mi:63360,m:39.37,km:39370,dd:4374754,yd:36};OpenLayers.INCHES_PER_UNIT["in"]=OpenLayers.INCHES_PER_UNIT.inches;OpenLayers.INCHES_PER_UNIT.degrees=OpenLayers.INCHES_PER_UNIT.dd;OpenLayers.INCHES_PER_UNIT.nmi=1852*OpenLayers.INCHES_PER_UNIT.m;OpenLayers.METERS_PER_INCH=0.0254000508001016;OpenLayers.Util.extend(OpenLayers.INCHES_PER_UNIT,{Inch:OpenLayers.INCHES_PER_UNIT.inches,Meter:1/OpenLayers.METERS_PER_INCH,Foot:0.3048006096012192/OpenLayers.METERS_PER_INCH,IFoot:0.3048/OpenLayers.METERS_PER_INCH,ClarkeFoot:0.3047972651151/OpenLayers.METERS_PER_INCH,SearsFoot:0.30479947153867626/OpenLayers.METERS_PER_INCH,GoldCoastFoot:0.3047997101815088/OpenLayers.METERS_PER_INCH,IInch:0.0254/OpenLayers.METERS_PER_INCH,MicroInch:0.0000254/OpenLayers.METERS_PER_INCH,Mil:2.54e-8/OpenLayers.METERS_PER_INCH,Centimeter:0.01/OpenLayers.METERS_PER_INCH,Kilometer:1000/OpenLayers.METERS_PER_INCH,Yard:0.9144018288036576/OpenLayers.METERS_PER_INCH,SearsYard:0.914398414616029/OpenLayers.METERS_PER_INCH,IndianYard:0.9143985307444408/OpenLayers.METERS_PER_INCH,IndianYd37:0.91439523/OpenLayers.METERS_PER_INCH,IndianYd62:0.9143988/OpenLayers.METERS_PER_INCH,IndianYd75:0.9143985/OpenLayers.METERS_PER_INCH,IndianFoot:0.30479951/OpenLayers.METERS_PER_INCH,IndianFt37:0.30479841/OpenLayers.METERS_PER_INCH,IndianFt62:0.3047996/OpenLayers.METERS_PER_INCH,IndianFt75:0.3047995/OpenLayers.METERS_PER_INCH,Mile:1609.3472186944373/OpenLayers.METERS_PER_INCH,IYard:0.9144/OpenLayers.METERS_PER_INCH,IMile:1609.344/OpenLayers.METERS_PER_INCH,NautM:1852/OpenLayers.METERS_PER_INCH,"Lat-66":110943.31648893273/OpenLayers.METERS_PER_INCH,"Lat-83":110946.25736872235/OpenLayers.METERS_PER_INCH,Decimeter:0.1/OpenLayers.METERS_PER_INCH,Millimeter:0.001/OpenLayers.METERS_PER_INCH,Dekameter:10/OpenLayers.METERS_PER_INCH,Decameter:10/OpenLayers.METERS_PER_INCH,Hectometer:100/OpenLayers.METERS_PER_INCH,GermanMeter:1.0000135965/OpenLayers.METERS_PER_INCH,CaGrid:0.999738/OpenLayers.METERS_PER_INCH,ClarkeChain:20.1166194976/OpenLayers.METERS_PER_INCH,GunterChain:20.11684023368047/OpenLayers.METERS_PER_INCH,BenoitChain:20.116782494375872/OpenLayers.METERS_PER_INCH,SearsChain:20.11676512155/OpenLayers.METERS_PER_INCH,ClarkeLink:0.201166194976/OpenLayers.METERS_PER_INCH,GunterLink:0.2011684023368047/OpenLayers.METERS_PER_INCH,BenoitLink:0.20116782494375873/OpenLayers.METERS_PER_INCH,SearsLink:0.2011676512155/OpenLayers.METERS_PER_INCH,Rod:5.02921005842012/OpenLayers.METERS_PER_INCH,IntnlChain:20.1168/OpenLayers.METERS_PER_INCH,IntnlLink:0.201168/OpenLayers.METERS_PER_INCH,Perch:5.02921005842012/OpenLayers.METERS_PER_INCH,Pole:5.02921005842012/OpenLayers.METERS_PER_INCH,Furlong:201.1684023368046/OpenLayers.METERS_PER_INCH,Rood:3.778266898/OpenLayers.METERS_PER_INCH,CapeFoot:0.3047972615/OpenLayers.METERS_PER_INCH,Brealey:375/OpenLayers.METERS_PER_INCH,ModAmFt:0.304812252984506/OpenLayers.METERS_PER_INCH,Fathom:1.8288/OpenLayers.METERS_PER_INCH,"NautM-UK":1853.184/OpenLayers.METERS_PER_INCH,"50kilometers":50000/OpenLayers.METERS_PER_INCH,"150kilometers":150000/OpenLayers.METERS_PER_INCH});OpenLayers.Util.extend(OpenLayers.INCHES_PER_UNIT,{mm:OpenLayers.INCHES_PER_UNIT.Meter/1000,cm:OpenLayers.INCHES_PER_UNIT.Meter/100,dm:OpenLayers.INCHES_PER_UNIT.Meter*100,km:OpenLayers.INCHES_PER_UNIT.Meter*1000,kmi:OpenLayers.INCHES_PER_UNIT.nmi,fath:OpenLayers.INCHES_PER_UNIT.Fathom,ch:OpenLayers.INCHES_PER_UNIT.IntnlChain,link:OpenLayers.INCHES_PER_UNIT.IntnlLink,"us-in":OpenLayers.INCHES_PER_UNIT.inches,"us-ft":OpenLayers.INCHES_PER_UNIT.Foot,"us-yd":OpenLayers.INCHES_PER_UNIT.Yard,"us-ch":OpenLayers.INCHES_PER_UNIT.GunterChain,"us-mi":OpenLayers.INCHES_PER_UNIT.Mile,"ind-yd":OpenLayers.INCHES_PER_UNIT.IndianYd37,"ind-ft":OpenLayers.INCHES_PER_UNIT.IndianFt37,"ind-ch":20.11669506/OpenLayers.METERS_PER_INCH});OpenLayers.DOTS_PER_INCH=72;OpenLayers.Util.normalizeScale=function(b){var a=(b>1)?(1/b):b;return a};OpenLayers.Util.getResolutionFromScale=function(d,a){var b;if(d){if(a==null){a="degrees"}var c=OpenLayers.Util.normalizeScale(d);b=1/(c*OpenLayers.INCHES_PER_UNIT[a]*OpenLayers.DOTS_PER_INCH)}return b};OpenLayers.Util.getScaleFromResolution=function(b,a){if(a==null){a="degrees"}var c=b*OpenLayers.INCHES_PER_UNIT[a]*OpenLayers.DOTS_PER_INCH;return c};OpenLayers.Util.pagePosition=function(d){var i=[0,0];var h=OpenLayers.Util.getViewportElement();if(!d||d==window||d==h){return i}var f=OpenLayers.IS_GECKO&&document.getBoxObjectFor&&OpenLayers.Element.getStyle(d,"position")=="absolute"&&(d.style.top==""||d.style.left=="");var j=null;var g;if(d.getBoundingClientRect){g=d.getBoundingClientRect();var b=window.pageYOffset||h.scrollTop;var c=window.pageXOffset||h.scrollLeft;i[0]=g.left+c;i[1]=g.top+b}else{if(document.getBoxObjectFor&&!f){g=document.getBoxObjectFor(d);var a=document.getBoxObjectFor(h);i[0]=g.screenX-a.screenX;i[1]=g.screenY-a.screenY}else{i[0]=d.offsetLeft;i[1]=d.offsetTop;j=d.offsetParent;if(j!=d){while(j){i[0]+=j.offsetLeft;i[1]+=j.offsetTop;j=j.offsetParent}}var e=OpenLayers.BROWSER_NAME;if(e=="opera"||(e=="safari"&&OpenLayers.Element.getStyle(d,"position")=="absolute")){i[1]-=document.body.offsetTop}j=d.offsetParent;while(j&&j!=document.body){i[0]-=j.scrollLeft;if(e!="opera"||j.tagName!="TR"){i[1]-=j.scrollTop}j=j.offsetParent}}}return i};OpenLayers.Util.getViewportElement=function(){var a=arguments.callee.viewportElement;if(a==undefined){a=(OpenLayers.BROWSER_NAME=="msie"&&document.compatMode!="CSS1Compat")?document.body:document.documentElement;arguments.callee.viewportElement=a}return a};OpenLayers.Util.isEquivalentUrl=function(f,e,c){c=c||{};OpenLayers.Util.applyDefaults(c,{ignoreCase:true,ignorePort80:true,ignoreHash:true,splitArgs:false});var b=OpenLayers.Util.createUrlObject(f,c);var a=OpenLayers.Util.createUrlObject(e,c);for(var d in b){if(d!=="args"){if(b[d]!=a[d]){return false}}}for(var d in b.args){if(b.args[d]!=a.args[d]){return false}delete a.args[d]}for(var d in a.args){return false}return true};OpenLayers.Util.createUrlObject=function(c,k){k=k||{};if(!(/^\w+:\/\//).test(c)){var g=window.location;var e=g.port?":"+g.port:"";var h=g.protocol+"//"+g.host.split(":").shift()+e;if(c.indexOf("/")===0){c=h+c}else{var f=g.pathname.split("/");f.pop();c=h+f.join("/")+"/"+c}}if(k.ignoreCase){c=c.toLowerCase()}var i=document.createElement("a");i.href=c;var d={};d.host=i.host.split(":").shift();d.protocol=i.protocol;if(k.ignorePort80){d.port=(i.port=="80"||i.port=="0")?"":i.port}else{d.port=(i.port==""||i.port=="0")?"80":i.port}d.hash=(k.ignoreHash||i.hash==="#")?"":i.hash;var b=i.search;if(!b){var j=c.indexOf("?");b=(j!=-1)?c.substr(j):""}d.args=OpenLayers.Util.getParameters(b,{splitArgs:k.splitArgs});d.pathname=(i.pathname.charAt(0)=="/")?i.pathname:"/"+i.pathname;return d};OpenLayers.Util.removeTail=function(b){var c=null;var a=b.indexOf("?");var d=b.indexOf("#");if(a==-1){c=(d!=-1)?b.substr(0,d):b}else{c=(d!=-1)?b.substr(0,Math.min(a,d)):b.substr(0,a)}return c};OpenLayers.IS_GECKO=(function(){var a=navigator.userAgent.toLowerCase();return a.indexOf("webkit")==-1&&a.indexOf("gecko")!=-1})();OpenLayers.CANVAS_SUPPORTED=(function(){var a=document.createElement("canvas");return !!(a.getContext&&a.getContext("2d"))})();OpenLayers.BROWSER_NAME=(function(){var a="";var b=navigator.userAgent.toLowerCase();if(b.indexOf("opera")!=-1){a="opera"}else{if(b.indexOf("msie")!=-1){a="msie"}else{if(b.indexOf("safari")!=-1){a="safari"}else{if(b.indexOf("mozilla")!=-1){if(b.indexOf("firefox")!=-1){a="firefox"}else{a="mozilla"}}}}}return a})();OpenLayers.Util.getBrowserName=function(){return OpenLayers.BROWSER_NAME};OpenLayers.Util.getRenderedDimensions=function(b,o,q){var m,e;var a=document.createElement("div");a.style.visibility="hidden";var n=(q&&q.containerElement)?q.containerElement:document.body;var r=false;var g=null;var k=n;while(k&&k.tagName.toLowerCase()!="body"){var j=OpenLayers.Element.getStyle(k,"position");if(j=="absolute"){r=true;break}else{if(j&&j!="static"){break}}k=k.parentNode}if(r&&(n.clientHeight===0||n.clientWidth===0)){g=document.createElement("div");g.style.visibility="hidden";g.style.position="absolute";g.style.overflow="visible";g.style.width=document.body.clientWidth+"px";g.style.height=document.body.clientHeight+"px";g.appendChild(a)}a.style.position="absolute";if(o){if(o.w){m=o.w;a.style.width=m+"px"}else{if(o.h){e=o.h;a.style.height=e+"px"}}}if(q&&q.displayClass){a.className=q.displayClass}var f=document.createElement("div");f.innerHTML=b;f.style.overflow="visible";if(f.childNodes){for(var d=0,c=f.childNodes.length;d<c;d++){if(!f.childNodes[d].style){continue}f.childNodes[d].style.overflow="visible"}}a.appendChild(f);if(g){n.appendChild(g)}else{n.appendChild(a)}if(!m){m=parseInt(f.scrollWidth);a.style.width=m+"px"}if(!e){e=parseInt(f.scrollHeight)}a.removeChild(f);if(g){g.removeChild(a);n.removeChild(g)}else{n.removeChild(a)}return new OpenLayers.Size(m,e)};OpenLayers.Util.getScrollbarWidth=function(){var c=OpenLayers.Util._scrollbarWidth;if(c==null){var e=null;var d=null;var a=0;var b=0;e=document.createElement("div");e.style.position="absolute";e.style.top="-1000px";e.style.left="-1000px";e.style.width="100px";e.style.height="50px";e.style.overflow="hidden";d=document.createElement("div");d.style.width="100%";d.style.height="200px";e.appendChild(d);document.body.appendChild(e);a=d.offsetWidth;e.style.overflow="scroll";b=d.offsetWidth;document.body.removeChild(document.body.lastChild);OpenLayers.Util._scrollbarWidth=(a-b);c=OpenLayers.Util._scrollbarWidth}return c};OpenLayers.Util.getFormattedLonLat=function(h,b,e){if(!e){e="dms"}h=(h+540)%360-180;var d=Math.abs(h);var i=Math.floor(d);var a=(d-i)/(1/60);var c=a;a=Math.floor(a);var g=(c-a)/(1/60);g=Math.round(g*10);g/=10;if(g>=60){g-=60;a+=1;if(a>=60){a-=60;i+=1}}if(i<10){i="0"+i}var f=i+"\u00B0";if(e.indexOf("dm")>=0){if(a<10){a="0"+a}f+=a+"'";if(e.indexOf("dms")>=0){if(g<10){g="0"+g}f+=g+'"'}}if(b=="lon"){f+=h<0?OpenLayers.i18n("W"):OpenLayers.i18n("E")}else{f+=h<0?OpenLayers.i18n("S"):OpenLayers.i18n("N")}return f};OpenLayers.Util.getConstructor=function(c){var e;var d=c.split(".");if(d[0]==="OpenLayers"){e=OpenLayers}else{e=window[d[0]]}for(var a=1,b=d.length;a<b;++a){e=e[d[a]]}return e};OpenLayers.Util=OpenLayers.Util||{};OpenLayers.Util.vendorPrefix=(function(){var d=["","O","ms","Moz","Webkit"],a=document.createElement("div").style,e={},g={};function h(i){if(!i){return null}return i.replace(/([A-Z])/g,function(j){return"-"+j.toLowerCase()}).replace(/^ms-/,"-ms-")}function b(k){if(e[k]===undefined){var j=k.replace(/(-[\s\S])/g,function(l){return l.charAt(1).toUpperCase()});var i=c(j);e[k]=h(i)}return e[k]}function f(q,o){if(g[o]===undefined){var r,k=0,j=d.length,n,m=(typeof q.cssText!=="undefined");g[o]=null;for(;k<j;k++){n=d[k];if(n){if(!m){n=n.toLowerCase()}r=n+o.charAt(0).toUpperCase()+o.slice(1)}else{r=o}if(q[r]!==undefined){g[o]=r;break}}}return g[o]}function c(i){return f(a,i)}return{css:b,js:f,style:c,cssCache:e,jsCache:g}}());OpenLayers.Event={observers:false,KEY_SPACE:32,KEY_BACKSPACE:8,KEY_TAB:9,KEY_RETURN:13,KEY_ESC:27,KEY_LEFT:37,KEY_UP:38,KEY_RIGHT:39,KEY_DOWN:40,KEY_DELETE:46,element:function(a){return a.target||a.srcElement},isSingleTouch:function(a){return a.touches&&a.touches.length==1},isMultiTouch:function(a){return a.touches&&a.touches.length>1},isLeftClick:function(a){return(((a.which)&&(a.which==1))||((a.button)&&(a.button==1)))},isRightClick:function(a){return(((a.which)&&(a.which==3))||((a.button)&&(a.button==2)))},stop:function(b,a){if(!a){OpenLayers.Event.preventDefault(b)}if(b.stopPropagation){b.stopPropagation()}else{b.cancelBubble=true}},preventDefault:function(a){if(a.preventDefault){a.preventDefault()}else{a.returnValue=false}},findElement:function(c,b){var a=OpenLayers.Event.element(c);while(a.parentNode&&(!a.tagName||(a.tagName.toUpperCase()!=b.toUpperCase()))){a=a.parentNode}return a},observe:function(b,d,c,a){var e=OpenLayers.Util.getElement(b);a=a||false;if(d=="keypress"&&(navigator.appVersion.match(/Konqueror|Safari|KHTML/)||e.attachEvent)){d="keydown"}if(!this.observers){this.observers={}}if(!e._eventCacheID){var f="eventCacheID_";if(e.id){f=e.id+"_"+f}e._eventCacheID=OpenLayers.Util.createUniqueID(f)}var g=e._eventCacheID;if(!this.observers[g]){this.observers[g]=[]}this.observers[g].push({element:e,name:d,observer:c,useCapture:a});if(e.addEventListener){e.addEventListener(d,c,a)}else{if(e.attachEvent){e.attachEvent("on"+d,c)}}},stopObservingElement:function(a){var b=OpenLayers.Util.getElement(a);var c=b._eventCacheID;this._removeElementObservers(OpenLayers.Event.observers[c])},_removeElementObservers:function(c){if(c){for(var a=c.length-1;a>=0;a--){var b=c[a];OpenLayers.Event.stopObserving.apply(this,[b.element,b.name,b.observer,b.useCapture])}}},stopObserving:function(h,a,g,b){b=b||false;var f=OpenLayers.Util.getElement(h);var d=f._eventCacheID;if(a=="keypress"){if(navigator.appVersion.match(/Konqueror|Safari|KHTML/)||f.detachEvent){a="keydown"}}var k=false;var c=OpenLayers.Event.observers[d];if(c){var e=0;while(!k&&e<c.length){var j=c[e];if((j.name==a)&&(j.observer==g)&&(j.useCapture==b)){c.splice(e,1);if(c.length==0){delete OpenLayers.Event.observers[d]}k=true;break}e++}}if(k){if(f.removeEventListener){f.removeEventListener(a,g,b)}else{if(f&&f.detachEvent){f.detachEvent("on"+a,g)}}}return k},unloadCache:function(){if(OpenLayers.Event&&OpenLayers.Event.observers){for(var a in OpenLayers.Event.observers){var b=OpenLayers.Event.observers[a];OpenLayers.Event._removeElementObservers.apply(this,[b])}OpenLayers.Event.observers=false}},CLASS_NAME:"OpenLayers.Event"};OpenLayers.Event.observe(window,"unload",OpenLayers.Event.unloadCache,false);OpenLayers.Events=OpenLayers.Class({BROWSER_EVENTS:["mouseover","mouseout","mousedown","mouseup","mousemove","click","dblclick","rightclick","dblrightclick","resize","focus","blur","touchstart","touchmove","touchend","keydown"],listeners:null,object:null,element:null,eventHandler:null,fallThrough:null,includeXY:false,extensions:null,extensionCount:null,clearMouseListener:null,initialize:function(b,c,e,d,a){OpenLayers.Util.extend(this,a);this.object=b;this.fallThrough=d;this.listeners={};this.extensions={};this.extensionCount={};this._msTouches=[];if(c!=null){this.attachToElement(c)}},destroy:function(){for(var a in this.extensions){if(typeof this.extensions[a]!=="boolean"){this.extensions[a].destroy()}}this.extensions=null;if(this.element){OpenLayers.Event.stopObservingElement(this.element);if(this.element.hasScrollEvent){OpenLayers.Event.stopObserving(window,"scroll",this.clearMouseListener)}}this.element=null;this.listeners=null;this.object=null;this.fallThrough=null;this.eventHandler=null},addEventType:function(a){},attachToElement:function(d){if(this.element){OpenLayers.Event.stopObservingElement(this.element)}else{this.eventHandler=OpenLayers.Function.bindAsEventListener(this.handleBrowserEvent,this);this.clearMouseListener=OpenLayers.Function.bind(this.clearMouseCache,this)}this.element=d;var b=!!window.navigator.msMaxTouchPoints;var e;for(var c=0,a=this.BROWSER_EVENTS.length;c<a;c++){e=this.BROWSER_EVENTS[c];OpenLayers.Event.observe(d,e,this.eventHandler);if(b&&e.indexOf("touch")===0){this.addMsTouchListener(d,e,this.eventHandler)}}OpenLayers.Event.observe(d,"dragstart",OpenLayers.Event.stop)},on:function(a){for(var b in a){if(b!="scope"&&a.hasOwnProperty(b)){this.register(b,a.scope,a[b])}}},register:function(c,f,d,a){if(c in OpenLayers.Events&&!this.extensions[c]){this.extensions[c]=new OpenLayers.Events[c](this)}if(d!=null){if(f==null){f=this.object}var b=this.listeners[c];if(!b){b=[];this.listeners[c]=b;this.extensionCount[c]=0}var e={obj:f,func:d};if(a){b.splice(this.extensionCount[c],0,e);if(typeof a==="object"&&a.extension){this.extensionCount[c]++}}else{b.push(e)}}},registerPriority:function(a,c,b){this.register(a,c,b,true)},un:function(a){for(var b in a){if(b!="scope"&&a.hasOwnProperty(b)){this.unregister(b,a.scope,a[b])}}},unregister:function(d,f,e){if(f==null){f=this.object}var c=this.listeners[d];if(c!=null){for(var b=0,a=c.length;b<a;b++){if(c[b].obj==f&&c[b].func==e){c.splice(b,1);break}}}},remove:function(a){if(this.listeners[a]!=null){this.listeners[a]=[]}},triggerEvent:function(e,b){var d=this.listeners[e];if(!d||d.length==0){return undefined}if(b==null){b={}}b.object=this.object;b.element=this.element;if(!b.type){b.type=e}d=d.slice();var f;for(var c=0,a=d.length;c<a;c++){var g=d[c];f=g.func.apply(g.obj,[b]);if((f!=undefined)&&(f==false)){break}}if(!this.fallThrough){OpenLayers.Event.stop(b,true)}return f},handleBrowserEvent:function(j){var e=j.type,f=this.listeners[e];if(!f||f.length==0){return}var c=j.touches;if(c&&c[0]){var h=0;var g=0;var d=c.length;var b;for(var a=0;a<d;++a){b=this.getTouchClientXY(c[a]);h+=b.clientX;g+=b.clientY}j.clientX=h/d;j.clientY=g/d}if(this.includeXY){j.xy=this.getMousePosition(j)}this.triggerEvent(e,j)},getTouchClientXY:function(d){var e=window.olMockWin||window,c=e.pageXOffset,b=e.pageYOffset,a=d.clientX,f=d.clientY;if(d.pageY===0&&Math.floor(f)>Math.floor(d.pageY)||d.pageX===0&&Math.floor(a)>Math.floor(d.pageX)){a=a-c;f=f-b}else{if(f<(d.pageY-b)||a<(d.pageX-c)){a=d.pageX-c;f=d.pageY-b}}d.olClientX=a;d.olClientY=f;return{clientX:a,clientY:f}},clearMouseCache:function(){this.element.scrolls=null;this.element.lefttop=null;this.element.offsets=null},getMousePosition:function(a){if(!this.includeXY){this.clearMouseCache()}else{if(!this.element.hasScrollEvent){OpenLayers.Event.observe(window,"scroll",this.clearMouseListener);this.element.hasScrollEvent=true}}if(!this.element.scrolls){var b=OpenLayers.Util.getViewportElement();this.element.scrolls=[window.pageXOffset||b.scrollLeft,window.pageYOffset||b.scrollTop]}if(!this.element.lefttop){this.element.lefttop=[(document.documentElement.clientLeft||0),(document.documentElement.clientTop||0)]}if(!this.element.offsets){this.element.offsets=OpenLayers.Util.pagePosition(this.element)}return new OpenLayers.Pixel((a.clientX+this.element.scrolls[0])-this.element.offsets[0]-this.element.lefttop[0],(a.clientY+this.element.scrolls[1])-this.element.offsets[1]-this.element.lefttop[1])},addMsTouchListener:function(b,e,d){var a=this.eventHandler;var f=this._msTouches;function c(g){d(OpenLayers.Util.applyDefaults({stopPropagation:function(){for(var h=f.length-1;h>=0;--h){f[h].stopPropagation()}},preventDefault:function(){for(var h=f.length-1;h>=0;--h){f[h].preventDefault()}},type:e},g))}switch(e){case"touchstart":return this.addMsTouchListenerStart(b,e,c);case"touchend":return this.addMsTouchListenerEnd(b,e,c);case"touchmove":return this.addMsTouchListenerMove(b,e,c);default:throw"Unknown touch event type"}},addMsTouchListenerStart:function(c,e,d){var f=this._msTouches;var a=function(k){var h=false;for(var g=0,j=f.length;g<j;++g){if(f[g].pointerId==k.pointerId){h=true;break}}if(!h){f.push(k)}k.touches=f.slice();d(k)};OpenLayers.Event.observe(c,"MSPointerDown",a);var b=function(j){for(var g=0,h=f.length;g<h;++g){if(f[g].pointerId==j.pointerId){f.splice(g,1);break}}};OpenLayers.Event.observe(c,"MSPointerUp",b)},addMsTouchListenerMove:function(b,d,c){var e=this._msTouches;var a=function(h){if(h.pointerType==h.MSPOINTER_TYPE_MOUSE&&h.buttons==0){return}if(e.length==1&&e[0].pageX==h.pageX&&e[0].pageY==h.pageY){return}for(var f=0,g=e.length;f<g;++f){if(e[f].pointerId==h.pointerId){e[f]=h;break}}h.touches=e.slice();c(h)};OpenLayers.Event.observe(b,"MSPointerMove",a)},addMsTouchListenerEnd:function(b,d,c){var e=this._msTouches;var a=function(h){for(var f=0,g=e.length;f<g;++f){if(e[f].pointerId==h.pointerId){e.splice(f,1);break}}h.touches=e.slice();c(h)};OpenLayers.Event.observe(b,"MSPointerUp",a)},CLASS_NAME:"OpenLayers.Events"});OpenLayers.Animation=(function(f){var g=OpenLayers.Util.vendorPrefix.js(f,"requestAnimationFrame");var c=!!(g);var e=(function(){var i=f[g]||function(k,j){f.setTimeout(k,16)};return function(k,j){i.apply(f,[k,j])}})();var b=0;var a={};function h(m,j,i){j=j>0?j:Number.POSITIVE_INFINITY;var l=++b;var k=+new Date;a[l]=function(){if(a[l]&&+new Date-k<=j){m();if(a[l]){e(a[l],i)}}else{delete a[l]}};e(a[l],i);return l}function d(i){delete a[i]}return{isNative:c,requestFrame:e,start:h,stop:d}})(window);OpenLayers.Tween=OpenLayers.Class({easing:null,begin:null,finish:null,duration:null,callbacks:null,time:null,minFrameRate:null,startTime:null,animationId:null,playing:false,initialize:function(a){this.easing=(a)?a:OpenLayers.Easing.Expo.easeOut},start:function(c,b,d,a){this.playing=true;this.begin=c;this.finish=b;this.duration=d;this.callbacks=a.callbacks;this.minFrameRate=a.minFrameRate||30;this.time=0;this.startTime=new Date().getTime();OpenLayers.Animation.stop(this.animationId);this.animationId=null;if(this.callbacks&&this.callbacks.start){this.callbacks.start.call(this,this.begin)}this.animationId=OpenLayers.Animation.start(OpenLayers.Function.bind(this.play,this))},stop:function(){if(!this.playing){return}if(this.callbacks&&this.callbacks.done){this.callbacks.done.call(this,this.finish)}OpenLayers.Animation.stop(this.animationId);this.animationId=null;this.playing=false},play:function(){var g={};for(var d in this.begin){var a=this.begin[d];var e=this.finish[d];if(a==null||e==null||isNaN(a)||isNaN(e)){throw new TypeError("invalid value for Tween")}var h=e-a;g[d]=this.easing.apply(this,[this.time,a,h,this.duration])}this.time++;if(this.callbacks&&this.callbacks.eachStep){if((new Date().getTime()-this.startTime)/this.time<=1000/this.minFrameRate){this.callbacks.eachStep.call(this,g)}}if(this.time>this.duration){this.stop()}},CLASS_NAME:"OpenLayers.Tween"});OpenLayers.Easing={CLASS_NAME:"OpenLayers.Easing"};OpenLayers.Easing.Linear={easeIn:function(e,a,g,f){return g*e/f+a},easeOut:function(e,a,g,f){return g*e/f+a},easeInOut:function(e,a,g,f){return g*e/f+a},CLASS_NAME:"OpenLayers.Easing.Linear"};OpenLayers.Easing.Expo={easeIn:function(e,a,g,f){return(e==0)?a:g*Math.pow(2,10*(e/f-1))+a},easeOut:function(e,a,g,f){return(e==f)?a+g:g*(-Math.pow(2,-10*e/f)+1)+a},easeInOut:function(e,a,g,f){if(e==0){return a}if(e==f){return a+g}if((e/=f/2)<1){return g/2*Math.pow(2,10*(e-1))+a}return g/2*(-Math.pow(2,-10*--e)+2)+a},CLASS_NAME:"OpenLayers.Easing.Expo"};OpenLayers.Easing.Quad={easeIn:function(e,a,g,f){return g*(e/=f)*e+a},easeOut:function(e,a,g,f){return -g*(e/=f)*(e-2)+a},easeInOut:function(e,a,g,f){if((e/=f/2)<1){return g/2*e*e+a}return -g/2*((--e)*(e-2)-1)+a},CLASS_NAME:"OpenLayers.Easing.Quad"};OpenLayers.Projection=OpenLayers.Class({proj:null,projCode:null,titleRegEx:/\+title=[^\+]*/,initialize:function(b,a){OpenLayers.Util.extend(this,a);this.projCode=b;if(typeof Proj4js=="object"){this.proj=new Proj4js.Proj(b)}},getCode:function(){return this.proj?this.proj.srsCode:this.projCode},getUnits:function(){return this.proj?this.proj.units:null},toString:function(){return this.getCode()},equals:function(a){var e=a,b=false;if(e){if(!(e instanceof OpenLayers.Projection)){e=new OpenLayers.Projection(e)}if((typeof Proj4js=="object")&&this.proj.defData&&e.proj.defData){b=this.proj.defData.replace(this.titleRegEx,"")==e.proj.defData.replace(this.titleRegEx,"")}else{if(e.getCode){var c=this.getCode(),d=e.getCode();b=c==d||!!OpenLayers.Projection.transforms[c]&&OpenLayers.Projection.transforms[c][d]===OpenLayers.Projection.nullTransform}}}return b},destroy:function(){delete this.proj;delete this.projCode},CLASS_NAME:"OpenLayers.Projection"});OpenLayers.Projection.transforms={};OpenLayers.Projection.defaults={"EPSG:4326":{units:"degrees",maxExtent:[-180,-90,180,90],yx:true},"CRS:84":{units:"degrees",maxExtent:[-180,-90,180,90]},"EPSG:900913":{units:"m",maxExtent:[-20037508.34,-20037508.34,20037508.34,20037508.34]}};OpenLayers.Projection.addTransform=function(d,c,b){if(b===OpenLayers.Projection.nullTransform){var a=OpenLayers.Projection.defaults[d];if(a&&!OpenLayers.Projection.defaults[c]){OpenLayers.Projection.defaults[c]=a}}if(!OpenLayers.Projection.transforms[d]){OpenLayers.Projection.transforms[d]={}}OpenLayers.Projection.transforms[d][c]=b};OpenLayers.Projection.transform=function(a,e,b){if(e&&b){if(!(e instanceof OpenLayers.Projection)){e=new OpenLayers.Projection(e)}if(!(b instanceof OpenLayers.Projection)){b=new OpenLayers.Projection(b)}if(e.proj&&b.proj){a=Proj4js.transform(e.proj,b.proj,a)}else{var d=e.getCode();var f=b.getCode();var c=OpenLayers.Projection.transforms;if(c[d]&&c[d][f]){c[d][f](a)}}}return a};OpenLayers.Projection.nullTransform=function(a){return a};(function(){var e=20037508.34;function g(h){h.x=180*h.x/e;h.y=180/Math.PI*(2*Math.atan(Math.exp((h.y/e)*Math.PI))-Math.PI/2);return h}function b(h){h.x=h.x*e/180;var i=Math.log(Math.tan((90+h.y)*Math.PI/360))/Math.PI*e;h.y=Math.max(-20037508.34,Math.min(i,20037508.34));return h}function f(k,h){var s=OpenLayers.Projection.addTransform;var r=OpenLayers.Projection.nullTransform;var n,o,l,q,m;for(n=0,o=h.length;n<o;++n){l=h[n];s(k,l,b);s(l,k,g);for(m=n+1;m<o;++m){q=h[m];s(l,q,r);s(q,l,r)}}}var a=["EPSG:900913","EPSG:3857","EPSG:102113","EPSG:102100","OSGEO:41001"],d=["CRS:84","urn:ogc:def:crs:EPSG:6.6:4326","EPSG:4326"],c;for(c=a.length-1;c>=0;--c){f(a[c],d)}for(c=d.length-1;c>=0;--c){f(d[c],a)}})();OpenLayers.Map=OpenLayers.Class({Z_INDEX_BASE:{BaseLayer:100,Overlay:325,Feature:725,Popup:750,Control:1000},id:null,fractionalZoom:false,events:null,allOverlays:false,div:null,dragging:false,size:null,viewPortDiv:null,layerContainerOrigin:null,layerContainerDiv:null,layers:null,controls:null,popups:null,baseLayer:null,center:null,resolution:null,zoom:0,panRatio:1.5,options:null,tileSize:null,projection:"EPSG:4326",units:null,resolutions:null,maxResolution:null,minResolution:null,maxScale:null,minScale:null,maxExtent:null,minExtent:null,restrictedExtent:null,numZoomLevels:16,theme:null,displayProjection:null,fallThrough:false,autoUpdateSize:true,eventListeners:null,panTween:null,panMethod:OpenLayers.Easing.Expo.easeOut,panDuration:50,zoomTween:null,zoomMethod:OpenLayers.Easing.Quad.easeOut,zoomDuration:20,paddingForPopups:null,layerContainerOriginPx:null,minPx:null,maxPx:null,initialize:function(b,j){if(arguments.length===1&&typeof b==="object"){j=b;b=j&&j.div}this.tileSize=new OpenLayers.Size(OpenLayers.Map.TILE_WIDTH,OpenLayers.Map.TILE_HEIGHT);this.paddingForPopups=new OpenLayers.Bounds(15,15,15,15);this.theme=OpenLayers._getScriptLocation()+"theme/default/style.css";this.options=OpenLayers.Util.extend({},j);OpenLayers.Util.extend(this,j);var a=this.projection instanceof OpenLayers.Projection?this.projection.projCode:this.projection;OpenLayers.Util.applyDefaults(this,OpenLayers.Projection.defaults[a]);if(this.maxExtent&&!(this.maxExtent instanceof OpenLayers.Bounds)){this.maxExtent=new OpenLayers.Bounds(this.maxExtent)}if(this.minExtent&&!(this.minExtent instanceof OpenLayers.Bounds)){this.minExtent=new OpenLayers.Bounds(this.minExtent)}if(this.restrictedExtent&&!(this.restrictedExtent instanceof OpenLayers.Bounds)){this.restrictedExtent=new OpenLayers.Bounds(this.restrictedExtent)}if(this.center&&!(this.center instanceof OpenLayers.LonLat)){this.center=new OpenLayers.LonLat(this.center)}this.layers=[];this.id=OpenLayers.Util.createUniqueID("OpenLayers.Map_");this.div=OpenLayers.Util.getElement(b);if(!this.div){this.div=document.createElement("div");this.div.style.height="1px";this.div.style.width="1px"}OpenLayers.Element.addClass(this.div,"olMap");var d=this.id+"_OpenLayers_ViewPort";this.viewPortDiv=OpenLayers.Util.createDiv(d,null,null,null,"relative",null,"hidden");this.viewPortDiv.style.width="100%";this.viewPortDiv.style.height="100%";this.viewPortDiv.className="olMapViewport";this.div.appendChild(this.viewPortDiv);this.events=new OpenLayers.Events(this,this.viewPortDiv,null,this.fallThrough,{includeXY:true});if(OpenLayers.TileManager&&this.tileManager!==null){if(!(this.tileManager instanceof OpenLayers.TileManager)){this.tileManager=new OpenLayers.TileManager(this.tileManager)}this.tileManager.addMap(this)}d=this.id+"_OpenLayers_Container";this.layerContainerDiv=OpenLayers.Util.createDiv(d);this.layerContainerDiv.style.zIndex=this.Z_INDEX_BASE.Popup-1;this.layerContainerOriginPx={x:0,y:0};this.applyTransform();this.viewPortDiv.appendChild(this.layerContainerDiv);this.updateSize();if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)}if(this.autoUpdateSize===true){this.updateSizeDestroy=OpenLayers.Function.bind(this.updateSize,this);OpenLayers.Event.observe(window,"resize",this.updateSizeDestroy)}if(this.theme){var e=true;var c=document.getElementsByTagName("link");for(var f=0,g=c.length;f<g;++f){if(OpenLayers.Util.isEquivalentUrl(c.item(f).href,this.theme)){e=false;break}}if(e){var h=document.createElement("link");h.setAttribute("rel","stylesheet");h.setAttribute("type","text/css");h.setAttribute("href",this.theme);document.getElementsByTagName("head")[0].appendChild(h)}}if(this.controls==null){this.controls=[];if(OpenLayers.Control!=null){if(OpenLayers.Control.Navigation){this.controls.push(new OpenLayers.Control.Navigation())}else{if(OpenLayers.Control.TouchNavigation){this.controls.push(new OpenLayers.Control.TouchNavigation())}}if(OpenLayers.Control.Zoom){this.controls.push(new OpenLayers.Control.Zoom())}else{if(OpenLayers.Control.PanZoom){this.controls.push(new OpenLayers.Control.PanZoom())}}if(OpenLayers.Control.ArgParser){this.controls.push(new OpenLayers.Control.ArgParser())}if(OpenLayers.Control.Attribution){this.controls.push(new OpenLayers.Control.Attribution())}}}for(var f=0,g=this.controls.length;f<g;f++){this.addControlToMap(this.controls[f])}this.popups=[];this.unloadDestroy=OpenLayers.Function.bind(this.destroy,this);OpenLayers.Event.observe(window,"unload",this.unloadDestroy);if(j&&j.layers){delete this.center;delete this.zoom;this.addLayers(j.layers);if(j.center&&!this.getCenter()){this.setCenter(j.center,j.zoom)}}if(this.panMethod){this.panTween=new OpenLayers.Tween(this.panMethod)}if(this.zoomMethod&&this.applyTransform.transform){this.zoomTween=new OpenLayers.Tween(this.zoomMethod)}},getViewport:function(){return this.viewPortDiv},render:function(a){this.div=OpenLayers.Util.getElement(a);OpenLayers.Element.addClass(this.div,"olMap");this.viewPortDiv.parentNode.removeChild(this.viewPortDiv);this.div.appendChild(this.viewPortDiv);this.updateSize()},unloadDestroy:null,updateSizeDestroy:null,destroy:function(){if(!this.unloadDestroy){return false}if(this.panTween){this.panTween.stop();this.panTween=null}if(this.zoomTween){this.zoomTween.stop();this.zoomTween=null}OpenLayers.Event.stopObserving(window,"unload",this.unloadDestroy);this.unloadDestroy=null;if(this.updateSizeDestroy){OpenLayers.Event.stopObserving(window,"resize",this.updateSizeDestroy)}this.paddingForPopups=null;if(this.controls!=null){for(var a=this.controls.length-1;a>=0;--a){this.controls[a].destroy()}this.controls=null}if(this.layers!=null){for(var a=this.layers.length-1;a>=0;--a){this.layers[a].destroy(false)}this.layers=null}if(this.viewPortDiv&&this.viewPortDiv.parentNode){this.viewPortDiv.parentNode.removeChild(this.viewPortDiv)}this.viewPortDiv=null;if(this.tileManager){this.tileManager.removeMap(this);this.tileManager=null}if(this.eventListeners){this.events.un(this.eventListeners);this.eventListeners=null}this.events.destroy();this.events=null;this.options=null},setOptions:function(a){var b=this.minPx&&a.restrictedExtent!=this.restrictedExtent;OpenLayers.Util.extend(this,a);b&&this.moveTo(this.getCachedCenter(),this.zoom,{forceZoomChange:true})},getTileSize:function(){return this.tileSize},getBy:function(e,c,a){var d=(typeof a.test=="function");var b=OpenLayers.Array.filter(this[e],function(f){return f[c]==a||(d&&a.test(f[c]))});return b},getLayersBy:function(b,a){return this.getBy("layers",b,a)},getLayersByName:function(a){return this.getLayersBy("name",a)},getLayersByClass:function(a){return this.getLayersBy("CLASS_NAME",a)},getControlsBy:function(b,a){return this.getBy("controls",b,a)},getControlsByClass:function(a){return this.getControlsBy("CLASS_NAME",a)},getLayer:function(e){var b=null;for(var d=0,a=this.layers.length;d<a;d++){var c=this.layers[d];if(c.id==e){b=c;break}}return b},setLayerZIndex:function(b,a){b.setZIndex(this.Z_INDEX_BASE[b.isBaseLayer?"BaseLayer":"Overlay"]+a*5)},resetLayersZIndex:function(){for(var c=0,a=this.layers.length;c<a;c++){var b=this.layers[c];this.setLayerZIndex(b,c)}},addLayer:function(c){for(var b=0,a=this.layers.length;b<a;b++){if(this.layers[b]==c){return false}}if(this.events.triggerEvent("preaddlayer",{layer:c})===false){return false}if(this.allOverlays){c.isBaseLayer=false}c.div.className="olLayerDiv";c.div.style.overflow="";this.setLayerZIndex(c,this.layers.length);if(c.isFixed){this.viewPortDiv.appendChild(c.div)}else{this.layerContainerDiv.appendChild(c.div)}this.layers.push(c);c.setMap(this);if(c.isBaseLayer||(this.allOverlays&&!this.baseLayer)){if(this.baseLayer==null){this.setBaseLayer(c)}else{c.setVisibility(false)}}else{c.redraw()}this.events.triggerEvent("addlayer",{layer:c});c.events.triggerEvent("added",{map:this,layer:c});c.afterAdd();return true},addLayers:function(c){for(var b=0,a=c.length;b<a;b++){this.addLayer(c[b])}},removeLayer:function(c,e){if(this.events.triggerEvent("preremovelayer",{layer:c})===false){return}if(e==null){e=true}if(c.isFixed){this.viewPortDiv.removeChild(c.div)}else{this.layerContainerDiv.removeChild(c.div)}OpenLayers.Util.removeItem(this.layers,c);c.removeMap(this);c.map=null;if(this.baseLayer==c){this.baseLayer=null;if(e){for(var b=0,a=this.layers.length;b<a;b++){var d=this.layers[b];if(d.isBaseLayer||this.allOverlays){this.setBaseLayer(d);break}}}}this.resetLayersZIndex();this.events.triggerEvent("removelayer",{layer:c});c.events.triggerEvent("removed",{map:this,layer:c})},getNumLayers:function(){return this.layers.length},getLayerIndex:function(a){return OpenLayers.Util.indexOf(this.layers,a)},setLayerIndex:function(d,b){var e=this.getLayerIndex(d);if(b<0){b=0}else{if(b>this.layers.length){b=this.layers.length}}if(e!=b){this.layers.splice(e,1);this.layers.splice(b,0,d);for(var c=0,a=this.layers.length;c<a;c++){this.setLayerZIndex(this.layers[c],c)}this.events.triggerEvent("changelayer",{layer:d,property:"order"});if(this.allOverlays){if(b===0){this.setBaseLayer(d)}else{if(this.baseLayer!==this.layers[0]){this.setBaseLayer(this.layers[0])}}}}},raiseLayer:function(b,c){var a=this.getLayerIndex(b)+c;this.setLayerIndex(b,a)},setBaseLayer:function(c){if(c!=this.baseLayer){if(OpenLayers.Util.indexOf(this.layers,c)!=-1){var a=this.getCachedCenter();var d=OpenLayers.Util.getResolutionFromScale(this.getScale(),c.units);if(this.baseLayer!=null&&!this.allOverlays){this.baseLayer.setVisibility(false)}this.baseLayer=c;if(!this.allOverlays||this.baseLayer.visibility){this.baseLayer.setVisibility(true);if(this.baseLayer.inRange===false){this.baseLayer.redraw()}}if(a!=null){var b=this.getZoomForResolution(d||this.resolution,true);this.setCenter(a,b,false,true)}this.events.triggerEvent("changebaselayer",{layer:this.baseLayer})}}},addControl:function(b,a){this.controls.push(b);this.addControlToMap(b,a)},addControls:function(b,g){var e=(arguments.length===1)?[]:g;for(var d=0,a=b.length;d<a;d++){var f=b[d];var c=(e[d])?e[d]:null;this.addControl(f,c)}},addControlToMap:function(b,a){b.outsideViewport=(b.div!=null);if(this.displayProjection&&!b.displayProjection){b.displayProjection=this.displayProjection}b.setMap(this);var c=b.draw(a);if(c){if(!b.outsideViewport){c.style.zIndex=this.Z_INDEX_BASE.Control+this.controls.length;this.viewPortDiv.appendChild(c)}}if(b.autoActivate){b.activate()}},getControl:function(e){var b=null;for(var c=0,a=this.controls.length;c<a;c++){var d=this.controls[c];if(d.id==e){b=d;break}}return b},removeControl:function(a){if((a)&&(a==this.getControl(a.id))){if(a.div&&(a.div.parentNode==this.viewPortDiv)){this.viewPortDiv.removeChild(a.div)}OpenLayers.Util.removeItem(this.controls,a)}},addPopup:function(a,d){if(d){for(var b=this.popups.length-1;b>=0;--b){this.removePopup(this.popups[b])}}a.map=this;this.popups.push(a);var c=a.draw();if(c){c.style.zIndex=this.Z_INDEX_BASE.Popup+this.popups.length;this.layerContainerDiv.appendChild(c)}},removePopup:function(a){OpenLayers.Util.removeItem(this.popups,a);if(a.div){try{this.layerContainerDiv.removeChild(a.div)}catch(b){}}a.map=null},getSize:function(){var a=null;if(this.size!=null){a=this.size.clone()}return a},updateSize:function(){var c=this.getCurrentSize();if(c&&!isNaN(c.h)&&!isNaN(c.w)){this.events.clearMouseCache();var f=this.getSize();if(f==null){this.size=f=c}if(!c.equals(f)){this.size=c;for(var d=0,b=this.layers.length;d<b;d++){this.layers[d].onMapResize()}var a=this.getCachedCenter();if(this.baseLayer!=null&&a!=null){var e=this.getZoom();this.zoom=null;this.setCenter(a,e)}}}this.events.triggerEvent("updatesize")},getCurrentSize:function(){var a=new OpenLayers.Size(this.div.clientWidth,this.div.clientHeight);if(a.w==0&&a.h==0||isNaN(a.w)&&isNaN(a.h)){a.w=this.div.offsetWidth;a.h=this.div.offsetHeight}if(a.w==0&&a.h==0||isNaN(a.w)&&isNaN(a.h)){a.w=parseInt(this.div.style.width);a.h=parseInt(this.div.style.height)}return a},calculateBounds:function(a,b){var c=null;if(a==null){a=this.getCachedCenter()}if(b==null){b=this.getResolution()}if((a!=null)&&(b!=null)){var d=(this.size.w*b)/2;var e=(this.size.h*b)/2;c=new OpenLayers.Bounds(a.lon-d,a.lat-e,a.lon+d,a.lat+e)}return c},getCenter:function(){var a=null;var b=this.getCachedCenter();if(b){a=b.clone()}return a},getCachedCenter:function(){if(!this.center&&this.size){this.center=this.getLonLatFromViewPortPx({x:this.size.w/2,y:this.size.h/2})}return this.center},getZoom:function(){return this.zoom},pan:function(d,c,e){e=OpenLayers.Util.applyDefaults(e,{animate:true,dragging:false});if(e.dragging){if(d!=0||c!=0){this.moveByPx(d,c)}}else{var f=this.getViewPortPxFromLonLat(this.getCachedCenter());var b=f.add(d,c);if(this.dragging||!b.equals(f)){var a=this.getLonLatFromViewPortPx(b);if(e.animate){this.panTo(a)}else{this.moveTo(a);if(this.dragging){this.dragging=false;this.events.triggerEvent("moveend")}}}}},panTo:function(d){if(this.panTween&&this.getExtent().scale(this.panRatio).containsLonLat(d)){var a=this.getCachedCenter();if(d.equals(a)){return}var f=this.getPixelFromLonLat(a);var e=this.getPixelFromLonLat(d);var b={x:e.x-f.x,y:e.y-f.y};var c={x:0,y:0};this.panTween.start({x:0,y:0},b,this.panDuration,{callbacks:{eachStep:OpenLayers.Function.bind(function(h){var g=h.x-c.x,i=h.y-c.y;this.moveByPx(g,i);c.x=Math.round(h.x);c.y=Math.round(h.y)},this),done:OpenLayers.Function.bind(function(g){this.moveTo(d);this.dragging=false;this.events.triggerEvent("moveend")},this)}})}else{this.setCenter(d)}},setCenter:function(c,a,b,d){if(this.panTween){this.panTween.stop()}if(this.zoomTween){this.zoomTween.stop()}this.moveTo(c,a,{dragging:b,forceZoomChange:d})},moveByPx:function(m,l){var f=this.size.w/2;var a=this.size.h/2;var j=f+m;var h=a+l;var b=this.baseLayer.wrapDateLine;var k=0;var g=0;if(this.restrictedExtent){k=f;g=a;b=false}m=b||j<=this.maxPx.x-k&&j>=this.minPx.x+k?Math.round(m):0;l=h<=this.maxPx.y-g&&h>=this.minPx.y+g?Math.round(l):0;if(m||l){if(!this.dragging){this.dragging=true;this.events.triggerEvent("movestart")}this.center=null;if(m){this.layerContainerOriginPx.x-=m;this.minPx.x-=m;this.maxPx.x-=m}if(l){this.layerContainerOriginPx.y-=l;this.minPx.y-=l;this.maxPx.y-=l}this.applyTransform();var d,c,e;for(c=0,e=this.layers.length;c<e;++c){d=this.layers[c];if(d.visibility&&(d===this.baseLayer||d.inRange)){d.moveByPx(m,l);d.events.triggerEvent("move")}}this.events.triggerEvent("move")}},adjustZoom:function(f){if(this.baseLayer&&this.baseLayer.wrapDateLine){var c,a=this.baseLayer.resolutions,b=this.getMaxExtent().getWidth()/this.size.w;if(this.getResolutionForZoom(f)>b){if(this.fractionalZoom){f=this.getZoomForResolution(b)}else{for(var d=f|0,e=a.length;d<e;++d){if(a[d]<=b){f=d;break}}}}}return f},getMinZoom:function(){return this.adjustZoom(0)},moveTo:function(h,b,e){if(h!=null&&!(h instanceof OpenLayers.LonLat)){h=new OpenLayers.LonLat(h)}if(!e){e={}}if(b!=null){b=parseFloat(b);if(!this.fractionalZoom){b=Math.round(b)}}var m=b;b=this.adjustZoom(b);if(b!==m){h=this.getCenter()}var q=e.dragging||this.dragging;var k=e.forceZoomChange;if(!this.getCachedCenter()&&!this.isValidLonLat(h)){h=this.maxExtent.getCenterLonLat();this.center=h.clone()}if(this.restrictedExtent!=null){if(h==null){h=this.center}if(b==null){b=this.getZoom()}var r=this.getResolutionForZoom(b);var n=this.calculateBounds(h,r);if(!this.restrictedExtent.containsBounds(n)){var x=this.restrictedExtent.getCenterLonLat();if(n.getWidth()>this.restrictedExtent.getWidth()){h=new OpenLayers.LonLat(x.lon,h.lat)}else{if(n.left<this.restrictedExtent.left){h=h.add(this.restrictedExtent.left-n.left,0)}else{if(n.right>this.restrictedExtent.right){h=h.add(this.restrictedExtent.right-n.right,0)}}}if(n.getHeight()>this.restrictedExtent.getHeight()){h=new OpenLayers.LonLat(h.lon,x.lat)}else{if(n.bottom<this.restrictedExtent.bottom){h=h.add(0,this.restrictedExtent.bottom-n.bottom)}else{if(n.top>this.restrictedExtent.top){h=h.add(0,this.restrictedExtent.top-n.top)}}}}}var l=k||((this.isValidZoomLevel(b))&&(b!=this.getZoom()));var g=(this.isValidLonLat(h))&&(!h.equals(this.center));if(l||g||q){q||this.events.triggerEvent("movestart",{zoomChanged:l});if(g){if(!l&&this.center){this.centerLayerContainer(h)}this.center=h.clone()}var y=l?this.getResolutionForZoom(b):this.getResolution();if(l||this.layerContainerOrigin==null){this.layerContainerOrigin=this.getCachedCenter();this.layerContainerOriginPx.x=0;this.layerContainerOriginPx.y=0;this.applyTransform();var o=this.getMaxExtent({restricted:true});var d=o.getCenterLonLat();var j=this.center.lon-d.lon;var c=d.lat-this.center.lat;var v=Math.round(o.getWidth()/y);var u=Math.round(o.getHeight()/y);this.minPx={x:(this.size.w-v)/2-j/y,y:(this.size.h-u)/2-c/y};this.maxPx={x:this.minPx.x+Math.round(o.getWidth()/y),y:this.minPx.y+Math.round(o.getHeight()/y)}}if(l){this.zoom=b;this.resolution=y}var f=this.getExtent();if(this.baseLayer.visibility){this.baseLayer.moveTo(f,l,e.dragging);e.dragging||this.baseLayer.events.triggerEvent("moveend",{zoomChanged:l})}f=this.baseLayer.getExtent();for(var s=this.layers.length-1;s>=0;--s){var w=this.layers[s];if(w!==this.baseLayer&&!w.isBaseLayer){var a=w.calculateInRange();if(w.inRange!=a){w.inRange=a;if(!a){w.display(false)}this.events.triggerEvent("changelayer",{layer:w,property:"visibility"})}if(a&&w.visibility){w.moveTo(f,l,e.dragging);e.dragging||w.events.triggerEvent("moveend",{zoomChanged:l})}}}this.events.triggerEvent("move");q||this.events.triggerEvent("moveend");if(l){for(var s=0,t=this.popups.length;s<t;s++){this.popups[s].updatePosition()}this.events.triggerEvent("zoomend")}}},centerLayerContainer:function(c){var d=this.getViewPortPxFromLonLat(this.layerContainerOrigin);var g=this.getViewPortPxFromLonLat(c);if((d!=null)&&(g!=null)){var a=this.layerContainerOriginPx.x;var b=this.layerContainerOriginPx.y;var f=Math.round(d.x-g.x);var e=Math.round(d.y-g.y);this.applyTransform((this.layerContainerOriginPx.x=f),(this.layerContainerOriginPx.y=e));var i=a-f;var h=b-e;this.minPx.x-=i;this.maxPx.x-=i;this.minPx.y-=h;this.maxPx.y-=h}},isValidZoomLevel:function(a){return((a!=null)&&(a>=0)&&(a<this.getNumZoomLevels()))},isValidLonLat:function(d){var c=false;if(d!=null){var a=this.getMaxExtent();var b=this.baseLayer.wrapDateLine&&a;c=a.containsLonLat(d,{worldBounds:b})}return c},getProjection:function(){var a=this.getProjectionObject();return a?a.getCode():null},getProjectionObject:function(){var a=null;if(this.baseLayer!=null){a=this.baseLayer.projection}return a},getMaxResolution:function(){var a=null;if(this.baseLayer!=null){a=this.baseLayer.maxResolution}return a},getMaxExtent:function(b){var a=null;if(b&&b.restricted&&this.restrictedExtent){a=this.restrictedExtent}else{if(this.baseLayer!=null){a=this.baseLayer.maxExtent}}return a},getNumZoomLevels:function(){var a=null;if(this.baseLayer!=null){a=this.baseLayer.numZoomLevels}return a},getExtent:function(){var a=null;if(this.baseLayer!=null){a=this.baseLayer.getExtent()}return a},getResolution:function(){var a=null;if(this.baseLayer!=null){a=this.baseLayer.getResolution()}else{if(this.allOverlays===true&&this.layers.length>0){a=this.layers[0].getResolution()}}return a},getUnits:function(){var a=null;if(this.baseLayer!=null){a=this.baseLayer.units}return a},getScale:function(){var c=null;if(this.baseLayer!=null){var b=this.getResolution();var a=this.baseLayer.units;c=OpenLayers.Util.getScaleFromResolution(b,a)}return c},getZoomForExtent:function(c,b){var a=null;if(this.baseLayer!=null){a=this.baseLayer.getZoomForExtent(c,b)}return a},getResolutionForZoom:function(b){var a=null;if(this.baseLayer){a=this.baseLayer.getResolutionForZoom(b)}return a},getZoomForResolution:function(a,c){var b=null;if(this.baseLayer!=null){b=this.baseLayer.getZoomForResolution(a,c)}return b},zoomTo:function(g,h){var b=this;if(b.isValidZoomLevel(g)){if(b.baseLayer.wrapDateLine){g=b.adjustZoom(g)}if(b.zoomTween){var e=b.getResolution(),f=b.getResolutionForZoom(g),c={scale:1},d={scale:e/f};if(b.zoomTween.playing&&b.zoomTween.duration<3*b.zoomDuration){b.zoomTween.finish={scale:b.zoomTween.finish.scale*d.scale}}else{if(!h){var i=b.getSize();h={x:i.w/2,y:i.h/2}}b.zoomTween.start(c,d,b.zoomDuration,{minFrameRate:50,callbacks:{eachStep:function(l){var n=b.layerContainerOriginPx,m=l.scale,k=((m-1)*(n.x-h.x))|0,j=((m-1)*(n.y-h.y))|0;b.applyTransform(n.x+k,n.y+j,m)},done:function(l){b.applyTransform();var j=b.getResolution()/l.scale,k=b.getZoomForResolution(j,true);b.moveTo(b.getZoomTargetCenter(h,j),k,true)}}})}}else{var a=h?b.getZoomTargetCenter(h,b.getResolutionForZoom(g)):null;b.setCenter(a,g)}}},zoomIn:function(){this.zoomTo(this.getZoom()+1)},zoomOut:function(){this.zoomTo(this.getZoom()-1)},zoomToExtent:function(d,c){if(!(d instanceof OpenLayers.Bounds)){d=new OpenLayers.Bounds(d)}var b=d.getCenterLonLat();if(this.baseLayer.wrapDateLine){var a=this.getMaxExtent();d=d.clone();while(d.right<d.left){d.right+=a.getWidth()}b=d.getCenterLonLat().wrapDateLine(a)}this.setCenter(b,this.getZoomForExtent(d,c))},zoomToMaxExtent:function(c){var b=(c)?c.restricted:true;var a=this.getMaxExtent({restricted:b});this.zoomToExtent(a)},zoomToScale:function(g,d){var b=OpenLayers.Util.getResolutionFromScale(g,this.baseLayer.units);var e=(this.size.w*b)/2;var f=(this.size.h*b)/2;var a=this.getCachedCenter();var c=new OpenLayers.Bounds(a.lon-e,a.lat-f,a.lon+e,a.lat+f);this.zoomToExtent(c,d)},getLonLatFromViewPortPx:function(a){var b=null;if(this.baseLayer!=null){b=this.baseLayer.getLonLatFromViewPortPx(a)}return b},getViewPortPxFromLonLat:function(b){var a=null;if(this.baseLayer!=null){a=this.baseLayer.getViewPortPxFromLonLat(b)}return a},getZoomTargetCenter:function(f,c){var e=null,d=this.getSize(),b=d.w/2-f.x,a=f.y-d.h/2,g=this.getLonLatFromPixel(f);if(g){e=new OpenLayers.LonLat(g.lon+b*c,g.lat+a*c)}return e},getLonLatFromPixel:function(a){return this.getLonLatFromViewPortPx(a)},getPixelFromLonLat:function(b){var a=this.getViewPortPxFromLonLat(b);a.x=Math.round(a.x);a.y=Math.round(a.y);return a},getGeodesicPixelSize:function(g){var d=g?this.getLonLatFromPixel(g):(this.getCachedCenter()||new OpenLayers.LonLat(0,0));var e=this.getResolution();var c=d.add(-e/2,0);var i=d.add(e/2,0);var b=d.add(0,-e/2);var f=d.add(0,e/2);var h=new OpenLayers.Projection("EPSG:4326");var a=this.getProjectionObject()||h;if(!a.equals(h)){c.transform(a,h);i.transform(a,h);b.transform(a,h);f.transform(a,h)}return new OpenLayers.Size(OpenLayers.Util.distVincenty(c,i),OpenLayers.Util.distVincenty(b,f))},getViewPortPxFromLayerPx:function(d){var c=null;if(d!=null){var b=this.layerContainerOriginPx.x;var a=this.layerContainerOriginPx.y;c=d.add(b,a)}return c},getLayerPxFromViewPortPx:function(c){var d=null;if(c!=null){var b=-this.layerContainerOriginPx.x;var a=-this.layerContainerOriginPx.y;d=c.add(b,a);if(isNaN(d.x)||isNaN(d.y)){d=null}}return d},getLonLatFromLayerPx:function(a){a=this.getViewPortPxFromLayerPx(a);return this.getLonLatFromViewPortPx(a)},getLayerPxFromLonLat:function(b){var a=this.getPixelFromLonLat(b);return this.getLayerPxFromViewPortPx(a)},applyTransform:function(g,f,d){d=d||1;var h=this.layerContainerOriginPx,a=d!==1;g=g||h.x;f=f||h.y;var b=this.layerContainerDiv.style,c=this.applyTransform.transform,i=this.applyTransform.template;if(c===undefined){c=OpenLayers.Util.vendorPrefix.style("transform");this.applyTransform.transform=c;if(c){var e=OpenLayers.Element.getStyle(this.viewPortDiv,OpenLayers.Util.vendorPrefix.css("transform"));if(!e||e!=="none"){i=["translate3d(",",0) ","scale3d(",",1)"];b[c]=[i[0],"0,0",i[1]].join("")}if(!i||!~b[c].indexOf(i[0])){i=["translate(",") ","scale(",")"]}this.applyTransform.template=i}}if(c!==null&&(i[0]==="translate3d("||a===true)){if(a===true&&i[0]==="translate("){g-=h.x;f-=h.y;b.left=h.x+"px";b.top=h.y+"px"}b[c]=[i[0],g,"px,",f,"px",i[1],i[2],d,",",d,i[3]].join("")}else{b.left=g+"px";b.top=f+"px";if(c!==null){b[c]=""}}},CLASS_NAME:"OpenLayers.Map"});OpenLayers.Map.TILE_WIDTH=256;OpenLayers.Map.TILE_HEIGHT=256;OpenLayers.Feature=OpenLayers.Class({layer:null,id:null,lonlat:null,data:null,marker:null,popupClass:null,popup:null,initialize:function(a,c,b){this.layer=a;this.lonlat=c;this.data=(b!=null)?b:{};this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){if((this.layer!=null)&&(this.layer.map!=null)){if(this.popup!=null){this.layer.map.removePopup(this.popup)}}if(this.layer!=null&&this.marker!=null){this.layer.removeMarker(this.marker)}this.layer=null;this.id=null;this.lonlat=null;this.data=null;if(this.marker!=null){this.destroyMarker(this.marker);this.marker=null}if(this.popup!=null){this.destroyPopup(this.popup);this.popup=null}},onScreen:function(){var b=false;if((this.layer!=null)&&(this.layer.map!=null)){var a=this.layer.map.getExtent();b=a.containsLonLat(this.lonlat)}return b},createMarker:function(){if(this.lonlat!=null){this.marker=new OpenLayers.Marker(this.lonlat,this.data.icon)}return this.marker},destroyMarker:function(){this.marker.destroy()},createPopup:function(b){if(this.lonlat!=null){if(!this.popup){var a=(this.marker)?this.marker.icon:null;var c=this.popupClass?this.popupClass:OpenLayers.Popup.Anchored;this.popup=new c(this.id+"_popup",this.lonlat,this.data.popupSize,this.data.popupContentHTML,a,b)}if(this.data.overflow!=null){this.popup.contentDiv.style.overflow=this.data.overflow}this.popup.feature=this}return this.popup},destroyPopup:function(){if(this.popup){this.popup.feature=null;this.popup.destroy();this.popup=null}},CLASS_NAME:"OpenLayers.Feature"});OpenLayers.State={UNKNOWN:"Unknown",INSERT:"Insert",UPDATE:"Update",DELETE:"Delete"};OpenLayers.Feature.Vector=OpenLayers.Class(OpenLayers.Feature,{fid:null,geometry:null,attributes:null,bounds:null,state:null,style:null,url:null,renderIntent:"default",modified:null,initialize:function(c,a,b){OpenLayers.Feature.prototype.initialize.apply(this,[null,null,a]);this.lonlat=null;this.geometry=c?c:null;this.state=null;this.attributes={};if(a){this.attributes=OpenLayers.Util.extend(this.attributes,a)}this.style=b?b:null},destroy:function(){if(this.layer){this.layer.removeFeatures(this);this.layer=null}this.geometry=null;this.modified=null;OpenLayers.Feature.prototype.destroy.apply(this,arguments)},clone:function(){return new OpenLayers.Feature.Vector(this.geometry?this.geometry.clone():null,this.attributes,this.style)},onScreen:function(d){var c=false;if(this.layer&&this.layer.map){var a=this.layer.map.getExtent();if(d){var b=this.geometry.getBounds();c=a.intersectsBounds(b)}else{var e=a.toGeometry();c=e.intersects(this.geometry)}}return c},getVisibility:function(){return !(this.style&&this.style.display=="none"||!this.layer||this.layer&&this.layer.styleMap&&this.layer.styleMap.createSymbolizer(this,this.renderIntent).display=="none"||this.layer&&!this.layer.getVisibility())},createMarker:function(){return null},destroyMarker:function(){},createPopup:function(){return null},atPoint:function(b,d,c){var a=false;if(this.geometry){a=this.geometry.atPoint(b,d,c)}return a},destroyPopup:function(){},move:function(a){if(!this.layer||!this.geometry.move){return undefined}var b;if(a.CLASS_NAME=="OpenLayers.LonLat"){b=this.layer.getViewPortPxFromLonLat(a)}else{b=a}var d=this.layer.getViewPortPxFromLonLat(this.geometry.getBounds().getCenterLonLat());var c=this.layer.map.getResolution();this.geometry.move(c*(b.x-d.x),c*(d.y-b.y));this.layer.drawFeature(this);return d},toState:function(a){if(a==OpenLayers.State.UPDATE){switch(this.state){case OpenLayers.State.UNKNOWN:case OpenLayers.State.DELETE:this.state=a;break;case OpenLayers.State.UPDATE:case OpenLayers.State.INSERT:break}}else{if(a==OpenLayers.State.INSERT){switch(this.state){case OpenLayers.State.UNKNOWN:break;default:this.state=a;break}}else{if(a==OpenLayers.State.DELETE){switch(this.state){case OpenLayers.State.INSERT:break;case OpenLayers.State.DELETE:break;case OpenLayers.State.UNKNOWN:case OpenLayers.State.UPDATE:this.state=a;break}}else{if(a==OpenLayers.State.UNKNOWN){this.state=a}}}}},CLASS_NAME:"OpenLayers.Feature.Vector"});OpenLayers.Feature.Vector.style={"default":{fillColor:"#ee9900",fillOpacity:0.4,hoverFillColor:"white",hoverFillOpacity:0.8,strokeColor:"#ee9900",strokeOpacity:1,strokeWidth:1,strokeLinecap:"round",strokeDashstyle:"solid",hoverStrokeColor:"red",hoverStrokeOpacity:1,hoverStrokeWidth:0.2,pointRadius:6,hoverPointRadius:1,hoverPointUnit:"%",pointerEvents:"visiblePainted",cursor:"inherit",fontColor:"#000000",labelAlign:"cm",labelOutlineColor:"white",labelOutlineWidth:3},select:{fillColor:"blue",fillOpacity:0.4,hoverFillColor:"white",hoverFillOpacity:0.8,strokeColor:"blue",strokeOpacity:1,strokeWidth:2,strokeLinecap:"round",strokeDashstyle:"solid",hoverStrokeColor:"red",hoverStrokeOpacity:1,hoverStrokeWidth:0.2,pointRadius:6,hoverPointRadius:1,hoverPointUnit:"%",pointerEvents:"visiblePainted",cursor:"pointer",fontColor:"#000000",labelAlign:"cm",labelOutlineColor:"white",labelOutlineWidth:3},temporary:{fillColor:"#66cccc",fillOpacity:0.2,hoverFillColor:"white",hoverFillOpacity:0.8,strokeColor:"#66cccc",strokeOpacity:1,strokeLinecap:"round",strokeWidth:2,strokeDashstyle:"solid",hoverStrokeColor:"red",hoverStrokeOpacity:1,hoverStrokeWidth:0.2,pointRadius:6,hoverPointRadius:1,hoverPointUnit:"%",pointerEvents:"visiblePainted",cursor:"inherit",fontColor:"#000000",labelAlign:"cm",labelOutlineColor:"white",labelOutlineWidth:3},"delete":{display:"none"}};OpenLayers.Style=OpenLayers.Class({id:null,name:null,title:null,description:null,layerName:null,isDefault:false,rules:null,context:null,defaultStyle:null,defaultsPerSymbolizer:false,propertyStyles:null,initialize:function(b,a){OpenLayers.Util.extend(this,a);this.rules=[];if(a&&a.rules){this.addRules(a.rules)}this.setDefaultStyle(b||OpenLayers.Feature.Vector.style["default"]);this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){for(var b=0,a=this.rules.length;b<a;b++){this.rules[b].destroy();this.rules[b]=null}this.rules=null;this.defaultStyle=null},createSymbolizer:function(k){var a=this.defaultsPerSymbolizer?{}:this.createLiterals(OpenLayers.Util.extend({},this.defaultStyle),k);var j=this.rules;var h,b;var c=[];var f=false;for(var d=0,e=j.length;d<e;d++){h=j[d];var g=h.evaluate(k);if(g){if(h instanceof OpenLayers.Rule&&h.elseFilter){c.push(h)}else{f=true;this.applySymbolizer(h,a,k)}}}if(f==false&&c.length>0){f=true;for(var d=0,e=c.length;d<e;d++){this.applySymbolizer(c[d],a,k)}}if(j.length>0&&f==false){a.display="none"}if(a.label!=null&&typeof a.label!=="string"){a.label=String(a.label)}return a},applySymbolizer:function(f,d,b){var a=b.geometry?this.getSymbolizerPrefix(b.geometry):OpenLayers.Style.SYMBOLIZER_PREFIXES[0];var c=f.symbolizer[a]||f.symbolizer;if(this.defaultsPerSymbolizer===true){var e=this.defaultStyle;OpenLayers.Util.applyDefaults(c,{pointRadius:e.pointRadius});if(c.stroke===true||c.graphic===true){OpenLayers.Util.applyDefaults(c,{strokeWidth:e.strokeWidth,strokeColor:e.strokeColor,strokeOpacity:e.strokeOpacity,strokeDashstyle:e.strokeDashstyle,strokeLinecap:e.strokeLinecap})}if(c.fill===true||c.graphic===true){OpenLayers.Util.applyDefaults(c,{fillColor:e.fillColor,fillOpacity:e.fillOpacity})}if(c.graphic===true){OpenLayers.Util.applyDefaults(c,{pointRadius:this.defaultStyle.pointRadius,externalGraphic:this.defaultStyle.externalGraphic,graphicName:this.defaultStyle.graphicName,graphicOpacity:this.defaultStyle.graphicOpacity,graphicWidth:this.defaultStyle.graphicWidth,graphicHeight:this.defaultStyle.graphicHeight,graphicXOffset:this.defaultStyle.graphicXOffset,graphicYOffset:this.defaultStyle.graphicYOffset})}}return this.createLiterals(OpenLayers.Util.extend(d,c),b)},createLiterals:function(d,c){var b=OpenLayers.Util.extend({},c.attributes||c.data);OpenLayers.Util.extend(b,this.context);for(var a in this.propertyStyles){d[a]=OpenLayers.Style.createLiteral(d[a],b,c,a)}return d},findPropertyStyles:function(){var d={};var f=this.defaultStyle;this.addPropertyStyles(d,f);var h=this.rules;var e,g;for(var c=0,a=h.length;c<a;c++){e=h[c].symbolizer;for(var b in e){g=e[b];if(typeof g=="object"){this.addPropertyStyles(d,g)}else{this.addPropertyStyles(d,e);break}}}return d},addPropertyStyles:function(b,c){var d;for(var a in c){d=c[a];if(typeof d=="string"&&d.match(/\$\{\w+\}/)){b[a]=true}}return b},addRules:function(a){Array.prototype.push.apply(this.rules,a);this.propertyStyles=this.findPropertyStyles()},setDefaultStyle:function(a){this.defaultStyle=a;this.propertyStyles=this.findPropertyStyles()},getSymbolizerPrefix:function(d){var c=OpenLayers.Style.SYMBOLIZER_PREFIXES;for(var b=0,a=c.length;b<a;b++){if(d.CLASS_NAME.indexOf(c[b])!=-1){return c[b]}}},clone:function(){var b=OpenLayers.Util.extend({},this);if(this.rules){b.rules=[];for(var c=0,a=this.rules.length;c<a;++c){b.rules.push(this.rules[c].clone())}}b.context=this.context&&OpenLayers.Util.extend({},this.context);var d=OpenLayers.Util.extend({},this.defaultStyle);return new OpenLayers.Style(d,b)},CLASS_NAME:"OpenLayers.Style"});OpenLayers.Style.createLiteral=function(d,b,a,c){if(typeof d=="string"&&d.indexOf("${")!=-1){d=OpenLayers.String.format(d,b,[a,c]);d=(isNaN(d)||!d)?d:parseFloat(d)}return d};OpenLayers.Style.SYMBOLIZER_PREFIXES=["Point","Line","Polygon","Text","Raster"];OpenLayers.Rule=OpenLayers.Class({id:null,name:null,title:null,description:null,context:null,filter:null,elseFilter:false,symbolizer:null,symbolizers:null,minScaleDenominator:null,maxScaleDenominator:null,initialize:function(a){this.symbolizer={};OpenLayers.Util.extend(this,a);if(this.symbolizers){delete this.symbolizer}this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){for(var a in this.symbolizer){this.symbolizer[a]=null}this.symbolizer=null;delete this.symbolizers},evaluate:function(c){var b=this.getContext(c);var a=true;if(this.minScaleDenominator||this.maxScaleDenominator){var d=c.layer.map.getScale()}if(this.minScaleDenominator){a=d>=OpenLayers.Style.createLiteral(this.minScaleDenominator,b)}if(a&&this.maxScaleDenominator){a=d<OpenLayers.Style.createLiteral(this.maxScaleDenominator,b)}if(a&&this.filter){if(this.filter.CLASS_NAME=="OpenLayers.Filter.FeatureId"){a=this.filter.evaluate(c)}else{a=this.filter.evaluate(b)}}return a},getContext:function(b){var a=this.context;if(!a){a=b.attributes||b.data}if(typeof this.context=="function"){a=this.context(b)}return a},clone:function(){var b=OpenLayers.Util.extend({},this);if(this.symbolizers){var a=this.symbolizers.length;b.symbolizers=new Array(a);for(var d=0;d<a;++d){b.symbolizers[d]=this.symbolizers[d].clone()}}else{b.symbolizer={};var f,e;for(var c in this.symbolizer){f=this.symbolizer[c];e=typeof f;if(e==="object"){b.symbolizer[c]=OpenLayers.Util.extend({},f)}else{if(e==="string"){b.symbolizer[c]=f}}}}b.filter=this.filter&&this.filter.clone();b.context=this.context&&OpenLayers.Util.extend({},this.context);return new OpenLayers.Rule(b)},CLASS_NAME:"OpenLayers.Rule"});OpenLayers.Symbolizer=OpenLayers.Class({zIndex:0,initialize:function(a){OpenLayers.Util.extend(this,a)},clone:function(){var a=OpenLayers.Util.getConstructor(this.CLASS_NAME);return new a(OpenLayers.Util.extend({},this))},CLASS_NAME:"OpenLayers.Symbolizer"});OpenLayers.Symbolizer.Point=OpenLayers.Class(OpenLayers.Symbolizer,{initialize:function(a){OpenLayers.Symbolizer.prototype.initialize.apply(this,arguments)},CLASS_NAME:"OpenLayers.Symbolizer.Point"});OpenLayers.Symbolizer.Line=OpenLayers.Class(OpenLayers.Symbolizer,{initialize:function(a){OpenLayers.Symbolizer.prototype.initialize.apply(this,arguments)},CLASS_NAME:"OpenLayers.Symbolizer.Line"});OpenLayers.Symbolizer.Polygon=OpenLayers.Class(OpenLayers.Symbolizer,{initialize:function(a){OpenLayers.Symbolizer.prototype.initialize.apply(this,arguments)},CLASS_NAME:"OpenLayers.Symbolizer.Polygon"});OpenLayers.Symbolizer.Text=OpenLayers.Class(OpenLayers.Symbolizer,{initialize:function(a){OpenLayers.Symbolizer.prototype.initialize.apply(this,arguments)},CLASS_NAME:"OpenLayers.Symbolizer.Text"});OpenLayers.Symbolizer.Raster=OpenLayers.Class(OpenLayers.Symbolizer,{initialize:function(a){OpenLayers.Symbolizer.prototype.initialize.apply(this,arguments)},CLASS_NAME:"OpenLayers.Symbolizer.Raster"});OpenLayers.Style2=OpenLayers.Class({id:null,name:null,title:null,description:null,layerName:null,isDefault:false,rules:null,initialize:function(a){OpenLayers.Util.extend(this,a);this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){for(var b=0,a=this.rules.length;b<a;b++){this.rules[b].destroy()}delete this.rules},clone:function(){var b=OpenLayers.Util.extend({},this);if(this.rules){b.rules=[];for(var c=0,a=this.rules.length;c<a;++c){b.rules.push(this.rules[c].clone())}}return new OpenLayers.Style2(b)},CLASS_NAME:"OpenLayers.Style2"});OpenLayers.Format=OpenLayers.Class({options:null,externalProjection:null,internalProjection:null,data:null,keepData:false,initialize:function(a){OpenLayers.Util.extend(this,a);this.options=a},destroy:function(){},read:function(a){throw new Error("Read not implemented.")},write:function(a){throw new Error("Write not implemented.")},CLASS_NAME:"OpenLayers.Format"});OpenLayers.Format.XML=OpenLayers.Class(OpenLayers.Format,{namespaces:null,namespaceAlias:null,defaultPrefix:null,readers:{},writers:{},xmldom:null,initialize:function(a){if(window.ActiveXObject){this.xmldom=new ActiveXObject("Microsoft.XMLDOM")}OpenLayers.Format.prototype.initialize.apply(this,[a]);this.namespaces=OpenLayers.Util.extend({},this.namespaces);this.namespaceAlias={};for(var b in this.namespaces){this.namespaceAlias[this.namespaces[b]]=b}},destroy:function(){this.xmldom=null;OpenLayers.Format.prototype.destroy.apply(this,arguments)},setNamespace:function(a,b){this.namespaces[a]=b;this.namespaceAlias[b]=a},read:function(c){var a=c.indexOf("<");if(a>0){c=c.substring(a)}var b=OpenLayers.Util.Try(OpenLayers.Function.bind((function(){var d;if(window.ActiveXObject&&!this.xmldom){d=new ActiveXObject("Microsoft.XMLDOM")}else{d=this.xmldom}d.loadXML(c);return d}),this),function(){return new DOMParser().parseFromString(c,"text/xml")},function(){var d=new XMLHttpRequest();d.open("GET","data:text/xml;charset=utf-8,"+encodeURIComponent(c),false);if(d.overrideMimeType){d.overrideMimeType("text/xml")}d.send(null);return d.responseXML});if(this.keepData){this.data=b}return b},write:function(b){var c;if(this.xmldom){c=b.xml}else{var a=new XMLSerializer();if(b.nodeType==1){var d=document.implementation.createDocument("","",null);if(d.importNode){b=d.importNode(b,true)}d.appendChild(b);c=a.serializeToString(d)}else{c=a.serializeToString(b)}}return c},createElementNS:function(c,a){var b;if(this.xmldom){if(typeof c=="string"){b=this.xmldom.createNode(1,a,c)}else{b=this.xmldom.createNode(1,a,"")}}else{b=document.createElementNS(c,a)}return b},createDocumentFragment:function(){var a;if(this.xmldom){a=this.xmldom.createDocumentFragment()}else{a=document.createDocumentFragment()}return a},createTextNode:function(b){var a;if(typeof b!=="string"){b=String(b)}if(this.xmldom){a=this.xmldom.createTextNode(b)}else{a=document.createTextNode(b)}return a},getElementsByTagNameNS:function(e,d,c){var a=[];if(e.getElementsByTagNameNS){a=e.getElementsByTagNameNS(d,c)}else{var b=e.getElementsByTagName("*");var j,f;for(var g=0,h=b.length;g<h;++g){j=b[g];f=(j.prefix)?(j.prefix+":"+c):c;if((c=="*")||(f==j.nodeName)){if((d=="*")||(d==j.namespaceURI)){a.push(j)}}}}return a},getAttributeNodeNS:function(c,b,a){var j=null;if(c.getAttributeNodeNS){j=c.getAttributeNodeNS(b,a)}else{var e=c.attributes;var h,d;for(var f=0,g=e.length;f<g;++f){h=e[f];if(h.namespaceURI==b){d=(h.prefix)?(h.prefix+":"+a):a;if(d==h.nodeName){j=h;break}}}}return j},getAttributeNS:function(e,d,a){var b="";if(e.getAttributeNS){b=e.getAttributeNS(d,a)||""}else{var c=this.getAttributeNodeNS(e,d,a);if(c){b=c.nodeValue}}return b},getChildValue:function(a,c){var b=c||"";if(a){for(var d=a.firstChild;d;d=d.nextSibling){switch(d.nodeType){case 3:case 4:b+=d.nodeValue}}}return b},isSimpleContent:function(a){var c=true;for(var b=a.firstChild;b;b=b.nextSibling){if(b.nodeType===1){c=false;break}}return c},contentType:function(c){var e=false,b=false;var a=OpenLayers.Format.XML.CONTENT_TYPE.EMPTY;for(var d=c.firstChild;d;d=d.nextSibling){switch(d.nodeType){case 1:b=true;break;case 8:break;default:e=true}if(b&&e){break}}if(b&&e){a=OpenLayers.Format.XML.CONTENT_TYPE.MIXED}else{if(b){return OpenLayers.Format.XML.CONTENT_TYPE.COMPLEX}else{if(e){return OpenLayers.Format.XML.CONTENT_TYPE.SIMPLE}}}return a},hasAttributeNS:function(c,b,a){var d=false;if(c.hasAttributeNS){d=c.hasAttributeNS(b,a)}else{d=!!this.getAttributeNodeNS(c,b,a)}return d},setAttributeNS:function(d,c,a,e){if(d.setAttributeNS){d.setAttributeNS(c,a,e)}else{if(this.xmldom){if(c){var b=d.ownerDocument.createNode(2,a,c);b.nodeValue=e;d.setAttributeNode(b)}else{d.setAttribute(a,e)}}else{throw"setAttributeNS not implemented"}}},createElementNSPlus:function(b,a){a=a||{};var d=a.uri||this.namespaces[a.prefix];if(!d){var f=b.indexOf(":");d=this.namespaces[b.substring(0,f)]}if(!d){d=this.namespaces[this.defaultPrefix]}var c=this.createElementNS(d,b);if(a.attributes){this.setAttributes(c,a.attributes)}var e=a.value;if(e!=null){c.appendChild(this.createTextNode(e))}return c},setAttributes:function(c,e){var d,b;for(var a in e){if(e[a]!=null&&e[a].toString){d=e[a].toString();b=this.namespaces[a.substring(0,a.indexOf(":"))]||null;this.setAttributeNS(c,b,a,d)}}},readNode:function(c,e){if(!e){e={}}var d=this.readers[c.namespaceURI?this.namespaceAlias[c.namespaceURI]:this.defaultPrefix];if(d){var b=c.localName||c.nodeName.split(":").pop();var a=d[b]||d["*"];if(a){a.apply(this,[c,e])}}return e},readChildNodes:function(d,e){if(!e){e={}}var c=d.childNodes;var f;for(var b=0,a=c.length;b<a;++b){f=c[b];if(f.nodeType==1){this.readNode(f,e)}}return e},writeNode:function(a,f,d){var e,c;var b=a.indexOf(":");if(b>0){e=a.substring(0,b);c=a.substring(b+1)}else{if(d){e=this.namespaceAlias[d.namespaceURI]}else{e=this.defaultPrefix}c=a}var g=this.writers[e][c].apply(this,[f]);if(d){d.appendChild(g)}return g},getChildEl:function(c,a,b){return c&&this.getThisOrNextEl(c.firstChild,a,b)},getNextEl:function(c,a,b){return c&&this.getThisOrNextEl(c.nextSibling,a,b)},getThisOrNextEl:function(d,a,c){outer:for(var b=d;b;b=b.nextSibling){switch(b.nodeType){case 1:if((!a||a===(b.localName||b.nodeName.split(":").pop()))&&(!c||c===b.namespaceURI)){break outer}b=null;break outer;case 3:if(/^\s*$/.test(b.nodeValue)){break}case 4:case 6:case 12:case 10:case 11:b=null;break outer}}return b||null},lookupNamespaceURI:function(e,f){var d=null;if(e){if(e.lookupNamespaceURI){d=e.lookupNamespaceURI(f)}else{outer:switch(e.nodeType){case 1:if(e.namespaceURI!==null&&e.prefix===f){d=e.namespaceURI;break outer}var b=e.attributes.length;if(b){var a;for(var c=0;c<b;++c){a=e.attributes[c];if(a.prefix==="xmlns"&&a.name==="xmlns:"+f){d=a.value||null;break outer}else{if(a.name==="xmlns"&&f===null){d=a.value||null;break outer}}}}d=this.lookupNamespaceURI(e.parentNode,f);break outer;case 2:d=this.lookupNamespaceURI(e.ownerElement,f);break outer;case 9:d=this.lookupNamespaceURI(e.documentElement,f);break outer;case 6:case 12:case 10:case 11:break outer;default:d=this.lookupNamespaceURI(e.parentNode,f);break outer}}}return d},getXMLDoc:function(){if(!OpenLayers.Format.XML.document&&!this.xmldom){if(document.implementation&&document.implementation.createDocument){OpenLayers.Format.XML.document=document.implementation.createDocument("","",null)}else{if(!this.xmldom&&window.ActiveXObject){this.xmldom=new ActiveXObject("Microsoft.XMLDOM")}}}return OpenLayers.Format.XML.document||this.xmldom},CLASS_NAME:"OpenLayers.Format.XML"});OpenLayers.Format.XML.CONTENT_TYPE={EMPTY:0,SIMPLE:1,COMPLEX:2,MIXED:3};OpenLayers.Format.XML.lookupNamespaceURI=OpenLayers.Function.bind(OpenLayers.Format.XML.prototype.lookupNamespaceURI,OpenLayers.Format.XML.prototype);OpenLayers.Format.XML.document=null;OpenLayers.Geometry=OpenLayers.Class({id:null,parent:null,bounds:null,initialize:function(){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},destroy:function(){this.id=null;this.bounds=null},clone:function(){return new OpenLayers.Geometry()},setBounds:function(a){if(a){this.bounds=a.clone()}},clearBounds:function(){this.bounds=null;if(this.parent){this.parent.clearBounds()}},extendBounds:function(b){var a=this.getBounds();if(!a){this.setBounds(b)}else{this.bounds.extend(b)}},getBounds:function(){if(this.bounds==null){this.calculateBounds()}return this.bounds},calculateBounds:function(){},distanceTo:function(b,a){},getVertices:function(a){},atPoint:function(e,h,f){var c=false;var d=this.getBounds();if((d!=null)&&(e!=null)){var b=(h!=null)?h:0;var a=(f!=null)?f:0;var g=new OpenLayers.Bounds(this.bounds.left-b,this.bounds.bottom-a,this.bounds.right+b,this.bounds.top+a);c=g.containsLonLat(e)}return c},getLength:function(){return 0},getArea:function(){return 0},getCentroid:function(){return null},toString:function(){var a;if(OpenLayers.Format&&OpenLayers.Format.WKT){a=OpenLayers.Format.WKT.prototype.write(new OpenLayers.Feature.Vector(this))}else{a=Object.prototype.toString.call(this)}return a},CLASS_NAME:"OpenLayers.Geometry"});OpenLayers.Geometry.fromWKT=function(f){var d;if(OpenLayers.Format&&OpenLayers.Format.WKT){var g=OpenLayers.Geometry.fromWKT.format;if(!g){g=new OpenLayers.Format.WKT();OpenLayers.Geometry.fromWKT.format=g}var b=g.read(f);if(b instanceof OpenLayers.Feature.Vector){d=b.geometry}else{if(OpenLayers.Util.isArray(b)){var a=b.length;var e=new Array(a);for(var c=0;c<a;++c){e[c]=b[c].geometry}d=new OpenLayers.Geometry.Collection(e)}}}return d};OpenLayers.Geometry.segmentsIntersect=function(a,H,b){var s=b&&b.point;var z=b&&b.tolerance;var f=false;var B=a.x1-H.x1;var F=a.y1-H.y1;var o=a.x2-a.x1;var w=a.y2-a.y1;var t=H.y2-H.y1;var l=H.x2-H.x1;var D=(t*o)-(l*w);var e=(l*F)-(t*B);var c=(o*F)-(w*B);if(D==0){if(e==0&&c==0){f=true}}else{var E=e/D;var C=c/D;if(E>=0&&E<=1&&C>=0&&C<=1){if(!s){f=true}else{var h=a.x1+(E*o);var g=a.y1+(E*w);f=new OpenLayers.Geometry.Point(h,g)}}}if(z){var r;if(f){if(s){var n=[a,H];var A,h,g;outer:for(var v=0;v<2;++v){A=n[v];for(var u=1;u<3;++u){h=A["x"+u];g=A["y"+u];r=Math.sqrt(Math.pow(h-f.x,2)+Math.pow(g-f.y,2));if(r<z){f.x=h;f.y=g;break outer}}}}}else{var n=[a,H];var q,G,h,g,m,k;outer:for(var v=0;v<2;++v){q=n[v];G=n[(v+1)%2];for(var u=1;u<3;++u){m={x:q["x"+u],y:q["y"+u]};k=OpenLayers.Geometry.distanceToSegment(m,G);if(k.distance<z){if(s){f=new OpenLayers.Geometry.Point(m.x,m.y)}else{f=true}break outer}}}}}return f};OpenLayers.Geometry.distanceToSegment=function(b,c){var a=OpenLayers.Geometry.distanceSquaredToSegment(b,c);a.distance=Math.sqrt(a.distance);return a};OpenLayers.Geometry.distanceSquaredToSegment=function(k,d){var c=k.x;var j=k.y;var b=d.x1;var i=d.y1;var a=d.x2;var f=d.y2;var m=a-b;var l=f-i;var h=((m*(c-b))+(l*(j-i)))/(Math.pow(m,2)+Math.pow(l,2));var g,e;if(h<=0){g=b;e=i}else{if(h>=1){g=a;e=f}else{g=b+h*m;e=i+h*l}}return{distance:Math.pow(g-c,2)+Math.pow(e-j,2),x:g,y:e,along:h}};OpenLayers.Geometry.Point=OpenLayers.Class(OpenLayers.Geometry,{x:null,y:null,initialize:function(a,b){OpenLayers.Geometry.prototype.initialize.apply(this,arguments);this.x=parseFloat(a);this.y=parseFloat(b)},clone:function(a){if(a==null){a=new OpenLayers.Geometry.Point(this.x,this.y)}OpenLayers.Util.applyDefaults(a,this);return a},calculateBounds:function(){this.bounds=new OpenLayers.Bounds(this.x,this.y,this.x,this.y)},distanceTo:function(f,j){var d=!(j&&j.edge===false);var a=d&&j&&j.details;var b,e,h,c,g,i;if(f instanceof OpenLayers.Geometry.Point){e=this.x;h=this.y;c=f.x;g=f.y;b=Math.sqrt(Math.pow(e-c,2)+Math.pow(h-g,2));i=!a?b:{x0:e,y0:h,x1:c,y1:g,distance:b}}else{i=f.distanceTo(this,j);if(a){i={x0:i.x1,y0:i.y1,x1:i.x0,y1:i.y0,distance:i.distance}}}return i},equals:function(a){var b=false;if(a!=null){b=((this.x==a.x&&this.y==a.y)||(isNaN(this.x)&&isNaN(this.y)&&isNaN(a.x)&&isNaN(a.y)))}return b},toShortString:function(){return(this.x+", "+this.y)},move:function(a,b){this.x=this.x+a;this.y=this.y+b;this.clearBounds()},rotate:function(d,b){d*=Math.PI/180;var a=this.distanceTo(b);var c=d+Math.atan2(this.y-b.y,this.x-b.x);this.x=b.x+(a*Math.cos(c));this.y=b.y+(a*Math.sin(c));this.clearBounds()},getCentroid:function(){return new OpenLayers.Geometry.Point(this.x,this.y)},resize:function(c,a,b){b=(b==undefined)?1:b;this.x=a.x+(c*b*(this.x-a.x));this.y=a.y+(c*(this.y-a.y));this.clearBounds();return this},intersects:function(b){var a=false;if(b.CLASS_NAME=="OpenLayers.Geometry.Point"){a=this.equals(b)}else{a=b.intersects(this)}return a},transform:function(b,a){if((b&&a)){OpenLayers.Projection.transform(this,b,a);this.bounds=null}return this},getVertices:function(a){return[this]},CLASS_NAME:"OpenLayers.Geometry.Point"});OpenLayers.Geometry.Collection=OpenLayers.Class(OpenLayers.Geometry,{components:null,componentTypes:null,initialize:function(a){OpenLayers.Geometry.prototype.initialize.apply(this,arguments);this.components=[];if(a!=null){this.addComponents(a)}},destroy:function(){this.components.length=0;this.components=null;OpenLayers.Geometry.prototype.destroy.apply(this,arguments)},clone:function(){var d=OpenLayers.Util.getConstructor(this.CLASS_NAME);var c=new d();for(var b=0,a=this.components.length;b<a;b++){c.addComponent(this.components[b].clone())}OpenLayers.Util.applyDefaults(c,this);return c},getComponentsString:function(){var b=[];for(var c=0,a=this.components.length;c<a;c++){b.push(this.components[c].toShortString())}return b.join(",")},calculateBounds:function(){this.bounds=null;var d=new OpenLayers.Bounds();var c=this.components;if(c){for(var b=0,a=c.length;b<a;b++){d.extend(c[b].getBounds())}}if(d.left!=null&&d.bottom!=null&&d.right!=null&&d.top!=null){this.setBounds(d)}},addComponents:function(c){if(!(OpenLayers.Util.isArray(c))){c=[c]}for(var b=0,a=c.length;b<a;b++){this.addComponent(c[b])}},addComponent:function(b,a){var d=false;if(b){if(this.componentTypes==null||(OpenLayers.Util.indexOf(this.componentTypes,b.CLASS_NAME)>-1)){if(a!=null&&(a<this.components.length)){var e=this.components.slice(0,a);var c=this.components.slice(a,this.components.length);e.push(b);this.components=e.concat(c)}else{this.components.push(b)}b.parent=this;this.clearBounds();d=true}}return d},removeComponents:function(b){var c=false;if(!(OpenLayers.Util.isArray(b))){b=[b]}for(var a=b.length-1;a>=0;--a){c=this.removeComponent(b[a])||c}return c},removeComponent:function(a){OpenLayers.Util.removeItem(this.components,a);this.clearBounds();return true},getLength:function(){var c=0;for(var b=0,a=this.components.length;b<a;b++){c+=this.components[b].getLength()}return c},getArea:function(){var c=0;for(var b=0,a=this.components.length;b<a;b++){c+=this.components[b].getArea()}return c},getGeodesicArea:function(b){var d=0;for(var c=0,a=this.components.length;c<a;c++){d+=this.components[c].getGeodesicArea(b)}return d},getCentroid:function(g){if(!g){return this.components.length&&this.components[0].getCentroid()}var l=this.components.length;if(!l){return false}var b=[];var c=[];var d=0;var h=Number.MAX_VALUE;var m;for(var k=0;k<l;++k){m=this.components[k];var e=m.getArea();var f=m.getCentroid(true);if(isNaN(e)||isNaN(f.x)||isNaN(f.y)){continue}b.push(e);d+=e;h=(e<h&&e>0)?e:h;c.push(f)}l=b.length;if(d===0){for(var k=0;k<l;++k){b[k]=1}d=b.length}else{for(var k=0;k<l;++k){b[k]/=h}d/=h}var j=0,a=0,f,e;for(var k=0;k<l;++k){f=c[k];e=b[k];j+=f.x*e;a+=f.y*e}return new OpenLayers.Geometry.Point(j/d,a/d)},getGeodesicLength:function(b){var d=0;for(var c=0,a=this.components.length;c<a;c++){d+=this.components[c].getGeodesicLength(b)}return d},move:function(b,d){for(var c=0,a=this.components.length;c<a;c++){this.components[c].move(b,d)}},rotate:function(d,b){for(var c=0,a=this.components.length;c<a;++c){this.components[c].rotate(d,b)}},resize:function(d,a,c){for(var b=0;b<this.components.length;++b){this.components[b].resize(d,a,c)}return this},distanceTo:function(h,j){var c=!(j&&j.edge===false);var a=c&&j&&j.details;var k,d,b;var e=Number.POSITIVE_INFINITY;for(var f=0,g=this.components.length;f<g;++f){k=this.components[f].distanceTo(h,j);b=a?k.distance:k;if(b<e){e=b;d=k;if(e==0){break}}}return d},equals:function(d){var b=true;if(!d||!d.CLASS_NAME||(this.CLASS_NAME!=d.CLASS_NAME)){b=false}else{if(!(OpenLayers.Util.isArray(d.components))||(d.components.length!=this.components.length)){b=false}else{for(var c=0,a=this.components.length;c<a;++c){if(!this.components[c].equals(d.components[c])){b=false;break}}}}return b},transform:function(e,c){if(e&&c){for(var d=0,a=this.components.length;d<a;d++){var b=this.components[d];b.transform(e,c)}this.bounds=null}return this},intersects:function(d){var b=false;for(var c=0,a=this.components.length;c<a;++c){b=d.intersects(this.components[c]);if(b){break}}return b},getVertices:function(b){var c=[];for(var d=0,a=this.components.length;d<a;++d){Array.prototype.push.apply(c,this.components[d].getVertices(b))}return c},CLASS_NAME:"OpenLayers.Geometry.Collection"});OpenLayers.Geometry.MultiPoint=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.Point"],addPoint:function(a,b){this.addComponent(a,b)},removePoint:function(a){this.removeComponent(a)},CLASS_NAME:"OpenLayers.Geometry.MultiPoint"});OpenLayers.Geometry.Curve=OpenLayers.Class(OpenLayers.Geometry.MultiPoint,{componentTypes:["OpenLayers.Geometry.Point"],getLength:function(){var c=0;if(this.components&&(this.components.length>1)){for(var b=1,a=this.components.length;b<a;b++){c+=this.components[b-1].distanceTo(this.components[b])}}return c},getGeodesicLength:function(b){var e=this;if(b){var c=new OpenLayers.Projection("EPSG:4326");if(!c.equals(b)){e=this.clone().transform(b,c)}}var f=0;if(e.components&&(e.components.length>1)){var h,g;for(var d=1,a=e.components.length;d<a;d++){h=e.components[d-1];g=e.components[d];f+=OpenLayers.Util.distVincenty({lon:h.x,lat:h.y},{lon:g.x,lat:g.y})}}return f*1000},CLASS_NAME:"OpenLayers.Geometry.Curve"});OpenLayers.Geometry.LineString=OpenLayers.Class(OpenLayers.Geometry.Curve,{removeComponent:function(a){var b=this.components&&(this.components.length>2);if(b){OpenLayers.Geometry.Collection.prototype.removeComponent.apply(this,arguments)}return b},intersects:function(m){var c=false;var l=m.CLASS_NAME;if(l=="OpenLayers.Geometry.LineString"||l=="OpenLayers.Geometry.LinearRing"||l=="OpenLayers.Geometry.Point"){var q=this.getSortedSegments();var n;if(l=="OpenLayers.Geometry.Point"){n=[{x1:m.x,y1:m.y,x2:m.x,y2:m.y}]}else{n=m.getSortedSegments()}var t,g,e,a,s,r,d,b;outer:for(var h=0,k=q.length;h<k;++h){t=q[h];g=t.x1;e=t.x2;a=t.y1;s=t.y2;inner:for(var f=0,o=n.length;f<o;++f){r=n[f];if(r.x1>e){break}if(r.x2<g){continue}d=r.y1;b=r.y2;if(Math.min(d,b)>Math.max(a,s)){continue}if(Math.max(d,b)<Math.min(a,s)){continue}if(OpenLayers.Geometry.segmentsIntersect(t,r)){c=true;break outer}}}}else{c=m.intersects(this)}return c},getSortedSegments:function(){var a=this.components.length-1;var b=new Array(a),e,d;for(var c=0;c<a;++c){e=this.components[c];d=this.components[c+1];if(e.x<d.x){b[c]={x1:e.x,y1:e.y,x2:d.x,y2:d.y}}else{b[c]={x1:d.x,y1:d.y,x2:e.x,y2:e.y}}}function f(h,g){return h.x1-g.x1}return b.sort(f)},splitWithSegment:function(s,b){var c=!(b&&b.edge===false);var o=b&&b.tolerance;var a=[];var u=this.getVertices();var n=[];var w=[];var h=false;var e,d,l;var j,r,v;var f={point:true,tolerance:o};var g=null;for(var m=0,k=u.length-2;m<=k;++m){e=u[m];n.push(e.clone());d=u[m+1];v={x1:e.x,y1:e.y,x2:d.x,y2:d.y};l=OpenLayers.Geometry.segmentsIntersect(s,v,f);if(l instanceof OpenLayers.Geometry.Point){if((l.x===s.x1&&l.y===s.y1)||(l.x===s.x2&&l.y===s.y2)||l.equals(e)||l.equals(d)){r=true}else{r=false}if(r||c){if(!l.equals(w[w.length-1])){w.push(l.clone())}if(m===0){if(l.equals(e)){continue}}if(l.equals(d)){continue}h=true;if(!l.equals(e)){n.push(l)}a.push(new OpenLayers.Geometry.LineString(n));n=[l.clone()]}}}if(h){n.push(d.clone());a.push(new OpenLayers.Geometry.LineString(n))}if(w.length>0){var q=s.x1<s.x2?1:-1;var t=s.y1<s.y2?1:-1;g={lines:a,points:w.sort(function(x,i){return(q*x.x-q*i.x)||(t*x.y-t*i.y)})}}return g},split:function(y,b){var n=null;var d=b&&b.mutual;var l,e,m,c;if(y instanceof OpenLayers.Geometry.LineString){var x=this.getVertices();var g,f,w,h,a,q;var t=[];m=[];for(var u=0,o=x.length-2;u<=o;++u){g=x[u];f=x[u+1];w={x1:g.x,y1:g.y,x2:f.x,y2:f.y};c=c||[y];if(d){t.push(g.clone())}for(var s=0;s<c.length;++s){h=c[s].splitWithSegment(w,b);if(h){a=h.lines;if(a.length>0){a.unshift(s,1);Array.prototype.splice.apply(c,a);s+=a.length-2}if(d){for(var r=0,v=h.points.length;r<v;++r){q=h.points[r];if(!q.equals(g)){t.push(q);m.push(new OpenLayers.Geometry.LineString(t));if(q.equals(f)){t=[]}else{t=[q.clone()]}}}}}}}if(d&&m.length>0&&t.length>0){t.push(f.clone());m.push(new OpenLayers.Geometry.LineString(t))}}else{n=y.splitWith(this,b)}if(c&&c.length>1){e=true}else{c=[]}if(m&&m.length>1){l=true}else{m=[]}if(e||l){if(d){n=[m,c]}else{n=c}}return n},splitWith:function(b,a){return b.split(this,a)},getVertices:function(a){var b;if(a===true){b=[this.components[0],this.components[this.components.length-1]]}else{if(a===false){b=this.components.slice(1,this.components.length-1)}else{b=this.components.slice()}}return b},distanceTo:function(h,g){var k=!(g&&g.edge===false);var C=k&&g&&g.details;var r,e={};var u=Number.POSITIVE_INFINITY;if(h instanceof OpenLayers.Geometry.Point){var s=this.getSortedSegments();var q=h.x;var o=h.y;var A;for(var w=0,z=s.length;w<z;++w){A=s[w];r=OpenLayers.Geometry.distanceToSegment(h,A);if(r.distance<u){u=r.distance;e=r;if(u===0){break}}else{if(A.x2>q&&((o>A.y1&&o<A.y2)||(o<A.y1&&o>A.y2))){break}}}if(C){e={distance:e.distance,x0:e.x,y0:e.y,x1:q,y1:o}}else{e=e.distance}}else{if(h instanceof OpenLayers.Geometry.LineString){var d=this.getSortedSegments();var c=h.getSortedSegments();var b,a,n,B,f;var m=c.length;var l={point:true};outer:for(var w=0,z=d.length;w<z;++w){b=d[w];B=b.x1;f=b.y1;for(var v=0;v<m;++v){a=c[v];n=OpenLayers.Geometry.segmentsIntersect(b,a,l);if(n){u=0;e={distance:0,x0:n.x,y0:n.y,x1:n.x,y1:n.y};break outer}else{r=OpenLayers.Geometry.distanceToSegment({x:B,y:f},a);if(r.distance<u){u=r.distance;e={distance:u,x0:B,y0:f,x1:r.x,y1:r.y}}}}}if(!C){e=e.distance}if(u!==0){if(b){r=h.distanceTo(new OpenLayers.Geometry.Point(b.x2,b.y2),g);var t=C?r.distance:r;if(t<u){if(C){e={distance:u,x0:r.x1,y0:r.y1,x1:r.x0,y1:r.y0}}else{e=t}}}}}else{e=h.distanceTo(this,g);if(C){e={distance:e.distance,x0:e.x1,y0:e.y1,x1:e.x0,y1:e.y0}}}}return e},simplify:function(h){if(this&&this!==null){var j=this.getVertices();if(j.length<3){return this}var d=function(l,k){return(l-k)};var c=function(n,r,o,k){var q=0;var m=0;for(var l=r,s;l<o;l++){s=b(n[r],n[o],n[l]);if(s>q){q=s;m=l}}if(q>k&&m!=r){e.push(m);c(n,r,m,k);c(n,m,o,k)}};var b=function(o,n,l){var q=Math.abs(0.5*(o.x*n.y+n.x*l.y+l.x*o.y-n.x*o.y-l.x*n.y-o.x*l.y));var m=Math.sqrt(Math.pow(o.x-n.x,2)+Math.pow(o.y-n.y,2));var k=q/m*2;return k};var f=0;var i=j.length-1;var e=[];e.push(f);e.push(i);while(j[f].equals(j[i])){i--;e.push(i)}c(j,f,i,h);var a=[];e.sort(d);for(var g=0;g<e.length;g++){a.push(j[e[g]])}return new OpenLayers.Geometry.LineString(a)}else{return this}},CLASS_NAME:"OpenLayers.Geometry.LineString"});OpenLayers.Geometry.MultiLineString=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.LineString"],split:function(n,t){var g=null;var s=t&&t.mutual;var o,a,r,m,b;var e=[];var q=[n];for(var f=0,h=this.components.length;f<h;++f){a=this.components[f];m=false;for(var d=0;d<q.length;++d){o=a.split(q[d],t);if(o){if(s){r=o[0];for(var c=0,l=r.length;c<l;++c){if(c===0&&e.length){e[e.length-1].addComponent(r[c])}else{e.push(new OpenLayers.Geometry.MultiLineString([r[c]]))}}m=true;o=o[1]}if(o.length){o.unshift(d,1);Array.prototype.splice.apply(q,o);break}}}if(!m){if(e.length){e[e.length-1].addComponent(a.clone())}else{e=[new OpenLayers.Geometry.MultiLineString(a.clone())]}}}if(e&&e.length>1){m=true}else{e=[]}if(q&&q.length>1){b=true}else{q=[]}if(m||b){if(s){g=[e,q]}else{g=q}}return g},splitWith:function(n,t){var g=null;var s=t&&t.mutual;var o,c,r,m,a,e,q;if(n instanceof OpenLayers.Geometry.LineString){q=[];e=[n];for(var f=0,h=this.components.length;f<h;++f){a=false;c=this.components[f];for(var d=0;d<e.length;++d){o=e[d].split(c,t);if(o){if(s){r=o[0];if(r.length){r.unshift(d,1);Array.prototype.splice.apply(e,r);d+=r.length-2}o=o[1];if(o.length===0){o=[c.clone()]}}for(var b=0,l=o.length;b<l;++b){if(b===0&&q.length){q[q.length-1].addComponent(o[b])}else{q.push(new OpenLayers.Geometry.MultiLineString([o[b]]))}}a=true}}if(!a){if(q.length){q[q.length-1].addComponent(c.clone())}else{q=[new OpenLayers.Geometry.MultiLineString([c.clone()])]}}}}else{g=n.split(this)}if(e&&e.length>1){m=true}else{e=[]}if(q&&q.length>1){a=true}else{q=[]}if(m||a){if(s){g=[e,q]}else{g=q}}return g},CLASS_NAME:"OpenLayers.Geometry.MultiLineString"});OpenLayers.Geometry.LinearRing=OpenLayers.Class(OpenLayers.Geometry.LineString,{componentTypes:["OpenLayers.Geometry.Point"],addComponent:function(a,b){var c=false;var d=this.components.pop();if(b!=null||!a.equals(d)){c=OpenLayers.Geometry.Collection.prototype.addComponent.apply(this,arguments)}var e=this.components[0];OpenLayers.Geometry.Collection.prototype.addComponent.apply(this,[e]);return c},removeComponent:function(a){var b=this.components&&(this.components.length>3);if(b){this.components.pop();OpenLayers.Geometry.Collection.prototype.removeComponent.apply(this,arguments);var c=this.components[0];OpenLayers.Geometry.Collection.prototype.addComponent.apply(this,[c])}return b},move:function(b,d){for(var c=0,a=this.components.length;c<a-1;c++){this.components[c].move(b,d)}},rotate:function(d,b){for(var c=0,a=this.components.length;c<a-1;++c){this.components[c].rotate(d,b)}},resize:function(e,b,d){for(var c=0,a=this.components.length;c<a-1;++c){this.components[c].resize(e,b,d)}return this},transform:function(e,c){if(e&&c){for(var d=0,a=this.components.length;d<a-1;d++){var b=this.components[d];b.transform(e,c)}this.bounds=null}return this},getCentroid:function(){if(this.components){var f=this.components.length;if(f>0&&f<=2){return this.components[0].clone()}else{if(f>2){var j=0;var g=0;var d=this.components[0].x;var n=this.components[0].y;var a=-1*this.getArea();if(a!=0){for(var e=0;e<f-1;e++){var l=this.components[e];var h=this.components[e+1];j+=(l.x+h.x-2*d)*((l.x-d)*(h.y-n)-(h.x-d)*(l.y-n));g+=(l.y+h.y-2*n)*((l.x-d)*(h.y-n)-(h.x-d)*(l.y-n))}var m=d+j/(6*a);var k=n+g/(6*a)}else{for(var e=0;e<f-1;e++){j+=this.components[e].x;g+=this.components[e].y}var m=j/(f-1);var k=g/(f-1)}return new OpenLayers.Geometry.Point(m,k)}else{return null}}}},getArea:function(){var g=0;if(this.components&&(this.components.length>2)){var f=0;for(var e=0,d=this.components.length;e<d-1;e++){var a=this.components[e];var h=this.components[e+1];f+=(a.x+h.x)*(h.y-a.y)}g=-f/2}return g},getGeodesicArea:function(b){var d=this;if(b){var c=new OpenLayers.Projection("EPSG:4326");if(!c.equals(b)){d=this.clone().transform(b,c)}}var f=0;var a=d.components&&d.components.length;if(a>2){var h,g;for(var e=0;e<a-1;e++){h=d.components[e];g=d.components[e+1];f+=OpenLayers.Util.rad(g.x-h.x)*(2+Math.sin(OpenLayers.Util.rad(h.y))+Math.sin(OpenLayers.Util.rad(g.y)))}f=f*6378137*6378137/2}return f},containsPoint:function(m){var t=OpenLayers.Number.limitSigDigs;var l=14;var k=t(m.x,l);var j=t(m.y,l);function s(x,u,w,i,v){return(x-v)*((i-u)/(v-w))+i}var a=this.components.length-1;var g,f,r,d,o,b,e,c;var h=0;for(var n=0;n<a;++n){g=this.components[n];r=t(g.x,l);d=t(g.y,l);f=this.components[n+1];o=t(f.x,l);b=t(f.y,l);if(d==b){if(j==d){if(r<=o&&(k>=r&&k<=o)||r>=o&&(k<=r&&k>=o)){h=-1;break}}continue}e=t(s(j,r,d,o,b),l);if(e==k){if(d<b&&(j>=d&&j<=b)||d>b&&(j<=d&&j>=b)){h=-1;break}}if(e<=k){continue}if(r!=o&&(e<Math.min(r,o)||e>Math.max(r,o))){continue}if(d<b&&(j>=d&&j<b)||d>b&&(j<d&&j>=b)){++h}}var q=(h==-1)?1:!!(h&1);return q},intersects:function(d){var b=false;if(d.CLASS_NAME=="OpenLayers.Geometry.Point"){b=this.containsPoint(d)}else{if(d.CLASS_NAME=="OpenLayers.Geometry.LineString"){b=d.intersects(this)}else{if(d.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){b=OpenLayers.Geometry.LineString.prototype.intersects.apply(this,[d])}else{for(var c=0,a=d.components.length;c<a;++c){b=d.components[c].intersects(this);if(b){break}}}}}return b},getVertices:function(a){return(a===true)?[]:this.components.slice(0,this.components.length-1)},CLASS_NAME:"OpenLayers.Geometry.LinearRing"});OpenLayers.Geometry.Polygon=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.LinearRing"],getArea:function(){var c=0;if(this.components&&(this.components.length>0)){c+=Math.abs(this.components[0].getArea());for(var b=1,a=this.components.length;b<a;b++){c-=Math.abs(this.components[b].getArea())}}return c},getGeodesicArea:function(b){var d=0;if(this.components&&(this.components.length>0)){d+=Math.abs(this.components[0].getGeodesicArea(b));for(var c=1,a=this.components.length;c<a;c++){d-=Math.abs(this.components[c].getGeodesicArea(b))}}return d},containsPoint:function(a){var e=this.components.length;var c=false;if(e>0){c=this.components[0].containsPoint(a);if(c!==1){if(c&&e>1){var d;for(var b=1;b<e;++b){d=this.components[b].containsPoint(a);if(d){if(d===1){c=1}else{c=false}break}}}}}return c},intersects:function(e){var b=false;var d,a;if(e.CLASS_NAME=="OpenLayers.Geometry.Point"){b=this.containsPoint(e)}else{if(e.CLASS_NAME=="OpenLayers.Geometry.LineString"||e.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){for(d=0,a=this.components.length;d<a;++d){b=e.intersects(this.components[d]);if(b){break}}if(!b){for(d=0,a=e.components.length;d<a;++d){b=this.containsPoint(e.components[d]);if(b){break}}}}else{for(d=0,a=e.components.length;d<a;++d){b=this.intersects(e.components[d]);if(b){break}}}}if(!b&&e.CLASS_NAME=="OpenLayers.Geometry.Polygon"){var c=this.components[0];for(d=0,a=c.components.length;d<a;++d){b=e.containsPoint(c.components[d]);if(b){break}}}return b},distanceTo:function(d,b){var c=!(b&&b.edge===false);var a;if(!c&&this.intersects(d)){a=0}else{a=OpenLayers.Geometry.Collection.prototype.distanceTo.apply(this,[d,b])}return a},CLASS_NAME:"OpenLayers.Geometry.Polygon"});OpenLayers.Geometry.Polygon.createRegularPolygon=function(j,f,b,l){var c=Math.PI*((1/b)-(1/2));if(l){c+=(l/180)*Math.PI}var a,h,g;var k=[];for(var e=0;e<b;++e){a=c+(e*2*Math.PI/b);h=j.x+(f*Math.cos(a));g=j.y+(f*Math.sin(a));k.push(new OpenLayers.Geometry.Point(h,g))}var d=new OpenLayers.Geometry.LinearRing(k);return new OpenLayers.Geometry.Polygon([d])};OpenLayers.Geometry.MultiPolygon=OpenLayers.Class(OpenLayers.Geometry.Collection,{componentTypes:["OpenLayers.Geometry.Polygon"],CLASS_NAME:"OpenLayers.Geometry.MultiPolygon"});OpenLayers.Format.GML=OpenLayers.Class(OpenLayers.Format.XML,{featureNS:"http://mapserver.gis.umn.edu/mapserver",featurePrefix:"feature",featureName:"featureMember",layerName:"features",geometryName:"geometry",collectionName:"FeatureCollection",gmlns:"http://www.opengis.net/gml",extractAttributes:true,xy:true,initialize:function(a){this.regExes={trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g)};OpenLayers.Format.XML.prototype.initialize.apply(this,[a])},read:function(d){if(typeof d=="string"){d=OpenLayers.Format.XML.prototype.read.apply(this,[d])}var e=this.getElementsByTagNameNS(d.documentElement,this.gmlns,this.featureName);var c=[];for(var b=0;b<e.length;b++){var a=this.parseFeature(e[b]);if(a){c.push(a)}}return c},parseFeature:function(d){var e=["MultiPolygon","Polygon","MultiLineString","LineString","MultiPoint","Point","Envelope"];var q,h,r,c;for(var l=0;l<e.length;++l){q=e[l];h=this.getElementsByTagNameNS(d,this.gmlns,q);if(h.length>0){c=this.parseGeometry[q.toLowerCase()];if(c){r=c.apply(this,[h[0]]);if(this.internalProjection&&this.externalProjection){r.transform(this.externalProjection,this.internalProjection)}}else{throw new TypeError("Unsupported geometry type: "+q)}break}}var b;var k=this.getElementsByTagNameNS(d,this.gmlns,"Box");for(l=0;l<k.length;++l){var o=k[l];var n=this.parseGeometry.box.apply(this,[o]);var m=o.parentNode;var g=m.localName||m.nodeName.split(":").pop();if(g==="boundedBy"){b=n}else{r=n.toGeometry()}}var j;if(this.extractAttributes){j=this.parseAttributes(d)}var s=new OpenLayers.Feature.Vector(r,j);s.bounds=b;s.gml={featureType:d.firstChild.nodeName.split(":")[1],featureNS:d.firstChild.namespaceURI,featureNSPrefix:d.firstChild.prefix};var a=d.firstChild;var f;while(a){if(a.nodeType==1){f=a.getAttribute("fid")||a.getAttribute("id");if(f){break}}a=a.nextSibling}s.fid=f;return s},parseGeometry:{point:function(d){var b,a;var e=[];var b=this.getElementsByTagNameNS(d,this.gmlns,"pos");if(b.length>0){a=b[0].firstChild.nodeValue;a=a.replace(this.regExes.trimSpace,"");e=a.split(this.regExes.splitSpace)}if(e.length==0){b=this.getElementsByTagNameNS(d,this.gmlns,"coordinates");if(b.length>0){a=b[0].firstChild.nodeValue;a=a.replace(this.regExes.removeSpace,"");e=a.split(",")}}if(e.length==0){b=this.getElementsByTagNameNS(d,this.gmlns,"coord");if(b.length>0){var f=this.getElementsByTagNameNS(b[0],this.gmlns,"X");var c=this.getElementsByTagNameNS(b[0],this.gmlns,"Y");if(f.length>0&&c.length>0){e=[f[0].firstChild.nodeValue,c[0].firstChild.nodeValue]}}}if(e.length==2){e[2]=null}if(this.xy){return new OpenLayers.Geometry.Point(e[0],e[1],e[2])}else{return new OpenLayers.Geometry.Point(e[1],e[0],e[2])}},multipoint:function(e){var b=this.getElementsByTagNameNS(e,this.gmlns,"Point");var d=[];if(b.length>0){var a;for(var c=0;c<b.length;++c){a=this.parseGeometry.point.apply(this,[b[c]]);if(a){d.push(a)}}}return new OpenLayers.Geometry.MultiPoint(d)},linestring:function(c,e){var d,b;var n=[];var o=[];d=this.getElementsByTagNameNS(c,this.gmlns,"posList");if(d.length>0){b=this.getChildValue(d[0]);b=b.replace(this.regExes.trimSpace,"");n=b.split(this.regExes.splitSpace);var h=parseInt(d[0].getAttribute("dimension"));var f,m,l,k;for(var g=0;g<n.length/h;++g){f=g*h;m=n[f];l=n[f+1];k=(h==2)?null:n[f+2];if(this.xy){o.push(new OpenLayers.Geometry.Point(m,l,k))}else{o.push(new OpenLayers.Geometry.Point(l,m,k))}}}if(n.length==0){d=this.getElementsByTagNameNS(c,this.gmlns,"coordinates");if(d.length>0){b=this.getChildValue(d[0]);b=b.replace(this.regExes.trimSpace,"");b=b.replace(this.regExes.trimComma,",");var a=b.split(this.regExes.splitSpace);for(var g=0;g<a.length;++g){n=a[g].split(",");if(n.length==2){n[2]=null}if(this.xy){o.push(new OpenLayers.Geometry.Point(n[0],n[1],n[2]))}else{o.push(new OpenLayers.Geometry.Point(n[1],n[0],n[2]))}}}}var q=null;if(o.length!=0){if(e){q=new OpenLayers.Geometry.LinearRing(o)}else{q=new OpenLayers.Geometry.LineString(o)}}return q},multilinestring:function(e){var b=this.getElementsByTagNameNS(e,this.gmlns,"LineString");var d=[];if(b.length>0){var a;for(var c=0;c<b.length;++c){a=this.parseGeometry.linestring.apply(this,[b[c]]);if(a){d.push(a)}}}return new OpenLayers.Geometry.MultiLineString(d)},polygon:function(e){var b=this.getElementsByTagNameNS(e,this.gmlns,"LinearRing");var d=[];if(b.length>0){var a;for(var c=0;c<b.length;++c){a=this.parseGeometry.linestring.apply(this,[b[c],true]);if(a){d.push(a)}}}return new OpenLayers.Geometry.Polygon(d)},multipolygon:function(e){var a=this.getElementsByTagNameNS(e,this.gmlns,"Polygon");var d=[];if(a.length>0){var c;for(var b=0;b<a.length;++b){c=this.parseGeometry.polygon.apply(this,[a[b]]);if(c){d.push(c)}}}return new OpenLayers.Geometry.MultiPolygon(d)},envelope:function(b){var e=[];var a;var f;var j=this.getElementsByTagNameNS(b,this.gmlns,"lowerCorner");if(j.length>0){var h=[];if(j.length>0){a=j[0].firstChild.nodeValue;a=a.replace(this.regExes.trimSpace,"");h=a.split(this.regExes.splitSpace)}if(h.length==2){h[2]=null}if(this.xy){var d=new OpenLayers.Geometry.Point(h[0],h[1],h[2])}else{var d=new OpenLayers.Geometry.Point(h[1],h[0],h[2])}}var g=this.getElementsByTagNameNS(b,this.gmlns,"upperCorner");if(g.length>0){var h=[];if(g.length>0){a=g[0].firstChild.nodeValue;a=a.replace(this.regExes.trimSpace,"");h=a.split(this.regExes.splitSpace)}if(h.length==2){h[2]=null}if(this.xy){var i=new OpenLayers.Geometry.Point(h[0],h[1],h[2])}else{var i=new OpenLayers.Geometry.Point(h[1],h[0],h[2])}}if(d&&i){e.push(new OpenLayers.Geometry.Point(d.x,d.y));e.push(new OpenLayers.Geometry.Point(i.x,d.y));e.push(new OpenLayers.Geometry.Point(i.x,i.y));e.push(new OpenLayers.Geometry.Point(d.x,i.y));e.push(new OpenLayers.Geometry.Point(d.x,d.y));var c=new OpenLayers.Geometry.LinearRing(e);f=new OpenLayers.Geometry.Polygon([c])}return f},box:function(e){var c=this.getElementsByTagNameNS(e,this.gmlns,"coordinates");var b;var f,a=null,d=null;if(c.length>0){b=c[0].firstChild.nodeValue;f=b.split(" ");if(f.length==2){a=f[0].split(",");d=f[1].split(",")}}if(a!==null&&d!==null){return new OpenLayers.Bounds(parseFloat(a[0]),parseFloat(a[1]),parseFloat(d[0]),parseFloat(d[1]))}}},parseAttributes:function(e){var f={};var a=e.firstChild;var d,g,c,k,j,b,h;while(a){if(a.nodeType==1){d=a.childNodes;for(g=0;g<d.length;++g){c=d[g];if(c.nodeType==1){k=c.childNodes;if(k.length==1){j=k[0];if(j.nodeType==3||j.nodeType==4){b=(c.prefix)?c.nodeName.split(":")[1]:c.nodeName;h=j.nodeValue.replace(this.regExes.trimSpace,"");f[b]=h}}else{f[c.nodeName.split(":").pop()]=null}}}break}a=a.nextSibling}return f},write:function(c){if(!(OpenLayers.Util.isArray(c))){c=[c]}var b=this.createElementNS("http://www.opengis.net/wfs","wfs:"+this.collectionName);for(var a=0;a<c.length;a++){b.appendChild(this.createFeatureXML(c[a]))}return OpenLayers.Format.XML.prototype.write.apply(this,[b])},createFeatureXML:function(j){var h=j.geometry;var e=this.buildGeometryNode(h);var i=this.createElementNS(this.featureNS,this.featurePrefix+":"+this.geometryName);i.appendChild(e);var a=this.createElementNS(this.gmlns,"gml:"+this.featureName);var k=this.createElementNS(this.featureNS,this.featurePrefix+":"+this.layerName);var c=j.fid||j.id;k.setAttribute("fid",c);k.appendChild(i);for(var g in j.attributes){var f=this.createTextNode(j.attributes[g]);var d=g.substring(g.lastIndexOf(":")+1);var b=this.createElementNS(this.featureNS,this.featurePrefix+":"+d);b.appendChild(f);k.appendChild(b)}a.appendChild(k);return a},buildGeometryNode:function(d){if(this.externalProjection&&this.internalProjection){d=d.clone();d.transform(this.internalProjection,this.externalProjection)}var c=d.CLASS_NAME;var b=c.substring(c.lastIndexOf(".")+1);var a=this.buildGeometry[b.toLowerCase()];return a.apply(this,[d])},buildGeometry:{point:function(b){var a=this.createElementNS(this.gmlns,"gml:Point");a.appendChild(this.buildCoordinatesNode(b));return a},multipoint:function(f){var d=this.createElementNS(this.gmlns,"gml:MultiPoint");var c=f.components;var b,e;for(var a=0;a<c.length;a++){b=this.createElementNS(this.gmlns,"gml:pointMember");e=this.buildGeometry.point.apply(this,[c[a]]);b.appendChild(e);d.appendChild(b)}return d},linestring:function(b){var a=this.createElementNS(this.gmlns,"gml:LineString");a.appendChild(this.buildCoordinatesNode(b));return a},multilinestring:function(f){var d=this.createElementNS(this.gmlns,"gml:MultiLineString");var a=f.components;var c,e;for(var b=0;b<a.length;++b){c=this.createElementNS(this.gmlns,"gml:lineStringMember");e=this.buildGeometry.linestring.apply(this,[a[b]]);c.appendChild(e);d.appendChild(c)}return d},linearring:function(b){var a=this.createElementNS(this.gmlns,"gml:LinearRing");a.appendChild(this.buildCoordinatesNode(b));return a},polygon:function(g){var d=this.createElementNS(this.gmlns,"gml:Polygon");var f=g.components;var c,e,b;for(var a=0;a<f.length;++a){b=(a==0)?"outerBoundaryIs":"innerBoundaryIs";c=this.createElementNS(this.gmlns,"gml:"+b);e=this.buildGeometry.linearring.apply(this,[f[a]]);c.appendChild(e);d.appendChild(c)}return d},multipolygon:function(f){var d=this.createElementNS(this.gmlns,"gml:MultiPolygon");var a=f.components;var e,b;for(var c=0;c<a.length;++c){e=this.createElementNS(this.gmlns,"gml:polygonMember");b=this.buildGeometry.polygon.apply(this,[a[c]]);e.appendChild(b);d.appendChild(e)}return d},bounds:function(b){var a=this.createElementNS(this.gmlns,"gml:Box");a.appendChild(this.buildCoordinatesNode(b));return a}},buildCoordinatesNode:function(f){var a=this.createElementNS(this.gmlns,"gml:coordinates");a.setAttribute("decimal",".");a.setAttribute("cs",",");a.setAttribute("ts"," ");var e=[];if(f instanceof OpenLayers.Bounds){e.push(f.left+","+f.bottom);e.push(f.right+","+f.top)}else{var c=(f.components)?f.components:[f];for(var b=0;b<c.length;b++){e.push(c[b].x+","+c[b].y)}}var d=this.createTextNode(e.join(" "));a.appendChild(d);return a},CLASS_NAME:"OpenLayers.Format.GML"});if(!OpenLayers.Format.GML){OpenLayers.Format.GML={}}OpenLayers.Format.GML.Base=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{gml:"http://www.opengis.net/gml",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance",wfs:"http://www.opengis.net/wfs"},defaultPrefix:"gml",schemaLocation:null,featureType:null,featureNS:null,geometryName:"geometry",extractAttributes:true,srsName:null,xy:true,geometryTypes:null,singleFeatureType:null,regExes:{trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g),featureMember:(/^(.*:)?featureMembers?$/)},initialize:function(a){OpenLayers.Format.XML.prototype.initialize.apply(this,[a]);this.setGeometryTypes();if(a&&a.featureNS){this.setNamespace("feature",a.featureNS)}this.singleFeatureType=!a||(typeof a.featureType==="string")},read:function(e){if(typeof e=="string"){e=OpenLayers.Format.XML.prototype.read.apply(this,[e])}if(e&&e.nodeType==9){e=e.documentElement}var c=[];this.readNode(e,{features:c},true);if(c.length==0){var d=this.getElementsByTagNameNS(e,this.namespaces.gml,"featureMember");if(d.length){for(var b=0,a=d.length;b<a;++b){this.readNode(d[b],{features:c},true)}}else{var d=this.getElementsByTagNameNS(e,this.namespaces.gml,"featureMembers");if(d.length){this.readNode(d[0],{features:c},true)}}}return c},readNode:function(a,b,c){if(c===true&&this.autoConfig===true){this.featureType=null;delete this.namespaceAlias[this.featureNS];delete this.namespaces.feature;this.featureNS=null}if(!this.featureNS&&(!(a.prefix in this.namespaces)&&a.parentNode.namespaceURI==this.namespaces.gml&&this.regExes.featureMember.test(a.parentNode.nodeName))){this.featureType=a.nodeName.split(":").pop();this.setNamespace("feature",a.namespaceURI);this.featureNS=a.namespaceURI;this.autoConfig=true}return OpenLayers.Format.XML.prototype.readNode.apply(this,[a,b])},readers:{gml:{_inherit:function(b,c,a){},featureMember:function(a,b){this.readChildNodes(a,b)},featureMembers:function(a,b){this.readChildNodes(a,b)},name:function(a,b){b.name=this.getChildValue(a)},boundedBy:function(b,c){var a={};this.readChildNodes(b,a);if(a.components&&a.components.length>0){c.bounds=a.components[0]}},Point:function(b,a){var c={points:[]};this.readChildNodes(b,c);if(!a.components){a.components=[]}a.components.push(c.points[0])},coordinates:function(e,g){var h=this.getChildValue(e).replace(this.regExes.trimSpace,"");h=h.replace(this.regExes.trimComma,",");var a=h.split(this.regExes.splitSpace);var f;var d=a.length;var c=new Array(d);for(var b=0;b<d;++b){f=a[b].split(",");if(this.xy){c[b]=new OpenLayers.Geometry.Point(f[0],f[1],f[2])}else{c[b]=new OpenLayers.Geometry.Point(f[1],f[0],f[2])}}g.points=c},coord:function(a,b){var c={};this.readChildNodes(a,c);if(!b.points){b.points=[]}b.points.push(new OpenLayers.Geometry.Point(c.x,c.y,c.z))},X:function(a,b){b.x=this.getChildValue(a)},Y:function(a,b){b.y=this.getChildValue(a)},Z:function(a,b){b.z=this.getChildValue(a)},MultiPoint:function(b,a){var c={components:[]};this.readers.gml._inherit.apply(this,[b,c,a]);this.readChildNodes(b,c);a.components=[new OpenLayers.Geometry.MultiPoint(c.components)]},pointMember:function(a,b){this.readChildNodes(a,b)},LineString:function(b,a){var c={};this.readers.gml._inherit.apply(this,[b,c,a]);this.readChildNodes(b,c);if(!a.components){a.components=[]}a.components.push(new OpenLayers.Geometry.LineString(c.points))},MultiLineString:function(b,a){var c={components:[]};this.readers.gml._inherit.apply(this,[b,c,a]);this.readChildNodes(b,c);a.components=[new OpenLayers.Geometry.MultiLineString(c.components)]},lineStringMember:function(a,b){this.readChildNodes(a,b)},Polygon:function(b,a){var c={outer:null,inner:[]};this.readers.gml._inherit.apply(this,[b,c,a]);this.readChildNodes(b,c);c.inner.unshift(c.outer);if(!a.components){a.components=[]}a.components.push(new OpenLayers.Geometry.Polygon(c.inner))},LinearRing:function(b,c){var a={};this.readers.gml._inherit.apply(this,[b,a]);this.readChildNodes(b,a);c.components=[new OpenLayers.Geometry.LinearRing(a.points)]},MultiPolygon:function(b,a){var c={components:[]};this.readers.gml._inherit.apply(this,[b,c,a]);this.readChildNodes(b,c);a.components=[new OpenLayers.Geometry.MultiPolygon(c.components)]},polygonMember:function(a,b){this.readChildNodes(a,b)},GeometryCollection:function(b,a){var c={components:[]};this.readers.gml._inherit.apply(this,[b,c,a]);this.readChildNodes(b,c);a.components=[new OpenLayers.Geometry.Collection(c.components)]},geometryMember:function(a,b){this.readChildNodes(a,b)}},feature:{"*":function(c,d){var a;var b=c.localName||c.nodeName.split(":").pop();if(d.features){if(!this.singleFeatureType&&(OpenLayers.Util.indexOf(this.featureType,b)!==-1)){a="_typeName"}else{if(b===this.featureType){a="_typeName"}}}else{if(c.childNodes.length==0||(c.childNodes.length==1&&c.firstChild.nodeType==3)){if(this.extractAttributes){a="_attribute"}}else{a="_geometry"}}if(a){this.readers.feature[a].apply(this,[c,d])}},_typeName:function(c,d){var a={components:[],attributes:{}};this.readChildNodes(c,a);if(a.name){a.attributes.name=a.name}var b=new OpenLayers.Feature.Vector(a.components[0],a.attributes);if(!this.singleFeatureType){b.type=c.nodeName.split(":").pop();b.namespace=c.namespaceURI}var e=c.getAttribute("fid")||this.getAttributeNS(c,this.namespaces.gml,"id");if(e){b.fid=e}if(this.internalProjection&&this.externalProjection&&b.geometry){b.geometry.transform(this.externalProjection,this.internalProjection)}if(a.bounds){b.bounds=a.bounds}d.features.push(b)},_geometry:function(a,b){if(!this.geometryName){this.geometryName=a.nodeName.split(":").pop()}this.readChildNodes(a,b)},_attribute:function(b,d){var a=b.localName||b.nodeName.split(":").pop();var c=this.getChildValue(b);d.attributes[a]=c}},wfs:{FeatureCollection:function(a,b){this.readChildNodes(a,b)}}},write:function(c){var b;if(OpenLayers.Util.isArray(c)){b="featureMembers"}else{b="featureMember"}var a=this.writeNode("gml:"+b,c);this.setAttributeNS(a,this.namespaces.xsi,"xsi:schemaLocation",this.schemaLocation);return OpenLayers.Format.XML.prototype.write.apply(this,[a])},writers:{gml:{featureMember:function(a){var b=this.createElementNSPlus("gml:featureMember");this.writeNode("feature:_typeName",a,b);return b},MultiPoint:function(e){var d=this.createElementNSPlus("gml:MultiPoint");var c=e.components||[e];for(var a=0,b=c.length;a<b;++a){this.writeNode("pointMember",c[a],d)}return d},pointMember:function(b){var a=this.createElementNSPlus("gml:pointMember");this.writeNode("Point",b,a);return a},MultiLineString:function(e){var d=this.createElementNSPlus("gml:MultiLineString");var c=e.components||[e];for(var a=0,b=c.length;a<b;++a){this.writeNode("lineStringMember",c[a],d)}return d},lineStringMember:function(b){var a=this.createElementNSPlus("gml:lineStringMember");this.writeNode("LineString",b,a);return a},MultiPolygon:function(e){var d=this.createElementNSPlus("gml:MultiPolygon");var c=e.components||[e];for(var a=0,b=c.length;a<b;++a){this.writeNode("polygonMember",c[a],d)}return d},polygonMember:function(b){var a=this.createElementNSPlus("gml:polygonMember");this.writeNode("Polygon",b,a);return a},GeometryCollection:function(d){var c=this.createElementNSPlus("gml:GeometryCollection");for(var b=0,a=d.components.length;b<a;++b){this.writeNode("geometryMember",d.components[b],c)}return c},geometryMember:function(b){var a=this.createElementNSPlus("gml:geometryMember");var c=this.writeNode("feature:_geometry",b);a.appendChild(c.firstChild);return a}},feature:{_typeName:function(b){var c=this.createElementNSPlus("feature:"+this.featureType,{attributes:{fid:b.fid}});if(b.geometry){this.writeNode("feature:_geometry",b.geometry,c)}for(var a in b.attributes){var d=b.attributes[a];if(d!=null){this.writeNode("feature:_attribute",{name:a,value:d},c)}}return c},_geometry:function(c){if(this.externalProjection&&this.internalProjection){c=c.clone().transform(this.internalProjection,this.externalProjection)}var b=this.createElementNSPlus("feature:"+this.geometryName);var a=this.geometryTypes[c.CLASS_NAME];var d=this.writeNode("gml:"+a,c,b);if(this.srsName){d.setAttribute("srsName",this.srsName)}return b},_attribute:function(a){return this.createElementNSPlus("feature:"+a.name,{value:a.value})}},wfs:{FeatureCollection:function(c){var d=this.createElementNSPlus("wfs:FeatureCollection");for(var b=0,a=c.length;b<a;++b){this.writeNode("gml:featureMember",c[b],d)}return d}}},setGeometryTypes:function(){this.geometryTypes={"OpenLayers.Geometry.Point":"Point","OpenLayers.Geometry.MultiPoint":"MultiPoint","OpenLayers.Geometry.LineString":"LineString","OpenLayers.Geometry.MultiLineString":"MultiLineString","OpenLayers.Geometry.Polygon":"Polygon","OpenLayers.Geometry.MultiPolygon":"MultiPolygon","OpenLayers.Geometry.Collection":"GeometryCollection"}},CLASS_NAME:"OpenLayers.Format.GML.Base"});OpenLayers.Format.GML.v2=OpenLayers.Class(OpenLayers.Format.GML.Base,{schemaLocation:"http://www.opengis.net/gml http://schemas.opengis.net/gml/2.1.2/feature.xsd",initialize:function(a){OpenLayers.Format.GML.Base.prototype.initialize.apply(this,[a])},readers:{gml:OpenLayers.Util.applyDefaults({outerBoundaryIs:function(b,a){var c={};this.readChildNodes(b,c);a.outer=c.components[0]},innerBoundaryIs:function(b,a){var c={};this.readChildNodes(b,c);a.inner.push(c.components[0])},Box:function(d,b){var e={};this.readChildNodes(d,e);if(!b.components){b.components=[]}var c=e.points[0];var a=e.points[1];b.components.push(new OpenLayers.Bounds(c.x,c.y,a.x,a.y))}},OpenLayers.Format.GML.Base.prototype.readers.gml),feature:OpenLayers.Format.GML.Base.prototype.readers.feature,wfs:OpenLayers.Format.GML.Base.prototype.readers.wfs},write:function(c){var b;if(OpenLayers.Util.isArray(c)){b="wfs:FeatureCollection"}else{b="gml:featureMember"}var a=this.writeNode(b,c);this.setAttributeNS(a,this.namespaces.xsi,"xsi:schemaLocation",this.schemaLocation);return OpenLayers.Format.XML.prototype.write.apply(this,[a])},writers:{gml:OpenLayers.Util.applyDefaults({Point:function(b){var a=this.createElementNSPlus("gml:Point");this.writeNode("coordinates",[b],a);return a},coordinates:function(d){var c=d.length;var e=new Array(c);var a;for(var b=0;b<c;++b){a=d[b];if(this.xy){e[b]=a.x+","+a.y}else{e[b]=a.y+","+a.x}if(a.z!=undefined){e[b]+=","+a.z}}return this.createElementNSPlus("gml:coordinates",{attributes:{decimal:".",cs:",",ts:" "},value:(c==1)?e[0]:e.join(" ")})},LineString:function(b){var a=this.createElementNSPlus("gml:LineString");this.writeNode("coordinates",b.components,a);return a},Polygon:function(c){var b=this.createElementNSPlus("gml:Polygon");this.writeNode("outerBoundaryIs",c.components[0],b);for(var a=1;a<c.components.length;++a){this.writeNode("innerBoundaryIs",c.components[a],b)}return b},outerBoundaryIs:function(a){var b=this.createElementNSPlus("gml:outerBoundaryIs");this.writeNode("LinearRing",a,b);return b},innerBoundaryIs:function(a){var b=this.createElementNSPlus("gml:innerBoundaryIs");this.writeNode("LinearRing",a,b);return b},LinearRing:function(a){var b=this.createElementNSPlus("gml:LinearRing");this.writeNode("coordinates",a.components,b);return b},Box:function(b){var a=this.createElementNSPlus("gml:Box");this.writeNode("coordinates",[{x:b.left,y:b.bottom},{x:b.right,y:b.top}],a);if(this.srsName){a.setAttribute("srsName",this.srsName)}return a}},OpenLayers.Format.GML.Base.prototype.writers.gml),feature:OpenLayers.Format.GML.Base.prototype.writers.feature,wfs:OpenLayers.Format.GML.Base.prototype.writers.wfs},CLASS_NAME:"OpenLayers.Format.GML.v2"});OpenLayers.Format.GML.v3=OpenLayers.Class(OpenLayers.Format.GML.Base,{schemaLocation:"http://www.opengis.net/gml http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/1.0.0/gmlsf.xsd",curve:false,multiCurve:true,surface:false,multiSurface:true,initialize:function(a){OpenLayers.Format.GML.Base.prototype.initialize.apply(this,[a])},readers:{gml:OpenLayers.Util.applyDefaults({_inherit:function(b,d,a){var c=parseInt(b.getAttribute("srsDimension"),10)||(a&&a.srsDimension);if(c){d.srsDimension=c}},featureMembers:function(a,b){this.readChildNodes(a,b)},Curve:function(b,a){var c={points:[]};this.readers.gml._inherit.apply(this,[b,c,a]);this.readChildNodes(b,c);if(!a.components){a.components=[]}a.components.push(new OpenLayers.Geometry.LineString(c.points))},segments:function(a,b){this.readChildNodes(a,b)},LineStringSegment:function(b,a){var c={};this.readChildNodes(b,c);if(c.points){Array.prototype.push.apply(a.points,c.points)}},pos:function(b,d){var e=this.getChildValue(b).replace(this.regExes.trimSpace,"");var c=e.split(this.regExes.splitSpace);var a;if(this.xy){a=new OpenLayers.Geometry.Point(c[0],c[1],c[2])}else{a=new OpenLayers.Geometry.Point(c[1],c[0],c[2])}d.points=[a]},posList:function(a,d){var h=this.getChildValue(a).replace(this.regExes.trimSpace,"");var m=h.split(this.regExes.splitSpace);var e=d.srsDimension||parseInt(a.getAttribute("srsDimension")||a.getAttribute("dimension"),10)||2;var b,n,l,g;var k=m.length/e;var o=new Array(k);for(var c=0,f=m.length;c<f;c+=e){n=m[c];l=m[c+1];g=(e==2)?undefined:m[c+2];if(this.xy){o[c/e]=new OpenLayers.Geometry.Point(n,l,g)}else{o[c/e]=new OpenLayers.Geometry.Point(l,n,g)}}d.points=o},Surface:function(a,b){this.readChildNodes(a,b)},patches:function(a,b){this.readChildNodes(a,b)},PolygonPatch:function(a,b){this.readers.gml.Polygon.apply(this,[a,b])},exterior:function(b,a){var c={};this.readChildNodes(b,c);a.outer=c.components[0]},interior:function(b,a){var c={};this.readChildNodes(b,c);a.inner.push(c.components[0])},MultiCurve:function(b,a){var c={components:[]};this.readers.gml._inherit.apply(this,[b,c,a]);this.readChildNodes(b,c);if(c.components.length>0){a.components=[new OpenLayers.Geometry.MultiLineString(c.components)]}},curveMember:function(a,b){this.readChildNodes(a,b)},MultiSurface:function(b,a){var c={components:[]};this.readers.gml._inherit.apply(this,[b,c,a]);this.readChildNodes(b,c);if(c.components.length>0){a.components=[new OpenLayers.Geometry.MultiPolygon(c.components)]}},surfaceMember:function(a,b){this.readChildNodes(a,b)},surfaceMembers:function(a,b){this.readChildNodes(a,b)},pointMembers:function(a,b){this.readChildNodes(a,b)},lineStringMembers:function(a,b){this.readChildNodes(a,b)},polygonMembers:function(a,b){this.readChildNodes(a,b)},geometryMembers:function(a,b){this.readChildNodes(a,b)},Envelope:function(d,b){var e={points:new Array(2)};this.readChildNodes(d,e);if(!b.components){b.components=[]}var c=e.points[0];var a=e.points[1];b.components.push(new OpenLayers.Bounds(c.x,c.y,a.x,a.y))},lowerCorner:function(b,a){var c={};this.readers.gml.pos.apply(this,[b,c]);a.points[0]=c.points[0]},upperCorner:function(b,a){var c={};this.readers.gml.pos.apply(this,[b,c]);a.points[1]=c.points[0]}},OpenLayers.Format.GML.Base.prototype.readers.gml),feature:OpenLayers.Format.GML.Base.prototype.readers.feature,wfs:OpenLayers.Format.GML.Base.prototype.readers.wfs},write:function(c){var b;if(OpenLayers.Util.isArray(c)){b="featureMembers"}else{b="featureMember"}var a=this.writeNode("gml:"+b,c);this.setAttributeNS(a,this.namespaces.xsi,"xsi:schemaLocation",this.schemaLocation);return OpenLayers.Format.XML.prototype.write.apply(this,[a])},writers:{gml:OpenLayers.Util.applyDefaults({featureMembers:function(c){var d=this.createElementNSPlus("gml:featureMembers");for(var b=0,a=c.length;b<a;++b){this.writeNode("feature:_typeName",c[b],d)}return d},Point:function(b){var a=this.createElementNSPlus("gml:Point");this.writeNode("pos",b,a);return a},pos:function(a){var b=(this.xy)?(a.x+" "+a.y):(a.y+" "+a.x);return this.createElementNSPlus("gml:pos",{value:b})},LineString:function(b){var a=this.createElementNSPlus("gml:LineString");this.writeNode("posList",b.components,a);return a},Curve:function(b){var a=this.createElementNSPlus("gml:Curve");this.writeNode("segments",b,a);return a},segments:function(b){var a=this.createElementNSPlus("gml:segments");this.writeNode("LineStringSegment",b,a);return a},LineStringSegment:function(b){var a=this.createElementNSPlus("gml:LineStringSegment");this.writeNode("posList",b.components,a);return a},posList:function(d){var b=d.length;var e=new Array(b);var a;for(var c=0;c<b;++c){a=d[c];if(this.xy){e[c]=a.x+" "+a.y}else{e[c]=a.y+" "+a.x}}return this.createElementNSPlus("gml:posList",{value:e.join(" ")})},Surface:function(b){var a=this.createElementNSPlus("gml:Surface");this.writeNode("patches",b,a);return a},patches:function(b){var a=this.createElementNSPlus("gml:patches");this.writeNode("PolygonPatch",b,a);return a},PolygonPatch:function(d){var c=this.createElementNSPlus("gml:PolygonPatch",{attributes:{interpolation:"planar"}});this.writeNode("exterior",d.components[0],c);for(var b=1,a=d.components.length;b<a;++b){this.writeNode("interior",d.components[b],c)}return c},Polygon:function(d){var c=this.createElementNSPlus("gml:Polygon");this.writeNode("exterior",d.components[0],c);for(var b=1,a=d.components.length;b<a;++b){this.writeNode("interior",d.components[b],c)}return c},exterior:function(a){var b=this.createElementNSPlus("gml:exterior");this.writeNode("LinearRing",a,b);return b},interior:function(a){var b=this.createElementNSPlus("gml:interior");this.writeNode("LinearRing",a,b);return b},LinearRing:function(a){var b=this.createElementNSPlus("gml:LinearRing");this.writeNode("posList",a.components,b);return b},MultiCurve:function(e){var d=this.createElementNSPlus("gml:MultiCurve");var c=e.components||[e];for(var b=0,a=c.length;b<a;++b){this.writeNode("curveMember",c[b],d)}return d},curveMember:function(b){var a=this.createElementNSPlus("gml:curveMember");if(this.curve){this.writeNode("Curve",b,a)}else{this.writeNode("LineString",b,a)}return a},MultiSurface:function(e){var d=this.createElementNSPlus("gml:MultiSurface");var c=e.components||[e];for(var b=0,a=c.length;b<a;++b){this.writeNode("surfaceMember",c[b],d)}return d},surfaceMember:function(a){var b=this.createElementNSPlus("gml:surfaceMember");if(this.surface){this.writeNode("Surface",a,b)}else{this.writeNode("Polygon",a,b)}return b},Envelope:function(b){var a=this.createElementNSPlus("gml:Envelope");this.writeNode("lowerCorner",b,a);this.writeNode("upperCorner",b,a);if(this.srsName){a.setAttribute("srsName",this.srsName)}return a},lowerCorner:function(a){var b=(this.xy)?(a.left+" "+a.bottom):(a.bottom+" "+a.left);return this.createElementNSPlus("gml:lowerCorner",{value:b})},upperCorner:function(a){var b=(this.xy)?(a.right+" "+a.top):(a.top+" "+a.right);return this.createElementNSPlus("gml:upperCorner",{value:b})}},OpenLayers.Format.GML.Base.prototype.writers.gml),feature:OpenLayers.Format.GML.Base.prototype.writers.feature,wfs:OpenLayers.Format.GML.Base.prototype.writers.wfs},setGeometryTypes:function(){this.geometryTypes={"OpenLayers.Geometry.Point":"Point","OpenLayers.Geometry.MultiPoint":"MultiPoint","OpenLayers.Geometry.LineString":(this.curve===true)?"Curve":"LineString","OpenLayers.Geometry.MultiLineString":(this.multiCurve===false)?"MultiLineString":"MultiCurve","OpenLayers.Geometry.Polygon":(this.surface===true)?"Surface":"Polygon","OpenLayers.Geometry.MultiPolygon":(this.multiSurface===false)?"MultiPolygon":"MultiSurface","OpenLayers.Geometry.Collection":"GeometryCollection"}},CLASS_NAME:"OpenLayers.Format.GML.v3"});OpenLayers.Format.OGCExceptionReport=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{ogc:"http://www.opengis.net/ogc"},regExes:{trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g)},defaultPrefix:"ogc",read:function(c){var a;if(typeof c=="string"){c=OpenLayers.Format.XML.prototype.read.apply(this,[c])}var b=c.documentElement;var d={exceptionReport:null};if(b){this.readChildNodes(c,d);if(d.exceptionReport===null){d=new OpenLayers.Format.OWSCommon().read(c)}}return d},readers:{ogc:{ServiceExceptionReport:function(a,b){b.exceptionReport={exceptions:[]};this.readChildNodes(a,b.exceptionReport)},ServiceException:function(b,c){var a={code:b.getAttribute("code"),locator:b.getAttribute("locator"),text:this.getChildValue(b)};c.exceptions.push(a)}}},CLASS_NAME:"OpenLayers.Format.OGCExceptionReport"});OpenLayers.Format.XML.VersionedOGC=OpenLayers.Class(OpenLayers.Format.XML,{defaultVersion:null,version:null,profile:null,allowFallback:false,name:null,stringifyOutput:false,parser:null,initialize:function(a){OpenLayers.Format.XML.prototype.initialize.apply(this,[a]);var b=this.CLASS_NAME;this.name=b.substring(b.lastIndexOf(".")+1)},getVersion:function(b,c){var a;if(b){a=this.version;if(!a){a=b.getAttribute("version");if(!a){a=this.defaultVersion}}}else{a=(c&&c.version)||this.version||this.defaultVersion}return a},getParser:function(a){a=a||this.defaultVersion;var b=this.profile?"_"+this.profile:"";if(!this.parser||this.parser.VERSION!=a){var c=OpenLayers.Format[this.name]["v"+a.replace(/\./g,"_")+b];if(!c){if(b!==""&&this.allowFallback){b="";c=OpenLayers.Format[this.name]["v"+a.replace(/\./g,"_")]}if(!c){throw"Can't find a "+this.name+" parser for version "+a+b}}this.parser=new c(this.options)}return this.parser},write:function(d,c){var b=this.getVersion(null,c);this.parser=this.getParser(b);var a=this.parser.write(d,c);if(this.stringifyOutput===false){return a}else{return OpenLayers.Format.XML.prototype.write.apply(this,[a])}},read:function(d,c){if(typeof d=="string"){d=OpenLayers.Format.XML.prototype.read.apply(this,[d])}var b=d.documentElement;var a=this.getVersion(b);this.parser=this.getParser(a);var f=this.parser.read(d,c);var g=this.parser.errorProperty||null;if(g!==null&&f[g]===undefined){var e=new OpenLayers.Format.OGCExceptionReport();f.error=e.read(d)}f.version=a;return f},CLASS_NAME:"OpenLayers.Format.XML.VersionedOGC"});OpenLayers.Format.WMSDescribeLayer=OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC,{defaultVersion:"1.1.1",CLASS_NAME:"OpenLayers.Format.WMSDescribeLayer"});OpenLayers.Format.WMSDescribeLayer.v1_1_1=OpenLayers.Class(OpenLayers.Format.WMSDescribeLayer,{initialize:function(a){OpenLayers.Format.WMSDescribeLayer.prototype.initialize.apply(this,[a])},read:function(e){if(typeof e=="string"){e=OpenLayers.Format.XML.prototype.read.apply(this,[e])}var k=e.documentElement;var c=k.childNodes;var g={layerDescriptions:[]};var a,n;for(var f=0;f<c.length;++f){a=c[f];n=a.nodeName;if(n=="LayerDescription"){var h=a.getAttribute("name");var m="";var d="";var l="";if(a.getAttribute("owsType")){m=a.getAttribute("owsType");d=a.getAttribute("owsURL")}else{if(a.getAttribute("wfs")!=""){m="WFS";d=a.getAttribute("wfs")}else{if(a.getAttribute("wcs")!=""){m="WCS";d=a.getAttribute("wcs")}}}var j=a.getElementsByTagName("Query");if(j.length>0){l=j[0].getAttribute("typeName");if(!l){l=j[0].getAttribute("typename")}}var o={layerName:h,owsType:m,owsURL:d,typeName:l};g.layerDescriptions.push(o);g.length=g.layerDescriptions.length;g[g.length-1]=o}else{if(n=="ServiceException"){var b=new OpenLayers.Format.OGCExceptionReport();return{error:b.read(e)}}}}return g},CLASS_NAME:"OpenLayers.Format.WMSDescribeLayer.v1_1_1"});OpenLayers.Format.WMSDescribeLayer.v1_1_0=OpenLayers.Format.WMSDescribeLayer.v1_1_1;OpenLayers.Format.WFSDescribeFeatureType=OpenLayers.Class(OpenLayers.Format.XML,{regExes:{trimSpace:(/^\s*|\s*$/g)},namespaces:{xsd:"http://www.w3.org/2001/XMLSchema"},readers:{xsd:{schema:function(d,h){var e=[];var b={};var f={complexTypes:e,customTypes:b};var j,k;this.readChildNodes(d,f);var g=d.attributes;var l,a;for(j=0,k=g.length;j<k;++j){l=g[j];a=l.name;if(a.indexOf("xmlns")===0){this.setNamespace(a.split(":")[1]||"",l.value)}else{h[a]=l.value}}h.featureTypes=e;h.targetPrefix=this.namespaceAlias[h.targetNamespace];var m,c;for(j=0,k=e.length;j<k;++j){m=e[j];c=b[m.typeName];if(b[m.typeName]){m.typeName=c.name}}},complexType:function(b,c){var a={typeName:b.getAttribute("name")};this.readChildNodes(b,a);c.complexTypes.push(a)},complexContent:function(a,b){this.readChildNodes(a,b)},extension:function(a,b){this.readChildNodes(a,b)},sequence:function(a,b){var c={elements:[]};this.readChildNodes(a,c);b.properties=c.elements},element:function(a,c){var h;if(c.elements){var d={};var b=a.attributes;var g;for(var e=0,f=b.length;e<f;++e){g=b[e];d[g.name]=g.value}h=d.type;if(!h){h={};this.readChildNodes(a,h);d.restriction=h;d.type=h.base}var k=h.base||h;d.localType=k.split(":").pop();c.elements.push(d);this.readChildNodes(a,d)}if(c.complexTypes){h=a.getAttribute("type");var j=h.split(":").pop();c.customTypes[j]={name:a.getAttribute("name"),type:h}}},annotation:function(a,b){b.annotation={};this.readChildNodes(a,b.annotation)},appinfo:function(a,b){if(!b.appinfo){b.appinfo=[]}b.appinfo.push(this.getChildValue(a))},documentation:function(a,c){if(!c.documentation){c.documentation=[]}var b=this.getChildValue(a);c.documentation.push({lang:a.getAttribute("xml:lang"),textContent:b.replace(this.regExes.trimSpace,"")})},simpleType:function(a,b){this.readChildNodes(a,b)},restriction:function(a,b){b.base=a.getAttribute("base");this.readRestriction(a,b)}}},readRestriction:function(d,f){var c=d.childNodes;var h,g,e;for(var b=0,a=c.length;b<a;++b){h=c[b];if(h.nodeType==1){g=h.nodeName.split(":").pop();e=h.getAttribute("value");if(!f[g]){f[g]=e}else{if(typeof f[g]=="string"){f[g]=[f[g]]}f[g].push(e)}}}},read:function(b){if(typeof b=="string"){b=OpenLayers.Format.XML.prototype.read.apply(this,[b])}if(b&&b.nodeType==9){b=b.documentElement}var a={};if(b.nodeName.split(":").pop()==="ExceptionReport"){var c=new OpenLayers.Format.OGCExceptionReport();a.error=c.read(b)}else{this.readNode(b,a)}return a},CLASS_NAME:"OpenLayers.Format.WFSDescribeFeatureType"});OpenLayers.Filter=OpenLayers.Class({initialize:function(a){OpenLayers.Util.extend(this,a)},destroy:function(){},evaluate:function(a){return true},clone:function(){return null},toString:function(){var a;if(OpenLayers.Format&&OpenLayers.Format.CQL){a=OpenLayers.Format.CQL.prototype.write(this)}else{a=Object.prototype.toString.call(this)}return a},CLASS_NAME:"OpenLayers.Filter"});OpenLayers.Filter.FeatureId=OpenLayers.Class(OpenLayers.Filter,{fids:null,type:"FID",initialize:function(a){this.fids=[];OpenLayers.Filter.prototype.initialize.apply(this,[a])},evaluate:function(c){for(var b=0,a=this.fids.length;b<a;b++){var d=c.fid||c.id;if(d==this.fids[b]){return true}}return false},clone:function(){var a=new OpenLayers.Filter.FeatureId();OpenLayers.Util.extend(a,this);a.fids=this.fids.slice();return a},CLASS_NAME:"OpenLayers.Filter.FeatureId"});OpenLayers.Filter.Logical=OpenLayers.Class(OpenLayers.Filter,{filters:null,type:null,initialize:function(a){this.filters=[];OpenLayers.Filter.prototype.initialize.apply(this,[a])},destroy:function(){this.filters=null;OpenLayers.Filter.prototype.destroy.apply(this)},evaluate:function(c){var b,a;switch(this.type){case OpenLayers.Filter.Logical.AND:for(b=0,a=this.filters.length;b<a;b++){if(this.filters[b].evaluate(c)==false){return false}}return true;case OpenLayers.Filter.Logical.OR:for(b=0,a=this.filters.length;b<a;b++){if(this.filters[b].evaluate(c)==true){return true}}return false;case OpenLayers.Filter.Logical.NOT:return(!this.filters[0].evaluate(c))}return undefined},clone:function(){var c=[];for(var b=0,a=this.filters.length;b<a;++b){c.push(this.filters[b].clone())}return new OpenLayers.Filter.Logical({type:this.type,filters:c})},CLASS_NAME:"OpenLayers.Filter.Logical"});OpenLayers.Filter.Logical.AND="&&";OpenLayers.Filter.Logical.OR="||";OpenLayers.Filter.Logical.NOT="!";OpenLayers.Filter.Comparison=OpenLayers.Class(OpenLayers.Filter,{type:null,property:null,value:null,matchCase:true,lowerBoundary:null,upperBoundary:null,initialize:function(a){OpenLayers.Filter.prototype.initialize.apply(this,[a]);if(this.type===OpenLayers.Filter.Comparison.LIKE&&a.matchCase===undefined){this.matchCase=null}},evaluate:function(c){if(c instanceof OpenLayers.Feature.Vector){c=c.attributes}var a=false;var b=c[this.property];var e;switch(this.type){case OpenLayers.Filter.Comparison.EQUAL_TO:e=this.value;if(!this.matchCase&&typeof b=="string"&&typeof e=="string"){a=(b.toUpperCase()==e.toUpperCase())}else{a=(b==e)}break;case OpenLayers.Filter.Comparison.NOT_EQUAL_TO:e=this.value;if(!this.matchCase&&typeof b=="string"&&typeof e=="string"){a=(b.toUpperCase()!=e.toUpperCase())}else{a=(b!=e)}break;case OpenLayers.Filter.Comparison.LESS_THAN:a=b<this.value;break;case OpenLayers.Filter.Comparison.GREATER_THAN:a=b>this.value;break;case OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO:a=b<=this.value;break;case OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO:a=b>=this.value;break;case OpenLayers.Filter.Comparison.BETWEEN:a=(b>=this.lowerBoundary)&&(b<=this.upperBoundary);break;case OpenLayers.Filter.Comparison.LIKE:var d=new RegExp(this.value,"gi");a=d.test(b);break;case OpenLayers.Filter.Comparison.IS_NULL:a=(b===null);break}return a},value2regex:function(c,b,a){if(c=="."){throw new Error("'.' is an unsupported wildCard character for OpenLayers.Filter.Comparison")}c=c?c:"*";b=b?b:".";a=a?a:"!";this.value=this.value.replace(new RegExp("\\"+a+"(.|$)","g"),"\\$1");this.value=this.value.replace(new RegExp("\\"+b,"g"),".");this.value=this.value.replace(new RegExp("\\"+c,"g"),".*");this.value=this.value.replace(new RegExp("\\\\.\\*","g"),"\\"+c);this.value=this.value.replace(new RegExp("\\\\\\.","g"),"\\"+b);return this.value},regex2value:function(){var a=this.value;a=a.replace(/!/g,"!!");a=a.replace(/(\\)?\\\./g,function(c,b){return b?c:"!."});a=a.replace(/(\\)?\\\*/g,function(c,b){return b?c:"!*"});a=a.replace(/\\\\/g,"\\");a=a.replace(/\.\*/g,"*");return a},clone:function(){return OpenLayers.Util.extend(new OpenLayers.Filter.Comparison(),this)},CLASS_NAME:"OpenLayers.Filter.Comparison"});OpenLayers.Filter.Comparison.EQUAL_TO="==";OpenLayers.Filter.Comparison.NOT_EQUAL_TO="!=";OpenLayers.Filter.Comparison.LESS_THAN="<";OpenLayers.Filter.Comparison.GREATER_THAN=">";OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO="<=";OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO=">=";OpenLayers.Filter.Comparison.BETWEEN="..";OpenLayers.Filter.Comparison.LIKE="~";OpenLayers.Filter.Comparison.IS_NULL="NULL";OpenLayers.Filter.Spatial=OpenLayers.Class(OpenLayers.Filter,{type:null,property:null,value:null,distance:null,distanceUnits:null,evaluate:function(c){var a=false;switch(this.type){case OpenLayers.Filter.Spatial.BBOX:case OpenLayers.Filter.Spatial.INTERSECTS:if(c.geometry){var b=this.value;if(this.value.CLASS_NAME=="OpenLayers.Bounds"){b=this.value.toGeometry()}if(c.geometry.intersects(b)){a=true}}break;default:throw new Error("evaluate is not implemented for this filter type.")}return a},clone:function(){var a=OpenLayers.Util.applyDefaults({value:this.value&&this.value.clone&&this.value.clone()},this);return new OpenLayers.Filter.Spatial(a)},CLASS_NAME:"OpenLayers.Filter.Spatial"});OpenLayers.Filter.Spatial.BBOX="BBOX";OpenLayers.Filter.Spatial.INTERSECTS="INTERSECTS";OpenLayers.Filter.Spatial.DWITHIN="DWITHIN";OpenLayers.Filter.Spatial.WITHIN="WITHIN";OpenLayers.Filter.Spatial.CONTAINS="CONTAINS";OpenLayers.Format.SLD=OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC,{profile:null,defaultVersion:"1.0.0",stringifyOutput:true,namedLayersAsArray:false,CLASS_NAME:"OpenLayers.Format.SLD"});OpenLayers.Format.Filter=OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC,{defaultVersion:"1.0.0",CLASS_NAME:"OpenLayers.Format.Filter"});OpenLayers.Filter.Function=OpenLayers.Class(OpenLayers.Filter,{name:null,params:null,CLASS_NAME:"OpenLayers.Filter.Function"});OpenLayers.Date={dateRegEx:/^(?:(\d{4})(?:-(\d{2})(?:-(\d{2}))?)?)?(?:(?:T(\d{1,2}):(\d{2}):(\d{2}(?:\.\d+)?)(Z|(?:[+-]\d{1,2}(?::(\d{2}))?)))|Z)?$/,toISOString:(function(){if("toISOString" in Date.prototype){return function(a){return a.toISOString()}}else{return function(a){var b;if(isNaN(a.getTime())){b="Invalid Date"}else{b=a.getUTCFullYear()+"-"+OpenLayers.Number.zeroPad(a.getUTCMonth()+1,2)+"-"+OpenLayers.Number.zeroPad(a.getUTCDate(),2)+"T"+OpenLayers.Number.zeroPad(a.getUTCHours(),2)+":"+OpenLayers.Number.zeroPad(a.getUTCMinutes(),2)+":"+OpenLayers.Number.zeroPad(a.getUTCSeconds(),2)+"."+OpenLayers.Number.zeroPad(a.getUTCMilliseconds(),3)+"Z"}return b}}})(),parse:function(j){var b;var h=j.match(this.dateRegEx);if(h&&(h[1]||h[7])){var k=parseInt(h[1],10)||0;var i=(parseInt(h[2],10)-1)||0;var m=parseInt(h[3],10)||1;b=new Date(Date.UTC(k,i,m));var l=h[7];if(l){var n=parseInt(h[4],10);var d=parseInt(h[5],10);var a=parseFloat(h[6]);var o=a|0;var c=Math.round(1000*(a-o));b.setUTCHours(n,d,o,c);if(l!=="Z"){var g=parseInt(l,10);var f=parseInt(h[8],10)||0;var e=-1000*(60*(g*60)+f*60);b=new Date(b.getTime()+e)}}}else{b=new Date("invalid")}return b}};OpenLayers.Format.Filter.v1=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{ogc:"http://www.opengis.net/ogc",gml:"http://www.opengis.net/gml",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance"},defaultPrefix:"ogc",schemaLocation:null,initialize:function(a){OpenLayers.Format.XML.prototype.initialize.apply(this,[a])},read:function(a){var b={};this.readers.ogc.Filter.apply(this,[a,b]);return b.filter},readers:{ogc:{_expression:function(a){var c,b="";for(var d=a.firstChild;d;d=d.nextSibling){switch(d.nodeType){case 1:c=this.readNode(d);if(c.property){b+="${"+c.property+"}"}else{if(c.value!==undefined){b+=c.value}}break;case 3:case 4:b+=d.nodeValue}}return b},Filter:function(b,a){var c={fids:[],filters:[]};this.readChildNodes(b,c);if(c.fids.length>0){a.filter=new OpenLayers.Filter.FeatureId({fids:c.fids})}else{if(c.filters.length>0){a.filter=c.filters[0]}}},FeatureId:function(a,b){var c=a.getAttribute("fid");if(c){b.fids.push(c)}},And:function(b,c){var a=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND});this.readChildNodes(b,a);c.filters.push(a)},Or:function(b,c){var a=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR});this.readChildNodes(b,a);c.filters.push(a)},Not:function(b,c){var a=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.NOT});this.readChildNodes(b,a);c.filters.push(a)},PropertyIsLessThan:function(b,c){var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LESS_THAN});this.readChildNodes(b,a);c.filters.push(a)},PropertyIsGreaterThan:function(b,c){var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.GREATER_THAN});this.readChildNodes(b,a);c.filters.push(a)},PropertyIsLessThanOrEqualTo:function(b,c){var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO});this.readChildNodes(b,a);c.filters.push(a)},PropertyIsGreaterThanOrEqualTo:function(b,c){var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO});this.readChildNodes(b,a);c.filters.push(a)},PropertyIsBetween:function(b,c){var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.BETWEEN});this.readChildNodes(b,a);c.filters.push(a)},Literal:function(a,b){b.value=OpenLayers.String.numericIf(this.getChildValue(a),true)},PropertyName:function(b,a){a.property=this.getChildValue(b)},LowerBoundary:function(b,a){a.lowerBoundary=OpenLayers.String.numericIf(this.readers.ogc._expression.call(this,b),true)},UpperBoundary:function(b,a){a.upperBoundary=OpenLayers.String.numericIf(this.readers.ogc._expression.call(this,b),true)},Intersects:function(a,b){this.readSpatial(a,b,OpenLayers.Filter.Spatial.INTERSECTS)},Within:function(a,b){this.readSpatial(a,b,OpenLayers.Filter.Spatial.WITHIN)},Contains:function(a,b){this.readSpatial(a,b,OpenLayers.Filter.Spatial.CONTAINS)},DWithin:function(a,b){this.readSpatial(a,b,OpenLayers.Filter.Spatial.DWITHIN)},Distance:function(a,b){b.distance=parseInt(this.getChildValue(a));b.distanceUnits=a.getAttribute("units")},Function:function(a,b){return},PropertyIsNull:function(b,c){var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.IS_NULL});this.readChildNodes(b,a);c.filters.push(a)}}},readSpatial:function(c,d,b){var a=new OpenLayers.Filter.Spatial({type:b});this.readChildNodes(c,a);a.value=a.components[0];delete a.components;d.filters.push(a)},encodeLiteral:function(a){if(a instanceof Date){a=OpenLayers.Date.toISOString(a)}return a},writeOgcExpression:function(b,a){if(b instanceof OpenLayers.Filter.Function){this.writeNode("Function",b,a)}else{this.writeNode("Literal",b,a)}return a},write:function(a){return this.writers.ogc.Filter.apply(this,[a])},writers:{ogc:{Filter:function(a){var b=this.createElementNSPlus("ogc:Filter");this.writeNode(this.getFilterType(a),a,b);return b},_featureIds:function(c){var d=this.createDocumentFragment();for(var a=0,b=c.fids.length;a<b;++a){this.writeNode("ogc:FeatureId",c.fids[a],d)}return d},FeatureId:function(a){return this.createElementNSPlus("ogc:FeatureId",{attributes:{fid:a}})},And:function(d){var e=this.createElementNSPlus("ogc:And");var c;for(var a=0,b=d.filters.length;a<b;++a){c=d.filters[a];this.writeNode(this.getFilterType(c),c,e)}return e},Or:function(d){var e=this.createElementNSPlus("ogc:Or");var c;for(var a=0,b=d.filters.length;a<b;++a){c=d.filters[a];this.writeNode(this.getFilterType(c),c,e)}return e},Not:function(b){var c=this.createElementNSPlus("ogc:Not");var a=b.filters[0];this.writeNode(this.getFilterType(a),a,c);return c},PropertyIsLessThan:function(a){var b=this.createElementNSPlus("ogc:PropertyIsLessThan");this.writeNode("PropertyName",a,b);this.writeOgcExpression(a.value,b);return b},PropertyIsGreaterThan:function(a){var b=this.createElementNSPlus("ogc:PropertyIsGreaterThan");this.writeNode("PropertyName",a,b);this.writeOgcExpression(a.value,b);return b},PropertyIsLessThanOrEqualTo:function(a){var b=this.createElementNSPlus("ogc:PropertyIsLessThanOrEqualTo");this.writeNode("PropertyName",a,b);this.writeOgcExpression(a.value,b);return b},PropertyIsGreaterThanOrEqualTo:function(a){var b=this.createElementNSPlus("ogc:PropertyIsGreaterThanOrEqualTo");this.writeNode("PropertyName",a,b);this.writeOgcExpression(a.value,b);return b},PropertyIsBetween:function(a){var b=this.createElementNSPlus("ogc:PropertyIsBetween");this.writeNode("PropertyName",a,b);this.writeNode("LowerBoundary",a,b);this.writeNode("UpperBoundary",a,b);return b},PropertyName:function(a){return this.createElementNSPlus("ogc:PropertyName",{value:a.property})},Literal:function(b){var a=this.encodeLiteral||OpenLayers.Format.Filter.v1.prototype.encodeLiteral;return this.createElementNSPlus("ogc:Literal",{value:a(b)})},LowerBoundary:function(a){var b=this.createElementNSPlus("ogc:LowerBoundary");this.writeOgcExpression(a.lowerBoundary,b);return b},UpperBoundary:function(a){var b=this.createElementNSPlus("ogc:UpperBoundary");this.writeNode("Literal",a.upperBoundary,b);return b},INTERSECTS:function(a){return this.writeSpatial(a,"Intersects")},WITHIN:function(a){return this.writeSpatial(a,"Within")},CONTAINS:function(a){return this.writeSpatial(a,"Contains")},DWITHIN:function(a){var b=this.writeSpatial(a,"DWithin");this.writeNode("Distance",a,b);return b},Distance:function(a){return this.createElementNSPlus("ogc:Distance",{attributes:{units:a.distanceUnits},value:a.distance})},Function:function(c){var d=this.createElementNSPlus("ogc:Function",{attributes:{name:c.name}});var e=c.params;for(var b=0,a=e.length;b<a;b++){this.writeOgcExpression(e[b],d)}return d},PropertyIsNull:function(a){var b=this.createElementNSPlus("ogc:PropertyIsNull");this.writeNode("PropertyName",a,b);return b}}},getFilterType:function(a){var b=this.filterMap[a.type];if(!b){throw"Filter writing not supported for rule type: "+a.type}return b},filterMap:{"&&":"And","||":"Or","!":"Not","==":"PropertyIsEqualTo","!=":"PropertyIsNotEqualTo","<":"PropertyIsLessThan",">":"PropertyIsGreaterThan","<=":"PropertyIsLessThanOrEqualTo",">=":"PropertyIsGreaterThanOrEqualTo","..":"PropertyIsBetween","~":"PropertyIsLike",NULL:"PropertyIsNull",BBOX:"BBOX",DWITHIN:"DWITHIN",WITHIN:"WITHIN",CONTAINS:"CONTAINS",INTERSECTS:"INTERSECTS",FID:"_featureIds"},CLASS_NAME:"OpenLayers.Format.Filter.v1"});OpenLayers.Format.Filter.v1_0_0=OpenLayers.Class(OpenLayers.Format.GML.v2,OpenLayers.Format.Filter.v1,{VERSION:"1.0.0",schemaLocation:"http://www.opengis.net/ogc/filter/1.0.0/filter.xsd",initialize:function(a){OpenLayers.Format.GML.v2.prototype.initialize.apply(this,[a])},readers:{ogc:OpenLayers.Util.applyDefaults({PropertyIsEqualTo:function(b,c){var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO});this.readChildNodes(b,a);c.filters.push(a)},PropertyIsNotEqualTo:function(b,c){var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.NOT_EQUAL_TO});this.readChildNodes(b,a);c.filters.push(a)},PropertyIsLike:function(d,e){var c=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE});this.readChildNodes(d,c);var f=d.getAttribute("wildCard");var b=d.getAttribute("singleChar");var a=d.getAttribute("escape");c.value2regex(f,b,a);e.filters.push(c)}},OpenLayers.Format.Filter.v1.prototype.readers.ogc),gml:OpenLayers.Format.GML.v2.prototype.readers.gml,feature:OpenLayers.Format.GML.v2.prototype.readers.feature},writers:{ogc:OpenLayers.Util.applyDefaults({PropertyIsEqualTo:function(a){var b=this.createElementNSPlus("ogc:PropertyIsEqualTo");this.writeNode("PropertyName",a,b);this.writeOgcExpression(a.value,b);return b},PropertyIsNotEqualTo:function(a){var b=this.createElementNSPlus("ogc:PropertyIsNotEqualTo");this.writeNode("PropertyName",a,b);this.writeOgcExpression(a.value,b);return b},PropertyIsLike:function(a){var b=this.createElementNSPlus("ogc:PropertyIsLike",{attributes:{wildCard:"*",singleChar:".",escape:"!"}});this.writeNode("PropertyName",a,b);this.writeNode("Literal",a.regex2value(),b);return b},BBOX:function(a){var c=this.createElementNSPlus("ogc:BBOX");a.property&&this.writeNode("PropertyName",a,c);var b=this.writeNode("gml:Box",a.value,c);if(a.projection){b.setAttribute("srsName",a.projection)}return c}},OpenLayers.Format.Filter.v1.prototype.writers.ogc),gml:OpenLayers.Format.GML.v2.prototype.writers.gml,feature:OpenLayers.Format.GML.v2.prototype.writers.feature},writeSpatial:function(b,a){var c=this.createElementNSPlus("ogc:"+a);this.writeNode("PropertyName",b,c);if(b.value instanceof OpenLayers.Filter.Function){this.writeNode("Function",b.value,c)}else{var d;if(b.value instanceof OpenLayers.Geometry){d=this.writeNode("feature:_geometry",b.value).firstChild}else{d=this.writeNode("gml:Box",b.value)}if(b.projection){d.setAttribute("srsName",b.projection)}c.appendChild(d)}return c},CLASS_NAME:"OpenLayers.Format.Filter.v1_0_0"});OpenLayers.Format.SLD.v1=OpenLayers.Class(OpenLayers.Format.Filter.v1_0_0,{namespaces:{sld:"http://www.opengis.net/sld",ogc:"http://www.opengis.net/ogc",gml:"http://www.opengis.net/gml",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance"},defaultPrefix:"sld",schemaLocation:null,multipleSymbolizers:false,featureTypeCounter:null,defaultSymbolizer:{fillColor:"#808080",fillOpacity:1,strokeColor:"#000000",strokeOpacity:1,strokeWidth:1,strokeDashstyle:"solid",pointRadius:3,graphicName:"square"},read:function(c,a){a=OpenLayers.Util.applyDefaults(a,this.options);var b={namedLayers:a.namedLayersAsArray===true?[]:{}};this.readChildNodes(c,b);return b},readers:OpenLayers.Util.applyDefaults({sld:{StyledLayerDescriptor:function(a,b){b.version=a.getAttribute("version");this.readChildNodes(a,b)},Name:function(a,b){b.name=this.getChildValue(a)},Title:function(a,b){b.title=this.getChildValue(a)},Abstract:function(a,b){b.description=this.getChildValue(a)},NamedLayer:function(d,e){var c={userStyles:[],namedStyles:[]};this.readChildNodes(d,c);for(var b=0,a=c.userStyles.length;b<a;++b){c.userStyles[b].layerName=c.name}if(OpenLayers.Util.isArray(e.namedLayers)){e.namedLayers.push(c)}else{e.namedLayers[c.name]=c}},NamedStyle:function(b,a){a.namedStyles.push(this.getChildName(b.firstChild))},UserStyle:function(c,a){var d={defaultsPerSymbolizer:true,rules:[]};this.featureTypeCounter=-1;this.readChildNodes(c,d);var b;if(this.multipleSymbolizers){delete d.defaultsPerSymbolizer;b=new OpenLayers.Style2(d)}else{b=new OpenLayers.Style(this.defaultSymbolizer,d)}a.userStyles.push(b)},IsDefault:function(b,a){if(this.getChildValue(b)=="1"){a.isDefault=true}},FeatureTypeStyle:function(b,a){++this.featureTypeCounter;var c={rules:this.multipleSymbolizers?a.rules:[]};this.readChildNodes(b,c);if(!this.multipleSymbolizers){a.rules=c.rules}},Rule:function(b,d){var a;if(this.multipleSymbolizers){a={symbolizers:[]}}var c=new OpenLayers.Rule(a);this.readChildNodes(b,c);d.rules.push(c)},ElseFilter:function(a,b){b.elseFilter=true},MinScaleDenominator:function(a,b){b.minScaleDenominator=parseFloat(this.getChildValue(a))},MaxScaleDenominator:function(a,b){b.maxScaleDenominator=parseFloat(this.getChildValue(a))},TextSymbolizer:function(b,c){var a={};this.readChildNodes(b,a);if(this.multipleSymbolizers){a.zIndex=this.featureTypeCounter;c.symbolizers.push(new OpenLayers.Symbolizer.Text(a))}else{c.symbolizer.Text=OpenLayers.Util.applyDefaults(a,c.symbolizer.Text)}},LabelPlacement:function(b,a){this.readChildNodes(b,a)},PointPlacement:function(e,d){var b={};this.readChildNodes(e,b);b.labelRotation=b.rotation;delete b.rotation;var c,a=d.labelAnchorPointX,f=d.labelAnchorPointY;if(a<=1/3){c="l"}else{if(a>1/3&&a<2/3){c="c"}else{if(a>=2/3){c="r"}}}if(f<=1/3){c+="b"}else{if(f>1/3&&f<2/3){c+="m"}else{if(f>=2/3){c+="t"}}}b.labelAlign=c;OpenLayers.Util.applyDefaults(d,b)},AnchorPoint:function(b,a){this.readChildNodes(b,a)},AnchorPointX:function(c,b){var a=this.readers.ogc._expression.call(this,c);if(a){b.labelAnchorPointX=a}},AnchorPointY:function(c,b){var a=this.readers.ogc._expression.call(this,c);if(a){b.labelAnchorPointY=a}},Displacement:function(b,a){this.readChildNodes(b,a)},DisplacementX:function(c,b){var a=this.readers.ogc._expression.call(this,c);if(a){b.labelXOffset=a}},DisplacementY:function(c,a){var b=this.readers.ogc._expression.call(this,c);if(b){a.labelYOffset=b}},LinePlacement:function(b,a){this.readChildNodes(b,a)},PerpendicularOffset:function(b,a){var c=this.readers.ogc._expression.call(this,b);if(c){a.labelPerpendicularOffset=c}},Label:function(b,a){var c=this.readers.ogc._expression.call(this,b);if(c){a.label=c}},Font:function(b,a){this.readChildNodes(b,a)},Halo:function(b,a){var c={};this.readChildNodes(b,c);a.haloRadius=c.haloRadius;a.haloColor=c.fillColor;a.haloOpacity=c.fillOpacity},Radius:function(c,b){var a=this.readers.ogc._expression.call(this,c);if(a!=null){b.haloRadius=a}},RasterSymbolizer:function(b,c){var a={};this.readChildNodes(b,a);if(this.multipleSymbolizers){a.zIndex=this.featureTypeCounter;c.symbolizers.push(new OpenLayers.Symbolizer.Raster(a))}else{c.symbolizer.Raster=OpenLayers.Util.applyDefaults(a,c.symbolizer.Raster)}},Geometry:function(a,b){b.geometry={};this.readChildNodes(a,b.geometry)},ColorMap:function(b,a){a.colorMap=[];this.readChildNodes(b,a.colorMap)},ColorMapEntry:function(b,a){var c=b.getAttribute("quantity");var d=b.getAttribute("opacity");a.push({color:b.getAttribute("color"),quantity:c!==null?parseFloat(c):undefined,label:b.getAttribute("label")||undefined,opacity:d!==null?parseFloat(d):undefined})},LineSymbolizer:function(b,c){var a={};this.readChildNodes(b,a);if(this.multipleSymbolizers){a.zIndex=this.featureTypeCounter;c.symbolizers.push(new OpenLayers.Symbolizer.Line(a))}else{c.symbolizer.Line=OpenLayers.Util.applyDefaults(a,c.symbolizer.Line)}},PolygonSymbolizer:function(b,c){var a={fill:false,stroke:false};if(!this.multipleSymbolizers){a=c.symbolizer.Polygon||a}this.readChildNodes(b,a);if(this.multipleSymbolizers){a.zIndex=this.featureTypeCounter;c.symbolizers.push(new OpenLayers.Symbolizer.Polygon(a))}else{c.symbolizer.Polygon=a}},PointSymbolizer:function(b,c){var a={fill:false,stroke:false,graphic:false};if(!this.multipleSymbolizers){a=c.symbolizer.Point||a}this.readChildNodes(b,a);if(this.multipleSymbolizers){a.zIndex=this.featureTypeCounter;c.symbolizers.push(new OpenLayers.Symbolizer.Point(a))}else{c.symbolizer.Point=a}},Stroke:function(b,a){a.stroke=true;this.readChildNodes(b,a)},Fill:function(b,a){a.fill=true;this.readChildNodes(b,a)},CssParameter:function(c,b){var a=c.getAttribute("name");var e=this.cssMap[a];if(b.label){if(a==="fill"){e="fontColor"}else{if(a==="fill-opacity"){e="fontOpacity"}}}if(e){var d=this.readers.ogc._expression.call(this,c);if(d){b[e]=d}}},Graphic:function(c,j){j.graphic=true;var a={};this.readChildNodes(c,a);var f=["stroke","strokeColor","strokeWidth","strokeOpacity","strokeLinecap","fill","fillColor","fillOpacity","graphicName","rotation","graphicFormat"];var b,h;for(var d=0,e=f.length;d<e;++d){b=f[d];h=a[b];if(h!=undefined){j[b]=h}}if(a.opacity!=undefined){j.graphicOpacity=a.opacity}if(a.size!=undefined){var g=a.size/2;if(isNaN(g)){j.graphicWidth=a.size}else{j.pointRadius=a.size/2}}if(a.href!=undefined){j.externalGraphic=a.href}if(a.rotation!=undefined){j.rotation=a.rotation}},ExternalGraphic:function(a,b){this.readChildNodes(a,b)},Mark:function(a,b){this.readChildNodes(a,b)},WellKnownName:function(a,b){b.graphicName=this.getChildValue(a)},Opacity:function(b,c){var a=this.readers.ogc._expression.call(this,b);if(a){c.opacity=a}},Size:function(b,c){var a=this.readers.ogc._expression.call(this,b);if(a){c.size=a}},Rotation:function(b,c){var a=this.readers.ogc._expression.call(this,b);if(a){c.rotation=a}},OnlineResource:function(a,b){b.href=this.getAttributeNS(a,this.namespaces.xlink,"href")},Format:function(a,b){b.graphicFormat=this.getChildValue(a)}}},OpenLayers.Format.Filter.v1_0_0.prototype.readers),cssMap:{stroke:"strokeColor","stroke-opacity":"strokeOpacity","stroke-width":"strokeWidth","stroke-linecap":"strokeLinecap","stroke-dasharray":"strokeDashstyle",fill:"fillColor","fill-opacity":"fillOpacity","font-family":"fontFamily","font-size":"fontSize","font-weight":"fontWeight","font-style":"fontStyle"},getCssProperty:function(a){var b=null;for(var c in this.cssMap){if(this.cssMap[c]==a){b=c;break}}return b},getGraphicFormat:function(a){var d,c;for(var b in this.graphicFormats){if(this.graphicFormats[b].test(a)){d=b;break}}return d||this.defaultGraphicFormat},defaultGraphicFormat:"image/png",graphicFormats:{"image/jpeg":/\.jpe?g$/i,"image/gif":/\.gif$/i,"image/png":/\.png$/i},write:function(a){return this.writers.sld.StyledLayerDescriptor.apply(this,[a])},writers:OpenLayers.Util.applyDefaults({sld:{_OGCExpression:function(h,f){var e=this.createElementNSPlus(h);var g=typeof f=="string"?f.split("${"):[f];e.appendChild(this.createTextNode(g[0]));var d,c;for(var b=1,a=g.length;b<a;b++){d=g[b];c=d.indexOf("}");if(c>0){this.writeNode("ogc:PropertyName",{property:d.substring(0,c)},e);e.appendChild(this.createTextNode(d.substring(++c)))}else{e.appendChild(this.createTextNode("${"+d))}}return e},StyledLayerDescriptor:function(e){var b=this.createElementNSPlus("sld:StyledLayerDescriptor",{attributes:{version:this.VERSION,"xsi:schemaLocation":this.schemaLocation}});b.setAttribute("xmlns:ogc",this.namespaces.ogc);b.setAttribute("xmlns:gml",this.namespaces.gml);if(e.name){this.writeNode("Name",e.name,b)}if(e.title){this.writeNode("Title",e.title,b)}if(e.description){this.writeNode("Abstract",e.description,b)}if(OpenLayers.Util.isArray(e.namedLayers)){for(var d=0,a=e.namedLayers.length;d<a;++d){this.writeNode("NamedLayer",e.namedLayers[d],b)}}else{for(var c in e.namedLayers){this.writeNode("NamedLayer",e.namedLayers[c],b)}}return b},Name:function(a){return this.createElementNSPlus("sld:Name",{value:a})},Title:function(a){return this.createElementNSPlus("sld:Title",{value:a})},Abstract:function(a){return this.createElementNSPlus("sld:Abstract",{value:a})},NamedLayer:function(c){var d=this.createElementNSPlus("sld:NamedLayer");this.writeNode("Name",c.name,d);if(c.namedStyles){for(var b=0,a=c.namedStyles.length;b<a;++b){this.writeNode("NamedStyle",c.namedStyles[b],d)}}if(c.userStyles){for(var b=0,a=c.userStyles.length;b<a;++b){this.writeNode("UserStyle",c.userStyles[b],d)}}return d},NamedStyle:function(a){var b=this.createElementNSPlus("sld:NamedStyle");this.writeNode("Name",a,b);return b},UserStyle:function(b){var d=this.createElementNSPlus("sld:UserStyle");if(b.name){this.writeNode("Name",b.name,d)}if(b.title){this.writeNode("Title",b.title,d)}if(b.description){this.writeNode("Abstract",b.description,d)}if(b.isDefault){this.writeNode("IsDefault",b.isDefault,d)}if(this.multipleSymbolizers&&b.rules){var m={0:[]};var c=[0];var l,a,q,k,h;for(var f=0,o=b.rules.length;f<o;++f){l=b.rules[f];if(l.symbolizers){a={};for(var e=0,g=l.symbolizers.length;e<g;++e){q=l.symbolizers[e];k=q.zIndex;if(!(k in a)){h=l.clone();h.symbolizers=[];a[k]=h}a[k].symbolizers.push(q.clone())}for(k in a){if(!(k in m)){c.push(k);m[k]=[]}m[k].push(a[k])}}else{m[0].push(l.clone())}}c.sort();var n;for(var f=0,o=c.length;f<o;++f){n=m[c[f]];if(n.length>0){h=b.clone();h.rules=m[c[f]];this.writeNode("FeatureTypeStyle",h,d)}}}else{this.writeNode("FeatureTypeStyle",b,d)}return d},IsDefault:function(a){return this.createElementNSPlus("sld:IsDefault",{value:(a)?"1":"0"})},FeatureTypeStyle:function(c){var d=this.createElementNSPlus("sld:FeatureTypeStyle");for(var b=0,a=c.rules.length;b<a;++b){this.writeNode("Rule",c.rules[b],d)}return d},Rule:function(h){var g=this.createElementNSPlus("sld:Rule");if(h.name){this.writeNode("Name",h.name,g)}if(h.title){this.writeNode("Title",h.title,g)}if(h.description){this.writeNode("Abstract",h.description,g)}if(h.elseFilter){this.writeNode("ElseFilter",null,g)}else{if(h.filter){this.writeNode("ogc:Filter",h.filter,g)}}if(h.minScaleDenominator!=undefined){this.writeNode("MinScaleDenominator",h.minScaleDenominator,g)}if(h.maxScaleDenominator!=undefined){this.writeNode("MaxScaleDenominator",h.maxScaleDenominator,g)}var f,e;if(this.multipleSymbolizers&&h.symbolizers){var e;for(var c=0,d=h.symbolizers.length;c<d;++c){e=h.symbolizers[c];f=e.CLASS_NAME.split(".").pop();this.writeNode(f+"Symbolizer",e,g)}}else{var b=OpenLayers.Style.SYMBOLIZER_PREFIXES;for(var c=0,a=b.length;c<a;++c){f=b[c];e=h.symbolizer[f];if(e){this.writeNode(f+"Symbolizer",e,g)}}}return g},ElseFilter:function(){return this.createElementNSPlus("sld:ElseFilter")},MinScaleDenominator:function(a){return this.createElementNSPlus("sld:MinScaleDenominator",{value:a})},MaxScaleDenominator:function(a){return this.createElementNSPlus("sld:MaxScaleDenominator",{value:a})},LineSymbolizer:function(a){var b=this.createElementNSPlus("sld:LineSymbolizer");this.writeNode("Stroke",a,b);return b},Stroke:function(a){var b=this.createElementNSPlus("sld:Stroke");if(a.strokeColor!=undefined){this.writeNode("CssParameter",{symbolizer:a,key:"strokeColor"},b)}if(a.strokeOpacity!=undefined){this.writeNode("CssParameter",{symbolizer:a,key:"strokeOpacity"},b)}if(a.strokeWidth!=undefined){this.writeNode("CssParameter",{symbolizer:a,key:"strokeWidth"},b)}if(a.strokeDashstyle!=undefined&&a.strokeDashstyle!=="solid"){this.writeNode("CssParameter",{symbolizer:a,key:"strokeDashstyle"},b)}if(a.strokeLinecap!=undefined){this.writeNode("CssParameter",{symbolizer:a,key:"strokeLinecap"},b)}return b},CssParameter:function(a){return this.createElementNSPlus("sld:CssParameter",{attributes:{name:this.getCssProperty(a.key)},value:a.symbolizer[a.key]})},TextSymbolizer:function(a){var b=this.createElementNSPlus("sld:TextSymbolizer");if(a.label!=null){this.writeNode("Label",a.label,b)}if(a.fontFamily!=null||a.fontSize!=null||a.fontWeight!=null||a.fontStyle!=null){this.writeNode("Font",a,b)}if(a.labelAnchorPointX!=null||a.labelAnchorPointY!=null||a.labelAlign!=null||a.labelXOffset!=null||a.labelYOffset!=null||a.labelRotation!=null||a.labelPerpendicularOffset!=null){this.writeNode("LabelPlacement",a,b)}if(a.haloRadius!=null||a.haloColor!=null||a.haloOpacity!=null){this.writeNode("Halo",a,b)}if(a.fontColor!=null||a.fontOpacity!=null){this.writeNode("Fill",{fillColor:a.fontColor,fillOpacity:a.fontOpacity},b)}return b},LabelPlacement:function(a){var b=this.createElementNSPlus("sld:LabelPlacement");if((a.labelAnchorPointX!=null||a.labelAnchorPointY!=null||a.labelAlign!=null||a.labelXOffset!=null||a.labelYOffset!=null||a.labelRotation!=null)&&a.labelPerpendicularOffset==null){this.writeNode("PointPlacement",a,b)}if(a.labelPerpendicularOffset!=null){this.writeNode("LinePlacement",a,b)}return b},LinePlacement:function(a){var b=this.createElementNSPlus("sld:LinePlacement");this.writeNode("PerpendicularOffset",a.labelPerpendicularOffset,b);return b},PerpendicularOffset:function(a){return this.createElementNSPlus("sld:PerpendicularOffset",{value:a})},PointPlacement:function(a){var b=this.createElementNSPlus("sld:PointPlacement");if(a.labelAnchorPointX!=null||a.labelAnchorPointY!=null||a.labelAlign!=null){this.writeNode("AnchorPoint",a,b)}if(a.labelXOffset!=null||a.labelYOffset!=null){this.writeNode("Displacement",a,b)}if(a.labelRotation!=null){this.writeNode("Rotation",a.labelRotation,b)}return b},AnchorPoint:function(b){var c=this.createElementNSPlus("sld:AnchorPoint");var a=b.labelAnchorPointX,f=b.labelAnchorPointY;if(a!=null){this.writeNode("AnchorPointX",a,c)}if(f!=null){this.writeNode("AnchorPointY",f,c)}if(a==null&&f==null){var e=b.labelAlign.substr(0,1),d=b.labelAlign.substr(1,1);if(e==="l"){a=0}else{if(e==="c"){a=0.5}else{if(e==="r"){a=1}}}if(d==="b"){f=0}else{if(d==="m"){f=0.5}else{if(d==="t"){f=1}}}this.writeNode("AnchorPointX",a,c);this.writeNode("AnchorPointY",f,c)}return c},AnchorPointX:function(a){return this.createElementNSPlus("sld:AnchorPointX",{value:a})},AnchorPointY:function(a){return this.createElementNSPlus("sld:AnchorPointY",{value:a})},Displacement:function(a){var b=this.createElementNSPlus("sld:Displacement");if(a.labelXOffset!=null){this.writeNode("DisplacementX",a.labelXOffset,b)}if(a.labelYOffset!=null){this.writeNode("DisplacementY",a.labelYOffset,b)}return b},DisplacementX:function(a){return this.createElementNSPlus("sld:DisplacementX",{value:a})},DisplacementY:function(a){return this.createElementNSPlus("sld:DisplacementY",{value:a})},Font:function(a){var b=this.createElementNSPlus("sld:Font");if(a.fontFamily){this.writeNode("CssParameter",{symbolizer:a,key:"fontFamily"},b)}if(a.fontSize){this.writeNode("CssParameter",{symbolizer:a,key:"fontSize"},b)}if(a.fontWeight){this.writeNode("CssParameter",{symbolizer:a,key:"fontWeight"},b)}if(a.fontStyle){this.writeNode("CssParameter",{symbolizer:a,key:"fontStyle"},b)}return b},Label:function(a){return this.writers.sld._OGCExpression.call(this,"sld:Label",a)},Halo:function(a){var b=this.createElementNSPlus("sld:Halo");if(a.haloRadius){this.writeNode("Radius",a.haloRadius,b)}if(a.haloColor||a.haloOpacity){this.writeNode("Fill",{fillColor:a.haloColor,fillOpacity:a.haloOpacity},b)}return b},Radius:function(a){return this.createElementNSPlus("sld:Radius",{value:a})},RasterSymbolizer:function(a){var b=this.createElementNSPlus("sld:RasterSymbolizer");if(a.geometry){this.writeNode("Geometry",a.geometry,b)}if(a.opacity){this.writeNode("Opacity",a.opacity,b)}if(a.colorMap){this.writeNode("ColorMap",a.colorMap,b)}return b},Geometry:function(b){var a=this.createElementNSPlus("sld:Geometry");if(b.property){this.writeNode("ogc:PropertyName",b,a)}return a},ColorMap:function(b){var d=this.createElementNSPlus("sld:ColorMap");for(var c=0,a=b.length;c<a;++c){this.writeNode("ColorMapEntry",b[c],d)}return d},ColorMapEntry:function(c){var d=this.createElementNSPlus("sld:ColorMapEntry");var b=c;d.setAttribute("color",b.color);b.opacity!==undefined&&d.setAttribute("opacity",parseFloat(b.opacity));b.quantity!==undefined&&d.setAttribute("quantity",parseFloat(b.quantity));b.label!==undefined&&d.setAttribute("label",b.label);return d},PolygonSymbolizer:function(a){var b=this.createElementNSPlus("sld:PolygonSymbolizer");if(a.fill!==false){this.writeNode("Fill",a,b)}if(a.stroke!==false){this.writeNode("Stroke",a,b)}return b},Fill:function(a){var b=this.createElementNSPlus("sld:Fill");if(a.fillColor){this.writeNode("CssParameter",{symbolizer:a,key:"fillColor"},b)}if(a.fillOpacity!=null){this.writeNode("CssParameter",{symbolizer:a,key:"fillOpacity"},b)}return b},PointSymbolizer:function(a){var b=this.createElementNSPlus("sld:PointSymbolizer");this.writeNode("Graphic",a,b);return b},Graphic:function(a){var b=this.createElementNSPlus("sld:Graphic");if(a.externalGraphic!=undefined){this.writeNode("ExternalGraphic",a,b)}else{this.writeNode("Mark",a,b)}if(a.graphicOpacity!=undefined){this.writeNode("Opacity",a.graphicOpacity,b)}if(a.pointRadius!=undefined){this.writeNode("Size",a.pointRadius*2,b)}else{if(a.graphicWidth!=undefined){this.writeNode("Size",a.graphicWidth,b)}}if(a.rotation!=undefined){this.writeNode("Rotation",a.rotation,b)}return b},ExternalGraphic:function(a){var b=this.createElementNSPlus("sld:ExternalGraphic");this.writeNode("OnlineResource",a.externalGraphic,b);var c=a.graphicFormat||this.getGraphicFormat(a.externalGraphic);this.writeNode("Format",c,b);return b},Mark:function(a){var b=this.createElementNSPlus("sld:Mark");if(a.graphicName){this.writeNode("WellKnownName",a.graphicName,b)}if(a.fill!==false){this.writeNode("Fill",a,b)}if(a.stroke!==false){this.writeNode("Stroke",a,b)}return b},WellKnownName:function(a){return this.createElementNSPlus("sld:WellKnownName",{value:a})},Opacity:function(a){return this.createElementNSPlus("sld:Opacity",{value:a})},Size:function(a){return this.writers.sld._OGCExpression.call(this,"sld:Size",a)},Rotation:function(a){return this.createElementNSPlus("sld:Rotation",{value:a})},OnlineResource:function(a){return this.createElementNSPlus("sld:OnlineResource",{attributes:{"xlink:type":"simple","xlink:href":a}})},Format:function(a){return this.createElementNSPlus("sld:Format",{value:a})}}},OpenLayers.Format.Filter.v1_0_0.prototype.writers),CLASS_NAME:"OpenLayers.Format.SLD.v1"});OpenLayers.Format.SLD.v1_0_0=OpenLayers.Class(OpenLayers.Format.SLD.v1,{VERSION:"1.0.0",schemaLocation:"http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd",CLASS_NAME:"OpenLayers.Format.SLD.v1_0_0"});OpenLayers.Protocol=OpenLayers.Class({format:null,options:null,autoDestroy:true,defaultFilter:null,initialize:function(a){a=a||{};OpenLayers.Util.extend(this,a);this.options=a},mergeWithDefaultFilter:function(b){var a;if(b&&this.defaultFilter){a=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[this.defaultFilter,b]})}else{a=b||this.defaultFilter||undefined}return a},destroy:function(){this.options=null;this.format=null},read:function(a){a=a||{};a.filter=this.mergeWithDefaultFilter(a.filter)},create:function(){},update:function(){},"delete":function(){},commit:function(){},abort:function(a){},createCallback:function(c,a,b){return OpenLayers.Function.bind(function(){c.apply(this,[a,b])},this)},CLASS_NAME:"OpenLayers.Protocol"});OpenLayers.Protocol.Response=OpenLayers.Class({code:null,requestType:null,last:true,features:null,data:null,reqFeatures:null,priv:null,error:null,initialize:function(a){OpenLayers.Util.extend(this,a)},success:function(){return this.code>0},CLASS_NAME:"OpenLayers.Protocol.Response"});OpenLayers.Protocol.Response.SUCCESS=1;OpenLayers.Protocol.Response.FAILURE=0;OpenLayers.ProxyHost="";if(!OpenLayers.Request){OpenLayers.Request={}}OpenLayers.Util.extend(OpenLayers.Request,{DEFAULT_CONFIG:{method:"GET",url:window.location.href,async:true,user:undefined,password:undefined,params:null,proxy:OpenLayers.ProxyHost,headers:{},data:null,callback:function(){},success:null,failure:null,scope:null},URL_SPLIT_REGEX:/([^:]*:)\/\/([^:]*:?[^@]*@)?([^:\/\?]*):?([^\/\?]*)/,events:new OpenLayers.Events(this),makeSameOrigin:function(b,c){var f=b.indexOf("http")!==0;var g=!f&&b.match(this.URL_SPLIT_REGEX);if(g){var a=window.location;f=g[1]==a.protocol&&g[3]==a.hostname;var d=g[4],e=a.port;if(d!=80&&d!=""||e!="80"&&e!=""){f=f&&d==e}}if(!f){if(c){if(typeof c=="function"){b=c(b)}else{b=c+encodeURIComponent(b)}}}return b},issue:function(b){var d=OpenLayers.Util.extend(this.DEFAULT_CONFIG,{proxy:OpenLayers.ProxyHost});b=b||{};b.headers=b.headers||{};b=OpenLayers.Util.applyDefaults(b,d);b.headers=OpenLayers.Util.applyDefaults(b.headers,d.headers);var g=false,e;for(e in b.headers){if(b.headers.hasOwnProperty(e)){if(e.toLowerCase()==="x-requested-with"){g=true}}}if(g===false){b.headers["X-Requested-With"]="XMLHttpRequest"}var c=new OpenLayers.Request.XMLHttpRequest();var a=OpenLayers.Util.urlAppend(b.url,OpenLayers.Util.getParameterString(b.params||{}));a=OpenLayers.Request.makeSameOrigin(a,b.proxy);c.open(b.method,a,b.async,b.user,b.password);for(var f in b.headers){c.setRequestHeader(f,b.headers[f])}var i=this.events;var h=this;c.onreadystatechange=function(){if(c.readyState==OpenLayers.Request.XMLHttpRequest.DONE){var j=i.triggerEvent("complete",{request:c,config:b,requestUrl:a});if(j!==false){h.runCallbacks({request:c,config:b,requestUrl:a})}}};if(b.async===false){c.send(b.data)}else{window.setTimeout(function(){if(c.readyState!==0){c.send(b.data)}},0)}return c},runCallbacks:function(d){var e=d.request;var c=d.config;var a=(c.scope)?OpenLayers.Function.bind(c.callback,c.scope):c.callback;var f;if(c.success){f=(c.scope)?OpenLayers.Function.bind(c.success,c.scope):c.success}var b;if(c.failure){b=(c.scope)?OpenLayers.Function.bind(c.failure,c.scope):c.failure}if(OpenLayers.Util.createUrlObject(c.url).protocol=="file:"&&e.responseText){e.status=200}a(e);if(!e.status||(e.status>=200&&e.status<300)){this.events.triggerEvent("success",d);if(f){f(e)}}if(e.status&&(e.status<200||e.status>=300)){this.events.triggerEvent("failure",d);if(b){b(e)}}},GET:function(a){a=OpenLayers.Util.extend(a,{method:"GET"});return OpenLayers.Request.issue(a)},POST:function(a){a=OpenLayers.Util.extend(a,{method:"POST"});a.headers=a.headers?a.headers:{};if(!("CONTENT-TYPE" in OpenLayers.Util.upperCaseObject(a.headers))){a.headers["Content-Type"]="application/xml"}return OpenLayers.Request.issue(a)},PUT:function(a){a=OpenLayers.Util.extend(a,{method:"PUT"});a.headers=a.headers?a.headers:{};if(!("CONTENT-TYPE" in OpenLayers.Util.upperCaseObject(a.headers))){a.headers["Content-Type"]="application/xml"}return OpenLayers.Request.issue(a)},DELETE:function(a){a=OpenLayers.Util.extend(a,{method:"DELETE"});return OpenLayers.Request.issue(a)},HEAD:function(a){a=OpenLayers.Util.extend(a,{method:"HEAD"});return OpenLayers.Request.issue(a)},OPTIONS:function(a){a=OpenLayers.Util.extend(a,{method:"OPTIONS"});return OpenLayers.Request.issue(a)}});(function(){var g=window.XMLHttpRequest;var a=!!window.controllers,j=window.document.all&&!window.opera,k=j&&window.navigator.userAgent.match(/MSIE 7.0/);function d(){this._object=g&&!k?new g:new window.ActiveXObject("Microsoft.XMLHTTP");this._listeners=[]}function c(){return new d}c.prototype=d.prototype;if(a&&g.wrapped){c.wrapped=g.wrapped}c.UNSENT=0;c.OPENED=1;c.HEADERS_RECEIVED=2;c.LOADING=3;c.DONE=4;c.prototype.readyState=c.UNSENT;c.prototype.responseText="";c.prototype.responseXML=null;c.prototype.status=0;c.prototype.statusText="";c.prototype.priority="NORMAL";c.prototype.onreadystatechange=null;c.onreadystatechange=null;c.onopen=null;c.onsend=null;c.onabort=null;c.prototype.open=function(o,s,n,t,m){delete this._headers;if(arguments.length<3){n=true}this._async=n;var r=this,q=this.readyState,l;if(j&&n){l=function(){if(q!=c.DONE){e(r);r.abort()}};window.attachEvent("onunload",l)}if(c.onopen){c.onopen.apply(this,arguments)}if(arguments.length>4){this._object.open(o,s,n,t,m)}else{if(arguments.length>3){this._object.open(o,s,n,t)}else{this._object.open(o,s,n)}}this.readyState=c.OPENED;b(this);this._object.onreadystatechange=function(){if(a&&!n){return}r.readyState=r._object.readyState;h(r);if(r._aborted){r.readyState=c.UNSENT;return}if(r.readyState==c.DONE){delete r._data;e(r);if(j&&n){window.detachEvent("onunload",l)}}if(q!=r.readyState){b(r)}q=r.readyState}};function f(l){l._object.send(l._data);if(a&&!l._async){l.readyState=c.OPENED;h(l);while(l.readyState<c.DONE){l.readyState++;b(l);if(l._aborted){return}}}}c.prototype.send=function(l){if(c.onsend){c.onsend.apply(this,arguments)}if(!arguments.length){l=null}if(l&&l.nodeType){l=window.XMLSerializer?new window.XMLSerializer().serializeToString(l):l.xml;if(!this._headers["Content-Type"]){this._object.setRequestHeader("Content-Type","application/xml")}}this._data=l;f(this)};c.prototype.abort=function(){if(c.onabort){c.onabort.apply(this,arguments)}if(this.readyState>c.UNSENT){this._aborted=true}this._object.abort();e(this);this.readyState=c.UNSENT;delete this._data};c.prototype.getAllResponseHeaders=function(){return this._object.getAllResponseHeaders()};c.prototype.getResponseHeader=function(l){return this._object.getResponseHeader(l)};c.prototype.setRequestHeader=function(l,m){if(!this._headers){this._headers={}}this._headers[l]=m;return this._object.setRequestHeader(l,m)};c.prototype.addEventListener=function(o,n,m){for(var l=0,q;q=this._listeners[l];l++){if(q[0]==o&&q[1]==n&&q[2]==m){return}}this._listeners.push([o,n,m])};c.prototype.removeEventListener=function(o,n,m){for(var l=0,q;q=this._listeners[l];l++){if(q[0]==o&&q[1]==n&&q[2]==m){break}}if(q){this._listeners.splice(l,1)}};c.prototype.dispatchEvent=function(m){var n={type:m.type,target:this,currentTarget:this,eventPhase:2,bubbles:m.bubbles,cancelable:m.cancelable,timeStamp:m.timeStamp,stopPropagation:function(){},preventDefault:function(){},initEvent:function(){}};if(n.type=="readystatechange"&&this.onreadystatechange){(this.onreadystatechange.handleEvent||this.onreadystatechange).apply(this,[n])}for(var l=0,o;o=this._listeners[l];l++){if(o[0]==n.type&&!o[2]){(o[1].handleEvent||o[1]).apply(this,[n])}}};c.prototype.toString=function(){return"[object XMLHttpRequest]"};c.toString=function(){return"[XMLHttpRequest]"};function b(l){if(c.onreadystatechange){c.onreadystatechange.apply(l)}l.dispatchEvent({type:"readystatechange",bubbles:false,cancelable:false,timeStamp:new Date+0})}function i(n){var m=n.responseXML,l=n.responseText;if(j&&l&&m&&!m.documentElement&&n.getResponseHeader("Content-Type").match(/[^\/]+\/[^\+]+\+xml/)){m=new window.ActiveXObject("Microsoft.XMLDOM");m.async=false;m.validateOnParse=false;m.loadXML(l)}if(m){if((j&&m.parseError!=0)||!m.documentElement||(m.documentElement&&m.documentElement.tagName=="parsererror")){return null}}return m}function h(l){try{l.responseText=l._object.responseText}catch(m){}try{l.responseXML=i(l._object)}catch(m){}try{l.status=l._object.status}catch(m){}try{l.statusText=l._object.statusText}catch(m){}}function e(l){l._object.onreadystatechange=new window.Function}if(!window.Function.prototype.apply){window.Function.prototype.apply=function(l,m){if(!m){m=[]}l.__func=this;l.__func(m[0],m[1],m[2],m[3],m[4]);delete l.__func}}if(!OpenLayers.Request){OpenLayers.Request={}}OpenLayers.Request.XMLHttpRequest=c})();OpenLayers.Protocol.HTTP=OpenLayers.Class(OpenLayers.Protocol,{url:null,headers:null,params:null,callback:null,scope:null,readWithPOST:false,updateWithPOST:false,deleteWithPOST:false,wildcarded:false,srsInBBOX:false,initialize:function(a){a=a||{};this.params={};this.headers={};OpenLayers.Protocol.prototype.initialize.apply(this,arguments);if(!this.filterToParams&&OpenLayers.Format.QueryStringFilter){var b=new OpenLayers.Format.QueryStringFilter({wildcarded:this.wildcarded,srsInBBOX:this.srsInBBOX});this.filterToParams=function(c,d){return b.write(c,d)}}},destroy:function(){this.params=null;this.headers=null;OpenLayers.Protocol.prototype.destroy.apply(this)},read:function(a){OpenLayers.Protocol.prototype.read.apply(this,arguments);a=a||{};a.params=OpenLayers.Util.applyDefaults(a.params,this.options.params);a=OpenLayers.Util.applyDefaults(a,this.options);if(a.filter&&this.filterToParams){a.params=this.filterToParams(a.filter,a.params)}var b=(a.readWithPOST!==undefined)?a.readWithPOST:this.readWithPOST;var d=new OpenLayers.Protocol.Response({requestType:"read"});if(b){var c=a.headers||{};c["Content-Type"]="application/x-www-form-urlencoded";d.priv=OpenLayers.Request.POST({url:a.url,callback:this.createCallback(this.handleRead,d,a),data:OpenLayers.Util.getParameterString(a.params),headers:c})}else{d.priv=OpenLayers.Request.GET({url:a.url,callback:this.createCallback(this.handleRead,d,a),params:a.params,headers:a.headers})}return d},handleRead:function(b,a){this.handleResponse(b,a)},create:function(b,a){a=OpenLayers.Util.applyDefaults(a,this.options);var c=new OpenLayers.Protocol.Response({reqFeatures:b,requestType:"create"});c.priv=OpenLayers.Request.POST({url:a.url,callback:this.createCallback(this.handleCreate,c,a),headers:a.headers,data:this.format.write(b)});return c},handleCreate:function(b,a){this.handleResponse(b,a)},update:function(c,b){b=b||{};var a=b.url||c.url||this.options.url+"/"+c.fid;b=OpenLayers.Util.applyDefaults(b,this.options);var d=new OpenLayers.Protocol.Response({reqFeatures:c,requestType:"update"});var e=this.updateWithPOST?"POST":"PUT";d.priv=OpenLayers.Request[e]({url:a,callback:this.createCallback(this.handleUpdate,d,b),headers:b.headers,data:this.format.write(c)});return d},handleUpdate:function(b,a){this.handleResponse(b,a)},"delete":function(d,c){c=c||{};var b=c.url||d.url||this.options.url+"/"+d.fid;c=OpenLayers.Util.applyDefaults(c,this.options);var e=new OpenLayers.Protocol.Response({reqFeatures:d,requestType:"delete"});var f=this.deleteWithPOST?"POST":"DELETE";var a={url:b,callback:this.createCallback(this.handleDelete,e,c),headers:c.headers};if(this.deleteWithPOST){a.data=this.format.write(d)}e.priv=OpenLayers.Request[f](a);return e},handleDelete:function(b,a){this.handleResponse(b,a)},handleResponse:function(c,a){var b=c.priv;if(a.callback){if(b.status>=200&&b.status<300){if(c.requestType!="delete"){c.features=this.parseFeatures(b)}c.code=OpenLayers.Protocol.Response.SUCCESS}else{c.code=OpenLayers.Protocol.Response.FAILURE}a.callback.call(a.scope,c)}},parseFeatures:function(a){var b=a.responseXML;if(!b||!b.documentElement){b=a.responseText}if(!b||b.length<=0){return null}return this.format.read(b)},commit:function(b,r){r=OpenLayers.Util.applyDefaults(r,this.options);var d=[],m=0;var k={};k[OpenLayers.State.INSERT]=[];k[OpenLayers.State.UPDATE]=[];k[OpenLayers.State.DELETE]=[];var q,l,c=[];for(var e=0,j=b.length;e<j;++e){q=b[e];l=k[q.state];if(l){l.push(q);c.push(q)}}var g=(k[OpenLayers.State.INSERT].length>0?1:0)+k[OpenLayers.State.UPDATE].length+k[OpenLayers.State.DELETE].length;var o=true;var a=new OpenLayers.Protocol.Response({reqFeatures:c});function h(t){var s=t.features?t.features.length:0;var v=new Array(s);for(var u=0;u<s;++u){v[u]=t.features[u].fid}a.insertIds=v;n.apply(this,[t])}function n(i){this.callUserCallback(i,r);o=o&&i.success();m++;if(m>=g){if(r.callback){a.code=o?OpenLayers.Protocol.Response.SUCCESS:OpenLayers.Protocol.Response.FAILURE;r.callback.apply(r.scope,[a])}}}var f=k[OpenLayers.State.INSERT];if(f.length>0){d.push(this.create(f,OpenLayers.Util.applyDefaults({callback:h,scope:this},r.create)))}f=k[OpenLayers.State.UPDATE];for(var e=f.length-1;e>=0;--e){d.push(this.update(f[e],OpenLayers.Util.applyDefaults({callback:n,scope:this},r.update)))}f=k[OpenLayers.State.DELETE];for(var e=f.length-1;e>=0;--e){d.push(this["delete"](f[e],OpenLayers.Util.applyDefaults({callback:n,scope:this},r["delete"])))}return d},abort:function(a){if(a){a.priv.abort()}},callUserCallback:function(c,a){var b=a[c.requestType];if(b&&b.callback){b.callback.call(b.scope,c)}},CLASS_NAME:"OpenLayers.Protocol.HTTP"});OpenLayers.Protocol.WFS=function(b){b=OpenLayers.Util.applyDefaults(b,OpenLayers.Protocol.WFS.DEFAULTS);var a=OpenLayers.Protocol.WFS["v"+b.version.replace(/\./g,"_")];if(!a){throw"Unsupported WFS version: "+b.version}return new a(b)};OpenLayers.Protocol.WFS.fromWMSLayer=function(d,c){var a,e;var g=d.params.LAYERS;var f=(OpenLayers.Util.isArray(g)?g[0]:g).split(":");if(f.length>1){e=f[0]}a=f.pop();var b={url:d.url,featureType:a,featurePrefix:e,srsName:d.projection&&d.projection.getCode()||d.map&&d.map.getProjectionObject().getCode(),version:"1.1.0"};return new OpenLayers.Protocol.WFS(OpenLayers.Util.applyDefaults(c,b))};OpenLayers.Protocol.WFS.DEFAULTS={version:"1.0.0"};OpenLayers.Protocol.WFS.v1=OpenLayers.Class(OpenLayers.Protocol,{version:null,srsName:"EPSG:4326",featureType:null,featureNS:null,geometryName:"the_geom",schema:null,featurePrefix:"feature",formatOptions:null,readFormat:null,readOptions:null,initialize:function(a){OpenLayers.Protocol.prototype.initialize.apply(this,[a]);if(!a.format){this.format=OpenLayers.Format.WFST(OpenLayers.Util.extend({version:this.version,featureType:this.featureType,featureNS:this.featureNS,featurePrefix:this.featurePrefix,geometryName:this.geometryName,srsName:this.srsName,schema:this.schema},this.formatOptions))}if(!a.geometryName&&parseFloat(this.format.version)>1){this.setGeometryName(null)}},destroy:function(){if(this.options&&!this.options.format){this.format.destroy()}this.format=null;OpenLayers.Protocol.prototype.destroy.apply(this)},read:function(b){OpenLayers.Protocol.prototype.read.apply(this,arguments);b=OpenLayers.Util.extend({},b);OpenLayers.Util.applyDefaults(b,this.options||{});var a=new OpenLayers.Protocol.Response({requestType:"read"});var c=OpenLayers.Format.XML.prototype.write.apply(this.format,[this.format.writeNode("wfs:GetFeature",b)]);a.priv=OpenLayers.Request.POST({url:b.url,callback:this.createCallback(this.handleRead,a,b),params:b.params,headers:b.headers,data:c});return a},setFeatureType:function(a){this.featureType=a;this.format.featureType=a},setGeometryName:function(a){this.geometryName=a;this.format.geometryName=a},handleRead:function(b,c){c=OpenLayers.Util.extend({},c);OpenLayers.Util.applyDefaults(c,this.options);if(c.callback){var d=b.priv;if(d.status>=200&&d.status<300){var a=this.parseResponse(d,c.readOptions);if(a&&a.success!==false){if(c.readOptions&&c.readOptions.output=="object"){OpenLayers.Util.extend(b,a)}else{b.features=a}b.code=OpenLayers.Protocol.Response.SUCCESS}else{b.code=OpenLayers.Protocol.Response.FAILURE;b.error=a}}else{b.code=OpenLayers.Protocol.Response.FAILURE}c.callback.call(c.scope,b)}},parseResponse:function(c,b){var e=c.responseXML;if(!e||!e.documentElement){e=c.responseText}if(!e||e.length<=0){return null}var a=(this.readFormat!==null)?this.readFormat.read(e):this.format.read(e,b);if(!this.featureNS){var d=this.readFormat||this.format;this.featureNS=d.featureNS;d.autoConfig=false;if(!this.geometryName){this.setGeometryName(d.geometryName)}}return a},commit:function(c,b){b=OpenLayers.Util.extend({},b);OpenLayers.Util.applyDefaults(b,this.options);var a=new OpenLayers.Protocol.Response({requestType:"commit",reqFeatures:c});a.priv=OpenLayers.Request.POST({url:b.url,headers:b.headers,data:this.format.write(c,b),callback:this.createCallback(this.handleCommit,a,b)});return a},handleCommit:function(a,b){if(b.callback){var c=a.priv;var d=c.responseXML;if(!d||!d.documentElement){d=c.responseText}var e=this.format.read(d)||{};a.insertIds=e.insertIds||[];if(e.success){a.code=OpenLayers.Protocol.Response.SUCCESS}else{a.code=OpenLayers.Protocol.Response.FAILURE;a.error=e}b.callback.call(b.scope,a)}},filterDelete:function(e,c){c=OpenLayers.Util.extend({},c);OpenLayers.Util.applyDefaults(c,this.options);var b=new OpenLayers.Protocol.Response({requestType:"commit"});var a=this.format.createElementNSPlus("wfs:Transaction",{attributes:{service:"WFS",version:this.version}});var d=this.format.createElementNSPlus("wfs:Delete",{attributes:{typeName:(c.featureNS?this.featurePrefix+":":"")+c.featureType}});if(c.featureNS){d.setAttribute("xmlns:"+this.featurePrefix,c.featureNS)}var g=this.format.writeNode("ogc:Filter",e);d.appendChild(g);a.appendChild(d);var f=OpenLayers.Format.XML.prototype.write.apply(this.format,[a]);return OpenLayers.Request.POST({url:this.url,callback:c.callback||function(){},data:f})},abort:function(a){if(a){a.priv.abort()}},CLASS_NAME:"OpenLayers.Protocol.WFS.v1"});OpenLayers.Format.WFST=function(b){b=OpenLayers.Util.applyDefaults(b,OpenLayers.Format.WFST.DEFAULTS);var a=OpenLayers.Format.WFST["v"+b.version.replace(/\./g,"_")];if(!a){throw"Unsupported WFST version: "+b.version}return new a(b)};OpenLayers.Format.WFST.DEFAULTS={version:"1.0.0"};OpenLayers.Format.WFST.v1=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance",wfs:"http://www.opengis.net/wfs",gml:"http://www.opengis.net/gml",ogc:"http://www.opengis.net/ogc",ows:"http://www.opengis.net/ows",xmlns:"http://www.w3.org/2000/xmlns/"},defaultPrefix:"wfs",version:null,schemaLocations:null,srsName:null,extractAttributes:true,xy:true,stateName:null,initialize:function(a){this.stateName={};this.stateName[OpenLayers.State.INSERT]="wfs:Insert";this.stateName[OpenLayers.State.UPDATE]="wfs:Update";this.stateName[OpenLayers.State.DELETE]="wfs:Delete";OpenLayers.Format.XML.prototype.initialize.apply(this,[a])},getSrsName:function(c,b){var a=b&&b.srsName;if(!a){if(c&&c.layer){a=c.layer.projection.getCode()}else{a=this.srsName}}return a},read:function(b,a){a=a||{};OpenLayers.Util.applyDefaults(a,{output:"features"});if(typeof b=="string"){b=OpenLayers.Format.XML.prototype.read.apply(this,[b])}if(b&&b.nodeType==9){b=b.documentElement}var c={};if(b){this.readNode(b,c,true)}if(c.features&&a.output==="features"){c=c.features}return c},readers:{wfs:{FeatureCollection:function(a,b){b.features=[];this.readChildNodes(a,b)}}},write:function(b,a){var c=this.writeNode("wfs:Transaction",{features:b,options:a});var d=this.schemaLocationAttr();if(d){this.setAttributeNS(c,this.namespaces.xsi,"xsi:schemaLocation",d)}return OpenLayers.Format.XML.prototype.write.apply(this,[c])},writers:{wfs:{GetFeature:function(b){var d=this.createElementNSPlus("wfs:GetFeature",{attributes:{service:"WFS",version:this.version,handle:b&&b.handle,outputFormat:b&&b.outputFormat,maxFeatures:b&&b.maxFeatures,"xsi:schemaLocation":this.schemaLocationAttr(b)}});if(typeof this.featureType=="string"){this.writeNode("Query",b,d)}else{for(var c=0,a=this.featureType.length;c<a;c++){b.featureType=this.featureType[c];this.writeNode("Query",b,d)}}return d},Transaction:function(h){h=h||{};var c=h.options||{};var g=this.createElementNSPlus("wfs:Transaction",{attributes:{service:"WFS",version:this.version,handle:c.handle}});var e,a;var f=h.features;if(f){if(c.multi===true){OpenLayers.Util.extend(this.geometryTypes,{"OpenLayers.Geometry.Point":"MultiPoint","OpenLayers.Geometry.LineString":(this.multiCurve===true)?"MultiCurve":"MultiLineString","OpenLayers.Geometry.Polygon":(this.multiSurface===true)?"MultiSurface":"MultiPolygon"})}var b,d;for(e=0,a=f.length;e<a;++e){d=f[e];b=this.stateName[d.state];if(b){this.writeNode(b,{feature:d,options:c},g)}}if(c.multi===true){this.setGeometryTypes()}}if(c.nativeElements){for(e=0,a=c.nativeElements.length;e<a;++e){this.writeNode("wfs:Native",c.nativeElements[e],g)}}return g},Native:function(b){var a=this.createElementNSPlus("wfs:Native",{attributes:{vendorId:b.vendorId,safeToIgnore:b.safeToIgnore},value:b.value});return a},Insert:function(d){var b=d.feature;var a=d.options;var c=this.createElementNSPlus("wfs:Insert",{attributes:{handle:a&&a.handle}});this.srsName=this.getSrsName(b);this.writeNode("feature:_typeName",b,c);return c},Update:function(f){var d=f.feature;var b=f.options;var e=this.createElementNSPlus("wfs:Update",{attributes:{handle:b&&b.handle,typeName:(this.featureNS?this.featurePrefix+":":"")+this.featureType}});if(this.featureNS){this.setAttributeNS(e,this.namespaces.xmlns,"xmlns:"+this.featurePrefix,this.featureNS)}var a=d.modified;if(this.geometryName!==null&&(!a||a.geometry!==undefined)){this.srsName=this.getSrsName(d);this.writeNode("Property",{name:this.geometryName,value:d.geometry},e)}for(var c in d.attributes){if(d.attributes[c]!==undefined&&(!a||!a.attributes||(a.attributes&&a.attributes[c]!==undefined))){this.writeNode("Property",{name:c,value:d.attributes[c]},e)}}this.writeNode("ogc:Filter",new OpenLayers.Filter.FeatureId({fids:[d.fid]}),e);return e},Property:function(b){var a=this.createElementNSPlus("wfs:Property");this.writeNode("Name",b.name,a);if(b.value!==null){this.writeNode("Value",b.value,a)}return a},Name:function(a){return this.createElementNSPlus("wfs:Name",{value:a})},Value:function(c){var b;if(c instanceof OpenLayers.Geometry){b=this.createElementNSPlus("wfs:Value");var a=this.writeNode("feature:_geometry",c).firstChild;b.appendChild(a)}else{b=this.createElementNSPlus("wfs:Value",{value:c})}return b},Delete:function(d){var b=d.feature;var a=d.options;var c=this.createElementNSPlus("wfs:Delete",{attributes:{handle:a&&a.handle,typeName:(this.featureNS?this.featurePrefix+":":"")+this.featureType}});if(this.featureNS){this.setAttributeNS(c,this.namespaces.xmlns,"xmlns:"+this.featurePrefix,this.featureNS)}this.writeNode("ogc:Filter",new OpenLayers.Filter.FeatureId({fids:[b.fid]}),c);return c}}},schemaLocationAttr:function(a){a=OpenLayers.Util.extend({featurePrefix:this.featurePrefix,schema:this.schema},a);var f=OpenLayers.Util.extend({},this.schemaLocations);if(a.schema){f[a.featurePrefix]=a.schema}var e=[];var c;for(var b in f){c=this.namespaces[b];if(c){e.push(c+" "+f[b])}}var d=e.join(" ")||undefined;return d},setFilterProperty:function(c){if(c.filters){for(var b=0,a=c.filters.length;b<a;++b){OpenLayers.Format.WFST.v1.prototype.setFilterProperty.call(this,c.filters[b])}}else{if(c instanceof OpenLayers.Filter.Spatial&&!c.property){c.property=this.geometryName}}},CLASS_NAME:"OpenLayers.Format.WFST.v1"});OpenLayers.Format.Filter.v1_1_0=OpenLayers.Class(OpenLayers.Format.GML.v3,OpenLayers.Format.Filter.v1,{VERSION:"1.1.0",schemaLocation:"http://www.opengis.net/ogc/filter/1.1.0/filter.xsd",initialize:function(a){OpenLayers.Format.GML.v3.prototype.initialize.apply(this,[a])},readers:{ogc:OpenLayers.Util.applyDefaults({PropertyIsEqualTo:function(b,d){var c=b.getAttribute("matchCase");var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,matchCase:!(c==="false"||c==="0")});this.readChildNodes(b,a);d.filters.push(a)},PropertyIsNotEqualTo:function(b,d){var c=b.getAttribute("matchCase");var a=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.NOT_EQUAL_TO,matchCase:!(c==="false"||c==="0")});this.readChildNodes(b,a);d.filters.push(a)},PropertyIsLike:function(d,e){var c=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE});this.readChildNodes(d,c);var f=d.getAttribute("wildCard");var b=d.getAttribute("singleChar");var a=d.getAttribute("escapeChar");c.value2regex(f,b,a);e.filters.push(c)}},OpenLayers.Format.Filter.v1.prototype.readers.ogc),gml:OpenLayers.Format.GML.v3.prototype.readers.gml,feature:OpenLayers.Format.GML.v3.prototype.readers.feature},writers:{ogc:OpenLayers.Util.applyDefaults({PropertyIsEqualTo:function(a){var b=this.createElementNSPlus("ogc:PropertyIsEqualTo",{attributes:{matchCase:a.matchCase}});this.writeNode("PropertyName",a,b);this.writeOgcExpression(a.value,b);return b},PropertyIsNotEqualTo:function(a){var b=this.createElementNSPlus("ogc:PropertyIsNotEqualTo",{attributes:{matchCase:a.matchCase}});this.writeNode("PropertyName",a,b);this.writeOgcExpression(a.value,b);return b},PropertyIsLike:function(a){var b=this.createElementNSPlus("ogc:PropertyIsLike",{attributes:{matchCase:a.matchCase,wildCard:"*",singleChar:".",escapeChar:"!"}});this.writeNode("PropertyName",a,b);this.writeNode("Literal",a.regex2value(),b);return b},BBOX:function(a){var c=this.createElementNSPlus("ogc:BBOX");a.property&&this.writeNode("PropertyName",a,c);var b=this.writeNode("gml:Envelope",a.value);if(a.projection){b.setAttribute("srsName",a.projection)}c.appendChild(b);return c},SortBy:function(d){var c=this.createElementNSPlus("ogc:SortBy");for(var b=0,a=d.length;b<a;b++){this.writeNode("ogc:SortProperty",d[b],c)}return c},SortProperty:function(b){var a=this.createElementNSPlus("ogc:SortProperty");this.writeNode("ogc:PropertyName",b,a);this.writeNode("ogc:SortOrder",(b.order=="DESC")?"DESC":"ASC",a);return a},SortOrder:function(b){var a=this.createElementNSPlus("ogc:SortOrder",{value:b});return a}},OpenLayers.Format.Filter.v1.prototype.writers.ogc),gml:OpenLayers.Format.GML.v3.prototype.writers.gml,feature:OpenLayers.Format.GML.v3.prototype.writers.feature},writeSpatial:function(b,a){var c=this.createElementNSPlus("ogc:"+a);this.writeNode("PropertyName",b,c);if(b.value instanceof OpenLayers.Filter.Function){this.writeNode("Function",b.value,c)}else{var d;if(b.value instanceof OpenLayers.Geometry){d=this.writeNode("feature:_geometry",b.value).firstChild}else{d=this.writeNode("gml:Envelope",b.value)}if(b.projection){d.setAttribute("srsName",b.projection)}c.appendChild(d)}return c},CLASS_NAME:"OpenLayers.Format.Filter.v1_1_0"});OpenLayers.Format.OWSCommon=OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC,{defaultVersion:"1.0.0",getVersion:function(b,c){var a=this.version;if(!a){var d=b.getAttribute("xmlns:ows");if(d&&d.substring(d.lastIndexOf("/")+1)==="1.1"){a="1.1.0"}if(!a){a=this.defaultVersion}}return a},CLASS_NAME:"OpenLayers.Format.OWSCommon"});OpenLayers.Format.OWSCommon.v1=OpenLayers.Class(OpenLayers.Format.XML,{regExes:{trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g)},read:function(b,a){a=OpenLayers.Util.applyDefaults(a,this.options);var c={};this.readChildNodes(b,c);return c},readers:{ows:{Exception:function(b,c){var a={code:b.getAttribute("exceptionCode"),locator:b.getAttribute("locator"),texts:[]};c.exceptions.push(a);this.readChildNodes(b,a)},ExceptionText:function(b,a){var c=this.getChildValue(b);a.texts.push(c)},ServiceIdentification:function(a,b){b.serviceIdentification={};this.readChildNodes(a,b.serviceIdentification)},Title:function(a,b){b.title=this.getChildValue(a)},Abstract:function(a,b){b["abstract"]=this.getChildValue(a)},Keywords:function(a,b){b.keywords={};this.readChildNodes(a,b.keywords)},Keyword:function(b,a){a[this.getChildValue(b)]=true},ServiceType:function(a,b){b.serviceType={codeSpace:a.getAttribute("codeSpace"),value:this.getChildValue(a)}},ServiceTypeVersion:function(a,b){b.serviceTypeVersion=this.getChildValue(a)},Fees:function(a,b){b.fees=this.getChildValue(a)},AccessConstraints:function(a,b){b.accessConstraints=this.getChildValue(a)},ServiceProvider:function(a,b){b.serviceProvider={};this.readChildNodes(a,b.serviceProvider)},ProviderName:function(a,b){b.providerName=this.getChildValue(a)},ProviderSite:function(a,b){b.providerSite=this.getAttributeNS(a,this.namespaces.xlink,"href")},ServiceContact:function(a,b){b.serviceContact={};this.readChildNodes(a,b.serviceContact)},IndividualName:function(b,a){a.individualName=this.getChildValue(b)},PositionName:function(b,a){a.positionName=this.getChildValue(b)},ContactInfo:function(b,a){a.contactInfo={};this.readChildNodes(b,a.contactInfo)},Phone:function(b,a){a.phone={};this.readChildNodes(b,a.phone)},Voice:function(b,a){a.voice=this.getChildValue(b)},Address:function(b,a){a.address={};this.readChildNodes(b,a.address)},DeliveryPoint:function(b,a){a.deliveryPoint=this.getChildValue(b)},City:function(b,a){a.city=this.getChildValue(b)},AdministrativeArea:function(b,a){a.administrativeArea=this.getChildValue(b)},PostalCode:function(b,a){a.postalCode=this.getChildValue(b)},Country:function(b,a){a.country=this.getChildValue(b)},ElectronicMailAddress:function(b,a){a.electronicMailAddress=this.getChildValue(b)},Role:function(b,a){a.role=this.getChildValue(b)},OperationsMetadata:function(a,b){b.operationsMetadata={};this.readChildNodes(a,b.operationsMetadata)},Operation:function(c,b){var a=c.getAttribute("name");b[a]={};this.readChildNodes(c,b[a])},DCP:function(b,a){a.dcp={};this.readChildNodes(b,a.dcp)},HTTP:function(b,a){a.http={};this.readChildNodes(b,a.http)},Get:function(b,a){if(!a.get){a.get=[]}var c={url:this.getAttributeNS(b,this.namespaces.xlink,"href")};this.readChildNodes(b,c);a.get.push(c)},Post:function(b,a){if(!a.post){a.post=[]}var c={url:this.getAttributeNS(b,this.namespaces.xlink,"href")};this.readChildNodes(b,c);a.post.push(c)},Parameter:function(c,a){if(!a.parameters){a.parameters={}}var b=c.getAttribute("name");a.parameters[b]={};this.readChildNodes(c,a.parameters[b])},Constraint:function(b,c){if(!c.constraints){c.constraints={}}var a=b.getAttribute("name");c.constraints[a]={};this.readChildNodes(b,c.constraints[a])},Value:function(a,b){b[this.getChildValue(a)]=true},OutputFormat:function(a,b){b.formats.push({value:this.getChildValue(a)});this.readChildNodes(a,b)},WGS84BoundingBox:function(b,c){var a={};a.crs=b.getAttribute("crs");if(c.BoundingBox){c.BoundingBox.push(a)}else{c.projection=a.crs;a=c}this.readChildNodes(b,a)},BoundingBox:function(a,b){this.readers.ows["WGS84BoundingBox"].apply(this,[a,b])},LowerCorner:function(b,c){var d=this.getChildValue(b).replace(this.regExes.trimSpace,"");d=d.replace(this.regExes.trimComma,",");var a=d.split(this.regExes.splitSpace);c.left=a[0];c.bottom=a[1]},UpperCorner:function(b,c){var d=this.getChildValue(b).replace(this.regExes.trimSpace,"");d=d.replace(this.regExes.trimComma,",");var a=d.split(this.regExes.splitSpace);c.right=a[0];c.top=a[1];c.bounds=new OpenLayers.Bounds(c.left,c.bottom,c.right,c.top);delete c.left;delete c.bottom;delete c.right;delete c.top},Language:function(a,b){b.language=this.getChildValue(a)}}},writers:{ows:{BoundingBox:function(a,c){var b=this.createElementNSPlus(c||"ows:BoundingBox",{attributes:{crs:a.projection}});this.writeNode("ows:LowerCorner",a,b);this.writeNode("ows:UpperCorner",a,b);return b},LowerCorner:function(a){var b=this.createElementNSPlus("ows:LowerCorner",{value:a.bounds.left+" "+a.bounds.bottom});return b},UpperCorner:function(a){var b=this.createElementNSPlus("ows:UpperCorner",{value:a.bounds.right+" "+a.bounds.top});return b},Identifier:function(a){var b=this.createElementNSPlus("ows:Identifier",{value:a});return b},Title:function(b){var a=this.createElementNSPlus("ows:Title",{value:b});return a},Abstract:function(a){var b=this.createElementNSPlus("ows:Abstract",{value:a});return b},OutputFormat:function(b){var a=this.createElementNSPlus("ows:OutputFormat",{value:b});return a}}},CLASS_NAME:"OpenLayers.Format.OWSCommon.v1"});OpenLayers.Format.OWSCommon.v1_0_0=OpenLayers.Class(OpenLayers.Format.OWSCommon.v1,{namespaces:{ows:"http://www.opengis.net/ows",xlink:"http://www.w3.org/1999/xlink"},readers:{ows:OpenLayers.Util.applyDefaults({ExceptionReport:function(a,b){b.success=false;b.exceptionReport={version:a.getAttribute("version"),language:a.getAttribute("language"),exceptions:[]};this.readChildNodes(a,b.exceptionReport)}},OpenLayers.Format.OWSCommon.v1.prototype.readers.ows)},writers:{ows:OpenLayers.Format.OWSCommon.v1.prototype.writers.ows},CLASS_NAME:"OpenLayers.Format.OWSCommon.v1_0_0"});OpenLayers.Format.WFST.v1_1_0=OpenLayers.Class(OpenLayers.Format.Filter.v1_1_0,OpenLayers.Format.WFST.v1,{version:"1.1.0",schemaLocations:{wfs:"http://schemas.opengis.net/wfs/1.1.0/wfs.xsd"},initialize:function(a){OpenLayers.Format.Filter.v1_1_0.prototype.initialize.apply(this,[a]);OpenLayers.Format.WFST.v1.prototype.initialize.apply(this,[a])},readNode:function(a,b,c){return OpenLayers.Format.GML.v3.prototype.readNode.apply(this,arguments)},readers:{wfs:OpenLayers.Util.applyDefaults({FeatureCollection:function(a,b){b.numberOfFeatures=parseInt(a.getAttribute("numberOfFeatures"));OpenLayers.Format.WFST.v1.prototype.readers.wfs["FeatureCollection"].apply(this,arguments)},TransactionResponse:function(a,b){b.insertIds=[];b.success=false;this.readChildNodes(a,b)},TransactionSummary:function(a,b){b.success=true},InsertResults:function(a,b){this.readChildNodes(a,b)},Feature:function(b,a){var c={fids:[]};this.readChildNodes(b,c);a.insertIds.push(c.fids[0])}},OpenLayers.Format.WFST.v1.prototype.readers.wfs),gml:OpenLayers.Format.GML.v3.prototype.readers.gml,feature:OpenLayers.Format.GML.v3.prototype.readers.feature,ogc:OpenLayers.Format.Filter.v1_1_0.prototype.readers.ogc,ows:OpenLayers.Format.OWSCommon.v1_0_0.prototype.readers.ows},writers:{wfs:OpenLayers.Util.applyDefaults({GetFeature:function(a){var b=OpenLayers.Format.WFST.v1.prototype.writers.wfs["GetFeature"].apply(this,arguments);a&&this.setAttributes(b,{resultType:a.resultType,startIndex:a.startIndex,count:a.count});return b},Query:function(b){b=OpenLayers.Util.extend({featureNS:this.featureNS,featurePrefix:this.featurePrefix,featureType:this.featureType,srsName:this.srsName},b);var e=b.featurePrefix;var d=this.createElementNSPlus("wfs:Query",{attributes:{typeName:(e?e+":":"")+b.featureType,srsName:b.srsName}});if(b.featureNS){this.setAttributeNS(d,this.namespaces.xmlns,"xmlns:"+e,b.featureNS)}if(b.propertyNames){for(var c=0,a=b.propertyNames.length;c<a;c++){this.writeNode("wfs:PropertyName",{property:b.propertyNames[c]},d)}}if(b.filter){OpenLayers.Format.WFST.v1_1_0.prototype.setFilterProperty.call(this,b.filter);this.writeNode("ogc:Filter",b.filter,d)}return d},PropertyName:function(a){return this.createElementNSPlus("wfs:PropertyName",{value:a.property})}},OpenLayers.Format.WFST.v1.prototype.writers.wfs),gml:OpenLayers.Format.GML.v3.prototype.writers.gml,feature:OpenLayers.Format.GML.v3.prototype.writers.feature,ogc:OpenLayers.Format.Filter.v1_1_0.prototype.writers.ogc},CLASS_NAME:"OpenLayers.Format.WFST.v1_1_0"});OpenLayers.Protocol.WFS.v1_1_0=OpenLayers.Class(OpenLayers.Protocol.WFS.v1,{version:"1.1.0",initialize:function(a){OpenLayers.Protocol.WFS.v1.prototype.initialize.apply(this,arguments);if(this.outputFormat&&!this.readFormat){if(this.outputFormat.toLowerCase()=="gml2"){this.readFormat=new OpenLayers.Format.GML.v2({featureType:this.featureType,featureNS:this.featureNS,geometryName:this.geometryName})}else{if(this.outputFormat.toLowerCase()=="json"){this.readFormat=new OpenLayers.Format.GeoJSON()}}}},CLASS_NAME:"OpenLayers.Protocol.WFS.v1_1_0"});Ext.namespace("GeoExt.data");GeoExt.data.LayerRecord=Ext.data.Record.create([{name:"layer"},{name:"title",type:"string",mapping:"name"}]);GeoExt.data.LayerRecord.prototype.getLayer=function(){return this.get("layer")};GeoExt.data.LayerRecord.prototype.setLayer=function(a){if(a!==this.data.layer){this.dirty=true;if(!this.modified){this.modified={}}if(this.modified.layer===undefined){this.modified.layer=this.data.layer}this.data.layer=a;if(!this.editing){this.afterEdit()}}};GeoExt.data.LayerRecord.prototype.clone=function(b){var a=this.getLayer()&&this.getLayer().clone();return new this.constructor(Ext.applyIf({layer:a},this.data),b||a.id)};GeoExt.data.LayerRecord.create=function(e){var c=Ext.extend(GeoExt.data.LayerRecord,{});var d=c.prototype;d.fields=new Ext.util.MixedCollection(false,function(f){return f.name});GeoExt.data.LayerRecord.prototype.fields.each(function(g){d.fields.add(g)});if(e){for(var b=0,a=e.length;b<a;b++){d.fields.add(new Ext.data.Field(e[b]))}}c.getField=function(f){return d.fields.get(f)};return c};Ext.namespace("GeoExt.data");GeoExt.data.AttributeStoreMixin=function(){return{constructor:function(a){a=a||{};arguments.callee.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(!a.data?new Ext.data.HttpProxy({url:a.url,disableCaching:false,method:"GET"}):undefined),reader:new GeoExt.data.AttributeReader(a,a.fields||["name","type","restriction",{name:"nillable",type:"boolean"},"annotation"])}));if(this.feature){this.bind()}},bind:function(){this.on({update:this.onUpdate,load:this.onLoad,add:this.onAdd,scope:this});var a=[];this.each(function(b){a.push(b)});this.updateFeature(a)},onUpdate:function(c,a,b){this.updateFeature([a])},onLoad:function(b,a,c){if(!c||c.add!==true){this.updateFeature(a)}},onAdd:function(b,a,c){this.updateFeature(a)},updateFeature:function(d){var k=this.feature,g=k.layer;var e,h,f,c,j,a,b;for(e=0,h=d.length;e<h;e++){f=d[e];c=f.get("name");j=f.get("value");a=k.attributes[c];if(a!==j){b=true}}if(b&&g&&g.events&&g.events.triggerEvent("beforefeaturemodified",{feature:k})!==false){for(e=0,h=d.length;e<h;e++){f=d[e];c=f.get("name");j=f.get("value");k.attributes[c]=j}g.events.triggerEvent("featuremodified",{feature:k});g.drawFeature(k)}}}};GeoExt.data.AttributeStore=Ext.extend(Ext.data.Store,GeoExt.data.AttributeStoreMixin());Ext.namespace("GeoExt.data");GeoExt.data.AttributeReader=function(a,b){a=a||{};if(!a.format){a.format=new OpenLayers.Format.WFSDescribeFeatureType()}GeoExt.data.AttributeReader.superclass.constructor.call(this,a,b||a.fields);if(a.feature){this.recordType.prototype.fields.add(new Ext.data.Field("value"))}};Ext.extend(GeoExt.data.AttributeReader,Ext.data.DataReader,{read:function(a){var b=a.responseXML;if(!b||!b.documentElement){b=a.responseText}return this.readRecords(b)},readRecords:function(t){var f;if(t instanceof Array){f=t}else{var g=this.meta.format.read(t);if(!!g.error){throw new Ext.data.DataReader.Error("invalid-response",g.error)}f=g.featureTypes[0].properties}var e=this.meta.feature;var c=this.recordType;var h=c.prototype.fields;var s=h.length;var l,b,u,d,r,k,a,o=[];for(var n=0,q=f.length;n<q;++n){r=false;l=f[n];b={};for(var m=0;m<s;++m){a=h.items[m];u=a.name;k=a.convert(l[u]);if(this.ignoreAttribute(u,k)){r=true;break}b[u]=k}if(e){k=e.attributes[b.name];if(k!==undefined){if(this.ignoreAttribute("value",k)){r=true}else{b.value=k}}}if(!r){o[o.length]=new c(b)}}return{success:true,records:o,totalRecords:o.length}},ignoreAttribute:function(a,c){var d=false;if(this.meta.ignore&&this.meta.ignore[a]){var b=this.meta.ignore[a];if(typeof b=="string"){d=(b===c)}else{if(b instanceof Array){d=(b.indexOf(c)>-1)}else{if(b instanceof RegExp){d=(b.test(c))}}}}return d}});Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.ProtocolProxy=function(a){Ext.apply(this,a);GeoExt.data.ProtocolProxy.superclass.constructor.apply(this,arguments)};Ext.extend(GeoExt.data.ProtocolProxy,Ext.data.DataProxy,{protocol:null,abortPrevious:true,setParamsAsOptions:false,response:null,load:function(g,c,h,e,b){if(this.fireEvent("beforeload",this,g)!==false){var f={params:g||{},request:{callback:h,scope:e,arg:b},reader:c};var a=OpenLayers.Function.bind(this.loadResponse,this,f);if(this.abortPrevious){this.abortRequest()}var d={params:g,callback:a,scope:this};Ext.applyIf(d,b);if(this.setParamsAsOptions===true){Ext.applyIf(d,d.params);delete d.params}this.response=this.protocol.read(d)}else{h.call(e||this,null,b,false)}},abortRequest:function(){if(this.response){this.protocol.abort(this.response);this.response=null}},loadResponse:function(d,b){if(b.success()){var a;try{a=d.reader.read(b)}catch(c){this.fireEvent("loadexception",this,d,b,c);this.fireEvent("exception",this,"response",null,d,b,c);d.request.callback.call(d.request.scope,null,d.request.arg,false);return}this.fireEvent("load",this,d,d.request.arg);d.request.callback.call(d.request.scope,a,d.request.arg,true)}else{this.fireEvent("loadexception",this,d,b);d.request.callback.call(d.request.scope,null,d.request.arg,false)}}});Ext.namespace("GeoExt.data");GeoExt.data.FeatureStoreMixin=function(){return{layer:null,reader:null,featureFilter:null,constructor:function(b){b=b||{};b.reader=b.reader||new GeoExt.data.FeatureReader({},b.fields);var c=b.layer;delete b.layer;if(b.features){b.data=b.features}delete b.features;var a={initDir:b.initDir};delete b.initDir;arguments.callee.superclass.constructor.call(this,b);if(c){this.bind(c,a)}},bind:function(d,b){if(this.layer){return}this.layer=d;b=b||{};var f=b.initDir;if(b.initDir==undefined){f=GeoExt.data.FeatureStore.LAYER_TO_STORE|GeoExt.data.FeatureStore.STORE_TO_LAYER}var e=d.features.slice(0);if(f&GeoExt.data.FeatureStore.STORE_TO_LAYER){var a=this.getRange();for(var c=a.length-1;c>=0;c--){this.layer.addFeatures([a[c].getFeature()])}}if(f&GeoExt.data.FeatureStore.LAYER_TO_STORE){this.loadData(e,true)}d.events.on({featuresadded:this.onFeaturesAdded,featuresremoved:this.onFeaturesRemoved,featuremodified:this.onFeatureModified,scope:this});this.on({load:this.onLoad,clear:this.onClear,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,scope:this})},unbind:function(){if(this.layer){this.layer.events.un({featuresadded:this.onFeaturesAdded,featuresremoved:this.onFeaturesRemoved,featuremodified:this.onFeatureModified,scope:this});this.un("load",this.onLoad,this);this.un("clear",this.onClear,this);this.un("add",this.onAdd,this);this.un("remove",this.onRemove,this);this.un("update",this.onUpdate,this);this.layer=null}},getRecordFromFeature:function(a){return this.getByFeature(a)||null},getByFeature:function(c){var a;if(c.state!==OpenLayers.State.INSERT){a=this.getById(c.id)}else{var b=this.findBy(function(d){return d.getFeature()===c});if(b>-1){a=this.getAt(b)}}return a},onFeaturesAdded:function(b){if(!this._adding){var f=b.features,e=f;if(this.featureFilter){e=[];var d,a,c;for(var d=0,a=f.length;d<a;d++){c=f[d];if(this.featureFilter.evaluate(c)!==false){e.push(c)}}}this._adding=true;this.loadData(e,true);delete this._adding}},onFeaturesRemoved:function(b){if(!this._removing){var e=b.features,d,a,c;for(c=e.length-1;c>=0;c--){d=e[c];a=this.getByFeature(d);if(a!==undefined){this._removing=true;this.remove(a);delete this._removing}}}},onFeatureModified:function(h){if(!this._updating){var j=h.feature;var c=this.getByFeature(j);if(c!==undefined){c.beginEdit();var a=j.attributes;if(a){var d=this.recordType.prototype.fields;for(var b=0,e=d.length;b<e;b++){var f=d.items[b];var g=f.mapping||f.name;if(g in a){c.set(f.name,f.convert(a[g]))}}}c.set("state",j.state);c.set("fid",j.fid);c.setFeature(j);this._updating=true;c.endEdit();delete this._updating}}},addFeaturesToLayer:function(b){var c,a,d;d=new Array((a=b.length));for(c=0;c<a;c++){d[c]=b[c].getFeature()}if(d.length>0){this._adding=true;this.layer.addFeatures(d);delete this._adding}},onLoad:function(b,a,c){if(!c||c.add!==true){this._removing=true;this.layer.removeFeatures(this.layer.features);delete this._removing;this.addFeaturesToLayer(a)}},onClear:function(a){this._removing=true;this.layer.removeFeatures(this.layer.features);delete this._removing},onAdd:function(b,a,c){if(!this._adding){this.addFeaturesToLayer(a)}},onRemove:function(b,a,c){if(!this._removing){var d=a.getFeature();if(this.layer.getFeatureById(d.id)!=null){this._removing=true;this.layer.removeFeatures([a.getFeature()]);delete this._removing}}},onUpdate:function(e,b,d){if(!this._updating){var g=new GeoExt.data.FeatureRecord().fields;var f=b.getFeature();if(f.state!==OpenLayers.State.INSERT){f.state=OpenLayers.State.UPDATE}if(b.fields){var a=this.layer.events.triggerEvent("beforefeaturemodified",{feature:f});if(a!==false){var c=f.attributes;b.fields.each(function(i){var h=i.mapping||i.name;if(!g.containsKey(h)){c[h]=b.get(i.name)}});this._updating=true;this.layer.events.triggerEvent("featuremodified",{feature:f});delete this._updating;if(this.layer.getFeatureById(f.id)!=null){this.layer.drawFeature(f)}}}}},destroy:function(){this.unbind();GeoExt.data.FeatureStore.superclass.destroy.call(this)}}};GeoExt.data.FeatureStore=Ext.extend(Ext.data.Store,new GeoExt.data.FeatureStoreMixin);GeoExt.data.FeatureStore.LAYER_TO_STORE=1;GeoExt.data.FeatureStore.STORE_TO_LAYER=2;Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.FeatureReader=function(a,b){a=a||{};if(!(b instanceof Function)){b=GeoExt.data.FeatureRecord.create(b||a.fields||{})}GeoExt.data.FeatureReader.superclass.constructor.call(this,a,b)};Ext.extend(GeoExt.data.FeatureReader,Ext.data.DataReader,{totalRecords:null,read:function(a){return this.readRecords(a.features)},readRecords:function(b){var c=[];if(b){var f=this.recordType,l=f.prototype.fields;var k,g,h,d,r,q,n,o;for(k=0,g=b.length;k<g;k++){r=b[k];q={};if(r.attributes){for(h=0,d=l.length;h<d;h++){n=l.items[h];if(/[\[\.]/.test(n.mapping)){try{o=new Function("obj","return obj."+n.mapping)(r.attributes)}catch(m){o=n.defaultValue}}else{o=r.attributes[n.mapping||n.name]||n.defaultValue}if(n.convert){o=n.convert(o,r)}q[n.name]=o}}q.feature=r;q.state=r.state;q.fid=r.fid;var a=(r.state===OpenLayers.State.INSERT)?undefined:r.id;c[c.length]=new f(q,a)}}return{records:c,totalRecords:this.totalRecords!=null?this.totalRecords:c.length}}});Ext.namespace("GeoExt.data");GeoExt.data.FeatureRecord=Ext.data.Record.create([{name:"feature"},{name:"state"},{name:"fid"}]);GeoExt.data.FeatureRecord.prototype.getFeature=function(){return this.get("feature")};GeoExt.data.FeatureRecord.prototype.setFeature=function(a){if(a!==this.data.feature){this.dirty=true;if(!this.modified){this.modified={}}if(this.modified.feature===undefined){this.modified.feature=this.data.feature}this.data.feature=a;if(!this.editing){this.afterEdit()}}};GeoExt.data.FeatureRecord.create=function(e){var c=Ext.extend(GeoExt.data.FeatureRecord,{});var d=c.prototype;d.fields=new Ext.util.MixedCollection(false,function(f){return f.name});GeoExt.data.FeatureRecord.prototype.fields.each(function(g){d.fields.add(g)});if(e){for(var b=0,a=e.length;b<a;b++){d.fields.add(new Ext.data.Field(e[b]))}}c.getField=function(f){return d.fields.get(f)};return c};Ext.namespace("GeoExt.plugins");GeoExt.plugins.PrintPageField=Ext.extend(Ext.util.Observable,{printPage:null,target:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);GeoExt.plugins.PrintPageField.superclass.constructor.apply(this,arguments)},init:function(c){this.target=c;var b={beforedestroy:this.onBeforeDestroy,scope:this};var a=c instanceof Ext.form.ComboBox?"select":c instanceof Ext.form.Checkbox?"check":"valid";b[a]=this.onFieldChange;c.on(b);this.printPage.on({change:this.onPageChange,scope:this});this.printPage.printProvider.on({layoutchange:this.onLayoutChange,scope:this});this.setValue(this.printPage)},onFieldChange:function(c,a){var d=this.printPage.printProvider;var b=c.getValue();this._updating=true;if(c.store===d.scales||c.name==="scale"){this.printPage.setScale(a)}else{if(c.name=="rotation"){!isNaN(b)&&this.printPage.setRotation(b)}else{this.printPage.customParams[c.name]=b}}delete this._updating},onPageChange:function(a){if(!this._updating){this.setValue(a)}},onLayoutChange:function(c,b){var a=this.target;a.name=="rotation"&&a.setDisabled(!b.get("rotation"))},setValue:function(a){var b=this.target;b.suspendEvents();if(b.store===a.printProvider.scales||b.name==="scale"){if(a.scale){b.setValue(a.scale.get(b.displayField))}}else{if(b.name=="rotation"){b.setValue(a.rotation)}}b.resumeEvents()},onBeforeDestroy:function(){this.target.un("beforedestroy",this.onBeforeDestroy,this);this.target.un("select",this.onFieldChange,this);this.target.un("valid",this.onFieldChange,this);this.printPage.un("change",this.onPageChange,this);this.printPage.printProvider.un("layoutchange",this.onLayoutChange,this)}});Ext.preg("gx_printpagefield",GeoExt.plugins.PrintPageField);Ext.namespace("GeoExt.plugins");GeoExt.plugins.PrintProviderField=Ext.extend(Ext.util.Observable,{target:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);GeoExt.plugins.PrintProviderField.superclass.constructor.apply(this,arguments)},init:function(b){this.target=b;var a={scope:this,render:this.onRender,beforedestroy:this.onBeforeDestroy};a[b instanceof Ext.form.ComboBox?"select":"valid"]=this.onFieldChange;b.on(a)},onRender:function(a){var b=this.printProvider||a.ownerCt.printProvider;if(a.store===b.layouts){a.setValue(b.layout.get(a.displayField));b.on({layoutchange:this.onProviderChange,scope:this})}else{if(a.store===b.dpis){a.setValue(b.dpi.get(a.displayField));b.on({dpichange:this.onProviderChange,scope:this})}else{if(a.initialConfig.value===undefined){a.setValue(b.customParams[a.name])}}}},onFieldChange:function(c,a){var d=this.printProvider||c.ownerCt.printProvider;var b=c.getValue();this._updating=true;if(a){switch(c.store){case d.layouts:d.setLayout(a);break;case d.dpis:d.setDpi(a)}}else{d.customParams[c.name]=b}delete this._updating},onProviderChange:function(b,a){if(!this._updating){this.target.setValue(a.get(this.target.displayField))}},onBeforeDestroy:function(){var a=this.target;a.un("beforedestroy",this.onBeforeDestroy,this);a.un("render",this.onRender,this);a.un("select",this.onFieldChange,this);a.un("valid",this.onFieldChange,this);var b=this.printProvider||a.ownerCt.printProvider;b.un("layoutchange",this.onProviderChange,this);b.un("dpichange",this.onProviderChange,this)}});Ext.preg("gx_printproviderfield",GeoExt.plugins.PrintProviderField);OpenLayers.Control=OpenLayers.Class({id:null,map:null,div:null,type:null,allowSelection:false,displayClass:"",title:"",autoActivate:false,active:null,handlerOptions:null,handler:null,eventListeners:null,events:null,initialize:function(a){this.displayClass=this.CLASS_NAME.replace("OpenLayers.","ol").replace(/\./g,"");OpenLayers.Util.extend(this,a);this.events=new OpenLayers.Events(this);if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)}if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")}},destroy:function(){if(this.events){if(this.eventListeners){this.events.un(this.eventListeners)}this.events.destroy();this.events=null}this.eventListeners=null;if(this.handler){this.handler.destroy();this.handler=null}if(this.handlers){for(var a in this.handlers){if(this.handlers.hasOwnProperty(a)&&typeof this.handlers[a].destroy=="function"){this.handlers[a].destroy()}}this.handlers=null}if(this.map){this.map.removeControl(this);this.map=null}this.div=null},setMap:function(a){this.map=a;if(this.handler){this.handler.setMap(a)}},draw:function(a){if(this.div==null){this.div=OpenLayers.Util.createDiv(this.id);this.div.className=this.displayClass;if(!this.allowSelection){this.div.className+=" olControlNoSelect";this.div.setAttribute("unselectable","on",0);this.div.onselectstart=OpenLayers.Function.False}if(this.title!=""){this.div.title=this.title}}if(a!=null){this.position=a.clone()}this.moveTo(this.position);return this.div},moveTo:function(a){if((a!=null)&&(this.div!=null)){this.div.style.left=a.x+"px";this.div.style.top=a.y+"px"}},activate:function(){if(this.active){return false}if(this.handler){this.handler.activate()}this.active=true;if(this.map){OpenLayers.Element.addClass(this.map.viewPortDiv,this.displayClass.replace(/ /g,"")+"Active")}this.events.triggerEvent("activate");return true},deactivate:function(){if(this.active){if(this.handler){this.handler.deactivate()}this.active=false;if(this.map){OpenLayers.Element.removeClass(this.map.viewPortDiv,this.displayClass.replace(/ /g,"")+"Active")}this.events.triggerEvent("deactivate");return true}return false},CLASS_NAME:"OpenLayers.Control"});OpenLayers.Control.TYPE_BUTTON=1;OpenLayers.Control.TYPE_TOGGLE=2;OpenLayers.Control.TYPE_TOOL=3;Ext.namespace("GeoExt");GeoExt.Action=Ext.extend(Ext.Action,{control:null,activateOnEnable:false,deactivateOnDisable:false,map:null,uScope:null,uHandler:null,uToggleHandler:null,uCheckHandler:null,constructor:function(a){this.uScope=a.scope;this.uHandler=a.handler;this.uToggleHandler=a.toggleHandler;this.uCheckHandler=a.checkHandler;a.scope=this;a.handler=this.pHandler;a.toggleHandler=this.pToggleHandler;a.checkHandler=this.pCheckHandler;var b=this.control=a.control;delete a.control;this.activateOnEnable=!!a.activateOnEnable;delete a.activateOnEnable;this.deactivateOnDisable=!!a.deactivateOnDisable;delete a.deactivateOnDisable;if(b){if(a.map){a.map.addControl(b);delete a.map}if((a.pressed||a.checked)&&b.map){b.activate()}if(b.active){a.pressed=true;a.checked=true}b.events.on({activate:this.onCtrlActivate,deactivate:this.onCtrlDeactivate,scope:this})}arguments.callee.superclass.constructor.call(this,a)},pHandler:function(a){var b=this.control;if(b&&b.type==OpenLayers.Control.TYPE_BUTTON){b.trigger()}if(this.uHandler){this.uHandler.apply(this.uScope,arguments)}},pToggleHandler:function(a,b){this.changeControlState(b);if(this.uToggleHandler){this.uToggleHandler.apply(this.uScope,arguments)}},pCheckHandler:function(a,b){this.changeControlState(b);if(this.uCheckHandler){this.uCheckHandler.apply(this.uScope,arguments)}},changeControlState:function(a){if(a){if(!this._activating){this._activating=true;this.control.activate();this.initialConfig.pressed=true;this.initialConfig.checked=true;this._activating=false}}else{if(!this._deactivating){this._deactivating=true;this.control.deactivate();this.initialConfig.pressed=false;this.initialConfig.checked=false;this._deactivating=false}}},onCtrlActivate:function(){var a=this.control;if(a.type==OpenLayers.Control.TYPE_BUTTON){this.enable()}else{this.safeCallEach("toggle",[true]);this.safeCallEach("setChecked",[true])}},onCtrlDeactivate:function(){var a=this.control;if(a.type==OpenLayers.Control.TYPE_BUTTON){this.disable()}else{this.safeCallEach("toggle",[false]);this.safeCallEach("setChecked",[false])}},safeCallEach:function(e,b){var d=this.items;for(var c=0,a=d.length;c<a;c++){if(d[c][e]){d[c].rendered?d[c][e].apply(d[c],b):d[c].on({render:d[c][e].createDelegate(d[c],b),single:true})}}},setDisabled:function(a){if(!a&&this.activateOnEnable&&this.control&&!this.control.active){this.control.activate()}if(a&&this.deactivateOnDisable&&this.control&&this.control.active){this.control.deactivate()}return GeoExt.Action.superclass.setDisabled.apply(this,arguments)}});Ext.namespace("GeoExt.tree");GeoExt.tree.LayerContainer=Ext.extend(Ext.tree.AsyncTreeNode,{text:"Layers",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text});this.loader=a.loader instanceof GeoExt.tree.LayerLoader?a.loader:new GeoExt.tree.LayerLoader(Ext.applyIf(a.loader||{},{store:a.layerStore}));GeoExt.tree.LayerContainer.superclass.constructor.call(this,a)},recordIndexToNodeIndex:function(c){var b=this.loader.store;var e=b.getCount();var a=this.childNodes.length;var f=-1;for(var d=e-1;d>=0;--d){if(this.loader.filter(b.getAt(d))===true){++f;if(c===d||f>a-1){break}}}return f},destroy:function(){delete this.layerStore;GeoExt.tree.LayerContainer.superclass.destroy.apply(this,arguments)}});Ext.tree.TreePanel.nodeTypes.gx_layercontainer=GeoExt.tree.LayerContainer;Ext.namespace("GeoExt.tree");GeoExt.tree.LayerLoader=function(a){Ext.apply(this,a);this.addEvents("beforeload","load");this.iconCls={};GeoExt.tree.LayerLoader.superclass.constructor.call(this)};Ext.extend(GeoExt.tree.LayerLoader,Ext.util.Observable,{store:null,filter:function(a){return a.getLayer().displayInLayerSwitcher==true},baseAttrs:null,uiProviders:null,load:function(a,b){if(this.fireEvent("beforeload",this,a)){this.removeStoreHandlers();while(a.firstChild){a.removeChild(a.firstChild)}if(!this.uiProviders){this.uiProviders=a.getOwnerTree().getLoader().uiProviders}if(!this.store){this.store=GeoExt.MapPanel.guess().layers}this.store.each(function(c){this.addLayerNode(a,c)},this);this.addStoreHandlers(a);if(typeof b=="function"){b()}this.fireEvent("load",this,a)}},onStoreAdd:function(b,a,c,e){if(!this._reordering){var f=e.recordIndexToNodeIndex(c+a.length-1);for(var d=0;d<a.length;++d){this.addLayerNode(e,a[d],f)}}},onStoreRemove:function(b,a,c,d){if(!this._reordering){this.removeLayerNode(d,a)}},addLayerNode:function(d,a,b){b=b||0;if(this.filter(a)===true){var e=this.createNode({nodeType:"gx_layer",layer:a.getLayer(),layerStore:this.store,iconCls:this.iconCls[a.id]});var c=d.item(b);if(c){d.insertBefore(e,c)}else{d.appendChild(e)}e.on("move",this.onChildMove,this)}},removeLayerNode:function(b,a){if(this.filter(a)===true){var c=b.findChildBy(function(d){return d.layer==a.getLayer()});if(c){c.un("move",this.onChildMove,this);c.remove();b.reload()}}},onChildMove:function(j,b,h,i,f){this._reordering=true;var e=this.store.getByLayer(b.layer);delete h.loader.iconCls[e.id];if(i instanceof GeoExt.tree.LayerContainer&&this.store===i.loader.store){i.loader._reordering=true;i.loader.iconCls[e.id]=b.attributes.iconCls;this.store.remove(e);var a;if(i.childNodes.length>1){var g=(f===0)?f+1:f-1;a=this.store.findBy(function(k){return i.childNodes[g].layer===k.getLayer()});f===0&&a++}else{if(h.parentNode===i.parentNode){var c=i;do{c=c.previousSibling}while(c&&!(c instanceof GeoExt.tree.LayerContainer&&c.lastChild));if(c){a=this.store.findBy(function(k){return c.lastChild.layer===k.getLayer()})}else{var d=i;do{d=d.nextSibling}while(d&&!(d instanceof GeoExt.tree.LayerContainer&&d.firstChild));if(d){a=this.store.findBy(function(k){return d.firstChild.layer===k.getLayer()})}a++}}}if(a!==undefined){this.store.insert(a,[e]);window.setTimeout(function(){i.reload();h.reload()})}else{this.store.insert(oldRecordIndex,[e])}delete i.loader._reordering}delete this._reordering},addStoreHandlers:function(b){if(!this._storeHandlers){this._storeHandlers={add:this.onStoreAdd.createDelegate(this,[b],true),remove:this.onStoreRemove.createDelegate(this,[b],true)};for(var a in this._storeHandlers){this.store.on(a,this._storeHandlers[a],this)}}},removeStoreHandlers:function(){if(this._storeHandlers){for(var a in this._storeHandlers){this.store.un(a,this._storeHandlers[a],this)}delete this._storeHandlers}},createNode:function(attr){if(this.baseAttrs){Ext.apply(attr,this.baseAttrs)}if(typeof attr.uiProvider=="string"){attr.uiProvider=this.uiProviders[attr.uiProvider]||eval(attr.uiProvider)}attr.nodeType=attr.nodeType||"gx_layer";return new Ext.tree.TreePanel.nodeTypes[attr.nodeType](attr)},destroy:function(){this.removeStoreHandlers();this.iconCls=null}});OpenLayers.Layer=OpenLayers.Class({id:null,name:null,div:null,opacity:1,alwaysInRange:null,RESOLUTION_PROPERTIES:["scales","resolutions","maxScale","minScale","maxResolution","minResolution","numZoomLevels","maxZoomLevel"],events:null,map:null,isBaseLayer:false,alpha:false,displayInLayerSwitcher:true,visibility:true,attribution:null,inRange:false,imageSize:null,options:null,eventListeners:null,gutter:0,projection:null,units:null,scales:null,resolutions:null,maxExtent:null,minExtent:null,maxResolution:null,minResolution:null,numZoomLevels:null,minScale:null,maxScale:null,displayOutsideMaxExtent:false,wrapDateLine:false,metadata:null,initialize:function(b,a){this.metadata={};a=OpenLayers.Util.extend({},a);if(this.alwaysInRange!=null){a.alwaysInRange=this.alwaysInRange}this.addOptions(a);this.name=b;if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");this.div=OpenLayers.Util.createDiv(this.id);this.div.style.width="100%";this.div.style.height="100%";this.div.dir="ltr";this.events=new OpenLayers.Events(this,this.div);if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)}}},destroy:function(a){if(a==null){a=true}if(this.map!=null){this.map.removeLayer(this,a)}this.projection=null;this.map=null;this.name=null;this.div=null;this.options=null;if(this.events){if(this.eventListeners){this.events.un(this.eventListeners)}this.events.destroy()}this.eventListeners=null;this.events=null},clone:function(a){if(a==null){a=new OpenLayers.Layer(this.name,this.getOptions())}OpenLayers.Util.applyDefaults(a,this);a.map=null;return a},getOptions:function(){var a={};for(var b in this.options){a[b]=this[b]}return a},setName:function(a){if(a!=this.name){this.name=a;if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"name"})}}},addOptions:function(e,a){if(this.options==null){this.options={}}if(e){if(typeof e.projection=="string"){e.projection=new OpenLayers.Projection(e.projection)}if(e.projection){OpenLayers.Util.applyDefaults(e,OpenLayers.Projection.defaults[e.projection.getCode()])}if(e.maxExtent&&!(e.maxExtent instanceof OpenLayers.Bounds)){e.maxExtent=new OpenLayers.Bounds(e.maxExtent)}if(e.minExtent&&!(e.minExtent instanceof OpenLayers.Bounds)){e.minExtent=new OpenLayers.Bounds(e.minExtent)}}OpenLayers.Util.extend(this.options,e);OpenLayers.Util.extend(this,e);if(this.projection&&this.projection.getUnits()){this.units=this.projection.getUnits()}if(this.map){var b=this.map.getResolution();var c=this.RESOLUTION_PROPERTIES.concat(["projection","units","minExtent","maxExtent"]);for(var d in e){if(e.hasOwnProperty(d)&&OpenLayers.Util.indexOf(c,d)>=0){this.initResolutions();if(a&&this.map.baseLayer===this){this.map.setCenter(this.map.getCenter(),this.map.getZoomForResolution(b),false,true);this.map.events.triggerEvent("changebaselayer",{layer:this})}break}}}},onMapResize:function(){},redraw:function(){var b=false;if(this.map){this.inRange=this.calculateInRange();var c=this.getExtent();if(c&&this.inRange&&this.visibility){var a=true;this.moveTo(c,a,false);this.events.triggerEvent("moveend",{zoomChanged:a});b=true}}return b},moveTo:function(b,a,c){var d=this.visibility;if(!this.isBaseLayer){d=d&&this.inRange}this.display(d)},moveByPx:function(b,a){},setMap:function(b){if(this.map==null){this.map=b;this.maxExtent=this.maxExtent||this.map.maxExtent;this.minExtent=this.minExtent||this.map.minExtent;this.projection=this.projection||this.map.projection;if(typeof this.projection=="string"){this.projection=new OpenLayers.Projection(this.projection)}this.units=this.projection.getUnits()||this.units||this.map.units;this.initResolutions();if(!this.isBaseLayer){this.inRange=this.calculateInRange();var a=((this.visibility)&&(this.inRange));this.div.style.display=a?"":"none"}this.setTileSize()}},afterAdd:function(){},removeMap:function(a){},getImageSize:function(a){return(this.imageSize||this.tileSize)},setTileSize:function(a){var b=(a)?a:((this.tileSize)?this.tileSize:this.map.getTileSize());this.tileSize=b;if(this.gutter){this.imageSize=new OpenLayers.Size(b.w+(2*this.gutter),b.h+(2*this.gutter))}},getVisibility:function(){return this.visibility},setVisibility:function(a){if(a!=this.visibility){this.visibility=a;this.display(a);this.redraw();if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"visibility"})}this.events.triggerEvent("visibilitychanged")}},display:function(a){if(a!=(this.div.style.display!="none")){this.div.style.display=(a&&this.calculateInRange())?"block":"none"}},calculateInRange:function(){var b=false;if(this.alwaysInRange){b=true}else{if(this.map){var a=this.map.getResolution();b=((a>=this.minResolution)&&(a<=this.maxResolution))}}return b},setIsBaseLayer:function(a){if(a!=this.isBaseLayer){this.isBaseLayer=a;if(this.map!=null){this.map.events.triggerEvent("changebaselayer",{layer:this})}}},initResolutions:function(){var e,a,h;var f={},d=true;for(e=0,a=this.RESOLUTION_PROPERTIES.length;e<a;e++){h=this.RESOLUTION_PROPERTIES[e];f[h]=this.options[h];if(d&&this.options[h]){d=false}}if(this.options.alwaysInRange==null){this.alwaysInRange=d}if(f.resolutions==null){f.resolutions=this.resolutionsFromScales(f.scales)}if(f.resolutions==null){f.resolutions=this.calculateResolutions(f)}if(f.resolutions==null){for(e=0,a=this.RESOLUTION_PROPERTIES.length;e<a;e++){h=this.RESOLUTION_PROPERTIES[e];f[h]=this.options[h]!=null?this.options[h]:this.map[h]}if(f.resolutions==null){f.resolutions=this.resolutionsFromScales(f.scales)}if(f.resolutions==null){f.resolutions=this.calculateResolutions(f)}}var c;if(this.options.maxResolution&&this.options.maxResolution!=="auto"){c=this.options.maxResolution}if(this.options.minScale){c=OpenLayers.Util.getResolutionFromScale(this.options.minScale,this.units)}var b;if(this.options.minResolution&&this.options.minResolution!=="auto"){b=this.options.minResolution}if(this.options.maxScale){b=OpenLayers.Util.getResolutionFromScale(this.options.maxScale,this.units)}if(f.resolutions){f.resolutions.sort(function(j,i){return(i-j)});if(!c){c=f.resolutions[0]}if(!b){var g=f.resolutions.length-1;b=f.resolutions[g]}}this.resolutions=f.resolutions;if(this.resolutions){a=this.resolutions.length;this.scales=new Array(a);for(e=0;e<a;e++){this.scales[e]=OpenLayers.Util.getScaleFromResolution(this.resolutions[e],this.units)}this.numZoomLevels=a}this.minResolution=b;if(b){this.maxScale=OpenLayers.Util.getScaleFromResolution(b,this.units)}this.maxResolution=c;if(c){this.minScale=OpenLayers.Util.getScaleFromResolution(c,this.units)}},resolutionsFromScales:function(d){if(d==null){return}var b,c,a;a=d.length;b=new Array(a);for(c=0;c<a;c++){b[c]=OpenLayers.Util.getResolutionFromScale(d[c],this.units)}return b},calculateResolutions:function(k){var l,j,g;var m=k.maxResolution;if(k.minScale!=null){m=OpenLayers.Util.getResolutionFromScale(k.minScale,this.units)}else{if(m=="auto"&&this.maxExtent!=null){l=this.map.getSize();j=this.maxExtent.getWidth()/l.w;g=this.maxExtent.getHeight()/l.h;m=Math.max(j,g)}}var f=k.minResolution;if(k.maxScale!=null){f=OpenLayers.Util.getResolutionFromScale(k.maxScale,this.units)}else{if(k.minResolution=="auto"&&this.minExtent!=null){l=this.map.getSize();j=this.minExtent.getWidth()/l.w;g=this.minExtent.getHeight()/l.h;f=Math.max(j,g)}}if(typeof m!=="number"&&typeof f!=="number"&&this.maxExtent!=null){var n=this.map.getTileSize();m=Math.max(this.maxExtent.getWidth()/n.w,this.maxExtent.getHeight()/n.h)}var a=k.maxZoomLevel;var b=k.numZoomLevels;if(typeof f==="number"&&typeof m==="number"&&b===undefined){var h=m/f;b=Math.floor(Math.log(h)/Math.log(2))+1}else{if(b===undefined&&a!=null){b=a+1}}if(typeof b!=="number"||b<=0||(typeof m!=="number"&&typeof f!=="number")){return}var d=new Array(b);var c=2;if(typeof f=="number"&&typeof m=="number"){c=Math.pow((m/f),(1/(b-1)))}var e;if(typeof m==="number"){for(e=0;e<b;e++){d[e]=m/Math.pow(c,e)}}else{for(e=0;e<b;e++){d[b-1-e]=f*Math.pow(c,e)}}return d},getResolution:function(){var a=this.map.getZoom();return this.getResolutionForZoom(a)},getExtent:function(){return this.map.calculateBounds()},getZoomForExtent:function(b,c){var d=this.map.getSize();var a=Math.max(b.getWidth()/d.w,b.getHeight()/d.h);return this.getZoomForResolution(a,c)},getDataExtent:function(){},getResolutionForZoom:function(c){c=Math.max(0,Math.min(c,this.resolutions.length-1));var b;if(this.map.fractionalZoom){var a=Math.floor(c);var d=Math.ceil(c);b=this.resolutions[a]-((c-a)*(this.resolutions[a]-this.resolutions[d]))}else{b=this.resolutions[Math.round(c)]}return b},getZoomForResolution:function(e,b){var n,f,g;if(this.map.fractionalZoom){var k=0;var c=this.resolutions.length-1;var d=this.resolutions[k];var a=this.resolutions[c];var j;for(f=0,g=this.resolutions.length;f<g;++f){j=this.resolutions[f];if(j>=e){d=j;k=f}if(j<=e){a=j;c=f;break}}var h=d-a;if(h>0){n=k+((d-e)/h)}else{n=k}}else{var l;var m=Number.POSITIVE_INFINITY;for(f=0,g=this.resolutions.length;f<g;f++){if(b){l=Math.abs(this.resolutions[f]-e);if(l>m){break}m=l}else{if(this.resolutions[f]<e){break}}}n=Math.max(0,f-1)}return n},getLonLatFromViewPortPx:function(b){var d=null;var f=this.map;if(b!=null&&f.minPx){var c=f.getResolution();var a=f.getMaxExtent({restricted:true});var g=(b.x-f.minPx.x)*c+a.left;var e=(f.minPx.y-b.y)*c+a.top;d=new OpenLayers.LonLat(g,e);if(this.wrapDateLine){d=d.wrapDateLine(this.maxExtent)}}return d},getViewPortPxFromLonLat:function(d,a){var b=null;if(d!=null){a=a||this.map.getResolution();var c=this.map.calculateBounds(null,a);b=new OpenLayers.Pixel((1/a*(d.lon-c.left)),(1/a*(c.top-d.lat)))}return b},setOpacity:function(b){if(b!=this.opacity){this.opacity=b;var f=this.div.childNodes;for(var d=0,a=f.length;d<a;++d){var c=f[d].firstChild||f[d];var e=f[d].lastChild;if(e&&e.nodeName.toLowerCase()==="iframe"){c=e.parentNode}OpenLayers.Util.modifyDOMElement(c,null,null,null,null,null,null,b)}if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"opacity"})}}},getZIndex:function(){return this.div.style.zIndex},setZIndex:function(a){this.div.style.zIndex=a},adjustBounds:function(b){if(this.gutter){var a=this.gutter*this.map.getResolution();b=new OpenLayers.Bounds(b.left-a,b.bottom-a,b.right+a,b.top+a)}if(this.wrapDateLine){var c={rightTolerance:this.getResolution(),leftTolerance:this.getResolution()};b=b.wrapDateLine(this.maxExtent,c)}return b},CLASS_NAME:"OpenLayers.Layer"});Ext.namespace("GeoExt.tree");GeoExt.tree.LayerNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{constructor:function(a){GeoExt.tree.LayerNodeUI.superclass.constructor.apply(this,arguments)},render:function(d){var c=this.node.attributes;if(c.checked===undefined){c.checked=this.node.layer.getVisibility()}if(c.disabled===undefined&&this.node.autoDisable){this.node.disabled=this.node.layer.inRange===false||!this.node.layer.calculateInRange()}GeoExt.tree.LayerNodeUI.superclass.render.apply(this,arguments);var b=this.checkbox;if(c.checkedGroup){var e=Ext.DomHelper.insertAfter(b,['<input type="radio" name="',c.checkedGroup,'_checkbox" class="',b.className,b.checked?'" checked="checked"':"",'"></input>'].join(""));e.defaultChecked=b.defaultChecked;Ext.get(b).remove();this.checkbox=e}this.enforceOneVisible()},onClick:function(a){if(a.getTarget(".x-tree-node-cb",1)){this.toggleCheck(this.isChecked())}else{GeoExt.tree.LayerNodeUI.superclass.onClick.apply(this,arguments)}},toggleCheck:function(a){a=(a===undefined?!this.isChecked():a);GeoExt.tree.LayerNodeUI.superclass.toggleCheck.call(this,a);this.enforceOneVisible()},enforceOneVisible:function(){var b=this.node.attributes;var e=b.checkedGroup;if(e&&e!=="gx_baselayer"){var d=this.node.layer;var a=this.node.getOwnerTree().getChecked();var c=0;Ext.each(a,function(g){var f=g.layer;if(!g.hidden&&g.attributes.checkedGroup===e){c++;if(f!=d&&b.checked){f.setVisibility(false)}}});if(c===0&&b.checked==false){d.setVisibility(true)}}},appendDDGhost:function(c){var b=this.elNode.cloneNode(true);var a=Ext.DomQuery.select("input[type='radio']",b);Ext.each(a,function(d){d.name=d.name+"_clone"});c.appendChild(b)}});GeoExt.tree.LayerNode=Ext.extend(Ext.tree.AsyncTreeNode,{layer:null,autoDisable:null,layerStore:null,constructor:function(a){a.leaf=a.leaf||!(a.children||a.loader);if(!a.iconCls&&!a.children){a.iconCls="gx-tree-layer-icon"}if(a.loader&&!(a.loader instanceof Ext.tree.TreeLoader)){a.loader=new GeoExt.tree.LayerParamLoader(a.loader)}this.defaultUI=this.defaultUI||GeoExt.tree.LayerNodeUI;Ext.apply(this,{layer:a.layer,layerStore:a.layerStore,autoDisable:a.autoDisable});if(a.text){this.fixedText=true}GeoExt.tree.LayerNode.superclass.constructor.apply(this,arguments)},render:function(a){var c=this.layer instanceof OpenLayers.Layer&&this.layer;if(!c){if(!this.layerStore||this.layerStore=="auto"){this.layerStore=GeoExt.MapPanel.guess().layers}var b=this.layerStore.findBy(function(e){return e.get("title")==this.layer},this);if(b!=-1){c=this.layerStore.getAt(b).getLayer()}}if(!this.rendered||!c){var d=this.getUI();if(c){this.layer=c;if(c.isBaseLayer){this.draggable=false;Ext.applyIf(this.attributes,{checkedGroup:"gx_baselayer"})}this.autoDisable=!(this.autoDisable===false||this.layer.isBaseLayer||this.layer.alwaysInRange);if(!this.text){this.text=c.name}d.show();this.addVisibilityEventHandlers()}else{d.hide()}if(this.layerStore instanceof GeoExt.data.LayerStore){this.addStoreEventHandlers(c)}}GeoExt.tree.LayerNode.superclass.render.apply(this,arguments)},addVisibilityEventHandlers:function(){this.layer.events.on({visibilitychanged:this.onLayerVisibilityChanged,scope:this});this.on({checkchange:this.onCheckChange,scope:this});if(this.autoDisable){if(this.layer.map){this.layer.map.events.register("moveend",this,this.onMapMoveend)}else{this.layer.events.register("added",this,function a(){this.layer.events.unregister("added",this,a);this.layer.map.events.register("moveend",this,this.onMapMoveend)})}}},onLayerVisibilityChanged:function(){if(!this._visibilityChanging){this.getUI().toggleCheck(this.layer.getVisibility())}},onCheckChange:function(c,b){if(b!=this.layer.getVisibility()){this._visibilityChanging=true;var a=this.layer;if(b&&a.isBaseLayer&&a.map){a.map.setBaseLayer(a)}else{a.setVisibility(b)}delete this._visibilityChanging}},onMapMoveend:function(a){if(this.autoDisable){if(this.layer.inRange===false){this.disable()}else{this.enable()}}},addStoreEventHandlers:function(){this.layerStore.on({add:this.onStoreAdd,remove:this.onStoreRemove,update:this.onStoreUpdate,scope:this})},onStoreAdd:function(c,b,d){var a;for(var e=0;e<b.length;++e){a=b[e].getLayer();if(this.layer==a){this.getUI().show();break}else{if(this.layer==a.name){this.render();break}}}},onStoreRemove:function(b,a,c){if(this.layer==a.getLayer()){this.getUI().hide()}},onStoreUpdate:function(c,a,b){var d=a.getLayer();if(!this.fixedText&&(this.layer==d&&this.text!==d.name)){this.setText(d.name)}},destroy:function(){var b=this.layer;if(b instanceof OpenLayers.Layer){if(b.map){b.map.events.unregister("moveend",this,this.onMapMoveend)}b.events.un({visibilitychanged:this.onLayerVisibilityChanged,scope:this})}delete this.layer;var a=this.layerStore;if(a){a.un("add",this.onStoreAdd,this);a.un("remove",this.onStoreRemove,this);a.un("update",this.onStoreUpdate,this)}delete this.layerStore;this.un("checkchange",this.onCheckChange,this);GeoExt.tree.LayerNode.superclass.destroy.apply(this,arguments)}});Ext.tree.TreePanel.nodeTypes.gx_layer=GeoExt.tree.LayerNode;Ext.namespace("GeoExt.tree");GeoExt.tree.BaseLayerContainer=Ext.extend(GeoExt.tree.LayerContainer,{text:"Base Layer",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text,loader:{}});a.loader=Ext.applyIf(a.loader,{baseAttrs:Ext.applyIf(a.loader.baseAttrs||{},{iconCls:"gx-tree-baselayer-icon",checkedGroup:"baselayer"}),filter:function(b){var c=b.getLayer();return c.displayInLayerSwitcher===true&&c.isBaseLayer===true}});GeoExt.tree.BaseLayerContainer.superclass.constructor.call(this,a)}});Ext.tree.TreePanel.nodeTypes.gx_baselayercontainer=GeoExt.tree.BaseLayerContainer;Ext.namespace("GeoExt.tree");GeoExt.tree.OverlayLayerContainer=Ext.extend(GeoExt.tree.LayerContainer,{text:"Overlays",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text});a.loader=Ext.applyIf(a.loader||{},{filter:function(b){var c=b.getLayer();return c.displayInLayerSwitcher===true&&c.isBaseLayer===false}});GeoExt.tree.OverlayLayerContainer.superclass.constructor.call(this,a)}});Ext.tree.TreePanel.nodeTypes.gx_overlaylayercontainer=GeoExt.tree.OverlayLayerContainer;Ext.namespace("GeoExt.tree");GeoExt.tree.TreeNodeUIEventMixin=function(){return{constructor:function(a){a.addEvents("rendernode","rawclicknode");this.superclass=arguments.callee.superclass;this.superclass.constructor.apply(this,arguments)},render:function(a){if(!this.rendered){this.superclass.render.apply(this,arguments);this.fireEvent("rendernode",this.node)}},onClick:function(a){if(this.fireEvent("rawclicknode",this.node,a)!==false){this.superclass.onClick.apply(this,arguments)}}}};Ext.namespace("GeoExt");GeoExt.Popup=Ext.extend(Ext.Window,{anchored:true,map:null,panIn:true,unpinnable:true,location:null,insideViewport:null,animCollapse:false,draggable:false,shadow:false,popupCls:"gx-popup",ancCls:null,anchorPosition:"auto",initComponent:function(){if(this.map instanceof GeoExt.MapPanel){this.map=this.map.map}if(!this.map&&this.location instanceof OpenLayers.Feature.Vector&&this.location.layer){this.map=this.location.layer.map}if(this.location instanceof OpenLayers.Feature.Vector){this.location=this.location.geometry}if(this.location instanceof OpenLayers.Geometry){if(typeof this.location.getCentroid=="function"){this.location=this.location.getCentroid()}this.location=this.location.getBounds().getCenterLonLat()}else{if(this.location instanceof OpenLayers.Pixel){this.location=this.map.getLonLatFromViewPortPx(this.location)}}if(!(this.location instanceof OpenLayers.LonLat)){this.anchored=false}var a=this.map.getExtent();if(a&&this.location){this.insideViewport=a.containsLonLat(this.location)}if(this.anchored){this.addAnchorEvents();this.elements+=",anc"}else{this.unpinnable=false}this.baseCls=this.popupCls+" "+this.baseCls;GeoExt.Popup.superclass.initComponent.call(this)},onRender:function(b,a){GeoExt.Popup.superclass.onRender.call(this,b,a);if(this.anchored){this.ancCls=this.popupCls+"-anc";this.createElement("anc",this.el.dom)}else{this.makeDraggable()}},initTools:function(){if(this.unpinnable){this.addTool({id:"unpin",handler:this.unanchorPopup.createDelegate(this,[])})}GeoExt.Popup.superclass.initTools.call(this)},show:function(){GeoExt.Popup.superclass.show.apply(this,arguments);if(this.anchored){this.position();if(this.panIn&&!this._mapMove){this.panIntoView()}}},maximize:function(){if(!this.maximized&&this.anc){this.unanchorPopup()}GeoExt.Popup.superclass.maximize.apply(this,arguments)},setSize:function(a,c){if(this.anc){var b=this.anc.getSize();if(typeof a=="object"){c=a.height-b.height;a=a.width}else{if(!isNaN(c)){c=c-b.height}}}GeoExt.Popup.superclass.setSize.call(this,a,c)},position:function(){var g=this;if(g._mapMove===true){g.insideViewport=g.map.getExtent().containsLonLat(g.location);if(g.insideViewport!==g.isVisible()){g.setVisible(g.insideViewport)}}if(g.isVisible()){var f=g.map.getPixelFromLonLat(g.location),d=Ext.fly(g.map.div).getBox(true),h=f.y+d.y,i=f.x+d.x,j=g.el.getSize(),a=g.anc.getSize(),b=g.anchorPosition;if(b.indexOf("right")>-1||f.x>d.width/2){g.anc.addClass("right");var c=g.el.getX(true)+j.width-g.anc.getX(true)-a.width;i-=j.width-c-a.width/2}else{g.anc.removeClass("right");var e=g.anc.getLeft(true);i-=e+a.width/2}if(b.indexOf("bottom")>-1||f.y>d.height/2){g.anc.removeClass("top");h-=j.height+a.height}else{g.anc.addClass("top");h+=a.height}g.setPagePosition(i,h);window.setTimeout(function(){if(g.el.dom){g.setPagePosition(i,h)}},0)}},makeDraggable:function(){this.draggable=true;this.header.addClass("x-window-draggable");this.dd=new Ext.Window.DD(this)},unanchorPopup:function(){this.removeAnchorEvents();this.makeDraggable();this.anc.remove();this.anc=null;this.tools.unpin.hide()},panIntoView:function(){var h=Ext.fly(this.map.div).getBox(true);var e=this.getPosition(true);e[0]-=h.x;e[1]-=h.y;var a=[h.width,h.height];var g=this.getSize();var d=[e[0],e[1]];var f=this.map.paddingForPopups;if(e[0]<f.left){d[0]=f.left}else{if(e[0]+g.width>a[0]-f.right){d[0]=a[0]-f.right-g.width}}if(e[1]<f.top){d[1]=f.top}else{if(e[1]+g.height>a[1]-f.bottom){d[1]=a[1]-f.bottom-g.height}}var c=e[0]-d[0];var b=e[1]-d[1];this.map.pan(c,b)},onMapMove:function(){if(!(this.hidden&&this.insideViewport)){this._mapMove=true;this.position();delete this._mapMove}},addAnchorEvents:function(){this.map.events.on({move:this.onMapMove,scope:this});this.on({resize:this.position,collapse:this.position,expand:this.position,scope:this})},removeAnchorEvents:function(){this.map.events.un({move:this.onMapMove,scope:this});this.un("resize",this.position,this);this.un("collapse",this.position,this);this.un("expand",this.position,this)},beforeDestroy:function(){if(this.anchored){this.removeAnchorEvents()}GeoExt.Popup.superclass.beforeDestroy.call(this)}});Ext.reg("gx_popup",GeoExt.Popup);Ext.namespace("GeoExt");GeoExt.MapPanel=Ext.extend(Ext.Panel,{map:null,layers:null,center:null,zoom:null,extent:null,prettyStateKeys:false,stateEvents:["aftermapmove","afterlayervisibilitychange","afterlayeropacitychange","afterlayerorderchange","afterlayernamechange","afterlayeradd","afterlayerremove"],initComponent:function(){if(!(this.map instanceof OpenLayers.Map)){this.map=new OpenLayers.Map(Ext.applyIf(this.map||{},{allOverlays:true,fallThrough:true}))}var a=this.layers;if(!a||a instanceof Array){this.layers=new GeoExt.data.LayerStore({layers:a,map:this.map.layers.length>0?this.map:null})}if(typeof this.center=="string"){this.center=OpenLayers.LonLat.fromString(this.center)}else{if(this.center instanceof Array){this.center=new OpenLayers.LonLat(this.center[0],this.center[1])}}if(typeof this.extent=="string"){this.extent=OpenLayers.Bounds.fromString(this.extent)}else{if(this.extent instanceof Array){this.extent=OpenLayers.Bounds.fromArray(this.extent)}}GeoExt.MapPanel.superclass.initComponent.call(this);this.addEvents("aftermapmove","afterlayervisibilitychange","afterlayeropacitychange","afterlayerorderchange","afterlayernamechange","afterlayeradd","afterlayerremove");this.map.events.on({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this});this.on("afterlayout",function(){if(typeof this.map.getViewport==="function"){this.items.each(function(b){if(typeof b.addToMapPanel==="function"){b.getEl().appendTo(this.map.getViewport())}},this)}},this)},onMoveend:function(){this.fireEvent("aftermapmove")},onChangelayer:function(a){if(a.property){if(a.property==="visibility"){this.fireEvent("afterlayervisibilitychange")}else{if(a.property==="order"){this.fireEvent("afterlayerorderchange")}else{if(a.property==="name"){this.fireEvent("afterlayernamechange")}else{if(a.property==="opacity"){this.fireEvent("afterlayeropacitychange")}}}}}},onAddlayer:function(){this.fireEvent("afterlayeradd")},onRemovelayer:function(){this.fireEvent("afterlayerremove")},applyState:function(g){this.center=new OpenLayers.LonLat(g.x,g.y);this.zoom=g.zoom;var f,c,e,b,a,d;var h=this.map.layers;for(f=0,c=h.length;f<c;f++){e=h[f];b=this.prettyStateKeys?e.name:e.id;a=g["visibility_"+b];if(a!==undefined){a=(/^true$/i).test(a);if(e.isBaseLayer){if(a){this.map.setBaseLayer(e)}}else{e.setVisibility(a)}}d=g["opacity_"+b];if(d!==undefined){e.setOpacity(d)}}},getState:function(){var f;if(!this.map){return}var a=this.map.getCenter();f=a?{x:a.lon,y:a.lat,zoom:this.map.getZoom()}:{};var e,c,d,b,g=this.map.layers;for(e=0,c=g.length;e<c;e++){d=g[e];b=this.prettyStateKeys?d.name:d.id;f["visibility_"+b]=d.getVisibility();f["opacity_"+b]=d.opacity==null?1:d.opacity}return f},updateMapSize:function(){if(this.map){this.map.updateSize()}},renderMap:function(){var a=this.map;a.render(this.body.dom);this.layers.bind(a);if(a.layers.length>0){this.setInitialExtent()}else{this.layers.on("add",this.setInitialExtent,this,{single:true})}},setInitialExtent:function(){var a=this.map;if(this.center||this.zoom!=null){a.setCenter(this.center,this.zoom)}else{if(this.extent){a.zoomToExtent(this.extent)}else{a.zoomToMaxExtent()}}},afterRender:function(){GeoExt.MapPanel.superclass.afterRender.apply(this,arguments);if(!this.ownerCt){this.renderMap()}else{this.ownerCt.on("move",this.updateMapSize,this);this.ownerCt.on({afterlayout:this.afterLayout,scope:this})}},afterLayout:function(){var b=this.getInnerWidth()-this.body.getBorderWidth("lr");var a=this.getInnerHeight()-this.body.getBorderWidth("tb");if(b>0&&a>0){this.ownerCt.un("afterlayout",this.afterLayout,this);this.renderMap()}},onResize:function(){GeoExt.MapPanel.superclass.onResize.apply(this,arguments);this.updateMapSize()},onBeforeAdd:function(a){if(typeof a.addToMapPanel==="function"){a.addToMapPanel(this)}GeoExt.MapPanel.superclass.onBeforeAdd.apply(this,arguments)},remove:function(b,a){if(typeof b.removeFromMapPanel==="function"){b.removeFromMapPanel(this)}GeoExt.MapPanel.superclass.remove.apply(this,arguments)},beforeDestroy:function(){if(this.ownerCt){this.ownerCt.un("move",this.updateMapSize,this)}if(this.map&&this.map.events){this.map.events.un({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this})}if(!this.initialConfig.map||!(this.initialConfig.map instanceof OpenLayers.Map)){if(this.map&&this.map.destroy){this.map.destroy()}}delete this.map;GeoExt.MapPanel.superclass.beforeDestroy.apply(this,arguments)}});GeoExt.MapPanel.guess=function(){return Ext.ComponentMgr.all.find(function(a){return a instanceof GeoExt.MapPanel})};Ext.reg("gx_mappanel",GeoExt.MapPanel);Ext.namespace("GeoExt.data");GeoExt.data.LayerStoreMixin=function(){return{map:null,reader:null,constructor:function(b){b=b||{};b.reader=b.reader||new GeoExt.data.LayerReader({},b.fields);delete b.fields;var c=b.map instanceof GeoExt.MapPanel?b.map.map:b.map;delete b.map;if(b.layers){b.data=b.layers}delete b.layers;var a={initDir:b.initDir};delete b.initDir;arguments.callee.superclass.constructor.call(this,b);this.addEvents("bind");if(c){this.bind(c,a)}},bind:function(d,a){if(this.map){return}this.map=d;a=a||{};var b=a.initDir;if(a.initDir==undefined){b=GeoExt.data.LayerStore.MAP_TO_STORE|GeoExt.data.LayerStore.STORE_TO_MAP}var c=d.layers.slice(0);if(b&GeoExt.data.LayerStore.STORE_TO_MAP){this.each(function(e){this.map.addLayer(e.getLayer())},this)}if(b&GeoExt.data.LayerStore.MAP_TO_STORE){this.loadData(c,true)}d.events.on({changelayer:this.onChangeLayer,addlayer:this.onAddLayer,removelayer:this.onRemoveLayer,scope:this});this.on({load:this.onLoad,clear:this.onClear,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,scope:this});this.data.on({replace:this.onReplace,scope:this});this.fireEvent("bind",this,d)},unbind:function(){if(this.map){this.map.events.un({changelayer:this.onChangeLayer,addlayer:this.onAddLayer,removelayer:this.onRemoveLayer,scope:this});this.un("load",this.onLoad,this);this.un("clear",this.onClear,this);this.un("add",this.onAdd,this);this.un("remove",this.onRemove,this);this.data.un("replace",this.onReplace,this);this.map=null}},onChangeLayer:function(b){var e=b.layer;var c=this.findBy(function(f,g){return f.getLayer()===e});if(c>-1){var a=this.getAt(c);if(b.property==="order"){if(!this._adding&&!this._removing){var d=this.map.getLayerIndex(e);if(d!==c){this._removing=true;this.remove(a);delete this._removing;this._adding=true;this.insert(d,[a]);delete this._adding}}}else{if(b.property==="name"){a.set("title",e.name)}else{this.fireEvent("update",this,a,Ext.data.Record.EDIT)}}}},onAddLayer:function(a){if(!this._adding){var b=a.layer;this._adding=true;this.loadData([b],true);delete this._adding}},onRemoveLayer:function(a){if(this.map.unloadDestroy){if(!this._removing){var b=a.layer;this._removing=true;this.remove(this.getById(b.id));delete this._removing}}else{this.unbind()}},onLoad:function(c,b,e){if(!Ext.isArray(b)){b=[b]}if(e&&!e.add){this._removing=true;for(var f=this.map.layers.length-1;f>=0;f--){this.map.removeLayer(this.map.layers[f])}delete this._removing;var a=b.length;if(a>0){var g=new Array(a);for(var d=0;d<a;d++){g[d]=b[d].getLayer()}this._adding=true;this.map.addLayers(g);delete this._adding}}},onClear:function(a){this._removing=true;for(var b=this.map.layers.length-1;b>=0;b--){this.map.removeLayer(this.map.layers[b])}delete this._removing},onAdd:function(b,a,c){if(!this._adding){this._adding=true;var e;for(var d=a.length-1;d>=0;--d){e=a[d].getLayer();this.map.addLayer(e);if(c!==this.map.layers.length-1){this.map.setLayerIndex(e,c)}}delete this._adding}},onRemove:function(b,a,c){if(!this._removing){var d=a.getLayer();if(this.map.getLayer(d.id)!=null){this._removing=true;this.removeMapLayer(a);delete this._removing}}},onUpdate:function(c,a,b){if(b===Ext.data.Record.EDIT){if(a.modified&&a.modified.title){var d=a.getLayer();var e=a.get("title");if(e!==d.name){d.setName(e)}}}},removeMapLayer:function(a){this.map.removeLayer(a.getLayer())},onReplace:function(c,a,b){this.removeMapLayer(a)},getByLayer:function(b){var a=this.findBy(function(c){return c.getLayer()===b});if(a>-1){return this.getAt(a)}},destroy:function(){this.unbind();GeoExt.data.LayerStore.superclass.destroy.call(this)}}};GeoExt.data.LayerStore=Ext.extend(Ext.data.Store,new GeoExt.data.LayerStoreMixin);GeoExt.data.LayerStore.MAP_TO_STORE=1;GeoExt.data.LayerStore.STORE_TO_MAP=2;Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.LayerReader=function(a,b){a=a||{};if(!(b instanceof Function)){b=GeoExt.data.LayerRecord.create(b||a.fields||{})}GeoExt.data.LayerReader.superclass.constructor.call(this,a,b)};Ext.extend(GeoExt.data.LayerReader,Ext.data.DataReader,{totalRecords:null,readRecords:function(f){var a=[];if(f){var c=this.recordType,k=c.prototype.fields;var g,d,e,b,h,n,l,m;for(g=0,d=f.length;g<d;g++){h=f[g];n={};for(e=0,b=k.length;e<b;e++){l=k.items[e];m=h[l.mapping||l.name]||l.defaultValue;m=l.convert(m);n[l.name]=m}n.layer=h;a[a.length]=new c(n,h.id)}}return{records:a,totalRecords:this.totalRecords!=null?this.totalRecords:a.length}}});Ext.namespace("GeoExt.data");GeoExt.data.ScaleStore=Ext.extend(Ext.data.Store,{map:null,constructor:function(a){var b=(a.map instanceof GeoExt.MapPanel?a.map.map:a.map);delete a.map;a=Ext.applyIf(a,{reader:new Ext.data.JsonReader({},["level","resolution","scale"])});GeoExt.data.ScaleStore.superclass.constructor.call(this,a);if(b){this.bind(b)}},bind:function(b,a){this.map=(b instanceof GeoExt.MapPanel?b.map:b);this.map.events.register("changebaselayer",this,this.populateFromMap);if(this.map.baseLayer){this.populateFromMap()}else{this.map.events.register("addlayer",this,this.populateOnAdd)}},unbind:function(){if(this.map){this.map.events.unregister("addlayer",this,this.populateOnAdd);this.map.events.unregister("changebaselayer",this,this.populateFromMap);delete this.map}},populateOnAdd:function(a){if(a.layer.isBaseLayer){this.populateFromMap();this.map.events.unregister("addlayer",this,this.populateOnAdd)}},populateFromMap:function(){var c=[];var a=this.map.baseLayer.resolutions;var b=this.map.baseLayer.units;for(var e=a.length-1;e>=0;e--){var d=a[e];c.push({level:e,resolution:d,scale:OpenLayers.Util.getScaleFromResolution(d,b)})}this.loadData(c)},destroy:function(){this.unbind();GeoExt.data.ScaleStore.superclass.destroy.apply(this,arguments)}});Ext.namespace("GeoExt.form");GeoExt.form.toFilter=function(b,d,e){if(b instanceof Ext.form.FormPanel){b=b.getForm()}var c=[],h=b.getValues(false);for(var a in h){var i=a.split("__");var g=h[a],f;if(i.length>1&&(f=GeoExt.form.toFilter.FILTER_MAP[i[1]])!==undefined){a=i[0]}else{f=OpenLayers.Filter.Comparison.EQUAL_TO}if(f===OpenLayers.Filter.Comparison.LIKE){switch(e){case GeoExt.form.ENDS_WITH:g=".*"+g;break;case GeoExt.form.STARTS_WITH:g+=".*";break;case GeoExt.form.CONTAINS:g=".*"+g+".*";break;default:break}}c.push(new OpenLayers.Filter.Comparison({type:f,value:g,property:a}))}return c.length==1&&d!=OpenLayers.Filter.Logical.NOT?c[0]:new OpenLayers.Filter.Logical({type:d||OpenLayers.Filter.Logical.AND,filters:c})};GeoExt.form.toFilter.FILTER_MAP={eq:OpenLayers.Filter.Comparison.EQUAL_TO,ne:OpenLayers.Filter.Comparison.NOT_EQUAL_TO,lt:OpenLayers.Filter.Comparison.LESS_THAN,le:OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,gt:OpenLayers.Filter.Comparison.GREATER_THAN,ge:OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,like:OpenLayers.Filter.Comparison.LIKE};GeoExt.form.ENDS_WITH=1;GeoExt.form.STARTS_WITH=2;GeoExt.form.CONTAINS=3;GeoExt.form.recordToField=function(i,s){s=s||{};var l=i.get("type");if(typeof l==="object"&&l.xtype){return l}l=l.split(":").pop();var n;var d=i.get("name");var g=i.get("restriction")||{};var c=i.get("nillable")||false;var o=i.get("label");var b=s.labelTpl;if(b){var k=(b instanceof Ext.Template)?b:new Ext.XTemplate(b);o=k.apply(i.data)}else{if(o==null){o=d}}var h={name:d,labelStyle:c?"":s.mandatoryFieldLabelStyle!=null?s.mandatoryFieldLabelStyle:"font-weight:bold;"};var a=GeoExt.form.recordToField.REGEXES;if(g.enumeration){n=Ext.apply({xtype:"combo",fieldLabel:o,mode:"local",forceSelection:true,triggerAction:"all",editable:false,store:g.enumeration},h)}else{if(l.match(a.text)){var e=g.maxLength!==undefined?parseFloat(g.maxLength):undefined;var f=g.minLength!==undefined?parseFloat(g.minLength):undefined;n=Ext.apply({xtype:"textfield",fieldLabel:o,maxLength:e,minLength:f},h)}else{if(l.match(a.number)){var j=g.maxInclusive!==undefined?parseFloat(g.maxInclusive):undefined;var m=g.minInclusive!==undefined?parseFloat(g.minInclusive):undefined;n=Ext.apply({xtype:"numberfield",fieldLabel:o,maxValue:j,minValue:m},h)}else{if(l.match(a["boolean"])){n=Ext.apply({xtype:"checkbox"},h);var q=s.checkboxLabelProperty||"boxLabel";n[q]=o}else{if(l.match(a.date)){n=Ext.apply({xtype:"datefield",fieldLabel:o,format:"c"},h)}}}}}return n};GeoExt.form.recordToField.REGEXES={text:new RegExp("^(text|string)$","i"),number:new RegExp("^(number|float|decimal|double|int|long|integer|short)$","i"),"boolean":new RegExp("^(boolean)$","i"),date:new RegExp("^(date|dateTime)$","i")};Ext.namespace("GeoExt");GeoExt.LegendPanel=Ext.extend(Ext.Panel,{dynamic:true,layerStore:null,preferredTypes:null,filter:function(a){return true},onRender:function(){GeoExt.LegendPanel.superclass.onRender.apply(this,arguments);if(!this.layerStore){this.layerStore=GeoExt.MapPanel.guess().layers}this.layerStore.each(function(a){this.addLegend(a)},this);if(this.dynamic){this.layerStore.on({add:this.onStoreAdd,remove:this.onStoreRemove,clear:this.onStoreClear,scope:this})}},recordIndexToPanelIndex:function(h){var j=this.layerStore;var g=j.getCount();var c=-1;var a=this.items?this.items.length:0;var d,e;for(var b=g-1;b>=0;--b){d=j.getAt(b);e=d.getLayer();var f=GeoExt.LayerLegend.getTypes(d);if(e.displayInLayerSwitcher&&f.length>0&&(j.getAt(b).get("hideInLegend")!==true)){++c;if(h===b||c>a-1){break}}}return c},getIdForLayer:function(a){return this.id+"-"+a.id},onStoreAdd:function(c,b,d){var f=this.recordIndexToPanelIndex(d+b.length-1);for(var e=0,a=b.length;e<a;e++){this.addLegend(b[e],f)}this.doLayout()},onStoreRemove:function(b,a,c){this.removeLegend(a)},removeLegend:function(a){if(this.items){var b=this.getComponent(this.getIdForLayer(a.getLayer()));if(b){this.remove(b,true);this.doLayout()}}},onStoreClear:function(a){this.removeAllLegends()},removeAllLegends:function(){this.removeAll(true);this.doLayout()},addLegend:function(a,b){if(this.filter(a)===true){var d=a.getLayer();b=b||0;var e;var c=GeoExt.LayerLegend.getTypes(a,this.preferredTypes);if(d.displayInLayerSwitcher&&!a.get("hideInLegend")&&c.length>0){this.insert(b,{xtype:c[0],id:this.getIdForLayer(d),layerRecord:a,hidden:!((!d.map&&d.visibility)||(d.getVisibility()&&d.calculateInRange()))})}}},onDestroy:function(){if(this.layerStore){this.layerStore.un("add",this.onStoreAdd,this);this.layerStore.un("remove",this.onStoreRemove,this);this.layerStore.un("clear",this.onStoreClear,this)}GeoExt.LegendPanel.superclass.onDestroy.apply(this,arguments)}});Ext.reg("gx_legendpanel",GeoExt.LegendPanel);Ext.namespace("GeoExt");GeoExt.LayerLegend=Ext.extend(Ext.Container,{layerRecord:null,showTitle:true,legendTitle:null,labelCls:null,layerStore:null,initComponent:function(){GeoExt.LayerLegend.superclass.initComponent.call(this);this.autoEl={};this.add({xtype:"label",html:this.getLayerTitle(this.layerRecord),cls:"x-form-item x-form-item-label"+(this.labelCls?" "+this.labelCls:"")});if(this.layerRecord&&this.layerRecord.store){this.layerStore=this.layerRecord.store;this.layerStore.on("update",this.onStoreUpdate,this);this.layerStore.on("add",this.onStoreAdd,this);this.layerStore.on("remove",this.onStoreRemove,this)}},getLabel:function(){var a=this.items.get(0);return a.rendered?a.el.dom.innerHTML:a.html},onStoreRemove:function(b,a,c){},onStoreAdd:function(b,a,c){},onStoreUpdate:function(c,a,b){if(a===this.layerRecord&&this.items.getCount()>0){var d=a.getLayer();this.setVisible(d.getVisibility()&&d.calculateInRange()&&d.displayInLayerSwitcher&&!a.get("hideInLegend"));this.update()}},update:function(){var b=this.getLayerTitle(this.layerRecord);var a=this.items.itemAt(0);if(a instanceof Ext.form.Label&&this.getLabel()!==b){a.setText(b,false)}},getLayerTitle:function(a){var b=this.legendTitle||"";if(this.showTitle&&!b){if(a&&!a.get("hideTitle")){b=a.get("title")||a.get("name")||a.getLayer().name||""}}return b},beforeDestroy:function(){if(this.layerStore){this.layerStore.un("update",this.onStoreUpdate,this);this.layerStore.un("remove",this.onStoreRemove,this);this.layerStore.un("add",this.onStoreAdd,this)}GeoExt.LayerLegend.superclass.beforeDestroy.apply(this,arguments)},onDestroy:function(){this.layerRecord=null;this.layerStore=null;GeoExt.LayerLegend.superclass.onDestroy.apply(this,arguments)}});GeoExt.LayerLegend.getTypes=function(c,a){var e=(a||[]).concat(),j=[],b,g;for(g in GeoExt.LayerLegend.types){b=GeoExt.LayerLegend.types[g].supports(c);if(b>0){if(e.indexOf(g)==-1){j.push({type:g,score:b})}}else{e.remove(g)}}j.sort(function(k,i){return k.score<i.score?1:(k.score==i.score?0:-1)});var f=j.length,h=new Array(f);for(var d=0;d<f;++d){h[d]=j[d].type}return e.concat(h)};GeoExt.LayerLegend.supports=function(a){};GeoExt.LayerLegend.types={};Ext.namespace("GeoExt");GeoExt.LegendImage=Ext.extend(Ext.BoxComponent,{url:null,defaultImgSrc:null,imgCls:null,noImgCls:"gx-legend-noimage",initComponent:function(){GeoExt.LegendImage.superclass.initComponent.call(this);if(this.defaultImgSrc===null){this.defaultImgSrc=Ext.BLANK_IMAGE_URL}this.autoEl={tag:"img","class":(this.imgCls?this.imgCls+" "+this.noImgCls:this.noImgCls),src:this.defaultImgSrc}},getImgEl:function(){return this.getEl()},setUrl:function(a){this.url=a;var b=this.getImgEl();if(b){b.un("load",this.onImageLoad,this);b.on("load",this.onImageLoad,this,{single:true});b.un("error",this.onImageLoadError,this);b.on("error",this.onImageLoadError,this,{single:true});b.dom.src=a}},onRender:function(b,a){GeoExt.LegendImage.superclass.onRender.call(this,b,a);if(this.url){this.setUrl(this.url)}},onDestroy:function(){var a=this.getImgEl();if(a){a.un("load",this.onImageLoad,this);a.un("error",this.onImageLoadError,this)}GeoExt.LegendImage.superclass.onDestroy.apply(this,arguments)},onImageLoadError:function(){var a=this.getImgEl();a.addClass(this.noImgCls);a.dom.src=this.defaultImgSrc},onImageLoad:function(){var a=this.getImgEl();if(!OpenLayers.Util.isEquivalentUrl(a.dom.src,this.defaultImgSrc)){a.removeClass(this.noImgCls)}}});Ext.reg("gx_legendimage",GeoExt.LegendImage);Ext.namespace("GeoExt");GeoExt.PrintMapPanel=Ext.extend(GeoExt.MapPanel,{sourceMap:null,printProvider:null,printPage:null,previewScales:null,center:null,zoom:null,extent:null,currentZoom:null,initComponent:function(){if(this.sourceMap instanceof GeoExt.MapPanel){this.sourceMap=this.sourceMap.map}if(!this.map){this.map={}}Ext.applyIf(this.map,{projection:this.sourceMap.getProjection(),maxExtent:this.sourceMap.getMaxExtent(),maxResolution:this.sourceMap.getMaxResolution(),units:this.sourceMap.getUnits()});if(!(this.printProvider instanceof GeoExt.data.PrintProvider)){this.printProvider=new GeoExt.data.PrintProvider(this.printProvider)}this.printPage=new GeoExt.data.PrintPage({printProvider:this.printProvider});this.previewScales=new Ext.data.Store();this.previewScales.add(this.printProvider.scales.getRange());this.layers=[];var a;Ext.each(this.sourceMap.layers,function(d){if(d.getVisibility()===true){if(d instanceof OpenLayers.Layer.Vector){var f=d.features,g=new Array(f.length),b=new OpenLayers.Layer.Vector(d.name);for(var c=0,e=f.length;c<e;++c){g[c]=f[c].clone()}b.addFeatures(g,{silent:true});this.layers.push(b)}else{this.layers.push(d.clone())}}},this);this.extent=this.sourceMap.getExtent();GeoExt.PrintMapPanel.superclass.initComponent.call(this)},bind:function(){this.printPage.on("change",this.fitZoom,this);this.printProvider.on("layoutchange",this.syncSize,this);this.map.events.register("moveend",this,this.updatePage);this.printPage.fit(this.sourceMap);if(this.initialConfig.limitScales===true){this.on("resize",this.calculatePreviewScales,this);this.calculatePreviewScales()}},afterRender:function(){GeoExt.PrintMapPanel.superclass.afterRender.apply(this,arguments);this.syncSize();if(!this.ownerCt){this.bind()}else{this.ownerCt.on({afterlayout:{fn:this.bind,scope:this,single:true}})}},adjustSize:function(f,b){var g=this.printProvider.layout.get("size");var e=g.width/g.height;var d=this.ownerCt;var c=(d&&d.autoWidth)?0:(f||this.initialConfig.width);var a=(d&&d.autoHeight)?0:(b||this.initialConfig.height);if(c){b=c/e;if(a&&b>a){b=a;f=b*e}else{f=c}}else{if(a){f=a*e;b=a}}return{width:f,height:b}},fitZoom:function(){if(!this._updating&&this.printPage.scale){this._updating=true;var a=this.printPage.getPrintExtent(this.map);this.currentZoom=this.map.getZoomForExtent(a);this.map.zoomToExtent(a);delete this._updating}},updatePage:function(){if(!this._updating){var a=this.map.getZoom();this._updating=true;if(a===this.currentZoom){this.printPage.setCenter(this.map.getCenter())}else{this.printPage.fit(this.map)}delete this._updating;this.currentZoom=a}},calculatePreviewScales:function(){this.previewScales.removeAll();this.printPage.suspendEvents();var e=this.printPage.scale;var h=this.map.getSize();var g={};var a=[];this.printProvider.scales.each(function(n){this.printPage.setScale(n);var k=this.printPage.getPrintExtent(this.map);var l=this.map.getZoomForExtent(k);var i=Math.max(k.getWidth()/h.w,k.getHeight()/h.h);var j=this.map.getResolutionForZoom(l);var m=Math.abs(i-j);if(!(l in g)||g[l].diff>m){g[l]={rec:n,diff:m};a.indexOf(l)==-1&&a.push(l)}},this);for(var b=0,c=a.length;b<c;++b){this.previewScales.add(g[a[b]].rec)}e&&this.printPage.setScale(e);this.printPage.resumeEvents();if(e&&this.previewScales.getCount()>0){var f=this.previewScales.getAt(0);var d=this.previewScales.getAt(this.previewScales.getCount()-1);if(e.get("value")<d.get("value")){this.printPage.setScale(d)}else{if(e.get("value")>f.get("value")){this.printPage.setScale(f)}}}this.fitZoom()},print:function(a){this.printProvider.print(this.map,[this.printPage],a)},beforeDestroy:function(){this.map.events.unregister("moveend",this,this.updatePage);this.printPage.un("change",this.fitZoom,this);this.printProvider.un("layoutchange",this.syncSize,this);GeoExt.PrintMapPanel.superclass.beforeDestroy.apply(this,arguments)}});Ext.reg("gx_printmappanel",GeoExt.PrintMapPanel);OpenLayers.Format.JSON=OpenLayers.Class(OpenLayers.Format,{indent:"    ",space:" ",newline:"\n",level:0,pretty:false,nativeJSON:(function(){return !!(window.JSON&&typeof JSON.parse=="function"&&typeof JSON.stringify=="function")})(),read:function(json,filter){var object;if(this.nativeJSON){object=JSON.parse(json,filter)}else{try{if(/^[\],:{}\s]*$/.test(json.replace(/\\["\\\/bfnrtu]/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){object=eval("("+json+")");if(typeof filter==="function"){function walk(k,v){if(v&&typeof v==="object"){for(var i in v){if(v.hasOwnProperty(i)){v[i]=walk(i,v[i])}}}return filter(k,v)}object=walk("",object)}}}catch(e){}}if(this.keepData){this.data=object}return object},write:function(e,c){this.pretty=!!c;var a=null;var b=typeof e;if(this.serialize[b]){try{a=(!this.pretty&&this.nativeJSON)?JSON.stringify(e):this.serialize[b].apply(this,[e])}catch(d){OpenLayers.Console.error("Trouble serializing: "+d)}}return a},writeIndent:function(){var b=[];if(this.pretty){for(var a=0;a<this.level;++a){b.push(this.indent)}}return b.join("")},writeNewline:function(){return(this.pretty)?this.newline:""},writeSpace:function(){return(this.pretty)?this.space:""},serialize:{object:function(c){if(c==null){return"null"}if(c.constructor==Date){return this.serialize.date.apply(this,[c])}if(c.constructor==Array){return this.serialize.array.apply(this,[c])}var f=["{"];this.level+=1;var d,b,e;var a=false;for(d in c){if(c.hasOwnProperty(d)){b=OpenLayers.Format.JSON.prototype.write.apply(this,[d,this.pretty]);e=OpenLayers.Format.JSON.prototype.write.apply(this,[c[d],this.pretty]);if(b!=null&&e!=null){if(a){f.push(",")}f.push(this.writeNewline(),this.writeIndent(),b,":",this.writeSpace(),e);a=true}}}this.level-=1;f.push(this.writeNewline(),this.writeIndent(),"}");return f.join("")},array:function(e){var c;var d=["["];this.level+=1;for(var b=0,a=e.length;b<a;++b){c=OpenLayers.Format.JSON.prototype.write.apply(this,[e[b],this.pretty]);if(c!=null){if(b>0){d.push(",")}d.push(this.writeNewline(),this.writeIndent(),c)}}this.level-=1;d.push(this.writeNewline(),this.writeIndent(),"]");return d.join("")},string:function(b){var a={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};if(/["\\\x00-\x1f]/.test(b)){return'"'+b.replace(/([\x00-\x1f\\"])/g,function(e,d){var f=a[d];if(f){return f}f=d.charCodeAt();return"\\u00"+Math.floor(f/16).toString(16)+(f%16).toString(16)})+'"'}return'"'+b+'"'},number:function(a){return isFinite(a)?String(a):"null"},"boolean":function(a){return String(a)},date:function(a){function b(c){return(c<10)?"0"+c:c}return'"'+a.getFullYear()+"-"+b(a.getMonth()+1)+"-"+b(a.getDate())+"T"+b(a.getHours())+":"+b(a.getMinutes())+":"+b(a.getSeconds())+'"'}},CLASS_NAME:"OpenLayers.Format.JSON"});OpenLayers.Format.GeoJSON=OpenLayers.Class(OpenLayers.Format.JSON,{ignoreExtraDims:false,read:function(j,g,a){g=(g)?g:"FeatureCollection";var d=null;var c=null;if(typeof j=="string"){c=OpenLayers.Format.JSON.prototype.read.apply(this,[j,a])}else{c=j}if(!c){OpenLayers.Console.error("Bad JSON: "+j)}else{if(typeof(c.type)!="string"){OpenLayers.Console.error("Bad GeoJSON - no type: "+j)}else{if(this.isValidType(c,g)){switch(g){case"Geometry":try{d=this.parseGeometry(c)}catch(b){OpenLayers.Console.error(b)}break;case"Feature":try{d=this.parseFeature(c);d.type="Feature"}catch(b){OpenLayers.Console.error(b)}break;case"FeatureCollection":d=[];switch(c.type){case"Feature":try{d.push(this.parseFeature(c))}catch(b){d=null;OpenLayers.Console.error(b)}break;case"FeatureCollection":for(var e=0,f=c.features.length;e<f;++e){try{d.push(this.parseFeature(c.features[e]))}catch(b){d=null;OpenLayers.Console.error(b)}}break;default:try{var h=this.parseGeometry(c);d.push(new OpenLayers.Feature.Vector(h))}catch(b){d=null;OpenLayers.Console.error(b)}}break}}}}return d},isValidType:function(c,a){var b=false;switch(a){case"Geometry":if(OpenLayers.Util.indexOf(["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","Box","GeometryCollection"],c.type)==-1){OpenLayers.Console.error("Unsupported geometry type: "+c.type)}else{b=true}break;case"FeatureCollection":b=true;break;default:if(c.type==a){b=true}else{OpenLayers.Console.error("Cannot convert types from "+c.type+" to "+a)}}return b},parseFeature:function(d){var b,f,a,e;a=(d.properties)?d.properties:{};e=(d.geometry&&d.geometry.bbox)||d.bbox;try{f=this.parseGeometry(d.geometry)}catch(c){throw c}b=new OpenLayers.Feature.Vector(f,a);if(e){b.bounds=OpenLayers.Bounds.fromArray(e)}if(d.id){b.fid=d.id}return b},parseGeometry:function(e){if(e==null){return null}var g,f=false;if(e.type=="GeometryCollection"){if(!(OpenLayers.Util.isArray(e.geometries))){throw"GeometryCollection must have geometries array: "+e}var b=e.geometries.length;var d=new Array(b);for(var a=0;a<b;++a){d[a]=this.parseGeometry.apply(this,[e.geometries[a]])}g=new OpenLayers.Geometry.Collection(d);f=true}else{if(!(OpenLayers.Util.isArray(e.coordinates))){throw"Geometry must have coordinates array: "+e}if(!this.parseCoords[e.type.toLowerCase()]){throw"Unsupported geometry type: "+e.type}try{g=this.parseCoords[e.type.toLowerCase()].apply(this,[e.coordinates])}catch(c){throw c}}if(this.internalProjection&&this.externalProjection&&!f){g.transform(this.externalProjection,this.internalProjection)}return g},parseCoords:{point:function(a){if(this.ignoreExtraDims==false&&a.length!=2){throw"Only 2D points are supported: "+a}return new OpenLayers.Geometry.Point(a[0],a[1])},multipoint:function(f){var c=[];var e=null;for(var b=0,a=f.length;b<a;++b){try{e=this.parseCoords.point.apply(this,[f[b]])}catch(d){throw d}c.push(e)}return new OpenLayers.Geometry.MultiPoint(c)},linestring:function(f){var c=[];var e=null;for(var b=0,a=f.length;b<a;++b){try{e=this.parseCoords.point.apply(this,[f[b]])}catch(d){throw d}c.push(e)}return new OpenLayers.Geometry.LineString(c)},multilinestring:function(f){var c=[];var b=null;for(var d=0,a=f.length;d<a;++d){try{b=this.parseCoords.linestring.apply(this,[f[d]])}catch(e){throw e}c.push(b)}return new OpenLayers.Geometry.MultiLineString(c)},polygon:function(g){var f=[];var e,b;for(var c=0,a=g.length;c<a;++c){try{b=this.parseCoords.linestring.apply(this,[g[c]])}catch(d){throw d}e=new OpenLayers.Geometry.LinearRing(b.components);f.push(e)}return new OpenLayers.Geometry.Polygon(f)},multipolygon:function(f){var b=[];var e=null;for(var c=0,a=f.length;c<a;++c){try{e=this.parseCoords.polygon.apply(this,[f[c]])}catch(d){throw d}b.push(e)}return new OpenLayers.Geometry.MultiPolygon(b)},box:function(a){if(a.length!=2){throw"GeoJSON box coordinates must have 2 elements"}return new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(a[0][0],a[0][1]),new OpenLayers.Geometry.Point(a[1][0],a[0][1]),new OpenLayers.Geometry.Point(a[1][0],a[1][1]),new OpenLayers.Geometry.Point(a[0][0],a[1][1]),new OpenLayers.Geometry.Point(a[0][0],a[0][1])])])}},write:function(e,d){var a={type:null};if(OpenLayers.Util.isArray(e)){a.type="FeatureCollection";var g=e.length;a.features=new Array(g);for(var c=0;c<g;++c){var b=e[c];if(!b instanceof OpenLayers.Feature.Vector){var f="FeatureCollection only supports collections of features: "+b;throw f}a.features[c]=this.extract.feature.apply(this,[b])}}else{if(e.CLASS_NAME.indexOf("OpenLayers.Geometry")==0){a=this.extract.geometry.apply(this,[e])}else{if(e instanceof OpenLayers.Feature.Vector){a=this.extract.feature.apply(this,[e]);if(e.layer&&e.layer.projection){a.crs=this.createCRSObject(e)}}}}return OpenLayers.Format.JSON.prototype.write.apply(this,[a,d])},createCRSObject:function(b){var c=b.layer.projection.toString();var a={};if(c.match(/epsg:/i)){var d=parseInt(c.substring(c.indexOf(":")+1));if(d==4326){a={type:"name",properties:{name:"urn:ogc:def:crs:OGC:1.3:CRS84"}}}else{a={type:"name",properties:{name:"EPSG:"+d}}}}return a},extract:{feature:function(c){var b=this.extract.geometry.apply(this,[c.geometry]);var a={type:"Feature",properties:c.attributes,geometry:b};if(c.fid!=null){a.id=c.fid}return a},geometry:function(d){if(d==null){return null}if(this.internalProjection&&this.externalProjection){d=d.clone();d.transform(this.internalProjection,this.externalProjection)}var a=d.CLASS_NAME.split(".")[2];var c=this.extract[a.toLowerCase()].apply(this,[d]);var b;if(a=="Collection"){b={type:"GeometryCollection",geometries:c}}else{b={type:a,coordinates:c}}return b},point:function(a){return[a.x,a.y]},multipoint:function(c){var d=[];for(var b=0,a=c.components.length;b<a;++b){d.push(this.extract.point.apply(this,[c.components[b]]))}return d},linestring:function(b){var d=[];for(var c=0,a=b.components.length;c<a;++c){d.push(this.extract.point.apply(this,[b.components[c]]))}return d},multilinestring:function(c){var d=[];for(var b=0,a=c.components.length;b<a;++b){d.push(this.extract.linestring.apply(this,[c.components[b]]))}return d},polygon:function(c){var d=[];for(var b=0,a=c.components.length;b<a;++b){d.push(this.extract.linestring.apply(this,[c.components[b]]))}return d},multipolygon:function(d){var c=[];for(var b=0,a=d.components.length;b<a;++b){c.push(this.extract.polygon.apply(this,[d.components[b]]))}return c},collection:function(c){var a=c.components.length;var d=new Array(a);for(var b=0;b<a;++b){d[b]=this.extract.geometry.apply(this,[c.components[b]])}return d}},CLASS_NAME:"OpenLayers.Format.GeoJSON"});Ext.namespace("GeoExt.data");GeoExt.data.PrintProvider=Ext.extend(Ext.util.Observable,{url:null,capabilities:null,method:"POST",encoding:document.charset||document.characterSet||"UTF-8",timeout:30000,customParams:null,scales:null,dpis:null,layouts:null,dpi:null,layout:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);if(!this.customParams){this.customParams={}}this.addEvents("loadcapabilities","layoutchange","dpichange","beforeprint","print","printexception","beforeencodelayer","encodelayer","beforedownload","beforeencodelegend");GeoExt.data.PrintProvider.superclass.constructor.apply(this,arguments);this.scales=new Ext.data.JsonStore({root:"scales",sortInfo:{field:"value",direction:"DESC"},fields:["name",{name:"value",type:"float"}]});this.dpis=new Ext.data.JsonStore({root:"dpis",fields:["name",{name:"value",type:"float"}]});this.layouts=new Ext.data.JsonStore({root:"layouts",fields:["name",{name:"size",mapping:"map"},{name:"rotation",type:"boolean"}]});if(a.capabilities){this.loadStores()}else{if(this.url.split("/").pop()){this.url+="/"}this.initialConfig.autoLoad&&this.loadCapabilities()}},setLayout:function(a){this.layout=a;this.fireEvent("layoutchange",this,a)},setDpi:function(a){this.dpi=a;this.fireEvent("dpichange",this,a)},print:function(c,d,m){if(c instanceof GeoExt.MapPanel){c=c.map}d=d instanceof Array?d:[d];m=m||{};if(this.fireEvent("beforeprint",this,c,d,m)===false){return}var h=Ext.apply({units:c.getUnits(),srs:c.baseLayer.projection.getCode(),layout:this.layout.get("name"),dpi:this.dpi.get("value")},this.customParams);var l=d[0].feature.layer;var k=[];var f=c.layers.concat();f.remove(c.baseLayer);f.unshift(c.baseLayer);Ext.each(f,function(o){if(o!==l&&o.getVisibility()===true){var n=this.encodeLayer(o);n&&k.push(n)}},this);h.layers=k;var g=[];Ext.each(d,function(n){g.push(Ext.apply({center:[n.center.lon,n.center.lat],scale:n.scale.get("value"),rotation:n.rotation},n.customParams))},this);h.pages=g;if(m.overview){var j=[];Ext.each(m.overview.layers,function(o){var n=this.encodeLayer(o);n&&j.push(n)},this);h.overviewLayers=j}if(m.legend&&!(this.fireEvent("beforeencodelegend",this,h,m.legend)===false)){var i=m.legend;var e=i.rendered;if(!e){i=i.cloneConfig({renderTo:document.body,hidden:true})}var b=[];i.items&&i.items.each(function(n){if(!n.hidden){var o=this.encoders.legends[n.getXType()];b=b.concat(o.call(this,n,h.pages[0].scale))}},this);if(!e){i.destroy()}h.legends=b}if(this.method==="GET"){var a=Ext.urlAppend(this.capabilities.printURL,"spec="+encodeURIComponent(Ext.encode(h)));this.download(a)}else{Ext.Ajax.request({url:this.capabilities.createURL,timeout:this.timeout,jsonData:h,headers:{"Content-Type":"application/json; charset="+this.encoding},success:function(n){var o=Ext.decode(n.responseText).getURL;this.download(o)},failure:function(n){this.fireEvent("printexception",this,n)},params:this.initialConfig.baseParams,scope:this})}},download:function(a){if(this.fireEvent("beforedownload",this,a)!==false){if(Ext.isOpera){window.open(a)}else{window.location.href=a}}this.fireEvent("print",this,a)},loadCapabilities:function(){if(!this.url){return}var a=this.url+"info.json";Ext.Ajax.request({url:a,method:"GET",disableCaching:false,success:function(b){this.capabilities=Ext.decode(b.responseText);this.loadStores()},params:this.initialConfig.baseParams,scope:this})},loadStores:function(){this.scales.loadData(this.capabilities);this.dpis.loadData(this.capabilities);this.layouts.loadData(this.capabilities);this.setLayout(this.layouts.getAt(0));this.setDpi(this.dpis.getAt(0));this.fireEvent("loadcapabilities",this,this.capabilities)},encodeLayer:function(a){var b;for(var d in this.encoders.layers){if(OpenLayers.Layer[d]&&a instanceof OpenLayers.Layer[d]){if(this.fireEvent("beforeencodelayer",this,a)===false){return}b=this.encoders.layers[d].call(this,a);this.fireEvent("encodelayer",this,a,b);break}}return(b&&b.type)?b:null},getAbsoluteUrl:function(c){if(Ext.isSafari){c=c.replace(/{/g,"%7B");c=c.replace(/}/g,"%7D")}var b;if(Ext.isIE6||Ext.isIE7||Ext.isIE8){b=document.createElement("<a href='"+c+"'/>");b.style.display="none";document.body.appendChild(b);b.href=b.href;document.body.removeChild(b)}else{b=document.createElement("a");b.href=c}return b.href},encoders:{layers:{Layer:function(b){var a={};if(b.options&&b.options.maxScale){a.minScaleDenominator=b.options.maxScale}if(b.options&&b.options.minScale){a.maxScaleDenominator=b.options.minScale}return a},WMS:function(b){var a=this.encoders.layers.HTTPRequest.call(this,b);a.singleTile=b.singleTile;Ext.apply(a,{type:"WMS",layers:[b.params.LAYERS].join(",").split(","),format:b.params.FORMAT,styles:[b.params.STYLES].join(",").split(","),singleTile:b.singleTile});var d;for(var c in b.params){d=c.toLowerCase();if(b.params[c]!=null&&!b.DEFAULT_PARAMS[d]&&"layers,styles,width,height,srs".indexOf(d)==-1){if(!a.customParams){a.customParams={}}a.customParams[c]=b.params[c]}}return a},OSM:function(b){var a=this.encoders.layers.TileCache.call(this,b);return Ext.apply(a,{type:"OSM",baseURL:a.baseURL.substr(0,a.baseURL.indexOf("$")),extension:"png"})},TMS:function(b){var a=this.encoders.layers.TileCache.call(this,b);return Ext.apply(a,{type:"TMS",format:b.type})},TileCache:function(b){var a=this.encoders.layers.HTTPRequest.call(this,b);return Ext.apply(a,{type:"TileCache",layer:b.layername,maxExtent:b.maxExtent.toArray(),tileSize:[b.tileSize.w,b.tileSize.h],extension:b.extension,resolutions:b.serverResolutions||b.resolutions})},WMTS:function(b){var a=this.encoders.layers.HTTPRequest.call(this,b);a=Ext.apply(a,{type:"WMTS",layer:b.layer,version:b.version,requestEncoding:b.requestEncoding,style:b.style,dimensions:b.dimensions,params:b.params,matrixSet:b.matrixSet});if(b.matrixIds){if(b.requestEncoding=="KVP"){a.format=b.format}a.matrixIds=[];Ext.each(b.matrixIds,function(c){a.matrixIds.push({identifier:c.identifier,matrixSize:[c.matrixWidth,c.matrixHeight],resolution:c.scaleDenominator*0.00028/OpenLayers.METERS_PER_INCH/OpenLayers.INCHES_PER_UNIT[b.units],tileSize:[c.tileWidth,c.tileHeight],topLeftCorner:[c.topLeftCorner.lon,c.topLeftCorner.lat]})});return a}else{return Ext.apply(a,{formatSuffix:b.formatSuffix,tileOrigin:[b.tileOrigin.lon,b.tileOrigin.lat],tileSize:[b.tileSize.w,b.tileSize.h],maxExtent:(b.tileFullExtent!=null)?b.tileFullExtent.toArray():b.maxExtent.toArray(),zoomOffset:b.zoomOffset,resolutions:b.serverResolutions||b.resolutions})}},KaMapCache:function(b){var a=this.encoders.layers.KaMap.call(this,b);return Ext.apply(a,{type:"KaMapCache",group:b.params.g,metaTileWidth:b.params.metaTileSize["w"],metaTileHeight:b.params.metaTileSize["h"]})},KaMap:function(b){var a=this.encoders.layers.HTTPRequest.call(this,b);return Ext.apply(a,{type:"KaMap",map:b.params.map,extension:b.params.i,group:b.params.g||"",maxExtent:b.maxExtent.toArray(),tileSize:[b.tileSize.w,b.tileSize.h],resolutions:b.serverResolutions||b.resolutions})},HTTPRequest:function(b){var a=this.encoders.layers.Layer.call(this,b);return Ext.apply(a,{baseURL:this.getAbsoluteUrl(b.url instanceof Array?b.url[0]:b.url),opacity:(b.opacity!=null)?b.opacity:1})},Image:function(b){var a=this.encoders.layers.Layer.call(this,b);return Ext.apply(a,{type:"Image",baseURL:this.getAbsoluteUrl(b.getURL(b.extent)),opacity:(b.opacity!=null)?b.opacity:1,extent:b.extent.toArray(),pixelSize:[b.size.w,b.size.h],name:b.name})},Vector:function(n){if(!n.features.length){return}var m=[];var q={};var c=n.features;var r=new OpenLayers.Format.GeoJSON();var d=new OpenLayers.Format.JSON();var b=1;var k={};var s,a,j,l,e;for(var h=0,o=c.length;h<o;++h){s=c[h];a=s.style||n.style||n.styleMap.createSymbolizer(s,s.renderIntent);if(a.display=="none"){continue}j=d.write(a);l=k[j];if(l){e=l}else{k[j]=e=b++;if(a.externalGraphic){q[e]=Ext.applyIf({externalGraphic:this.getAbsoluteUrl(a.externalGraphic)},a)}else{q[e]=a}}var f=r.extract.feature.call(r,s);f.properties=OpenLayers.Util.extend({_gx_style:e},f.properties);m.push(f)}var g=this.encoders.layers.Layer.call(this,n);return Ext.apply(g,{type:"Vector",styles:q,styleProperty:"_gx_style",geoJson:{type:"FeatureCollection",features:m},name:n.name,opacity:(n.opacity!=null)?n.opacity:1})},Markers:function(g){var b=[];for(var e=0,h=g.markers.length;e<h;e++){var f=g.markers[e];var j=new OpenLayers.Geometry.Point(f.lonlat.lon,f.lonlat.lat);var a={externalGraphic:f.icon.url,graphicWidth:f.icon.size.w,graphicHeight:f.icon.size.h,graphicXOffset:f.icon.offset.x,graphicYOffset:f.icon.offset.y};var k=new OpenLayers.Feature.Vector(j,{},a);b.push(k)}var d=new OpenLayers.Layer.Vector(g.name);d.addFeatures(b);var c=this.encoders.layers.Vector.call(this,d);d.destroy();return c}},legends:{gx_wmslegend:function(j,c){var e=this.encoders.legends.base.call(this,j);var k=[];for(var f=1,g=j.items.getCount();f<g;++f){var a=j.items.get(f).url;var b=j.layerRecord.data.title;if(j.useScaleParameter===true&&a.toLowerCase().indexOf("request=getlegendgraphic")!=-1){var h=a.split("?");var d=Ext.urlDecode(h[1]);d.SCALE=c;a=h[0]+"?"+Ext.urlEncode(d)}k.push(this.getAbsoluteUrl(a))}e[0].name=b;e[0].classes[0]={name:"",icons:k};return e},gx_wmtslegend:function(a,b){return this.encoders.legends.gx_urllegend.call(this,a)},gx_urllegend:function(b){var a=this.encoders.legends.base.call(this,b);a[0].classes.push({name:"",icon:this.getAbsoluteUrl(b.items.get(1).url)});return a},base:function(a){return[{name:a.getLabel(),classes:[]}]}}}});Ext.namespace("GeoExt.data");GeoExt.data.PrintPage=Ext.extend(Ext.util.Observable,{printProvider:null,feature:null,center:null,scale:null,rotation:0,customParams:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);if(!this.customParams){this.customParams={}}this.addEvents("change");GeoExt.data.PrintPage.superclass.constructor.apply(this,arguments);this.feature=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(-1,-1),new OpenLayers.Geometry.Point(1,-1),new OpenLayers.Geometry.Point(1,1),new OpenLayers.Geometry.Point(-1,1)])]));if(this.printProvider.capabilities){this.setScale(this.printProvider.scales.getAt(0))}else{this.printProvider.on({loadcapabilities:function(){this.setScale(this.printProvider.scales.getAt(0))},scope:this,single:true})}this.printProvider.on({layoutchange:this.onLayoutChange,scope:this})},getPrintExtent:function(a){a=a instanceof GeoExt.MapPanel?a.map:a;return this.calculatePageBounds(this.scale,a.getUnits())},setScale:function(e,a){var d=this.calculatePageBounds(e,a);var c=d.toGeometry();var b=this.rotation;if(b!=0){c.rotate(-b,c.getCentroid())}this.updateFeature(c,{scale:e})},setCenter:function(a){var d=this.feature.geometry;var e=d.getBounds().getCenterLonLat();var c=a.lon-e.lon;var b=a.lat-e.lat;d.move(c,b);this.updateFeature(d,{center:a})},setRotation:function(b,c){if(c||this.printProvider.layout.get("rotation")===true){var a=this.feature.geometry;a.rotate(this.rotation-b,a.getCentroid());this.updateFeature(a,{rotation:b})}},fit:function(h,j){j=j||{};var b=h,i;if(h instanceof GeoExt.MapPanel){b=h.map}else{if(h instanceof OpenLayers.Feature.Vector){b=h.layer.map;i=h.geometry.getBounds()}}if(!i){i=b.getExtent();if(!i){return}}this._updating=true;var a=i.getCenterLonLat();this.setCenter(a);var g=b.getUnits();var d=this.printProvider.scales.getAt(0);var c=Number.POSITIVE_INFINITY;var e=i.getWidth();var f=i.getHeight();this.printProvider.scales.each(function(n){var l=this.calculatePageBounds(n,g);if(j.mode=="closest"){var m=Math.abs(l.getWidth()-e)+Math.abs(l.getHeight()-f);if(m<c){c=m;d=n}}else{var k=j.mode=="screen"?!i.containsBounds(l):l.containsBounds(i);if(k||(j.mode=="screen"&&!k)){d=n}return k}},this);this.setScale(d,g);delete this._updating;this.updateFeature(this.feature.geometry,{center:a,scale:d})},updateFeature:function(e,b){var d=this.feature;var a=d.geometry!==e;e.id=d.geometry.id;d.geometry=e;if(!this._updating){for(var c in b){if(b[c]===this[c]){delete b[c]}else{this[c]=b[c];a=true}}Ext.apply(this,b);d.layer&&d.layer.drawFeature(d);a&&this.fireEvent("change",this,b)}},calculatePageBounds:function(b,g){var k=b.get("value");var e=this.feature;var i=this.feature.geometry;var a=i.getBounds().getCenterLonLat();var l=this.printProvider.layout.get("size");var g=g||(e.layer&&e.layer.map&&e.layer.map.getUnits())||"dd";var d=OpenLayers.INCHES_PER_UNIT[g];var j=l.width/72/d*k/2;var c=l.height/72/d*k/2;return new OpenLayers.Bounds(a.lon-j,a.lat-c,a.lon+j,a.lat+c)},onLayoutChange:function(){if(this.printProvider.layout.get("rotation")===false){this.setRotation(0,true)}this.scale&&this.setScale(this.scale)},destroy:function(){this.printProvider.un("layoutchange",this.onLayoutChange,this)}});OpenLayers.Layer.HTTPRequest=OpenLayers.Class(OpenLayers.Layer,{URL_HASH_FACTOR:(Math.sqrt(5)-1)/2,url:null,params:null,reproject:false,initialize:function(c,b,d,a){OpenLayers.Layer.prototype.initialize.apply(this,[c,a]);this.url=b;if(!this.params){this.params=OpenLayers.Util.extend({},d)}},destroy:function(){this.url=null;this.params=null;OpenLayers.Layer.prototype.destroy.apply(this,arguments)},clone:function(a){if(a==null){a=new OpenLayers.Layer.HTTPRequest(this.name,this.url,this.params,this.getOptions())}a=OpenLayers.Layer.prototype.clone.apply(this,[a]);return a},setUrl:function(a){this.url=a},mergeNewParams:function(b){this.params=OpenLayers.Util.extend(this.params,b);var a=this.redraw();if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"params"})}return a},redraw:function(a){if(a){return this.mergeNewParams({_olSalt:Math.random()})}else{return OpenLayers.Layer.prototype.redraw.apply(this,[])}},selectUrl:function(e,d){var c=1;for(var b=0,a=e.length;b<a;b++){c*=e.charCodeAt(b)*this.URL_HASH_FACTOR;c-=Math.floor(c)}return d[Math.floor(c*d.length)]},getFullRequestString:function(g,d){var b=d||this.url;var f=OpenLayers.Util.extend({},this.params);f=OpenLayers.Util.extend(f,g);var e=OpenLayers.Util.getParameterString(f);if(OpenLayers.Util.isArray(b)){b=this.selectUrl(e,b)}var a=OpenLayers.Util.upperCaseObject(OpenLayers.Util.getParameters(b));for(var c in f){if(c.toUpperCase() in a){delete f[c]}}e=OpenLayers.Util.getParameterString(f);return OpenLayers.Util.urlAppend(b,e)},CLASS_NAME:"OpenLayers.Layer.HTTPRequest"});OpenLayers.Tile=OpenLayers.Class({events:null,eventListeners:null,id:null,layer:null,url:null,bounds:null,size:null,position:null,isLoading:false,initialize:function(e,a,f,c,d,b){this.layer=e;this.position=a.clone();this.setBounds(f);this.url=c;if(d){this.size=d.clone()}this.id=OpenLayers.Util.createUniqueID("Tile_");OpenLayers.Util.extend(this,b);this.events=new OpenLayers.Events(this);if(this.eventListeners instanceof Object){this.events.on(this.eventListeners)}},unload:function(){if(this.isLoading){this.isLoading=false;this.events.triggerEvent("unload")}},destroy:function(){this.layer=null;this.bounds=null;this.size=null;this.position=null;if(this.eventListeners){this.events.un(this.eventListeners)}this.events.destroy();this.eventListeners=null;this.events=null},draw:function(b){if(!b){this.clear()}var a=this.shouldDraw();if(a&&!b&&this.events.triggerEvent("beforedraw")===false){a=null}return a},shouldDraw:function(){var b=false,a=this.layer.maxExtent;if(a){var d=this.layer.map;var c=d.baseLayer.wrapDateLine&&d.getMaxExtent();if(this.bounds.intersectsBounds(a,{inclusive:false,worldBounds:c})){b=true}}return b||this.layer.displayOutsideMaxExtent},setBounds:function(c){c=c.clone();if(this.layer.map.baseLayer.wrapDateLine){var b=this.layer.map.getMaxExtent(),a=this.layer.map.getResolution();c=c.wrapDateLine(b,{leftTolerance:a,rightTolerance:a})}this.bounds=c},moveTo:function(b,a,c){if(c==null){c=true}this.setBounds(b);this.position=a.clone();if(c){this.draw()}},clear:function(a){},CLASS_NAME:"OpenLayers.Tile"});OpenLayers.Tile.Image=OpenLayers.Class(OpenLayers.Tile,{url:null,imgDiv:null,frame:null,imageReloadAttempts:null,layerAlphaHack:null,asyncRequestId:null,maxGetUrlLength:null,canvasContext:null,crossOriginKeyword:null,initialize:function(e,a,f,c,d,b){OpenLayers.Tile.prototype.initialize.apply(this,arguments);this.url=c;this.layerAlphaHack=this.layer.alpha&&OpenLayers.Util.alphaHack();if(this.maxGetUrlLength!=null||this.layer.gutter||this.layerAlphaHack){this.frame=document.createElement("div");this.frame.style.position="absolute";this.frame.style.overflow="hidden"}if(this.maxGetUrlLength!=null){OpenLayers.Util.extend(this,OpenLayers.Tile.Image.IFrame)}},destroy:function(){if(this.imgDiv){this.clear();this.imgDiv=null;this.frame=null}this.asyncRequestId=null;OpenLayers.Tile.prototype.destroy.apply(this,arguments)},draw:function(){var a=OpenLayers.Tile.prototype.draw.apply(this,arguments);if(a){if(this.layer!=this.layer.map.baseLayer&&this.layer.reproject){this.bounds=this.getBoundsFromBaseLayer(this.position)}if(this.isLoading){this._loadEvent="reload"}else{this.isLoading=true;this._loadEvent="loadstart"}this.renderTile();this.positionTile()}else{if(a===false){this.unload()}}return a},renderTile:function(){if(this.layer.async){var a=this.asyncRequestId=(this.asyncRequestId||0)+1;this.layer.getURLasync(this.bounds,function(b){if(a==this.asyncRequestId){this.url=b;this.initImage()}},this)}else{this.url=this.layer.getURL(this.bounds);this.initImage()}},positionTile:function(){var c=this.getTile().style,a=this.frame?this.size:this.layer.getImageSize(this.bounds),b=1;if(this.layer instanceof OpenLayers.Layer.Grid){b=this.layer.getServerResolution()/this.layer.map.getResolution()}c.left=this.position.x+"px";c.top=this.position.y+"px";c.width=Math.round(b*a.w)+"px";c.height=Math.round(b*a.h)+"px"},clear:function(){OpenLayers.Tile.prototype.clear.apply(this,arguments);var a=this.imgDiv;if(a){var b=this.getTile();if(b.parentNode===this.layer.div){this.layer.div.removeChild(b)}this.setImgSrc();if(this.layerAlphaHack===true){a.style.filter=""}OpenLayers.Element.removeClass(a,"olImageLoadError")}this.canvasContext=null},getImage:function(){if(!this.imgDiv){this.imgDiv=OpenLayers.Tile.Image.IMAGE.cloneNode(false);var a=this.imgDiv.style;if(this.frame){var c=0,b=0;if(this.layer.gutter){c=this.layer.gutter/this.layer.tileSize.w*100;b=this.layer.gutter/this.layer.tileSize.h*100}a.left=-c+"%";a.top=-b+"%";a.width=(2*c+100)+"%";a.height=(2*b+100)+"%"}a.visibility="hidden";a.opacity=0;if(this.layer.opacity<1){a.filter="alpha(opacity="+(this.layer.opacity*100)+")"}a.position="absolute";if(this.layerAlphaHack){a.paddingTop=a.height;a.height="0";a.width="100%"}if(this.frame){this.frame.appendChild(this.imgDiv)}}return this.imgDiv},setImage:function(a){this.imgDiv=a},initImage:function(){this.events.triggerEvent("beforeload");this.layer.div.appendChild(this.getTile());this.events.triggerEvent(this._loadEvent);var a=this.getImage();if(this.url&&OpenLayers.Util.isEquivalentUrl(a.src,this.url)){this._loadTimeout=window.setTimeout(OpenLayers.Function.bind(this.onImageLoad,this),0)}else{this.stopLoading();if(this.crossOriginKeyword){a.removeAttribute("crossorigin")}OpenLayers.Event.observe(a,"load",OpenLayers.Function.bind(this.onImageLoad,this));OpenLayers.Event.observe(a,"error",OpenLayers.Function.bind(this.onImageError,this));this.imageReloadAttempts=0;this.setImgSrc(this.url)}},setImgSrc:function(b){var a=this.imgDiv;if(b){a.style.visibility="hidden";a.style.opacity=0;if(this.crossOriginKeyword){if(b.substr(0,5)!=="data:"){a.setAttribute("crossorigin",this.crossOriginKeyword)}else{a.removeAttribute("crossorigin")}}a.src=b}else{this.stopLoading();this.imgDiv=null;if(a.parentNode){a.parentNode.removeChild(a)}}},getTile:function(){return this.frame?this.frame:this.getImage()},createBackBuffer:function(){if(!this.imgDiv||this.isLoading){return}var a;if(this.frame){a=this.frame.cloneNode(false);a.appendChild(this.imgDiv)}else{a=this.imgDiv}this.imgDiv=null;return a},onImageLoad:function(){var a=this.imgDiv;this.stopLoading();a.style.visibility="inherit";a.style.opacity=this.layer.opacity;this.isLoading=false;this.canvasContext=null;this.events.triggerEvent("loadend");if(this.layerAlphaHack===true){a.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+a.src+"', sizingMethod='scale')"}},onImageError:function(){var a=this.imgDiv;if(a.src!=null){this.imageReloadAttempts++;if(this.imageReloadAttempts<=OpenLayers.IMAGE_RELOAD_ATTEMPTS){this.setImgSrc(this.layer.getURL(this.bounds))}else{OpenLayers.Element.addClass(a,"olImageLoadError");this.events.triggerEvent("loaderror");this.onImageLoad()}}},stopLoading:function(){OpenLayers.Event.stopObservingElement(this.imgDiv);window.clearTimeout(this._loadTimeout);delete this._loadTimeout},getCanvasContext:function(){if(OpenLayers.CANVAS_SUPPORTED&&this.imgDiv&&!this.isLoading){if(!this.canvasContext){var a=document.createElement("canvas");a.width=this.size.w;a.height=this.size.h;this.canvasContext=a.getContext("2d");this.canvasContext.drawImage(this.imgDiv,0,0)}return this.canvasContext}},CLASS_NAME:"OpenLayers.Tile.Image"});OpenLayers.Tile.Image.IMAGE=(function(){var a=new Image();a.className="olTileImage";a.galleryImg="no";return a}());OpenLayers.Layer.Grid=OpenLayers.Class(OpenLayers.Layer.HTTPRequest,{tileSize:null,tileOriginCorner:"bl",tileOrigin:null,tileOptions:null,tileClass:OpenLayers.Tile.Image,grid:null,singleTile:false,ratio:1.5,buffer:0,transitionEffect:"resize",numLoadingTiles:0,serverResolutions:null,loading:false,backBuffer:null,gridResolution:null,backBufferResolution:null,backBufferLonLat:null,backBufferTimerId:null,removeBackBufferDelay:null,className:null,gridLayout:null,rowSign:null,transitionendEvents:["transitionend","webkitTransitionEnd","otransitionend","oTransitionEnd"],initialize:function(c,b,d,a){OpenLayers.Layer.HTTPRequest.prototype.initialize.apply(this,arguments);this.grid=[];this._removeBackBuffer=OpenLayers.Function.bind(this.removeBackBuffer,this);this.initProperties();this.rowSign=this.tileOriginCorner.substr(0,1)==="t"?1:-1},initProperties:function(){if(this.options.removeBackBufferDelay===undefined){this.removeBackBufferDelay=this.singleTile?0:2500}if(this.options.className===undefined){this.className=this.singleTile?"olLayerGridSingleTile":"olLayerGrid"}},setMap:function(a){OpenLayers.Layer.HTTPRequest.prototype.setMap.call(this,a);OpenLayers.Element.addClass(this.div,this.className)},removeMap:function(a){this.removeBackBuffer()},destroy:function(){this.removeBackBuffer();this.clearGrid();this.grid=null;this.tileSize=null;OpenLayers.Layer.HTTPRequest.prototype.destroy.apply(this,arguments)},clearGrid:function(){if(this.grid){for(var f=0,b=this.grid.length;f<b;f++){var e=this.grid[f];for(var c=0,a=e.length;c<a;c++){var d=e[c];this.destroyTile(d)}}this.grid=[];this.gridResolution=null;this.gridLayout=null}},addOptions:function(b,a){var c=b.singleTile!==undefined&&b.singleTile!==this.singleTile;OpenLayers.Layer.HTTPRequest.prototype.addOptions.apply(this,arguments);if(this.map&&c){this.initProperties();this.clearGrid();this.tileSize=this.options.tileSize;this.setTileSize();this.moveTo(null,true)}},clone:function(a){if(a==null){a=new OpenLayers.Layer.Grid(this.name,this.url,this.params,this.getOptions())}a=OpenLayers.Layer.HTTPRequest.prototype.clone.apply(this,[a]);if(this.tileSize!=null){a.tileSize=this.tileSize.clone()}a.grid=[];a.gridResolution=null;a.backBuffer=null;a.backBufferTimerId=null;a.loading=false;a.numLoadingTiles=0;return a},moveTo:function(f,b,g){OpenLayers.Layer.HTTPRequest.prototype.moveTo.apply(this,arguments);f=f||this.map.getExtent();if(f!=null){var e=!this.grid.length||b;var d=this.getTilesBounds();var c=this.map.getResolution();var a=this.getServerResolution(c);if(this.singleTile){if(e||(!g&&!d.containsBounds(f))){if(b&&this.transitionEffect!=="resize"){this.removeBackBuffer()}if(!b||this.transitionEffect==="resize"){this.applyBackBuffer(c)}this.initSingleTile(f)}}else{e=e||!d.intersectsBounds(f,{worldBounds:this.map.baseLayer.wrapDateLine&&this.map.getMaxExtent()});if(e){if(b&&(this.transitionEffect==="resize"||this.gridResolution===c)){this.applyBackBuffer(c)}this.initGriddedTiles(f)}else{this.moveGriddedTiles()}}}},getTileData:function(m){var r=null,n=m.lon,l=m.lat,d=this.grid.length;if(this.map&&d){var s=this.map.getResolution(),a=this.tileSize.w,k=this.tileSize.h,j=this.grid[0][0].bounds,e=j.left,o=j.top;if(n<e){if(this.map.baseLayer.wrapDateLine){var b=this.map.getMaxExtent().getWidth();var c=Math.ceil((e-n)/b);n+=b*c}}var h=(n-e)/(s*a);var f=(o-l)/(s*k);var g=Math.floor(h);var i=Math.floor(f);if(i>=0&&i<d){var q=this.grid[i][g];if(q){r={tile:q,i:Math.floor((h-g)*a),j:Math.floor((f-i)*k)}}}}return r},destroyTile:function(a){this.removeTileMonitoringHooks(a);a.destroy()},getServerResolution:function(c){var f=Number.POSITIVE_INFINITY;c=c||this.map.getResolution();if(this.serverResolutions&&OpenLayers.Util.indexOf(this.serverResolutions,c)===-1){var d,b,e,a;for(d=this.serverResolutions.length-1;d>=0;d--){e=this.serverResolutions[d];b=Math.abs(e-c);if(b>f){break}f=b;a=e}c=a}return c},getServerZoom:function(){var a=this.getServerResolution();return this.serverResolutions?OpenLayers.Util.indexOf(this.serverResolutions,a):this.map.getZoomForResolution(a)+(this.zoomOffset||0)},applyBackBuffer:function(b){if(this.backBufferTimerId!==null){this.removeBackBuffer()}var k=this.backBuffer;if(!k){k=this.createBackBuffer();if(!k){return}if(b===this.gridResolution){this.div.insertBefore(k,this.div.firstChild)}else{this.map.baseLayer.div.parentNode.insertBefore(k,this.map.baseLayer.div)}this.backBuffer=k;var d=this.grid[0][0].bounds;this.backBufferLonLat={lon:d.left,lat:d.top};this.backBufferResolution=this.gridResolution}var h=this.backBufferResolution/b;var j=k.childNodes,g;for(var c=j.length-1;c>=0;--c){g=j[c];g.style.top=((h*g._i*g._h)|0)+"px";g.style.left=((h*g._j*g._w)|0)+"px";g.style.width=Math.round(h*g._w)+"px";g.style.height=Math.round(h*g._h)+"px"}var f=this.getViewPortPxFromLonLat(this.backBufferLonLat,b);var a=this.map.layerContainerOriginPx.x;var e=this.map.layerContainerOriginPx.y;k.style.left=Math.round(f.x-a)+"px";k.style.top=Math.round(f.y-e)+"px"},createBackBuffer:function(){var d;if(this.grid.length>0){d=document.createElement("div");d.id=this.div.id+"_bb";d.className="olBackBuffer";d.style.position="absolute";var h=this.map;d.style.zIndex=this.transitionEffect==="resize"?this.getZIndex()-1:h.Z_INDEX_BASE.BaseLayer-(h.getNumLayers()-h.getLayerIndex(this));for(var f=0,b=this.grid.length;f<b;f++){for(var e=0,a=this.grid[f].length;e<a;e++){var g=this.grid[f][e],c=this.grid[f][e].createBackBuffer();if(c){c._i=f;c._j=e;c._w=g.size.w;c._h=g.size.h;c.id=g.id+"_bb";d.appendChild(c)}}}}return d},removeBackBuffer:function(){if(this._transitionElement){for(var a=this.transitionendEvents.length-1;a>=0;--a){OpenLayers.Event.stopObserving(this._transitionElement,this.transitionendEvents[a],this._removeBackBuffer)}delete this._transitionElement}if(this.backBuffer){if(this.backBuffer.parentNode){this.backBuffer.parentNode.removeChild(this.backBuffer)}this.backBuffer=null;this.backBufferResolution=null;if(this.backBufferTimerId!==null){window.clearTimeout(this.backBufferTimerId);this.backBufferTimerId=null}}},moveByPx:function(b,a){if(!this.singleTile){this.moveGriddedTiles()}},setTileSize:function(a){if(this.singleTile){a=this.map.getSize();a.h=parseInt(a.h*this.ratio,10);a.w=parseInt(a.w*this.ratio,10)}OpenLayers.Layer.HTTPRequest.prototype.setTileSize.apply(this,[a])},getTilesBounds:function(){var d=null;var c=this.grid.length;if(c){var e=this.grid[c-1][0].bounds,b=this.grid[0].length*e.getWidth(),a=this.grid.length*e.getHeight();d=new OpenLayers.Bounds(e.left,e.bottom,e.left+b,e.bottom+a)}return d},initSingleTile:function(e){this.events.triggerEvent("retile");var a=e.getCenterLonLat();var g=e.getWidth()*this.ratio;var b=e.getHeight()*this.ratio;var f=new OpenLayers.Bounds(a.lon-(g/2),a.lat-(b/2),a.lon+(g/2),a.lat+(b/2));var c=this.map.getLayerPxFromLonLat({lon:f.left,lat:f.top});if(!this.grid.length){this.grid[0]=[]}var d=this.grid[0][0];if(!d){d=this.addTile(f,c);this.addTileMonitoringHooks(d);d.draw();this.grid[0][0]=d}else{d.moveTo(f,c)}this.removeExcessTiles(1,1);this.gridResolution=this.getServerResolution()},calculateGridLayout:function(a,j,e){var h=e*this.tileSize.w;var d=e*this.tileSize.h;var g=a.left-j.lon;var i=Math.floor(g/h)-this.buffer;var c=this.rowSign;var b=c*(j.lat-a.top+d);var f=Math[~c?"floor":"ceil"](b/d)-this.buffer*c;return{tilelon:h,tilelat:d,startcol:i,startrow:f}},getTileOrigin:function(){var b=this.tileOrigin;if(!b){var c=this.getMaxExtent();var a=({tl:["left","top"],tr:["right","top"],bl:["left","bottom"],br:["right","bottom"]})[this.tileOriginCorner];b=new OpenLayers.LonLat(c[a[0]],c[a[1]])}return b},getTileBoundsForGridIndex:function(i,e){var h=this.getTileOrigin();var d=this.gridLayout;var f=d.tilelon;var c=d.tilelat;var a=d.startcol;var g=d.startrow;var b=this.rowSign;return new OpenLayers.Bounds(h.lon+(a+e)*f,h.lat-(g+i*b)*c*b,h.lon+(a+e+1)*f,h.lat-(g+(i-1)*b)*c*b)},initGriddedTiles:function(g){this.events.triggerEvent("retile");var e=this.map.getSize();var B=this.getTileOrigin();var r=this.map.getResolution(),o=this.getServerResolution(),h=r/o,m={w:this.tileSize.w/h,h:this.tileSize.h/h};var w=Math.ceil(e.h/m.h)+2*this.buffer+1;var x=Math.ceil(e.w/m.w)+2*this.buffer+1;var q=this.calculateGridLayout(g,B,o);this.gridLayout=q;var d=q.tilelon;var j=q.tilelat;var a=this.map.layerContainerOriginPx.x;var t=this.map.layerContainerOriginPx.y;var b=this.getTileBoundsForGridIndex(0,0);var k=this.map.getViewPortPxFromLonLat(new OpenLayers.LonLat(b.left,b.top));k.x=Math.round(k.x)-a;k.y=Math.round(k.y)-t;var y=[],z=this.map.getCenter();var v=0;do{var f=this.grid[v];if(!f){f=[];this.grid.push(f)}var c=0;do{b=this.getTileBoundsForGridIndex(v,c);var n=k.clone();n.x=n.x+c*Math.round(m.w);n.y=n.y+v*Math.round(m.h);var A=f[c];if(!A){A=this.addTile(b,n);this.addTileMonitoringHooks(A);f.push(A)}else{A.moveTo(b,n,false)}var s=b.getCenterLonLat();y.push({tile:A,distance:Math.pow(s.lon-z.lon,2)+Math.pow(s.lat-z.lat,2)});c+=1}while((b.right<=g.right+d*this.buffer)||c<x);v+=1}while((b.bottom>=g.bottom-j*this.buffer)||v<w);this.removeExcessTiles(v,c);var r=this.getServerResolution();this.gridResolution=r;y.sort(function(C,i){return C.distance-i.distance});for(var u=0,l=y.length;u<l;++u){y[u].tile.draw()}},getMaxExtent:function(){return this.maxExtent},addTile:function(c,a){var b=new this.tileClass(this,a,c,null,this.tileSize,this.tileOptions);this.events.triggerEvent("addtile",{tile:b});return b},addTileMonitoringHooks:function(b){var a="olTileReplacing";b.onLoadStart=function(){if(this.loading===false){this.loading=true;this.events.triggerEvent("loadstart")}this.events.triggerEvent("tileloadstart",{tile:b});this.numLoadingTiles++;if(!this.singleTile&&this.backBuffer&&this.gridResolution===this.backBufferResolution){OpenLayers.Element.addClass(b.getTile(),a)}};b.onLoadEnd=function(e){this.numLoadingTiles--;var h=e.type==="unload";this.events.triggerEvent("tileloaded",{tile:b,aborted:h});if(!this.singleTile&&!h&&this.backBuffer&&this.gridResolution===this.backBufferResolution){var g=b.getTile();if(OpenLayers.Element.getStyle(g,"display")==="none"){var d=document.getElementById(b.id+"_bb");if(d){d.parentNode.removeChild(d)}}OpenLayers.Element.removeClass(g,a)}if(this.numLoadingTiles===0){if(this.backBuffer){if(this.backBuffer.childNodes.length===0){this.removeBackBuffer()}else{this._transitionElement=h?this.div.lastChild:b.imgDiv;var c=this.transitionendEvents;for(var f=c.length-1;f>=0;--f){OpenLayers.Event.observe(this._transitionElement,c[f],this._removeBackBuffer)}this.backBufferTimerId=window.setTimeout(this._removeBackBuffer,this.removeBackBufferDelay)}}this.loading=false;this.events.triggerEvent("loadend")}};b.onLoadError=function(){this.events.triggerEvent("tileerror",{tile:b})};b.events.on({loadstart:b.onLoadStart,loadend:b.onLoadEnd,unload:b.onLoadEnd,loaderror:b.onLoadError,scope:this})},removeTileMonitoringHooks:function(a){a.unload();a.events.un({loadstart:a.onLoadStart,loadend:a.onLoadEnd,unload:a.onLoadEnd,loaderror:a.onLoadError,scope:this})},moveGriddedTiles:function(){var a=this.buffer+1;while(true){var e=this.grid[0][0];var d={x:e.position.x+this.map.layerContainerOriginPx.x,y:e.position.y+this.map.layerContainerOriginPx.y};var b=this.getServerResolution()/this.map.getResolution();var c={w:Math.round(this.tileSize.w*b),h:Math.round(this.tileSize.h*b)};if(d.x>-c.w*(a-1)){this.shiftColumn(true,c)}else{if(d.x<-c.w*a){this.shiftColumn(false,c)}else{if(d.y>-c.h*(a-1)){this.shiftRow(true,c)}else{if(d.y<-c.h*a){this.shiftRow(false,c)}else{break}}}}}},shiftRow:function(n,l){var a=this.grid;var k=n?0:(a.length-1);var d=n?-1:1;var b=this.rowSign;var c=this.gridLayout;c.startrow+=d*b;var e=a[k];var m=a[n?"pop":"shift"]();for(var f=0,h=m.length;f<h;f++){var j=m[f];var g=e[f].position.clone();g.y+=l.h*d;j.moveTo(this.getTileBoundsForGridIndex(k,f),g)}a[n?"unshift":"push"](m)},shiftColumn:function(l,j){var a=this.grid;var h=l?0:(a[0].length-1);var c=l?-1:1;var b=this.gridLayout;b.startcol+=c;for(var d=0,f=a.length;d<f;d++){var k=a[d];var e=k[h].position.clone();var g=k[l?"pop":"shift"]();e.x+=j.w*c;g.moveTo(this.getTileBoundsForGridIndex(d,h),e);k[l?"unshift":"push"](g)}},removeExcessTiles:function(e,c){var b,a;while(this.grid.length>e){var f=this.grid.pop();for(b=0,a=f.length;b<a;b++){var d=f[b];this.destroyTile(d)}}for(b=0,a=this.grid.length;b<a;b++){while(this.grid[b].length>c){var f=this.grid[b];var d=f.pop();this.destroyTile(d)}}},onMapResize:function(){if(this.singleTile){this.clearGrid();this.setTileSize()}},getTileBounds:function(d){var c=this.maxExtent;var f=this.getResolution();var e=f*this.tileSize.w;var b=f*this.tileSize.h;var h=this.getLonLatFromViewPortPx(d);var a=c.left+(e*Math.floor((h.lon-c.left)/e));var g=c.bottom+(b*Math.floor((h.lat-c.bottom)/b));return new OpenLayers.Bounds(a,g,a+e,g+b)},CLASS_NAME:"OpenLayers.Layer.Grid"});OpenLayers.Layer.WMS=OpenLayers.Class(OpenLayers.Layer.Grid,{DEFAULT_PARAMS:{service:"WMS",version:"1.1.1",request:"GetMap",styles:"",format:"image/jpeg"},isBaseLayer:true,encodeBBOX:false,noMagic:false,yx:{},initialize:function(d,c,e,b){var a=[];e=OpenLayers.Util.upperCaseObject(e);if(parseFloat(e.VERSION)>=1.3&&!e.EXCEPTIONS){e.EXCEPTIONS="INIMAGE"}a.push(d,c,e,b);OpenLayers.Layer.Grid.prototype.initialize.apply(this,a);OpenLayers.Util.applyDefaults(this.params,OpenLayers.Util.upperCaseObject(this.DEFAULT_PARAMS));if(!this.noMagic&&this.params.TRANSPARENT&&this.params.TRANSPARENT.toString().toLowerCase()=="true"){if((b==null)||(!b.isBaseLayer)){this.isBaseLayer=false}if(this.params.FORMAT=="image/jpeg"){this.params.FORMAT=OpenLayers.Util.alphaHack()?"image/gif":"image/png"}}},clone:function(a){if(a==null){a=new OpenLayers.Layer.WMS(this.name,this.url,this.params,this.getOptions())}a=OpenLayers.Layer.Grid.prototype.clone.apply(this,[a]);return a},reverseAxisOrder:function(){var a=this.projection.getCode();return parseFloat(this.params.VERSION)>=1.3&&!!(this.yx[a]||(OpenLayers.Projection.defaults[a]&&OpenLayers.Projection.defaults[a].yx))},getURL:function(c){c=this.adjustBounds(c);var d=this.getImageSize();var e={};var b=this.reverseAxisOrder();e.BBOX=this.encodeBBOX?c.toBBOX(null,b):c.toArray(b);e.WIDTH=d.w;e.HEIGHT=d.h;var a=this.getFullRequestString(e);return a},mergeNewParams:function(c){var b=OpenLayers.Util.upperCaseObject(c);var a=[b];return OpenLayers.Layer.Grid.prototype.mergeNewParams.apply(this,a)},getFullRequestString:function(e,c){var b=this.map.getProjectionObject();var a=this.projection&&this.projection.equals(b)?this.projection.getCode():b.getCode();var d=(a=="none")?null:a;if(parseFloat(this.params.VERSION)>=1.3){this.params.CRS=d}else{this.params.SRS=d}if(typeof this.params.TRANSPARENT=="boolean"){e.TRANSPARENT=this.params.TRANSPARENT?"TRUE":"FALSE"}return OpenLayers.Layer.Grid.prototype.getFullRequestString.apply(this,arguments)},CLASS_NAME:"OpenLayers.Layer.WMS"});Ext.namespace("GeoExt");GeoExt.WMSLegend=Ext.extend(GeoExt.LayerLegend,{defaultStyleIsFirst:true,useScaleParameter:true,baseParams:null,itemXType:"gx_legendimage",initComponent:function(){GeoExt.WMSLegend.superclass.initComponent.call(this);var a=this.layerRecord.getLayer();this._noMap=!a.map;a.events.register("moveend",this,this.onLayerMoveend);this.update()},onLayerMoveend:function(a){if((a.zoomChanged===true&&this.useScaleParameter===true)||this._noMap){delete this._noMap;this.update()}},getLegendUrl:function(i,j){var f=this.layerRecord;var a;var m=f&&f.get("styles");var h=f.getLayer();j=j||[h.params.LAYERS].join(",").split(",");var l=h.params.STYLES&&[h.params.STYLES].join(",").split(",");var k=j.indexOf(i);var c=l&&l[k];if(m&&m.length>0){if(c){Ext.each(m,function(n){a=(n.name==c&&n.legend)&&n.legend.href;return !a})}else{if(!l&&!h.params.SLD&&!h.params.SLD_BODY){Ext.each(m,function(n){a=(n.layerName==i&&n.legend)&&n.legend.href;return !a});if(!a&&this.defaultStyleIsFirst===true){a=m[0].legend&&m[0].legend.href}}}if(a){a=decodeURIComponent(a)}}if(!a){a=h.getFullRequestString({REQUEST:"GetLegendGraphic",WIDTH:null,HEIGHT:null,EXCEPTIONS:"application/vnd.ogc.se_xml",LAYER:i,LAYERS:null,STYLE:(c!=="")?c:null,STYLES:null,SRS:null,FORMAT:null,TIME:null})}var e=Ext.apply({},this.baseParams);if(h.params._OLSALT){e._OLSALT=h.params._OLSALT}var b=Ext.urlEncode(e);var g=/([&\?]?)format=[^&]*&?/i;if(g.test(b)&&g.test(a)){a=a.replace(g,"$1")}a=OpenLayers.Util.urlAppend(a,b);if(a.toLowerCase().indexOf("request=getlegendgraphic")!=-1){if(a.toLowerCase().indexOf("format=")==-1){a=Ext.urlAppend(a,"FORMAT=image%2Fgif")}if(this.useScaleParameter===true){var d=h.map.getScale();a=Ext.urlAppend(a,"SCALE="+d)}}return a},update:function(){var d=this.layerRecord.getLayer();if(!(d&&d.map)){return}GeoExt.WMSLegend.superclass.update.apply(this,arguments);var h,b,c,a;h=[d.params.LAYERS].join(",").split(",");var e=[];var g=this.items.find(function(i){return i.isXType("label")});this.items.each(function(i){c=h.indexOf(i.itemId);if(c<0&&i!=g){e.push(i)}else{if(i!==g){b=h[c];var j=this.getLegendUrl(b,h);if(!OpenLayers.Util.isEquivalentUrl(j,i.url)){i.setUrl(j)}}}},this);for(c=0,a=e.length;c<a;c++){var f=e[c];this.remove(f);f.destroy()}for(c=0,a=h.length;c<a;c++){b=h[c];if(!this.items||!this.getComponent(b)){this.add({xtype:this.itemXType,url:this.getLegendUrl(b,h),itemId:b})}}this.doLayout()},beforeDestroy:function(){if(this.useScaleParameter===true){var a=this.layerRecord.getLayer();a&&a.events&&a.events.unregister("moveend",this,this.onLayerMoveend)}GeoExt.WMSLegend.superclass.beforeDestroy.apply(this,arguments)}});GeoExt.WMSLegend.supports=function(a){return a.getLayer() instanceof OpenLayers.Layer.WMS?1:0};GeoExt.LayerLegend.types.gx_wmslegend=GeoExt.WMSLegend;Ext.reg("gx_wmslegend",GeoExt.WMSLegend);OpenLayers.Renderer=OpenLayers.Class({container:null,root:null,extent:null,locked:false,size:null,resolution:null,map:null,featureDx:0,initialize:function(a,b){this.container=OpenLayers.Util.getElement(a);OpenLayers.Util.extend(this,b)},destroy:function(){this.container=null;this.extent=null;this.size=null;this.resolution=null;this.map=null},supported:function(){return false},setExtent:function(b,c){this.extent=b.clone();if(this.map.baseLayer&&this.map.baseLayer.wrapDateLine){var a=b.getWidth()/this.map.getExtent().getWidth(),b=b.scale(1/a);this.extent=b.wrapDateLine(this.map.getMaxExtent()).scale(a)}if(c){this.resolution=null}return true},setSize:function(a){this.size=a.clone();this.resolution=null},getResolution:function(){this.resolution=this.resolution||this.map.getResolution();return this.resolution},drawFeature:function(i,b){if(b==null){b=i.style}if(i.geometry){var a=i.geometry.getBounds();if(a){var h;if(this.map.baseLayer&&this.map.baseLayer.wrapDateLine){h=this.map.getMaxExtent()}if(!a.intersectsBounds(this.extent,{worldBounds:h})){b={display:"none"}}else{this.calculateFeatureDx(a,h)}var c=this.drawGeometry(i.geometry,b,i.id);if(b.display!="none"&&b.label&&c!==false){var g=i.geometry.getCentroid();if(b.labelXOffset||b.labelYOffset){var e=isNaN(b.labelXOffset)?0:b.labelXOffset;var d=isNaN(b.labelYOffset)?0:b.labelYOffset;var f=this.getResolution();g.move(e*f,d*f)}this.drawText(i.id,b,g)}else{this.removeText(i.id)}return c}}},calculateFeatureDx:function(e,d){this.featureDx=0;if(d){var f=d.getWidth(),b=(this.extent.left+this.extent.right)/2,c=(e.left+e.right)/2,a=Math.round((c-b)/f);this.featureDx=a*f}},drawGeometry:function(c,a,b){},drawText:function(c,b,a){},removeText:function(a){},clear:function(){},getFeatureIdFromEvent:function(a){},eraseFeatures:function(d){if(!(OpenLayers.Util.isArray(d))){d=[d]}for(var c=0,a=d.length;c<a;++c){var b=d[c];this.eraseGeometry(b.geometry,b.id);this.removeText(b.id)}},eraseGeometry:function(b,a){},moveRoot:function(a){},getRenderLayerId:function(){return this.container.id},applyDefaultSymbolizer:function(b){var a=OpenLayers.Util.extend({},OpenLayers.Renderer.defaultSymbolizer);if(b.stroke===false){delete a.strokeWidth;delete a.strokeColor}if(b.fill===false){delete a.fillColor}OpenLayers.Util.extend(a,b);return a},CLASS_NAME:"OpenLayers.Renderer"});OpenLayers.Renderer.defaultSymbolizer={fillColor:"#000000",strokeColor:"#000000",strokeWidth:2,fillOpacity:1,strokeOpacity:1,pointRadius:0,labelAlign:"cm"};OpenLayers.Renderer.symbol={star:[350,75,379,161,469,161,397,215,423,301,350,250,277,301,303,215,231,161,321,161,350,75],cross:[4,0,6,0,6,4,10,4,10,6,6,6,6,10,4,10,4,6,0,6,0,4,4,4,4,0],x:[0,0,25,0,50,35,75,0,100,0,65,50,100,100,75,100,50,65,25,100,0,100,35,50,0,0],square:[0,0,0,1,1,1,1,0,0,0],triangle:[0,10,10,10,5,0,0,10]};OpenLayers.StyleMap=OpenLayers.Class({styles:null,extendDefault:true,initialize:function(c,a){this.styles={"default":new OpenLayers.Style(OpenLayers.Feature.Vector.style["default"]),select:new OpenLayers.Style(OpenLayers.Feature.Vector.style.select),temporary:new OpenLayers.Style(OpenLayers.Feature.Vector.style.temporary),"delete":new OpenLayers.Style(OpenLayers.Feature.Vector.style["delete"])};if(c instanceof OpenLayers.Style){this.styles["default"]=c;this.styles.select=c;this.styles.temporary=c;this.styles["delete"]=c}else{if(typeof c=="object"){for(var b in c){if(c[b] instanceof OpenLayers.Style){this.styles[b]=c[b]}else{if(typeof c[b]=="object"){this.styles[b]=new OpenLayers.Style(c[b])}else{this.styles["default"]=new OpenLayers.Style(c);this.styles.select=new OpenLayers.Style(c);this.styles.temporary=new OpenLayers.Style(c);this.styles["delete"]=new OpenLayers.Style(c);break}}}}}OpenLayers.Util.extend(this,a)},destroy:function(){for(var a in this.styles){this.styles[a].destroy()}this.styles=null},createSymbolizer:function(b,c){if(!b){b=new OpenLayers.Feature.Vector()}if(!this.styles[c]){c="default"}b.renderIntent=c;var a={};if(this.extendDefault&&c!="default"){a=this.styles["default"].createSymbolizer(b)}return OpenLayers.Util.extend(a,this.styles[c].createSymbolizer(b))},addUniqueValueRules:function(b,d,f,a){var e=[];for(var c in f){e.push(new OpenLayers.Rule({symbolizer:f[c],context:a,filter:new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.EQUAL_TO,property:d,value:c})}))}this.styles[b].addRules(e)},CLASS_NAME:"OpenLayers.StyleMap"});OpenLayers.Layer.Vector=OpenLayers.Class(OpenLayers.Layer,{isBaseLayer:false,isFixed:false,features:null,filter:null,selectedFeatures:null,unrenderedFeatures:null,reportError:true,style:null,styleMap:null,strategies:null,protocol:null,renderers:["SVG","VML","Canvas"],renderer:null,rendererOptions:null,geometryType:null,drawn:false,ratio:1,initialize:function(c,b){OpenLayers.Layer.prototype.initialize.apply(this,arguments);if(!this.renderer||!this.renderer.supported()){this.assignRenderer()}if(!this.renderer||!this.renderer.supported()){this.renderer=null;this.displayError()}if(!this.styleMap){this.styleMap=new OpenLayers.StyleMap()}this.features=[];this.selectedFeatures=[];this.unrenderedFeatures={};if(this.strategies){for(var d=0,a=this.strategies.length;d<a;d++){this.strategies[d].setLayer(this)}}},destroy:function(){if(this.strategies){var c,b,a;for(b=0,a=this.strategies.length;b<a;b++){c=this.strategies[b];if(c.autoDestroy){c.destroy()}}this.strategies=null}if(this.protocol){if(this.protocol.autoDestroy){this.protocol.destroy()}this.protocol=null}this.destroyFeatures();this.features=null;this.selectedFeatures=null;this.unrenderedFeatures=null;if(this.renderer){this.renderer.destroy()}this.renderer=null;this.geometryType=null;this.drawn=null;OpenLayers.Layer.prototype.destroy.apply(this,arguments)},clone:function(e){if(e==null){e=new OpenLayers.Layer.Vector(this.name,this.getOptions())}e=OpenLayers.Layer.prototype.clone.apply(this,[e]);var c=this.features;var a=c.length;var d=new Array(a);for(var b=0;b<a;++b){d[b]=c[b].clone()}e.features=d;return e},refresh:function(a){if(this.calculateInRange()&&this.visibility){this.events.triggerEvent("refresh",a)}},assignRenderer:function(){for(var c=0,a=this.renderers.length;c<a;c++){var b=this.renderers[c];var d=(typeof b=="function")?b:OpenLayers.Renderer[b];if(d&&d.prototype.supported()){this.renderer=new d(this.div,this.rendererOptions);break}}},displayError:function(){if(this.reportError){OpenLayers.Console.userError(OpenLayers.i18n("browserNotSupported",{renderers:this.renderers.join("\n")}))}},setMap:function(b){OpenLayers.Layer.prototype.setMap.apply(this,arguments);if(!this.renderer){this.map.removeLayer(this)}else{this.renderer.map=this.map;var a=this.map.getSize();a.w=a.w*this.ratio;a.h=a.h*this.ratio;this.renderer.setSize(a)}},afterAdd:function(){if(this.strategies){var c,b,a;for(b=0,a=this.strategies.length;b<a;b++){c=this.strategies[b];if(c.autoActivate){c.activate()}}}},removeMap:function(c){this.drawn=false;if(this.strategies){var d,b,a;for(b=0,a=this.strategies.length;b<a;b++){d=this.strategies[b];if(d.autoActivate){d.deactivate()}}}},onMapResize:function(){OpenLayers.Layer.prototype.onMapResize.apply(this,arguments);var a=this.map.getSize();a.w=a.w*this.ratio;a.h=a.h*this.ratio;this.renderer.setSize(a)},moveTo:function(a,b,l){OpenLayers.Layer.prototype.moveTo.apply(this,arguments);var c=true;if(!l){this.renderer.root.style.visibility="hidden";var k=this.map.getSize(),h=k.w,f=k.h,e=(h/2*this.ratio)-h/2,d=(f/2*this.ratio)-f/2;e+=this.map.layerContainerOriginPx.x;e=-Math.round(e);d+=this.map.layerContainerOriginPx.y;d=-Math.round(d);this.div.style.left=e+"px";this.div.style.top=d+"px";var m=this.map.getExtent().scale(this.ratio);c=this.renderer.setExtent(m,b);this.renderer.root.style.visibility="visible";if(OpenLayers.IS_GECKO===true){this.div.scrollLeft=this.div.scrollLeft}if(!b&&c){for(var g in this.unrenderedFeatures){var n=this.unrenderedFeatures[g];this.drawFeature(n)}}}if(!this.drawn||b||!c){this.drawn=true;var n;for(var g=0,j=this.features.length;g<j;g++){this.renderer.locked=(g!==(j-1));n=this.features[g];this.drawFeature(n)}}},display:function(a){OpenLayers.Layer.prototype.display.apply(this,arguments);var b=this.div.style.display;if(b!=this.renderer.root.style.display){this.renderer.root.style.display=b}},addFeatures:function(b,j){if(!(OpenLayers.Util.isArray(b))){b=[b]}var g=!j||!j.silent;if(g){var a={features:b};var f=this.events.triggerEvent("beforefeaturesadded",a);if(f===false){return}b=a.features}var d=[];for(var c=0,e=b.length;c<e;c++){if(c!=(b.length-1)){this.renderer.locked=true}else{this.renderer.locked=false}var h=b[c];if(this.geometryType&&!(h.geometry instanceof this.geometryType)){throw new TypeError("addFeatures: component should be an "+this.geometryType.prototype.CLASS_NAME)}h.layer=this;if(!h.style&&this.style){h.style=OpenLayers.Util.extend({},this.style)}if(g){if(this.events.triggerEvent("beforefeatureadded",{feature:h})===false){continue}this.preFeatureInsert(h)}d.push(h);this.features.push(h);this.drawFeature(h);if(g){this.events.triggerEvent("featureadded",{feature:h});this.onFeatureInsert(h)}}if(g){this.events.triggerEvent("featuresadded",{features:d})}},removeFeatures:function(e,a){if(!e||e.length===0){return}if(e===this.features){return this.removeAllFeatures(a)}if(!(OpenLayers.Util.isArray(e))){e=[e]}if(e===this.selectedFeatures){e=e.slice()}var d=!a||!a.silent;if(d){this.events.triggerEvent("beforefeaturesremoved",{features:e})}for(var c=e.length-1;c>=0;c--){if(c!=0&&e[c-1].geometry){this.renderer.locked=true}else{this.renderer.locked=false}var b=e[c];delete this.unrenderedFeatures[b.id];if(d){this.events.triggerEvent("beforefeatureremoved",{feature:b})}this.features=OpenLayers.Util.removeItem(this.features,b);b.layer=null;if(b.geometry){this.renderer.eraseFeatures(b)}if(OpenLayers.Util.indexOf(this.selectedFeatures,b)!=-1){OpenLayers.Util.removeItem(this.selectedFeatures,b)}if(d){this.events.triggerEvent("featureremoved",{feature:b})}}if(d){this.events.triggerEvent("featuresremoved",{features:e})}},removeAllFeatures:function(a){var d=!a||!a.silent;var e=this.features;if(d){this.events.triggerEvent("beforefeaturesremoved",{features:e})}var c;for(var b=e.length-1;b>=0;b--){c=e[b];if(d){this.events.triggerEvent("beforefeatureremoved",{feature:c})}c.layer=null;if(d){this.events.triggerEvent("featureremoved",{feature:c})}}this.renderer.clear();this.features=[];this.unrenderedFeatures={};this.selectedFeatures=[];if(d){this.events.triggerEvent("featuresremoved",{features:e})}},destroyFeatures:function(d,a){var c=(d==undefined);if(c){d=this.features}if(d){this.removeFeatures(d,a);for(var b=d.length-1;b>=0;b--){d[b].destroy()}}},drawFeature:function(a,b){if(!this.drawn){return}if(typeof b!="object"){if(!b&&a.state===OpenLayers.State.DELETE){b="delete"}var c=b||a.renderIntent;b=a.style||this.style;if(!b){b=this.styleMap.createSymbolizer(a,c)}}var d=this.renderer.drawFeature(a,b);if(d===false||d===null){this.unrenderedFeatures[a.id]=a}else{delete this.unrenderedFeatures[a.id]}},eraseFeatures:function(a){this.renderer.eraseFeatures(a)},getFeatureFromEvent:function(a){if(!this.renderer){throw new Error("getFeatureFromEvent called on layer with no renderer. This usually means you destroyed a layer, but not some handler which is associated with it.")}var b=null;var c=this.renderer.getFeatureIdFromEvent(a);if(c){if(typeof c==="string"){b=this.getFeatureById(c)}else{b=c}}return b},getFeatureBy:function(e,d){var c=null;for(var b=0,a=this.features.length;b<a;++b){if(this.features[b][e]==d){c=this.features[b];break}}return c},getFeatureById:function(a){return this.getFeatureBy("id",a)},getFeatureByFid:function(a){return this.getFeatureBy("fid",a)},getFeaturesByAttribute:function(d,e){var c,b,a=this.features.length,f=[];for(c=0;c<a;c++){b=this.features[c];if(b&&b.attributes){if(b.attributes[d]===e){f.push(b)}}}return f},onFeatureInsert:function(a){},preFeatureInsert:function(a){},getDataExtent:function(){var b=null;var d=this.features;if(d&&(d.length>0)){var e=null;for(var c=0,a=d.length;c<a;c++){e=d[c].geometry;if(e){if(b===null){b=new OpenLayers.Bounds()}b.extend(e.getBounds())}}}return b},CLASS_NAME:"OpenLayers.Layer.Vector"});Ext.namespace("GeoExt");GeoExt.VectorLegend=Ext.extend(GeoExt.LayerLegend,{layerRecord:null,layer:null,rules:null,symbolType:null,untitledPrefix:"Untitled ",clickableSymbol:false,clickableTitle:false,selectOnClick:false,enableDD:false,bodyBorder:false,feature:null,selectedRule:null,currentScaleDenominator:null,initComponent:function(){GeoExt.VectorLegend.superclass.initComponent.call(this);if(this.layerRecord){this.layer=this.layerRecord.getLayer();if(this.layer.map){this.map=this.layer.map;this.currentScaleDenominator=this.layer.map.getScale();this.layer.map.events.on({zoomend:this.onMapZoom,scope:this})}}if(!this.symbolType){if(this.feature){this.symbolType=this.symbolTypeFromFeature(this.feature)}else{if(this.layer){if(this.layer.features.length>0){var b;for(var a=0,c=this.layer.features.length;a<c;a++){if(this.layer.features[a].geometry!==null){b=this.layer.features[a].clone();break}}b.attributes={};this.feature=b;this.symbolType=this.symbolTypeFromFeature(this.feature)}else{this.layer.events.on({featuresadded:this.onFeaturesAdded,scope:this})}}}}if(this.layer&&this.feature&&!this.rules){this.setRules()}this.rulesContainer=new Ext.Container({autoEl:{}});this.add(this.rulesContainer);this.addEvents("titleclick","symbolclick","ruleclick","ruleselected","ruleunselected","rulemoved");this.update()},onMapZoom:function(){this.setCurrentScaleDenominator(this.layer.map.getScale())},symbolTypeFromFeature:function(b){var a=b.geometry.CLASS_NAME.match(/Point|Line|Polygon/);return(a&&a[0])||"Point"},onFeaturesAdded:function(a){for(var c=0,d=a.features.length;c<d;++c){if(a.features[c].geometry!==null){this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this});var b=a.features[c].clone();b.attributes={};this.feature=b;this.symbolType=this.symbolTypeFromFeature(this.feature);if(!this.rules){this.setRules()}this.update();break}}},setRules:function(){var a=this.layer.styleMap&&this.layer.styleMap.styles["default"];if(!a){a=new OpenLayers.Style()}if(a.rules.length===0){this.rules=[new OpenLayers.Rule({title:a.title,symbolizer:a.createSymbolizer(this.feature)})]}else{this.rules=a.rules}},setCurrentScaleDenominator:function(a){if(a!==this.currentScaleDenominator){this.currentScaleDenominator=a;this.update()}},getRuleEntry:function(a){return this.rulesContainer.items.get(this.rules.indexOf(a))},addRuleEntry:function(a,b){this.rulesContainer.add(this.createRuleEntry(a));if(!b){this.doLayout()}},removeRuleEntry:function(a,c){var b=this.getRuleEntry(a);if(b){this.rulesContainer.remove(b);if(!c){this.doLayout()}}},selectRuleEntry:function(b){var a=b!=this.selectedRule;if(this.selectedRule){this.unselect()}if(a){var c=this.getRuleEntry(b);c.body.addClass("x-grid3-row-selected");this.selectedRule=b;this.fireEvent("ruleselected",this,b)}},unselect:function(){this.rulesContainer.items.each(function(b,a){if(this.rules[a]==this.selectedRule){b.body.removeClass("x-grid3-row-selected");this.selectedRule=null;this.fireEvent("ruleunselected",this,this.rules[a])}},this)},createRuleEntry:function(b){var a=true;if(this.currentScaleDenominator!=null){if(b.minScaleDenominator){a=a&&(this.currentScaleDenominator>=b.minScaleDenominator)}if(b.maxScaleDenominator){a=a&&(this.currentScaleDenominator<b.maxScaleDenominator)}}return{xtype:"panel",layout:"column",border:false,hidden:!a,bodyStyle:this.selectOnClick?{cursor:"pointer"}:undefined,defaults:{border:false},items:[this.createRuleRenderer(b),this.createRuleTitle(b)],listeners:{render:function(c){this.selectOnClick&&c.getEl().on({click:function(d){this.selectRuleEntry(b)},scope:this});if(this.enableDD==true){this.addDD(c)}},scope:this}}},createRuleRenderer:function(k){var f=[this.symbolType,"Point","Line","Polygon"];var h,e,c,g,m;var l=k.symbolizers;if(!l){var n=k.symbolizer;for(c=0,g=f.length;c<g;++c){h=f[c];if(n[h]){n=n[h];e=true;break}}l=[n]}else{var a;outer:for(c=0,m=f.length;c<m;++c){h=f[c];a=OpenLayers.Symbolizer[h];if(a){for(var b=0,d=l.length;b<d;++b){if(l[b] instanceof a){e=true;break outer}}}}}return{xtype:"gx_renderer",labelText:"Ab",symbolType:e?h:this.symbolType,symbolizers:l,style:this.clickableSymbol?{cursor:"pointer"}:undefined,listeners:{click:function(){if(this.clickableSymbol){this.fireEvent("symbolclick",this,k);this.fireEvent("ruleclick",this,k)}},scope:this}}},createRuleTitle:function(a){return{cls:"x-form-item",style:"padding: 0.2em 0.5em 0;",bodyStyle:Ext.applyIf({background:"transparent"},this.clickableTitle?{cursor:"pointer"}:undefined),html:this.getRuleTitle(a),listeners:{render:function(b){this.clickableTitle&&b.getEl().on({click:function(){this.fireEvent("titleclick",this,a);this.fireEvent("ruleclick",this,a)},scope:this})},scope:this}}},addDD:function(b){var c=b.ownerCt;var a=this;new Ext.dd.DragSource(b.getEl(),{ddGroup:c.id,onDragOut:function(g,d){var f=Ext.getCmp(d);f.removeClass("gx-ruledrag-insert-above");f.removeClass("gx-ruledrag-insert-below");return Ext.dd.DragZone.prototype.onDragOut.apply(this,arguments)},onDragEnter:function(j,g){var i=Ext.getCmp(g);var f;var d=c.items.indexOf(b);var h=c.items.indexOf(i);if(d>h){f="gx-ruledrag-insert-above"}else{if(d<h){f="gx-ruledrag-insert-below"}}f&&i.addClass(f);return Ext.dd.DragZone.prototype.onDragEnter.apply(this,arguments)},onDragDrop:function(f,d){a.moveRule(c.items.indexOf(b),c.items.indexOf(Ext.getCmp(d)));return Ext.dd.DragZone.prototype.onDragDrop.apply(this,arguments)},getDragData:function(g){var f=g.getTarget(".x-column-inner");if(f){var h=f.cloneNode(true);h.id=Ext.id();return{sourceEl:f,repairXY:Ext.fly(f).getXY(),ddel:h}}}});new Ext.dd.DropTarget(b.getEl(),{ddGroup:c.id,notifyDrop:function(){return true}})},update:function(){GeoExt.VectorLegend.superclass.update.apply(this,arguments);var b,c;if(this.symbolType&&this.rules){if(this.rulesContainer.items){var a;for(b=this.rulesContainer.items.length-1;b>=0;--b){a=this.rulesContainer.getComponent(b);this.rulesContainer.remove(a,true)}}for(b=0,c=this.rules.length;b<c;++b){this.addRuleEntry(this.rules[b],true)}this.doLayout();if(this.selectedRule){this.getRuleEntry(this.selectedRule).body.addClass("x-grid3-row-selected")}}},updateRuleEntry:function(a){var b=this.getRuleEntry(a);if(b){b.removeAll();b.add(this.createRuleRenderer(a));b.add(this.createRuleTitle(a));b.doLayout()}},moveRule:function(a,b){var c=this.rules[a];this.rules.splice(a,1);this.rules.splice(b,0,c);this.update();this.fireEvent("rulemoved",this,c)},getRuleTitle:function(a){var b=a.title||a.name||"";if(!b&&this.untitledPrefix){b=this.untitledPrefix+(this.rules.indexOf(a)+1)}return b},beforeDestroy:function(){if(this.layer){if(this.layer.events){this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this})}if(this.layer.map&&this.layer.map.events){this.layer.map.events.un({zoomend:this.onMapZoom,scope:this})}}delete this.layer;delete this.map;delete this.rules;GeoExt.VectorLegend.superclass.beforeDestroy.apply(this,arguments)},onStoreRemove:function(b,a,c){if(a.getLayer()===this.layer){if(this.map&&this.map.events){this.map.events.un({zoomend:this.onMapZoom,scope:this})}}},onStoreAdd:function(d,c,e){for(var f=0,a=c.length;f<a;f++){var b=c[f];if(b.getLayer()===this.layer){if(this.layer.map&&this.layer.map.events){this.layer.map.events.on({zoomend:this.onMapZoom,scope:this})}}}}});GeoExt.VectorLegend.supports=function(a){return a.getLayer() instanceof OpenLayers.Layer.Vector?1:0};GeoExt.LayerLegend.types.gx_vectorlegend=GeoExt.VectorLegend;Ext.reg("gx_vectorlegend",GeoExt.VectorLegend);Ext.namespace("GeoExt");GeoExt.FeatureRenderer=Ext.extend(Ext.BoxComponent,{feature:undefined,symbolizers:[OpenLayers.Feature.Vector.style["default"]],symbolType:"Polygon",labelText:null,resolution:1,minWidth:20,minHeight:20,renderers:["SVG","VML","Canvas"],rendererOptions:null,pointFeature:undefined,lineFeature:undefined,polygonFeature:undefined,textFeature:undefined,renderer:null,initComponent:function(){GeoExt.FeatureRenderer.superclass.initComponent.apply(this,arguments);Ext.applyIf(this,{pointFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(0,0)),lineFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([new OpenLayers.Geometry.Point(-8,-3),new OpenLayers.Geometry.Point(-3,3),new OpenLayers.Geometry.Point(3,-3),new OpenLayers.Geometry.Point(8,3)])),polygonFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(-8,-4),new OpenLayers.Geometry.Point(-6,-6),new OpenLayers.Geometry.Point(6,-6),new OpenLayers.Geometry.Point(8,-4),new OpenLayers.Geometry.Point(8,4),new OpenLayers.Geometry.Point(6,6),new OpenLayers.Geometry.Point(-6,6),new OpenLayers.Geometry.Point(-8,4)])])),textFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(0,0))});if(!this.feature){this.setFeature(null,{draw:false})}this.addEvents("click")},initCustomEvents:function(){this.clearCustomEvents();this.el.on("click",this.onClick,this)},clearCustomEvents:function(){if(this.el&&this.el.removeAllListeners){this.el.removeAllListeners()}},onClick:function(){this.fireEvent("click",this)},onRender:function(b,a){if(!this.el){this.el=document.createElement("div");this.el.id=this.getId()}if(!this.renderer||!this.renderer.supported()){this.assignRenderer()}this.renderer.map={getResolution:(function(){return this.resolution}).createDelegate(this)};GeoExt.FeatureRenderer.superclass.onRender.apply(this,arguments);this.drawFeature()},afterRender:function(){GeoExt.FeatureRenderer.superclass.afterRender.apply(this,arguments);this.initCustomEvents()},onResize:function(a,b){this.setRendererDimensions();GeoExt.FeatureRenderer.superclass.onResize.apply(this,arguments)},setRendererDimensions:function(){var h=this.feature.geometry.getBounds();var j=h.getWidth();var g=h.getHeight();var e=this.initialConfig.resolution;if(!e){e=Math.max(j/this.width||0,g/this.height||0)||1}this.resolution=e;var c=Math.max(this.width||this.minWidth,j/e);var i=Math.max(this.height||this.minHeight,g/e);var b=h.getCenterPixel();var f=c*e/2;var d=i*e/2;var a=new OpenLayers.Bounds(b.x-f,b.y-d,b.x+f,b.y+d);this.renderer.setSize(new OpenLayers.Size(Math.round(c),Math.round(i)));this.renderer.setExtent(a,true)},assignRenderer:function(){for(var b=0,a=this.renderers.length;b<a;++b){var c=OpenLayers.Renderer[this.renderers[b]];if(c&&c.prototype.supported()){this.renderer=new c(this.el,this.rendererOptions);break}}},setSymbolizers:function(b,a){this.symbolizers=b;if(!a||a.draw){this.drawFeature()}},setSymbolType:function(b,a){this.symbolType=b;this.setFeature(null,a)},setFeature:function(b,a){this.feature=b||this[this.symbolType.toLowerCase()+"Feature"];if(!a||a.draw){this.drawFeature()}},drawFeature:function(){this.renderer.clear();this.setRendererDimensions();var e,d,b;for(var c=0,a=this.symbolizers.length;c<a;++c){e=this.symbolizers[c];d=this.feature;if(e instanceof OpenLayers.Symbolizer){e=e.clone();if(OpenLayers.Symbolizer.Text&&e instanceof OpenLayers.Symbolizer.Text&&e.graphic===false){e.fill=e.stroke=false}if(!this.initialConfig.feature){b=e.CLASS_NAME.split(".").pop().toLowerCase();d=this[b+"Feature"]}}else{e=Ext.apply({},e)}if(e.label!==undefined&&this.labelText!==null){e.label=this.labelText}this.renderer.drawFeature(d.clone(),e)}},update:function(a){a=a||{};if(a.feature){this.setFeature(a.feature,{draw:false})}else{if(a.symbolType){this.setSymbolType(a.symbolType,{draw:false})}}if(a.symbolizers){this.setSymbolizers(a.symbolizers,{draw:false})}this.drawFeature()},beforeDestroy:function(){this.clearCustomEvents();if(this.renderer){this.renderer.destroy()}}});Ext.reg("gx_renderer",GeoExt.FeatureRenderer);(function(){var a=function(c,b){return function(d){if(b&&b[c]){b[c].call(b.scope||window,Ext.applyIf({argument:b.argument},d))}}};Ext.apply(Ext.lib.Ajax,{request:function(g,e,b,f,c){c=c||{};g=g||c.method;var d=c.headers;if(c.xmlData){if(!d||!d["Content-Type"]){d=d||{};d["Content-Type"]="text/xml"}g=g||"POST";f=c.xmlData}else{if(c.jsonData){if(!d||!d["Content-Type"]){d=d||{};d["Content-Type"]="application/json"}g=g||"POST";f=typeof c.jsonData=="object"?Ext.encode(c.jsonData):c.jsonData}}if((g&&g.toLowerCase()=="post")&&(c.form||c.params)&&(!d||!d["Content-Type"])){d=d||{};d["Content-Type"]="application/x-www-form-urlencoded"}return OpenLayers.Request.issue({success:a("success",b),failure:a("failure",b),method:g,headers:d,data:f,url:e})},isCallInProgress:function(b){return true},abort:function(b){b.abort()}})})();(function(){Ext.util.Observable.observeClass(Ext.form.TextField);Ext.form.TextField.on("specialkey",function(a,b){if(a.hasFocus&&b.getKey()===b.ENTER){a.blur.defer(10,a)}})}());Ext.namespace("gxp");gxp.util={_uniqueNames:{},getOGCExceptionText:function(a){var b;if(a&&a.exceptions){b=[];Ext.each(a.exceptions,function(c){Ext.each(c.texts,function(d){b.push(d)})});b=b.join("\n")}else{b="Unknown error (no exception report)."}return b},dispatch:function(f,c,j){c=c||Ext.emptyFn;j=j||this;var a=f.length;var h=0;var g={};function b(){++h;if(h===a){c.call(j,g)}}function d(i){window.setTimeout(function(){f[i].apply(j,[b,g])})}for(var e=0;e<a;++e){d(e)}},uniqueName:function(c,b){b=b||" ";var f=new RegExp(b+"[0-9]*$");var d=c.replace(f,"");var g=f.exec(c);var e=this._uniqueNames[d]!==undefined?this._uniqueNames[d]:(g instanceof Array?Number(g[0]):undefined);var a=d;if(e!==undefined){e++;a+=b+e}this._uniqueNames[d]=e||0;return a},getAbsoluteUrl:function(c){var b;if(Ext.isIE6||Ext.isIE7||Ext.isIE8){b=document.createElement("<a href='"+c+"'/>");b.style.display="none";document.body.appendChild(b);b.href=b.href;document.body.removeChild(b)}else{b=document.createElement("a");b.href=c}return b.href},throttle:(function(){var a=function(f,c,e){var g,b,d,i,h=function(){f.apply(e||this,d);g=new Date().getTime()};return function(){b=new Date().getTime()-g;d=arguments;clearTimeout(i);if(!g||(b>=c)){h()}else{i=setTimeout(h,c-b)}}};return function(d,b,c){return a(d,b,c)}})(),md5:(function(){var c=[0,3614090360,3905402710,606105819,3250441966,4118548399,1200080426,2821735955,4249261313,1770035416,2336552879,4294925233,2304563134,1804603682,4254626195,2792965006,1236535329,4129170786,3225465664,643717713,3921069994,3593408605,38016083,3634488961,3889429448,568446438,3275163606,4107603335,1163531501,2850285829,4243563512,1735328473,2368359562,4294588738,2272392833,1839030562,4259657740,2763975236,1272893353,4139469664,3200236656,681279174,3936430074,3572445317,76029189,3654602809,3873151461,530742520,3299628645,4096336452,1126891415,2878612391,4237533241,1700485571,2399980690,4293915773,2240044497,1873313359,4264355552,2734768916,1309151649,4149444226,3174756917,718787259,3951481745];var l=[[0,7,1],[1,12,2],[2,17,3],[3,22,4],[4,7,5],[5,12,6],[6,17,7],[7,22,8],[8,7,9],[9,12,10],[10,17,11],[11,22,12],[12,7,13],[13,12,14],[14,17,15],[15,22,16]];var j=[[1,5,17],[6,9,18],[11,14,19],[0,20,20],[5,5,21],[10,9,22],[15,14,23],[4,20,24],[9,5,25],[14,9,26],[3,14,27],[8,20,28],[13,5,29],[2,9,30],[7,14,31],[12,20,32]];var h=[[5,4,33],[8,11,34],[11,16,35],[14,23,36],[1,4,37],[4,11,38],[7,16,39],[10,23,40],[13,4,41],[0,11,42],[3,16,43],[6,23,44],[9,4,45],[12,11,46],[15,16,47],[2,23,48]];var g=[[0,6,49],[7,10,50],[14,15,51],[5,21,52],[12,6,53],[3,10,54],[10,15,55],[1,21,56],[8,6,57],[15,10,58],[6,15,59],[13,21,60],[4,6,61],[11,10,62],[2,15,63],[9,21,64]];function q(r,t,s){return(r&t)|(~r&s)}function o(r,t,s){return(r&s)|(t&~s)}function n(r,t,s){return r^t^s}function k(r,t,s){return t^(r|~s)}var m=[[q,l],[o,j],[n,h],[k,g]];function i(r){return String.fromCharCode(r&255)+String.fromCharCode((r>>>8)&255)+String.fromCharCode((r>>>16)&255)+String.fromCharCode((r>>>24)&255)}function b(r){return r.charCodeAt(0)|(r.charCodeAt(1)<<8)|(r.charCodeAt(2)<<16)|(r.charCodeAt(3)<<24)}function e(r){while(r<0){r+=4294967296}while(r>4294967295){r-=4294967296}return r}function d(E,J,z,y,v){var D,C,B,A;var w,I,G;var H,F;D=y[0];C=y[1];B=y[2];A=y[3];w=v[0];I=v[1];G=v[2];F=z(J[C],J[B],J[A]);H=J[D]+F+E[w]+c[G];H=e(H);H=((H<<I)|(H>>>(32-I)));H+=J[C];J[D]=e(H)}function f(B){var v,G,u,H;var F,E,C,D,t;var A,y,w;var z;u=[1732584193,4023233417,2562383102,271733878];F=B.length;E=F&63;C=(E<56)?(56-E):(120-E);if(C>0){B+="\x80";for(A=0;A<C-1;A++){B+="\x00"}}B+=i(F*8);B+=i(0);F+=C+8;v=[0,1,2,3];G=[16];H=[4];for(w=0;w<F;w+=64){for(A=0,y=w;A<16;A++,y+=4){G[A]=B.charCodeAt(y)|(B.charCodeAt(y+1)<<8)|(B.charCodeAt(y+2)<<16)|(B.charCodeAt(y+3)<<24)}for(A=0;A<4;A++){H[A]=u[A]}for(A=0;A<4;A++){D=m[A][0];t=m[A][1];for(y=0;y<16;y++){d(G,H,D,v,t[y]);z=v[0];v[0]=v[3];v[3]=v[2];v[2]=v[1];v[1]=z}}for(A=0;A<4;A++){u[A]+=H[A];u[A]=e(u[A])}}return i(u[0])+i(u[1])+i(u[2])+i(u[3])}function a(u){var t,s,v;var r;r=f(u);s="";for(t=0;t<16;t++){v=r.charCodeAt(t);s+="0123456789abcdef".charAt((v>>4)&15);s+="0123456789abcdef".charAt(v&15)}return s}return function(r){return a(r)}})()};Ext.namespace("gxp.menu");gxp.menu.LayerMenu=Ext.extend(Ext.menu.Menu,{layerText:"Layer",layers:null,initComponent:function(){gxp.menu.LayerMenu.superclass.initComponent.apply(this,arguments);this.layers.on("add",this.onLayerAdd,this);this.onLayerAdd()},onRender:function(b,a){gxp.menu.LayerMenu.superclass.onRender.apply(this,arguments)},beforeDestroy:function(){if(this.layers&&this.layers.on){this.layers.un("add",this.onLayerAdd,this)}delete this.layers;gxp.menu.LayerMenu.superclass.beforeDestroy.apply(this,arguments)},onLayerAdd:function(){this.removeAll();this.add({iconCls:"gxp-layer-visibility",text:this.layerText,canActivate:false},"-");this.layers.each(function(a){var b=a.getLayer();if(b.displayInLayerSwitcher){var c=new Ext.menu.CheckItem({text:a.get("title"),checked:a.getLayer().getVisibility(),group:a.get("group"),listeners:{checkchange:function(e,d){a.getLayer().setVisibility(d)}}});if(this.items.getCount()>2){this.insert(2,c)}else{this.add(c)}}},this)}});Ext.reg("gxp_layermenu",gxp.menu.LayerMenu);Ext.namespace("gxp");gxp.CrumbPanel=Ext.extend(Ext.TabPanel,{widths:null,enableTabScroll:true,initComponent:function(){gxp.CrumbPanel.superclass.initComponent.apply(this,arguments);this.widths={}},onBeforeAdd:function(a){gxp.CrumbPanel.superclass.onBeforeAdd.apply(this,arguments);if(a.shortTitle){a.title=a.shortTitle}},onAdd:function(a){gxp.CrumbPanel.superclass.onAdd.apply(this,arguments);this.setActiveTab(this.items.getCount()-1);a.on("hide",this.onCmpHide,this);a.getEl().dom.style.display=""},onRemove:function(a){gxp.CrumbPanel.superclass.onRemove.apply(this,arguments);a.un("hide",this.onCmpHide,this);var b=this.widths[this.get(this.items.getCount()-1).id];if(b&&b<this.getWidth()){this.setWidth(b);if(this.ownerCt){this.ownerCt.syncSize()}}a.getEl().dom.style.display="none";this.activeTab.doLayout()},onRender:function(a){if(!this.initialConfig.itemTpl){this.itemTpl=new Ext.Template('<li class="{cls} gxp-crumb" id="{id}"><div class="gxp-crumb-separator">\u00BB</div>','<a class="x-tab-right" href="#"><em class="x-tab-left">','<span class="x-tab-strip-inner"><span class="x-tab-strip-text {iconCls}">{text}</span></span>',"</em></a></li>")}gxp.CrumbPanel.superclass.onRender.apply(this,arguments);this.getEl().down("div").addClass("gxp-crumbpanel-header")},onCmpHide:function(a){var b=this.items.getCount()-1;if(this.items.indexOf(a)===b){this.setActiveTab(this.get(--b))}},setActiveTab:function(e){var a;if(Ext.isNumber(e)){a=e;e=this.get(a)}else{a=this.items.indexOf(e)}if(~a){var d,b;for(b=this.items.getCount()-1;b>a;--b){d=this.get(b);this.remove(d,d.closeAction!=="hide")}}var c=e.initialConfig.minWidth||e.initialConfig.width,f=this.getWidth();if(c>f){this.widths[this.get(a-1).id]=f;this.setWidth(c);if(this.ownerCt){this.ownerCt.syncSize()}}gxp.CrumbPanel.superclass.setActiveTab.apply(this,arguments)}});Ext.reg("gxp_crumbpanel",gxp.CrumbPanel);Ext.namespace("gxp");gxp.LayerUploadPanel=Ext.extend(Ext.FormPanel,{titleLabel:"Title",titleEmptyText:"Layer title",abstractLabel:"Description",abstractEmptyText:"Layer description",fileLabel:"Data",fieldEmptyText:"Browse for data archive...",uploadText:"Upload",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Uploading your data...",invalidFileExtensionText:"File extension must be one of: ",optionsText:"Options",workspaceLabel:"Workspace",workspaceEmptyText:"Default workspace",dataStoreLabel:"Store",dataStoreEmptyText:"Choose a store",dataStoreNewText:"Create new store",crsLabel:"CRS",crsEmptyText:"Coordinate Reference System ID",invalidCrsText:"CRS identifier should be an EPSG code (e.g. EPSG:4326)",fileUpload:true,validFileExtensions:[".zip",".tif",".tiff",".gz",".tar.bz2",".tar",".tgz",".tbz2"],defaultDataStore:null,constructor:function(a){a.errorReader={read:a.handleUploadResponse||this.handleUploadResponse.createDelegate(this)};gxp.LayerUploadPanel.superclass.constructor.call(this,a)},selectedWorkspace:null,initComponent:function(){this.items=[{xtype:"textfield",name:"title",fieldLabel:this.titleLabel,emptyText:this.titleEmptyText,allowBlank:true},{xtype:"textarea",name:"abstract",fieldLabel:this.abstractLabel,emptyText:this.abstractEmptyText,allowBlank:true},{xtype:"fileuploadfield",id:"file",anchor:"90%",emptyText:this.fieldEmptyText,fieldLabel:this.fileLabel,name:"file",buttonText:"",buttonCfg:{iconCls:"gxp-icon-filebrowse"},listeners:{fileselected:function(a,b){a.setValue(b.split(/[/\\]/).pop())}},validator:this.fileNameValidator.createDelegate(this)},{xtype:"fieldset",ref:"optionsFieldset",title:this.optionsText,checkboxToggle:true,collapsed:true,hidden:this.workspace!=undefined&&this.store!=undefined&&this.crs!=undefined,hideMode:"offsets",defaults:{anchor:"97%"},items:[this.createWorkspacesCombo(),this.createDataStoresCombo(),{xtype:"textfield",name:"nativeCRS",fieldLabel:this.crsLabel,emptyText:this.crsEmptyText,allowBlank:true,regex:/^epsg:\d+$/i,regexText:this.invalidCrsText}],listeners:{collapse:function(a){a.items.each(function(b){b.reset()})}}}];this.buttons=[{text:this.uploadText,handler:function(){var c=this.getForm();if(c.isValid()){var a=c.getFieldValues(),b={"import":{}};if(a.workspace){b["import"].targetWorkspace={workspace:{name:a.workspace}}}if(Ext.isEmpty(a.store)&&this.defaultDataStore){b["import"].targetStore={dataStore:{name:this.defaultDataStore}}}else{if(!Ext.isEmpty(a.store)&&a.store!==this.dataStoreNewText){b["import"].targetStore={dataStore:{name:a.store}}}}Ext.Ajax.request({url:this.getUploadUrl(),method:"POST",jsonData:b,success:function(d){this._import=d.getResponseHeader("Location");this.optionsFieldset.expand();c.submit({url:this._import+"/tasks?expand=all",waitMsg:this.waitMsgText,waitMsgTarget:true,reset:true,scope:this})},scope:this})}},scope:this}];this.addEvents("workspaceselected","datastoreselected","uploadcomplete");this.getDefaultDataStore("default");gxp.LayerUploadPanel.superclass.initComponent.call(this)},fileNameValidator:function(b){var f=false;var e,a=b.length;for(var c=0,d=this.validFileExtensions.length;c<d;++c){e=this.validFileExtensions[c];if(b.slice(-e.length).toLowerCase()===e){f=true;break}}return f||this.invalidFileExtensionText+"<br/>"+this.validFileExtensions.join(", ")},createWorkspacesCombo:function(){return{xtype:"combo",name:"workspace",ref:"../workspace",fieldLabel:this.workspaceLabel,store:new Ext.data.JsonStore({url:this.getWorkspacesUrl(),autoLoad:true,root:"workspaces.workspace",fields:["name","href"]}),displayField:"name",valueField:"name",mode:"local",allowBlank:true,triggerAction:"all",forceSelection:true,listeners:{select:function(c,a,b){this.getDefaultDataStore(a.get("name"));this.fireEvent("workspaceselected",this,a)},scope:this}}},createDataStoresCombo:function(){var a=new Ext.data.JsonStore({autoLoad:false,root:"dataStores.dataStore",fields:["name","href"]});this.on({workspaceselected:function(e,d){c.reset();var f=d.get("href");a.removeAll();a.proxy=new Ext.data.HttpProxy({url:f.split(".json").shift()+"/datastores.json"});a.proxy.on("loadexception",b,this);a.load()},scope:this});var b=function(){var d={name:this.dataStoreNewText};var e=new a.recordType(d);a.insert(0,e);a.proxy&&a.proxy.un("loadexception",b,this)};a.on("load",b,this);var c=new Ext.form.ComboBox({name:"store",ref:"../dataStore",emptyText:this.dataStoreEmptyText,fieldLabel:this.dataStoreLabel,store:a,displayField:"name",valueField:"name",mode:"local",allowBlank:true,triggerAction:"all",forceSelection:true,listeners:{select:function(f,d,e){this.fireEvent("datastoreselected",this,d)},scope:this}});return c},getDefaultDataStore:function(a){Ext.Ajax.request({url:this.url+"/workspaces/"+a+"/datastores/default.json",callback:function(d,h,c){this.defaultDataStore=null;if(c.status===200){var e=Ext.decode(c.responseText);if(a==="default"&&e.dataStore&&e.dataStore.workspace){this.workspace.setValue(e.dataStore.workspace.name);var b=this.workspace.store;var g={name:e.dataStore.workspace.name,href:e.dataStore.workspace.href};var f=new b.recordType(g);this.fireEvent("workspaceselected",this,f)}if(e.dataStore&&e.dataStore.enabled===true&&!/file/i.test(e.dataStore.type)){this.defaultDataStore=e.dataStore.name;this.dataStore.setValue(this.defaultDataStore)}}},scope:this})},getUploadUrl:function(){return this.url+"/imports"},getWorkspacesUrl:function(){return this.url+"/workspaces.json"},handleUploadResponse:function(f){var h=this.parseResponseText(f.responseText),e,g,b,c,j,d=this.getForm().getFieldValues(),l=!!h;if(h){if(typeof h==="string"){l=false;c=h}else{g=h.tasks||[h.task];if(g.length===0){l=false;c="Upload contains no suitable files."}else{for(j=g.length-1;j>=0;--j){b=g[j];if(!b){l=false;c="Unknown upload error"}else{if(b.state==="NO_FORMAT"){l=false;c="Upload contains no suitable files."}else{if(b.state==="NO_CRS"&&!d.nativeCRS){l=false;c="Coordinate Reference System (CRS) of source file "+b.data.file+" could not be determined. Please specify manually."}}}}}}}if(!l){e=[{data:{id:"file",msg:c||this.uploadFailedText}}]}else{var a=!!(d.title||d["abstract"]||d.nativeCRS);if(a&&g[0].target.dataStore){this.waitMsg=new Ext.LoadMask((this.ownerCt||this).getEl(),{msg:this.processingUploadText});this.waitMsg.show();var k={title:d.title||undefined,"abstract":d["abstract"]||undefined,srs:d.nativeCRS||undefined};Ext.Ajax.request({method:"PUT",url:g[0].layer.href,jsonData:k,success:this.finishUpload,failure:function(m){if(this.waitMsg){this.waitMsg.hide()}var s=[];try{var o=Ext.decode(m.responseText);if(o.errors){for(var n=0,q=o.errors.length;n<q;++n){s.push({id:~o.errors[n].indexOf("SRS")?"nativeCRS":"file",msg:o.errors[n]})}}}catch(r){s.push({id:"file",msg:m.responseText})}this.getForm().markInvalid(s)},scope:this})}else{this.finishUpload()}}return{success:false,records:e}},finishUpload:function(){Ext.Ajax.request({method:"POST",url:this._import,failure:this.handleFailure,success:this.handleUploadSuccess,scope:this})},parseResponseText:function(d){var c;try{c=Ext.decode(d)}catch(b){var a=d.match(/^\s*<pre[^>]*>(.*)<\/pre>\s*/);if(a){try{c=Ext.decode(a[1])}catch(b){c=a[1]}}}return c},handleUploadSuccess:function(a){Ext.Ajax.request({method:"GET",url:this._import+"?expand=all",failure:this.handleFailure,success:function(b){if(this.waitMsg){this.waitMsg.hide()}this.getForm().reset();var c=Ext.decode(b.responseText);this.fireEvent("uploadcomplete",this,c);delete this._import},scope:this})},handleFailure:function(a){if(a&&a.status===1223){this.handleUploadSuccess(a)}else{if(this.waitMsg){this.waitMsg.hide()}this.getForm().markInvalid([{file:this.uploadFailedText}])}}});Ext.reg("gxp_layeruploadpanel",gxp.LayerUploadPanel);OpenLayers.Format.WKT=OpenLayers.Class(OpenLayers.Format,{initialize:function(a){this.regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,spaces:/\s+/,parenComma:/\)\s*,\s*\(/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/};OpenLayers.Format.prototype.initialize.apply(this,[a])},read:function(f){var e,d,h;f=f.replace(/[\n\r]/g," ");var g=this.regExes.typeStr.exec(f);if(g){d=g[1].toLowerCase();h=g[2];if(this.parse[d]){e=this.parse[d].apply(this,[h])}if(this.internalProjection&&this.externalProjection){if(e&&e.CLASS_NAME=="OpenLayers.Feature.Vector"){e.geometry.transform(this.externalProjection,this.internalProjection)}else{if(e&&d!="geometrycollection"&&typeof e=="object"){for(var c=0,a=e.length;c<a;c++){var b=e[c];b.geometry.transform(this.externalProjection,this.internalProjection)}}}}}return e},write:function(c){var g,f,e;if(c.constructor==Array){g=c;e=true}else{g=[c];e=false}var d=[];if(e){d.push("GEOMETRYCOLLECTION(")}for(var b=0,a=g.length;b<a;++b){if(e&&b>0){d.push(",")}f=g[b].geometry;d.push(this.extractGeometry(f))}if(e){d.push(")")}return d.join("")},extractGeometry:function(d){var b=d.CLASS_NAME.split(".")[2].toLowerCase();if(!this.extract[b]){return null}if(this.internalProjection&&this.externalProjection){d=d.clone();d.transform(this.internalProjection,this.externalProjection)}var a=b=="collection"?"GEOMETRYCOLLECTION":b.toUpperCase();var c=a+"("+this.extract[b].apply(this,[d])+")";return c},extract:{point:function(a){return a.x+" "+a.y},multipoint:function(c){var d=[];for(var b=0,a=c.components.length;b<a;++b){d.push("("+this.extract.point.apply(this,[c.components[b]])+")")}return d.join(",")},linestring:function(b){var d=[];for(var c=0,a=b.components.length;c<a;++c){d.push(this.extract.point.apply(this,[b.components[c]]))}return d.join(",")},multilinestring:function(c){var d=[];for(var b=0,a=c.components.length;b<a;++b){d.push("("+this.extract.linestring.apply(this,[c.components[b]])+")")}return d.join(",")},polygon:function(c){var d=[];for(var b=0,a=c.components.length;b<a;++b){d.push("("+this.extract.linestring.apply(this,[c.components[b]])+")")}return d.join(",")},multipolygon:function(d){var c=[];for(var b=0,a=d.components.length;b<a;++b){c.push("("+this.extract.polygon.apply(this,[d.components[b]])+")")}return c.join(",")},collection:function(c){var d=[];for(var b=0,a=c.components.length;b<a;++b){d.push(this.extractGeometry.apply(this,[c.components[b]]))}return d.join(",")}},parse:{point:function(b){var a=OpenLayers.String.trim(b).split(this.regExes.spaces);return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(a[0],a[1]))},multipoint:function(f){var b;var d=OpenLayers.String.trim(f).split(",");var e=[];for(var c=0,a=d.length;c<a;++c){b=d[c].replace(this.regExes.trimParens,"$1");e.push(this.parse.point.apply(this,[b]).geometry)}return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiPoint(e))},linestring:function(e){var c=OpenLayers.String.trim(e).split(",");var d=[];for(var b=0,a=c.length;b<a;++b){d.push(this.parse.point.apply(this,[c[b]]).geometry)}return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString(d))},multilinestring:function(f){var c;var b=OpenLayers.String.trim(f).split(this.regExes.parenComma);var e=[];for(var d=0,a=b.length;d<a;++d){c=b[d].replace(this.regExes.trimParens,"$1");e.push(this.parse.linestring.apply(this,[c]).geometry)}return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiLineString(e))},polygon:function(h){var c,b,f;var g=OpenLayers.String.trim(h).split(this.regExes.parenComma);var e=[];for(var d=0,a=g.length;d<a;++d){c=g[d].replace(this.regExes.trimParens,"$1");b=this.parse.linestring.apply(this,[c]).geometry;f=new OpenLayers.Geometry.LinearRing(b.components);e.push(f)}return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon(e))},multipolygon:function(f){var d;var b=OpenLayers.String.trim(f).split(this.regExes.doubleParenComma);var e=[];for(var c=0,a=b.length;c<a;++c){d=b[c].replace(this.regExes.trimParens,"$1");e.push(this.parse.polygon.apply(this,[d]).geometry)}return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.MultiPolygon(e))},geometrycollection:function(e){e=e.replace(/,\s*([A-Za-z])/g,"|$1");var d=OpenLayers.String.trim(e).split("|");var c=[];for(var b=0,a=d.length;b<a;++b){c.push(OpenLayers.Format.WKT.prototype.read.apply(this,[d[b]]))}return c}},CLASS_NAME:"OpenLayers.Format.WKT"});OpenLayers.Format.CQL=(function(){var k=["PROPERTY","COMPARISON","VALUE","LOGICAL"],e={PROPERTY:/^[_a-zA-Z]\w*/,COMPARISON:/^(=|<>|<=|<|>=|>|LIKE)/i,IS_NULL:/^IS NULL/i,COMMA:/^,/,LOGICAL:/^(AND|OR)/i,VALUE:/^('([^']|'')*'|\d+(\.\d*)?|\.\d+)/,LPAREN:/^\(/,RPAREN:/^\)/,SPATIAL:/^(BBOX|INTERSECTS|DWITHIN|WITHIN|CONTAINS)/i,NOT:/^NOT/i,BETWEEN:/^BETWEEN/i,GEOMETRY:function(s){var q=/^(POINT|LINESTRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION)/.exec(s);if(q){var o=s.length;var i=s.indexOf("(",q[0].length);if(i>-1){var r=1;while(i<o&&r>0){i++;switch(s.charAt(i)){case"(":r++;break;case")":r--;break;default:}}}return[s.substr(0,i+1)]}},END:/^$/},j={LPAREN:["GEOMETRY","SPATIAL","PROPERTY","VALUE","LPAREN"],RPAREN:["NOT","LOGICAL","END","RPAREN"],PROPERTY:["COMPARISON","BETWEEN","COMMA","IS_NULL"],BETWEEN:["VALUE"],IS_NULL:["END"],COMPARISON:["VALUE"],COMMA:["GEOMETRY","VALUE","PROPERTY"],VALUE:["LOGICAL","COMMA","RPAREN","END"],SPATIAL:["LPAREN"],LOGICAL:["NOT","VALUE","SPATIAL","PROPERTY","LPAREN"],NOT:["PROPERTY","LPAREN"],GEOMETRY:["COMMA","RPAREN"]},g={"=":OpenLayers.Filter.Comparison.EQUAL_TO,"<>":OpenLayers.Filter.Comparison.NOT_EQUAL_TO,"<":OpenLayers.Filter.Comparison.LESS_THAN,"<=":OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,">":OpenLayers.Filter.Comparison.GREATER_THAN,">=":OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,LIKE:OpenLayers.Filter.Comparison.LIKE,BETWEEN:OpenLayers.Filter.Comparison.BETWEEN,"IS NULL":OpenLayers.Filter.Comparison.IS_NULL},d={},n={AND:OpenLayers.Filter.Logical.AND,OR:OpenLayers.Filter.Logical.OR},b={},a={RPAREN:3,LOGICAL:2,COMPARISON:1};var h;for(h in g){if(g.hasOwnProperty(h)){d[g[h]]=h}}for(h in n){if(n.hasOwnProperty(h)){b[n[h]]=h}}function c(o,i){if(i instanceof RegExp){return i.exec(o)}else{return i(o)}}function f(y,w){var r,q,v=w.length;for(r=0;r<v;r++){q=w[r];var u=e[q];var s=c(y,u);if(s){var t=s[0];var x=y.substr(t.length).replace(/^\s*/,"");return{type:q,text:t,remainder:x}}}var o="ERROR: In parsing: ["+y+"], expected one of: ";for(r=0;r<v;r++){q=w[r];o+="\n    "+q+": "+e[q]}throw new Error(o)}function m(r){var o=[];var i,q=["NOT","GEOMETRY","SPATIAL","PROPERTY","LPAREN"];do{i=f(r,q);r=i.remainder;q=j[i.type];if(i.type!="END"&&!q){throw new Error("No follows list for "+i.type)}o.push(i)}while(i.type!="END");return o}function l(u){var t=[],v=[];while(u.length){var w=u.shift();switch(w.type){case"PROPERTY":case"GEOMETRY":case"VALUE":v.push(w);break;case"COMPARISON":case"BETWEEN":case"IS_NULL":case"LOGICAL":var o=a[w.type];while(t.length>0&&(a[t[t.length-1].type]<=o)){v.push(t.pop())}t.push(w);break;case"SPATIAL":case"NOT":case"LPAREN":t.push(w);break;case"RPAREN":while(t.length>0&&(t[t.length-1].type!="LPAREN")){v.push(t.pop())}t.pop();if(t.length>0&&t[t.length-1].type=="SPATIAL"){v.push(t.pop())}case"COMMA":case"END":break;default:throw new Error("Unknown token type "+w.type)}}while(t.length>0){v.push(t.pop())}function q(){var L=v.pop();switch(L.type){case"LOGICAL":var D=q(),z=q();return new OpenLayers.Filter.Logical({filters:[z,D],type:n[L.text.toUpperCase()]});case"NOT":var C=q();return new OpenLayers.Filter.Logical({filters:[C],type:OpenLayers.Filter.Logical.NOT});case"BETWEEN":var A,G,J;v.pop();G=q();A=q();J=q();return new OpenLayers.Filter.Comparison({property:J,lowerBoundary:A,upperBoundary:G,type:OpenLayers.Filter.Comparison.BETWEEN});case"COMPARISON":var H=q(),J=q();return new OpenLayers.Filter.Comparison({property:J,value:H,type:g[L.text.toUpperCase()]});case"IS_NULL":var J=q();return new OpenLayers.Filter.Comparison({property:J,type:g[L.text.toUpperCase()]});case"VALUE":var B=L.text.match(/^'(.*)'$/);if(B){return B[1].replace(/''/g,"'")}else{return Number(L.text)}case"SPATIAL":switch(L.text.toUpperCase()){case"BBOX":var E=q(),F=q(),I=q(),K=q(),y=q();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:y,value:OpenLayers.Bounds.fromArray([K,I,F,E])});case"INTERSECTS":var H=q(),J=q();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.INTERSECTS,property:J,value:H});case"WITHIN":var H=q(),J=q();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.WITHIN,property:J,value:H});case"CONTAINS":var H=q(),J=q();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.CONTAINS,property:J,value:H});case"DWITHIN":var i=q(),H=q(),J=q();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.DWITHIN,value:H,property:J,distance:Number(i)})}case"GEOMETRY":return OpenLayers.Geometry.fromWKT(L.text);default:return L.text}}var x=q();if(v.length>0){var r="Remaining tokens after building AST: \n";for(var s=v.length-1;s>=0;s--){r+=v[s].type+": "+v[s].text+"\n"}throw new Error(r)}return x}return OpenLayers.Class(OpenLayers.Format,{read:function(o){var i=l(m(o));if(this.keepData){this.data=i}return i},write:function(r){if(r instanceof OpenLayers.Geometry){return r.toString()}switch(r.CLASS_NAME){case"OpenLayers.Filter.Spatial":switch(r.type){case OpenLayers.Filter.Spatial.BBOX:return"BBOX("+r.property+","+r.value.toBBOX()+")";case OpenLayers.Filter.Spatial.DWITHIN:return"DWITHIN("+r.property+", "+this.write(r.value)+", "+r.distance+")";case OpenLayers.Filter.Spatial.WITHIN:return"WITHIN("+r.property+", "+this.write(r.value)+")";case OpenLayers.Filter.Spatial.INTERSECTS:return"INTERSECTS("+r.property+", "+this.write(r.value)+")";case OpenLayers.Filter.Spatial.CONTAINS:return"CONTAINS("+r.property+", "+this.write(r.value)+")";default:throw new Error("Unknown spatial filter type: "+r.type)}case"OpenLayers.Filter.Logical":if(r.type==OpenLayers.Filter.Logical.NOT){return"NOT ("+this.write(r.filters[0])+")"}else{var q="(";var s=true;for(var o=0;o<r.filters.length;o++){if(s){s=false}else{q+=") "+b[r.type]+" ("}q+=this.write(r.filters[o])}return q+")"}case"OpenLayers.Filter.Comparison":if(r.type==OpenLayers.Filter.Comparison.BETWEEN){return r.property+" BETWEEN "+this.write(r.lowerBoundary)+" AND "+this.write(r.upperBoundary)}else{return(r.value!==null)?r.property+" "+d[r.type]+" "+this.write(r.value):r.property+" "+d[r.type]}case undefined:if(typeof r==="string"){return"'"+r.replace(/'/g,"''")+"'"}else{if(typeof r==="number"){return String(r)}}default:throw new Error("Can't encode: "+r.CLASS_NAME+" "+r)}},CLASS_NAME:"OpenLayers.Format.CQL"})})();Ext.namespace("gxp");gxp.FilterBuilder=Ext.extend(Ext.Container,{builderTypeNames:["any","all","none","not all"],allowedBuilderTypes:null,allowBlank:false,caseInsensitiveMatch:false,preComboText:"Match",postComboText:"of the following:",cls:"gxp-filterbuilder",builderType:null,childFilterContainer:null,customizeFilterOnInit:true,addConditionText:"add condition",addGroupText:"add group",removeConditionText:"remove condition",allowGroups:true,initComponent:function(){var a={defaultBuilderType:gxp.FilterBuilder.ANY_OF};Ext.applyIf(this,a);if(this.customizeFilterOnInit){this.filter=this.customizeFilter(this.filter)}this.builderType=this.getBuilderType();this.items=[{xtype:"container",layout:"form",ref:"form",defaults:{anchor:"100%"},hideLabels:true,items:[{xtype:"compositefield",style:"padding-left: 2px",items:[{xtype:"label",style:"padding-top: 0.3em",text:this.preComboText},this.createBuilderTypeCombo(),{xtype:"label",style:"padding-top: 0.3em",text:this.postComboText}]},this.createChildFiltersPanel(),{xtype:"toolbar",items:this.createToolBar()}]}];this.addEvents("change");gxp.FilterBuilder.superclass.initComponent.call(this)},createToolBar:function(){var a=[{text:this.addConditionText,iconCls:"add",handler:function(){this.addCondition()},scope:this}];if(this.allowGroups){a.push({text:this.addGroupText,iconCls:"add",handler:function(){this.addCondition(true)},scope:this})}return a},getFilter:function(){var a;if(this.filter){a=this.filter.clone();if(a instanceof OpenLayers.Filter.Logical){a=this.cleanFilter(a)}}return a},cleanFilter:function(c){if(c instanceof OpenLayers.Filter.Logical){if(c.type!==OpenLayers.Filter.Logical.NOT&&c.filters.length===1){c=this.cleanFilter(c.filters[0])}else{var d;for(var b=0,a=c.filters.length;b<a;++b){d=c.filters[b];if(d instanceof OpenLayers.Filter.Logical){d=this.cleanFilter(d);if(d){c.filters[b]=d}else{c=d;break}}else{if(!d||d.type===null||d.property===null||d[c.type===OpenLayers.Filter.Comparison.BETWEEN?"lowerBoundary":"value"]===null){c=false;break}}}}}else{if(!c||c.type===null||c.property===null||c[c.type===OpenLayers.Filter.Comparison.BETWEEN?"lowerBoundary":"value"]===null){c=false}}return c},customizeFilter:function(d){if(!d){d=this.wrapFilter(this.createDefaultFilter())}else{d=this.cleanFilter(d);var f,b,a;switch(d.type){case OpenLayers.Filter.Logical.AND:case OpenLayers.Filter.Logical.OR:if(!d.filters||d.filters.length===0){d.filters=[this.createDefaultFilter()]}else{for(b=0,a=d.filters.length;b<a;++b){f=d.filters[b];if(f instanceof OpenLayers.Filter.Logical){d.filters[b]=this.customizeFilter(f)}}}d=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[d]});break;case OpenLayers.Filter.Logical.NOT:if(!d.filters||d.filters.length===0){d.filters=[new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[this.createDefaultFilter()]})]}else{f=d.filters[0];if(f instanceof OpenLayers.Filter.Logical){if(f.type!==OpenLayers.Filter.Logical.NOT){var e;for(b=0,a=f.filters.length;b<a;++b){e=f.filters[b];if(e instanceof OpenLayers.Filter.Logical){f.filters[b]=this.customizeFilter(e)}}}else{if(f.filters&&f.filters.length>0){d=this.customizeFilter(f.filters[0])}else{d=this.wrapFilter(this.createDefaultFilter())}}}else{var c;if(this.defaultBuilderType===gxp.FilterBuilder.NOT_ALL_OF){c=OpenLayers.Filter.Logical.AND}else{c=OpenLayers.Filter.Logical.OR}d.filters=[new OpenLayers.Filter.Logical({type:c,filters:[f]})]}}break;default:d=this.wrapFilter(d);break}}return d},createDefaultFilter:function(){return new OpenLayers.Filter.Comparison({matchCase:!this.caseInsensitiveMatch})},wrapFilter:function(b){var a;if(this.defaultBuilderType===gxp.FilterBuilder.ALL_OF){a=OpenLayers.Filter.Logical.AND}else{a=OpenLayers.Filter.Logical.OR}return new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[new OpenLayers.Filter.Logical({type:a,filters:[b]})]})},addCondition:function(d){var c,b;if(d){b="gxp_filterbuilder";c=this.wrapFilter(this.createDefaultFilter())}else{b="gxp_filterfield";c=this.createDefaultFilter()}var a=this.newRow({xtype:b,filter:c,columnWidth:1,attributes:this.attributes,allowBlank:d?undefined:this.allowBlank,customizeFilterOnInit:d&&false,caseInsensitiveMatch:this.caseInsensitiveMatch,listeners:{change:function(){this.fireEvent("change",this)},scope:this}});this.childFilterContainer.add(a);this.filter.filters[0].filters.push(c);this.childFilterContainer.doLayout()},removeCondition:function(c,b){var a=this.filter.filters[0].filters;if(a.length>0){a.remove(b);this.childFilterContainer.remove(c,true)}if(a.length===0){this.addCondition()}this.fireEvent("change",this)},createBuilderTypeCombo:function(){var b=this.allowedBuilderTypes||[gxp.FilterBuilder.ANY_OF,gxp.FilterBuilder.ALL_OF,gxp.FilterBuilder.NONE_OF];var d=b.length;var e=new Array(d);var c;for(var a=0;a<d;++a){c=b[a];e[a]=[c,this.builderTypeNames[c]]}return{xtype:"combo",store:new Ext.data.SimpleStore({data:e,fields:["value","name"]}),value:this.builderType,ref:"../../builderTypeCombo",displayField:"name",valueField:"value",triggerAction:"all",mode:"local",listeners:{select:function(g,f){this.changeBuilderType(f.get("value"));this.fireEvent("change",this)},scope:this},width:60}},changeBuilderType:function(a){if(a!==this.builderType){this.builderType=a;var b=this.filter.filters[0];switch(a){case gxp.FilterBuilder.ANY_OF:this.filter.type=OpenLayers.Filter.Logical.OR;b.type=OpenLayers.Filter.Logical.OR;break;case gxp.FilterBuilder.ALL_OF:this.filter.type=OpenLayers.Filter.Logical.OR;b.type=OpenLayers.Filter.Logical.AND;break;case gxp.FilterBuilder.NONE_OF:this.filter.type=OpenLayers.Filter.Logical.NOT;b.type=OpenLayers.Filter.Logical.OR;break;case gxp.FilterBuilder.NOT_ALL_OF:this.filter.type=OpenLayers.Filter.Logical.NOT;b.type=OpenLayers.Filter.Logical.AND;break}}},createChildFiltersPanel:function(){this.childFilterContainer=new Ext.Container();var d=this.filter.filters[0].filters;var e;for(var c=0,a=d.length;c<a;++c){e=d[c];var f={xtype:"gxp_filterfield",allowBlank:this.allowBlank,columnWidth:1,filter:e,attributes:this.attributes,listeners:{change:function(){this.fireEvent("change",this)},scope:this}};var b=Ext.applyIf(e instanceof OpenLayers.Filter.Logical?{xtype:"gxp_filterbuilder"}:{xtype:"container",layout:"form",hideLabels:true,items:f},f);this.childFilterContainer.add(this.newRow(b))}return this.childFilterContainer},newRow:function(b){var a=new Ext.Container({layout:"column",items:[{xtype:"container",width:28,height:26,style:"padding-left: 2px",items:{xtype:"button",tooltip:this.removeConditionText,iconCls:"delete",handler:function(c){this.removeCondition(a,b.filter)},scope:this}},b]});return a},getBuilderType:function(){var a=this.defaultBuilderType;if(this.filter){var b=this.filter.filters[0];if(this.filter.type===OpenLayers.Filter.Logical.NOT){switch(b.type){case OpenLayers.Filter.Logical.OR:a=gxp.FilterBuilder.NONE_OF;break;case OpenLayers.Filter.Logical.AND:a=gxp.FilterBuilder.NOT_ALL_OF;break}}else{switch(b.type){case OpenLayers.Filter.Logical.OR:a=gxp.FilterBuilder.ANY_OF;break;case OpenLayers.Filter.Logical.AND:a=gxp.FilterBuilder.ALL_OF;break}}}return a},setFilter:function(a){this.filter=this.customizeFilter(a);this.changeBuilderType(this.getBuilderType());this.builderTypeCombo.setValue(this.builderType);this.form.remove(this.childFilterContainer);this.form.insert(1,this.createChildFiltersPanel());this.form.doLayout();this.fireEvent("change",this)}});gxp.FilterBuilder.ANY_OF=0;gxp.FilterBuilder.ALL_OF=1;gxp.FilterBuilder.NONE_OF=2;gxp.FilterBuilder.NOT_ALL_OF=3;Ext.reg("gxp_filterbuilder",gxp.FilterBuilder);Ext.namespace("gxp");gxp.WMSLayerPanel=Ext.extend(Ext.TabPanel,{layerRecord:null,source:null,styling:true,sameOriginStyling:true,rasterStyling:false,transparent:null,editableStyles:false,activeTab:0,border:false,imageFormats:/png|gif|jpe?g/i,aboutText:"About",titleText:"Title",attributionText:"Attribution",nameText:"Name",descriptionText:"Description",displayText:"Display",opacityText:"Opacity",formatText:"Tile format",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",transparentText:"Transparent",cacheText:"Caching",cacheFieldText:"Use cached tiles",stylesText:"Available Styles",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile",initComponent:function(){this.cqlFormat=new OpenLayers.Format.CQL();if(this.source){this.source.getSchema(this.layerRecord,function(b){if(b!==false){var c=this.layerRecord.getLayer().params.CQL_FILTER;this.filterBuilder=new gxp.FilterBuilder({filter:c&&this.cqlFormat.read(c),allowGroups:false,listeners:{afterrender:function(){this.filterBuilder.cascade(function(d){if(d.getXType()==="toolbar"){d.addText(this.cqlPrefixText);d.addButton({text:this.cqlText,handler:this.switchToCQL,scope:this})}},this)},change:function(d){var e=d.getFilter();var f=null;if(e!==false){f=this.cqlFormat.write(e)}this.layerRecord.getLayer().mergeNewParams({CQL_FILTER:f})},scope:this},attributes:b});this.filterFieldset.add(this.filterBuilder);this.filterFieldset.doLayout()}},this)}this.addEvents("change");this.items=[this.createAboutPanel(),this.createDisplayPanel()];if(this.styling&&gxp.WMSStylesDialog&&this.layerRecord.get("styles")){var a=this.layerRecord.get("restUrl");if(!a){a=(this.source||this.layerRecord.get("layer")).url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest")}if(this.sameOriginStyling){this.editableStyles=a.charAt(0)==="/"}else{this.editableStyles=true}this.items.push(this.createStylesPanel(a))}gxp.WMSLayerPanel.superclass.initComponent.call(this)},switchToCQL:function(){var b=this.filterBuilder.getFilter();var a="";if(b!==false){a=this.cqlFormat.write(b)}this.filterBuilder.hide();this.cqlField.setValue(a);this.cqlField.show();this.cqlToolbar.show()},switchToFilterBuilder:function(){var a=null;try{a=this.cqlFormat.read(this.cqlField.getValue())}catch(b){}this.cqlField.hide();this.cqlToolbar.hide();this.filterBuilder.show();if(a!==null){this.filterBuilder.setFilter(a)}},createStylesPanel:function(b){var a=gxp.WMSStylesDialog.createGeoServerStylerConfig(this.layerRecord,b);if(this.rasterStyling===true){a.plugins.push({ptype:"gxp_wmsrasterstylesdialog"})}var c=this.ownerCt;if(!(c.ownerCt instanceof Ext.Window)){a.dialogCls=Ext.Panel;a.showDlg=function(d){d.layout="fit";d.autoHeight=false;c.add(d)}}return Ext.apply(a,{title:this.stylesText,style:"padding: 10px",editable:false})},createAboutPanel:function(){return{title:this.aboutText,bodyStyle:{padding:"10px"},defaults:{border:false},items:[{layout:"form",labelWidth:70,items:[{xtype:"textfield",fieldLabel:this.titleText,anchor:"99%",value:this.layerRecord.get("title"),listeners:{change:function(a){this.layerRecord.set("title",a.getValue());this.layerRecord.commit();this.fireEvent("change")},scope:this}},{xtype:"textfield",fieldLabel:this.nameText,anchor:"99%",value:this.layerRecord.get("name"),readOnly:true},{xtype:"textfield",fieldLabel:this.attributionText,anchor:"99%",listeners:{change:function(b){var a=this.layerRecord.getLayer();a.attribution=b.getValue();a.map.events.triggerEvent("changelayer",{layer:a,property:"attribution"});this.fireEvent("change")},scope:this},value:this.layerRecord.getLayer().attribution}]},{layout:"form",labelAlign:"top",items:[{xtype:"textarea",fieldLabel:this.descriptionText,grow:true,growMax:150,anchor:"99%",value:this.layerRecord.get("abstract"),readOnly:true}]}]}},onFormatChange:function(d){var b=this.layerRecord.getLayer();var c=d.getValue();b.mergeNewParams({format:c});var a=this.transparentCb;if(c=="image/jpeg"){this.transparent=a.getValue();a.setValue(false)}else{if(this.transparent!==null){a.setValue(this.transparent);this.transparent=null}}a.setDisabled(c=="image/jpeg");this.fireEvent("change")},addScaleOptions:function(b,a){b.alwaysInRange=null;b.addOptions(a);b.display();b.redraw()},createDisplayPanel:function(){var b=this.layerRecord;var d=b.getLayer();var c=d.opacity;if(c==null){c=1}var a=[];var e=d.params.FORMAT.toLowerCase();Ext.each(b.get("formats"),function(g){if(this.imageFormats.test(g)){a.push(g.toLowerCase())}},this);if(a.indexOf(e)===-1){a.push(e)}var f=d.params.TRANSPARENT;f=(f==="true"||f===true);return{title:this.displayText,layout:"form",bodyStyle:{padding:"10px"},defaults:{labelWidth:70},items:[{xtype:"fieldset",title:this.displayOptionsText,items:[{xtype:"gx_opacityslider",name:"opacity",anchor:"99%",isFormField:true,fieldLabel:this.opacityText,listeners:{change:function(){this.fireEvent("change")},scope:this},layer:this.layerRecord},{xtype:"compositefield",fieldLabel:this.formatText,anchor:"99%",items:[{xtype:"combo",width:90,listWidth:150,store:a,value:e,mode:"local",triggerAction:"all",editable:false,listeners:{select:this.onFormatChange,scope:this}},{xtype:"checkbox",ref:"../../../transparentCb",checked:f,listeners:{check:function(h,g){d.mergeNewParams({transparent:g?"true":"false"});this.fireEvent("change")},scope:this}},{xtype:"label",cls:"gxp-layerproperties-label",text:this.transparentText}]},{xtype:"compositefield",fieldLabel:this.singleTileText,anchor:"99%",items:[{xtype:"checkbox",checked:this.layerRecord.get("layer").singleTile,listeners:{check:function(h,g){d.addOptions({singleTile:g});this.fireEvent("change")},scope:this}},{xtype:"label",cls:"gxp-layerproperties-label",text:this.singleTileFieldText}]},{xtype:"compositefield",anchor:"99%",hidden:this.layerRecord.get("layer").params.TILED==null,fieldLabel:this.cacheText,items:[{xtype:"checkbox",checked:(this.layerRecord.get("layer").params.TILED===true),listeners:{check:function(i,h){var g=this.layerRecord.get("layer");g.mergeNewParams({TILED:h});this.fireEvent("change")},scope:this}},{xtype:"label",cls:"gxp-layerproperties-label",text:this.cacheFieldText}]},{xtype:"combo",fieldLabel:this.infoFormatText,emptyText:this.infoFormatEmptyText,store:b.get("infoFormats"),value:b.get("infoFormat"),hidden:(b.get("infoFormats")===undefined),mode:"local",listWidth:150,triggerAction:"all",editable:false,anchor:"99%",listeners:{select:function(h){var g=h.getValue();b.set("infoFormat",g);this.fireEvent("change")}},scope:this}]},{xtype:"fieldset",title:this.queryText,hideLabels:true,ref:"../filterFieldset",listeners:{expand:function(){this.layerRecord.getLayer().mergeNewParams({CQL_FILTER:this.cqlFilter})},collapse:function(){this.cqlFilter=this.layerRecord.getLayer().params.CQL_FILTER;this.layerRecord.getLayer().mergeNewParams({CQL_FILTER:null})},scope:this},hidden:this.source===null,checkboxToggle:true,collapsed:!this.layerRecord.getLayer().params.CQL_FILTER,items:[{xtype:"textarea",value:this.layerRecord.getLayer().params.CQL_FILTER,grow:true,anchor:"99%",width:"100%",growMax:100,ref:"../../cqlField",hidden:true}],buttons:[{ref:"../../../cqlToolbar",hidden:true,text:this.switchToFilterBuilderText,handler:this.switchToFilterBuilder,scope:this}]},{xtype:"fieldset",title:this.scaleText,listeners:{expand:function(){var g=this.layerRecord.getLayer();if(this.minScale!==undefined||this.maxScale!==undefined){this.addScaleOptions(g,{minScale:this.maxScale,maxScale:this.minScale})}},collapse:function(){var g=this.layerRecord.getLayer();this.minScale=g.options.maxScale;this.maxScale=g.options.minScale;this.addScaleOptions(g,{minScale:null,maxScale:null})},scope:this},checkboxToggle:true,collapsed:this.layerRecord.getLayer().options.maxScale==null&&this.layerRecord.getLayer().options.minScale==null,items:[{xtype:"compositefield",fieldLabel:this.minScaleText,items:[{xtype:"label",text:"1:",cls:"gxp-layerproperties-label"},{xtype:"numberfield",anchor:"99%",width:"85%",listeners:{change:function(i){var g={maxScale:parseInt(i.getValue())};var h=this.layerRecord.getLayer();this.addScaleOptions(h,g)},scope:this},value:this.layerRecord.getLayer().options.maxScale}]},{xtype:"compositefield",fieldLabel:this.maxScaleText,items:[{xtype:"label",text:"1:",cls:"gxp-layerproperties-label"},{xtype:"numberfield",anchor:"99%",width:"85%",listeners:{change:function(i){var g={minScale:parseInt(i.getValue())};var h=this.layerRecord.getLayer();this.addScaleOptions(h,g)},scope:this},value:this.layerRecord.getLayer().options.minScale}]}]}]}}});Ext.reg("gxp_wmslayerpanel",gxp.WMSLayerPanel);Ext.namespace("gxp.form");gxp.form.FilterField=Ext.extend(Ext.form.CompositeField,{lowerBoundaryTip:"lower boundary",upperBoundaryTip:"upper boundary",caseInsensitiveMatch:false,filter:null,attributes:null,attributesComboConfig:null,initComponent:function(){if(!this.filter){this.filter=this.createDefaultFilter()}var c="remote",a=new GeoExt.data.AttributeStore();if(this.attributes){if(this.attributes.getCount()!=0){c="local";this.attributes.each(function(e){var d=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/.exec(e.get("type"));d||a.add([e])})}else{a=this.attributes}}var b={xtype:"combo",store:a,editable:c=="local",typeAhead:true,forceSelection:true,mode:c,triggerAction:"all",ref:"property",allowBlank:this.allowBlank,displayField:"name",valueField:"name",value:this.filter.property,listeners:{select:function(e,d){this.items.get(1).enable();this.filter.property=d.get("name");this.fireEvent("change",this.filter,this)},blur:function(e){var d=e.store.findExact("name",e.getValue());if(d!=-1){e.fireEvent("select",e,e.store.getAt(d))}else{if(e.startValue!=null){e.setValue(e.startValue)}}},scope:this},width:120};this.attributesComboConfig=this.attributesComboConfig||{};Ext.applyIf(this.attributesComboConfig,b);this.items=this.createFilterItems();this.addEvents("change");gxp.form.FilterField.superclass.initComponent.call(this)},validateValue:function(b,a){if(this.filter.type===OpenLayers.Filter.Comparison.BETWEEN){return(this.filter.property!==null&&this.filter.upperBoundary!==null&&this.filter.lowerBoundary!==null)}else{return(this.filter.property!==null&&this.filter.value!==null&&this.filter.type!==null)}},createDefaultFilter:function(){return new OpenLayers.Filter.Comparison({matchCase:!this.caseInsensitiveMatch})},createFilterItems:function(){var a=this.filter.type===OpenLayers.Filter.Comparison.BETWEEN;return[this.attributesComboConfig,Ext.applyIf({xtype:"gxp_comparisoncombo",ref:"type",disabled:this.filter.property==null,allowBlank:this.allowBlank,value:this.filter.type,listeners:{select:function(c,b){this.items.get(2).enable();this.items.get(3).enable();this.items.get(4).enable();this.setFilterType(b.get("value"));this.fireEvent("change",this.filter,this)},scope:this}},this.comparisonComboConfig),{xtype:"textfield",disabled:this.filter.type==null,hidden:a,ref:"value",value:this.filter.value,width:50,grow:true,growMin:50,anchor:"100%",allowBlank:this.allowBlank,listeners:{change:function(c,b){this.filter.value=b;this.fireEvent("change",this.filter,this)},scope:this}},{xtype:"textfield",disabled:this.filter.type==null,hidden:!a,value:this.filter.lowerBoundary,tooltip:this.lowerBoundaryTip,grow:true,growMin:30,ref:"lowerBoundary",anchor:"100%",allowBlank:this.allowBlank,listeners:{change:function(c,b){this.filter.lowerBoundary=b;this.fireEvent("change",this.filter,this)},render:function(b){Ext.QuickTips.register({target:b.getEl(),text:this.lowerBoundaryTip})},autosize:function(c,b){c.setWidth(b);c.ownerCt.doLayout()},scope:this}},{xtype:"textfield",disabled:this.filter.type==null,hidden:!a,grow:true,growMin:30,ref:"upperBoundary",value:this.filter.upperBoundary,allowBlank:this.allowBlank,listeners:{change:function(c,b){this.filter.upperBoundary=b;this.fireEvent("change",this.filter,this)},render:function(b){Ext.QuickTips.register({target:b.getEl(),text:this.upperBoundaryTip})},scope:this}}]},setFilterType:function(a){this.filter.type=a;if(a===OpenLayers.Filter.Comparison.BETWEEN){this.items.get(2).hide();this.items.get(3).show();this.items.get(4).show()}else{this.items.get(2).show();this.items.get(3).hide();this.items.get(4).hide()}this.doLayout()},setFilter:function(b){var a=this.filter.type;this.filter=b;if(a!==b.type){this.setFilterType(b.type)}this["property"].setValue(b.property);this["type"].setValue(b.type);if(b.type===OpenLayers.Filter.Comparison.BETWEEN){this["lowerBoundary"].setValue(b.lowerBoundary);this["upperBoundary"].setValue(b.upperBoundary)}else{this["value"].setValue(b.value)}this.fireEvent("change",this.filter,this)}});Ext.reg("gxp_filterfield",gxp.form.FilterField);Ext.namespace("gxp.form");gxp.form.ComparisonComboBox=Ext.extend(Ext.form.ComboBox,{allowedTypes:[[OpenLayers.Filter.Comparison.EQUAL_TO,"="],[OpenLayers.Filter.Comparison.NOT_EQUAL_TO,"<>"],[OpenLayers.Filter.Comparison.LESS_THAN,"<"],[OpenLayers.Filter.Comparison.GREATER_THAN,">"],[OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,"<="],[OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,">="],[OpenLayers.Filter.Comparison.LIKE,"like"],[OpenLayers.Filter.Comparison.BETWEEN,"between"]],allowBlank:false,mode:"local",typeAhead:true,forceSelection:true,triggerAction:"all",width:50,editable:true,initComponent:function(){var a={displayField:"name",valueField:"value",store:new Ext.data.SimpleStore({data:this.allowedTypes,fields:["value","name"]}),value:(this.value===undefined)?this.allowedTypes[0][0]:this.value,listeners:{blur:function(){var b=this.store.findExact("value",this.getValue());if(b!=-1){this.fireEvent("select",this,this.store.getAt(b))}else{if(this.startValue!=null){this.setValue(this.startValue)}}}}};Ext.applyIf(this,a);gxp.form.ComparisonComboBox.superclass.initComponent.call(this)}});Ext.reg("gxp_comparisoncombo",gxp.form.ComparisonComboBox);Ext.namespace("GeoExt");GeoExt.LayerOpacitySlider=Ext.extend(Ext.slider.SingleSlider,{layer:null,complementaryLayer:null,delay:5,changeVisibilityDelay:5,aggressive:false,changeVisibility:false,value:null,inverse:false,constructor:function(a){if(a.layer){this.layer=this.getLayer(a.layer);this.bind();this.complementaryLayer=this.getLayer(a.complementaryLayer);if(a.inverse!==undefined){this.inverse=a.inverse}a.value=(a.value!==undefined)?a.value:this.getOpacityValue(this.layer);delete a.layer;delete a.complementaryLayer}GeoExt.LayerOpacitySlider.superclass.constructor.call(this,a)},bind:function(){if(this.layer&&this.layer.map){this.layer.map.events.on({changelayer:this.update,scope:this})}},unbind:function(){if(this.layer&&this.layer.map&&this.layer.map.events){this.layer.map.events.un({changelayer:this.update,scope:this})}},update:function(a){if(a.property==="opacity"&&a.layer==this.layer&&!this._settingOpacity){this.setValue(this.getOpacityValue(this.layer))}},setLayer:function(a){this.unbind();this.layer=this.getLayer(a);this.setValue(this.getOpacityValue(a));this.bind()},getOpacityValue:function(a){var b;if(a&&a.opacity!==null){b=parseInt(a.opacity*(this.maxValue-this.minValue))}else{b=this.maxValue}if(this.inverse===true){b=(this.maxValue-this.minValue)-b}return b},getLayer:function(a){if(a instanceof OpenLayers.Layer){return a}else{if(a instanceof GeoExt.data.LayerRecord){return a.getLayer()}}},initComponent:function(){GeoExt.LayerOpacitySlider.superclass.initComponent.call(this);if(this.changeVisibility&&this.layer&&(this.layer.opacity==0||(this.inverse===false&&this.value==this.minValue)||(this.inverse===true&&this.value==this.maxValue))){this.layer.setVisibility(false)}if(this.complementaryLayer&&((this.layer&&this.layer.opacity==1)||(this.inverse===false&&this.value==this.maxValue)||(this.inverse===true&&this.value==this.minValue))){this.complementaryLayer.setVisibility(false)}if(this.aggressive===true){this.on("change",this.changeLayerOpacity,this,{buffer:this.delay})}else{this.on("changecomplete",this.changeLayerOpacity,this)}if(this.changeVisibility===true){this.on("change",this.changeLayerVisibility,this,{buffer:this.changeVisibilityDelay})}if(this.complementaryLayer){this.on("change",this.changeComplementaryLayerVisibility,this,{buffer:this.changeVisibilityDelay})}this.on("beforedestroy",this.unbind,this)},changeLayerOpacity:function(a,b){if(this.layer){b=b/(this.maxValue-this.minValue);if(this.inverse===true){b=1-b}this._settingOpacity=true;this.layer.setOpacity(b);delete this._settingOpacity}},changeLayerVisibility:function(b,c){var a=this.layer.getVisibility();if((this.inverse===false&&c==this.minValue)||(this.inverse===true&&c==this.maxValue)&&a===true){this.layer.setVisibility(false)}else{if((this.inverse===false&&c>this.minValue)||(this.inverse===true&&c<this.maxValue)&&a==false){this.layer.setVisibility(true)}}},changeComplementaryLayerVisibility:function(b,c){var a=this.complementaryLayer.getVisibility();if((this.inverse===false&&c==this.maxValue)||(this.inverse===true&&c==this.minValue)&&a===true){this.complementaryLayer.setVisibility(false)}else{if((this.inverse===false&&c<this.maxValue)||(this.inverse===true&&c>this.minValue)&&a==false){this.complementaryLayer.setVisibility(true)}}},addToMapPanel:function(a){this.on({render:function(){var b=this.getEl();b.setStyle({position:"absolute",zIndex:a.map.Z_INDEX_BASE.Control});b.on({mousedown:this.stopMouseEvents,click:this.stopMouseEvents})},scope:this})},removeFromMapPanel:function(a){var b=this.getEl();b.un({mousedown:this.stopMouseEvents,click:this.stopMouseEvents,scope:this});this.unbind()},stopMouseEvents:function(a){a.stopEvent()}});Ext.reg("gx_opacityslider",GeoExt.LayerOpacitySlider);Ext.namespace("GeoExt");GeoExt.SliderTip=Ext.extend(Ext.slider.Tip,{hover:true,minWidth:10,offsets:[0,-10],dragging:false,init:function(a){GeoExt.SliderTip.superclass.init.apply(this,arguments);if(this.hover){a.on("render",this.registerThumbListeners,this)}this.slider=a},registerThumbListeners:function(){var a,d;for(var b=0,c=this.slider.thumbs.length;b<c;++b){a=this.slider.thumbs[b];d=a.tracker.el;(function(e,f){f.on({mouseover:function(g){this.onSlide(this.slider,g,e);this.dragging=false},mouseout:function(){if(!this.dragging){this.hide.apply(this,arguments)}},scope:this})}).apply(this,[a,d])}},onSlide:function(b,c,a){this.dragging=true;return GeoExt.SliderTip.superclass.onSlide.apply(this,arguments)}});Ext.namespace("GeoExt");GeoExt.LayerOpacitySliderTip=Ext.extend(GeoExt.SliderTip,{template:"<div>{opacity}%</div>",compiledTemplate:null,init:function(a){this.compiledTemplate=new Ext.Template(this.template);GeoExt.LayerOpacitySliderTip.superclass.init.call(this,a)},getText:function(a){var b={opacity:a.value};return this.compiledTemplate.apply(b)}});Ext.namespace("gxp");gxp.GoogleEarthPanel=Ext.extend(Ext.Panel,{HORIZONTAL_FIELD_OF_VIEW:(30*Math.PI)/180,map:null,mapPanel:null,layers:null,earth:null,projection:null,layerCache:null,initComponent:function(){this.addEvents("beforeadd","pluginfailure","pluginready");gxp.GoogleEarthPanel.superclass.initComponent.call(this);var a=this.mapPanel;if(a&&!(a instanceof GeoExt.MapPanel)){a=Ext.getCmp(a)}if(!a){throw new Error("Could not get map panel from config: "+this.mapPanel)}this.map=a.map;this.layers=a.layers;this.projection=new OpenLayers.Projection("EPSG:4326");this.on("render",this.onRenderEvent,this);this.on("show",this.onShowEvent,this);this.on("hide",function(){if(this.earth!=null){this.updateMap()}this.body.dom.innerHTML="";this.earth=null},this)},onEarthReady:function(a){this.earth=a;if(this.flyToSpeed===undefined){this.earth.getOptions().setFlyToSpeed(this.earth.SPEED_TELEPORT)}else{if(this.flyToSpeed!==null){this.earth.getOptions().setFlyToSpeed(this.flyToSpeed)}}this.resetCamera();this.setExtent(this.map.getExtent());this.earth.getNavigationControl().setVisibility(this.earth.VISIBILITY_SHOW);var b=this.earth.getNavigationControl().getScreenXY();b.setXUnits(this.earth.UNITS_PIXELS);b.setYUnits(this.earth.UNITS_INSET_PIXELS);this.earth.getWindow().setVisibility(true);this.layers.each(function(c){this.addLayer(c)},this);this.layers.on("remove",this.updateLayers,this);this.layers.on("update",this.updateLayers,this);this.layers.on("add",this.updateLayers,this);this.fireEvent("pluginready",this.earth)},onRenderEvent:function(){var a=this.ownerCt&&this.ownerCt.layout instanceof Ext.layout.CardLayout;if(!this.hidden&&!a){this.onShowEvent()}},onShowEvent:function(){if(this.rendered){this.layerCache={};google.earth.createInstance(this.body.dom,this.onEarthReady.createDelegate(this),(function(a){this.fireEvent("pluginfailure",this,a)}).createDelegate(this))}},beforeDestroy:function(){this.layers.un("remove",this.updateLayers,this);this.layers.un("update",this.updateLayers,this);this.layers.un("add",this.updateLayers,this);gxp.GoogleEarthPanel.superclass.beforeDestroy.call(this)},updateLayers:function(){if(!this.earth){return}var a=this.earth.getFeatures();var b=a.getFirstChild();while(b!=null){a.removeChild(b);b=a.getFirstChild()}this.layers.each(function(c){this.addLayer(c)},this)},addLayer:function(f,b){var e=f.getLayer();var h=(e&&e.url);if(this.earth&&e instanceof OpenLayers.Layer.WMS&&typeof h=="string"){var j=this.fireEvent("beforeadd",f);if(j!==false){var a=e.id;var g;if(this.layerCache[a]){g=this.layerCache[a]}else{var i=this.earth.createLink("kl_"+a);h=h.replace(/\?.*/,"");var c=e.params;var d="/kml?mode=refresh&layers="+c.LAYERS+"&styles="+c.STYLES;i.setHref(h+d);g=this.earth.createNetworkLink("nl_"+a);g.setName(a);g.set(i,false,false);this.layerCache[a]=g}g.setVisibility(e.getVisibility());if(b!==undefined&&b<this.earth.getFeatures().getChildNodes().getLength()){this.earth.getFeatures().insertBefore(this.earth.getFeatures().getChildNodes().item(b))}else{this.earth.getFeatures().appendChild(g)}}}},setExtent:function(d){d=d.transform(this.map.getProjectionObject(),this.projection);var b=d.getCenterLonLat();var c=this.getExtentWidth(d);var a=c/(2*Math.tan(this.HORIZONTAL_FIELD_OF_VIEW));var e=this.earth.getView().copyAsLookAt(this.earth.ALTITUDE_RELATIVE_TO_GROUND);e.setLatitude(b.lat);e.setLongitude(b.lon);e.setRange(a);this.earth.getView().setAbstractView(e)},resetCamera:function(){var a=this.earth.getView().copyAsCamera(this.earth.ALTITUDE_RELATIVE_TO_GROUND);a.setRoll(0);a.setHeading(0);a.setTilt(0);this.earth.getView().setAbstractView(a)},getExtent:function(){var b=this.earth.getView().getViewportGlobeBounds();var a=new OpenLayers.Bounds(b.getWest(),b.getSouth(),b.getEast(),b.getNorth());return a},updateMap:function(){var b=this.earth.getView().copyAsLookAt(this.earth.ALTITUDE_RELATIVE_TO_GROUND);var a=this.reprojectToMap(new OpenLayers.LonLat(b.getLongitude(),b.getLatitude()));var g=this.reprojectToMap(this.getExtent());this.map.zoomToExtent(g,true);this.map.setCenter(a);var h=b.getRange();var c=2*h*Math.tan(this.HORIZONTAL_FIELD_OF_VIEW);var i=this.map.getResolutionForZoom(this.map.getZoom()+1);var e=this.map.getExtent();var f=new OpenLayers.Bounds(a.lon-(this.map.getSize().w/2*i),a.lat+(this.map.getSize().h/2*i),a.lon+(this.map.getSize().w/2*i),a.lat-(this.map.getSize().h/2*i));var d=Math.abs(this.getExtentWidth(e)-c);var j=Math.abs(this.getExtentWidth(f)-c);if(j<d){this.map.zoomTo(this.map.getZoom()+1)}},getExtentWidth:function(b){var a=b.getCenterLonLat();var c=new OpenLayers.LonLat(b.left,a.lat);var d=new OpenLayers.LonLat(b.right,a.lat);return OpenLayers.Util.distVincenty(c,d)*1000},reprojectToGE:function(a){return a.clone().transform(this.map.getProjectionObject(),this.projection)},reprojectToMap:function(a){return a.clone().transform(this.projection,this.map.getProjectionObject())}});Ext.reg("gxp_googleearthpanel",gxp.GoogleEarthPanel);OpenLayers.Control.Attribution=OpenLayers.Class(OpenLayers.Control,{separator:", ",template:"${layers}",destroy:function(){this.map.events.un({removelayer:this.updateAttribution,addlayer:this.updateAttribution,changelayer:this.updateAttribution,changebaselayer:this.updateAttribution,scope:this});OpenLayers.Control.prototype.destroy.apply(this,arguments)},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);this.map.events.on({changebaselayer:this.updateAttribution,changelayer:this.updateAttribution,addlayer:this.updateAttribution,removelayer:this.updateAttribution,scope:this});this.updateAttribution();return this.div},updateAttribution:function(){var d=[];if(this.map&&this.map.layers){for(var c=0,a=this.map.layers.length;c<a;c++){var b=this.map.layers[c];if(b.attribution&&b.getVisibility()){if(OpenLayers.Util.indexOf(d,b.attribution)===-1){d.push(b.attribution)}}}this.div.innerHTML=OpenLayers.String.format(this.template,{layers:d.join(this.separator)})}},CLASS_NAME:"OpenLayers.Control.Attribution"});OpenLayers.Events.buttonclick=OpenLayers.Class({target:null,events:["mousedown","mouseup","click","dblclick","touchstart","touchmove","touchend","keydown"],startRegEx:/^mousedown|touchstart$/,cancelRegEx:/^touchmove$/,completeRegEx:/^mouseup|touchend$/,initialize:function(b){this.target=b;for(var a=this.events.length-1;a>=0;--a){this.target.register(this.events[a],this,this.buttonClick,{extension:true})}},destroy:function(){for(var a=this.events.length-1;a>=0;--a){this.target.unregister(this.events[a],this,this.buttonClick)}delete this.target},getPressedButton:function(b){var c=3,a;do{if(OpenLayers.Element.hasClass(b,"olButton")){a=b;break}b=b.parentNode}while(--c>0&&b);return a},ignore:function(a){var b=3,c=false;do{if(a.nodeName.toLowerCase()==="a"){c=true;break}a=a.parentNode}while(--b>0&&a);return c},buttonClick:function(b){var a=true,e=OpenLayers.Event.element(b);if(e&&(OpenLayers.Event.isLeftClick(b)||!~b.type.indexOf("mouse"))){var d=this.getPressedButton(e);if(d){if(b.type==="keydown"){switch(b.keyCode){case OpenLayers.Event.KEY_RETURN:case OpenLayers.Event.KEY_SPACE:this.target.triggerEvent("buttonclick",{buttonElement:d});OpenLayers.Event.stop(b);a=false;break}}else{if(this.startEvt){if(this.completeRegEx.test(b.type)){var h=OpenLayers.Util.pagePosition(d);var c=OpenLayers.Util.getViewportElement();var f=window.pageYOffset||c.scrollTop;var g=window.pageXOffset||c.scrollLeft;h[0]=h[0]-g;h[1]=h[1]-f;this.target.triggerEvent("buttonclick",{buttonElement:d,buttonXY:{x:this.startEvt.clientX-h[0],y:this.startEvt.clientY-h[1]}})}if(this.cancelRegEx.test(b.type)){delete this.startEvt}OpenLayers.Event.stop(b);a=false}}if(this.startRegEx.test(b.type)){this.startEvt=b;OpenLayers.Event.stop(b);a=false}}else{a=!this.ignore(OpenLayers.Event.element(b));delete this.startEvt}}return a}});OpenLayers.Control.Panel=OpenLayers.Class(OpenLayers.Control,{controls:null,autoActivate:true,defaultControl:null,saveState:false,allowDepress:false,activeState:null,initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,[a]);this.controls=[];this.activeState={}},destroy:function(){if(this.map){this.map.events.unregister("buttonclick",this,this.onButtonClick)}OpenLayers.Control.prototype.destroy.apply(this,arguments);for(var a,b=this.controls.length-1;b>=0;b--){a=this.controls[b];if(a.events){a.events.un({activate:this.iconOn,deactivate:this.iconOff})}a.panel_div=null}this.activeState=null},activate:function(){if(OpenLayers.Control.prototype.activate.apply(this,arguments)){var c;for(var b=0,a=this.controls.length;b<a;b++){c=this.controls[b];if(c===this.defaultControl||(this.saveState&&this.activeState[c.id])){c.activate()}}if(this.saveState===true){this.defaultControl=null}this.redraw();return true}else{return false}},deactivate:function(){if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){var c;for(var b=0,a=this.controls.length;b<a;b++){c=this.controls[b];this.activeState[c.id]=c.deactivate()}this.redraw();return true}else{return false}},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);if(this.outsideViewport){this.events.attachToElement(this.div);this.events.register("buttonclick",this,this.onButtonClick)}else{this.map.events.register("buttonclick",this,this.onButtonClick)}this.addControlsToMap(this.controls);return this.div},redraw:function(){for(var b=this.div.childNodes.length,c=b-1;c>=0;c--){this.div.removeChild(this.div.childNodes[c])}this.div.innerHTML="";if(this.active){for(var c=0,a=this.controls.length;c<a;c++){this.div.appendChild(this.controls[c].panel_div)}}},activateControl:function(d){if(!this.active){return false}if(d.type==OpenLayers.Control.TYPE_BUTTON){d.trigger();return}if(d.type==OpenLayers.Control.TYPE_TOGGLE){if(d.active){d.deactivate()}else{d.activate()}return}if(this.allowDepress&&d.active){d.deactivate()}else{var e;for(var b=0,a=this.controls.length;b<a;b++){e=this.controls[b];if(e!=d&&(e.type===OpenLayers.Control.TYPE_TOOL||e.type==null)){e.deactivate()}}d.activate()}},addControls:function(b){if(!(OpenLayers.Util.isArray(b))){b=[b]}this.controls=this.controls.concat(b);for(var d=0,a=b.length;d<a;d++){var e=b[d],c=this.createControlMarkup(e);OpenLayers.Element.addClass(c,e.displayClass+"ItemInactive");OpenLayers.Element.addClass(c,"olButton");if(e.title!=""&&!c.title){c.title=e.title}e.panel_div=c}if(this.map){this.addControlsToMap(b);this.redraw()}},createControlMarkup:function(a){return document.createElement("div")},addControlsToMap:function(b){var d;for(var c=0,a=b.length;c<a;c++){d=b[c];if(d.autoActivate===true){d.autoActivate=false;this.map.addControl(d);d.autoActivate=true}else{this.map.addControl(d);d.deactivate()}d.events.on({activate:this.iconOn,deactivate:this.iconOff})}},iconOn:function(){var b=this.panel_div;var a=new RegExp("\\b("+this.displayClass+"Item)Inactive\\b");b.className=b.className.replace(a,"$1Active")},iconOff:function(){var b=this.panel_div;var a=new RegExp("\\b("+this.displayClass+"Item)Active\\b");b.className=b.className.replace(a,"$1Inactive")},onButtonClick:function(a){var b=this.controls,d=a.buttonElement;for(var c=b.length-1;c>=0;--c){if(b[c].panel_div===d){this.activateControl(b[c]);break}}},getControlsBy:function(c,a){var d=(typeof a.test=="function");var b=OpenLayers.Array.filter(this.controls,function(e){return e[c]==a||(d&&a.test(e[c]))});return b},getControlsByName:function(a){return this.getControlsBy("name",a)},getControlsByClass:function(a){return this.getControlsBy("CLASS_NAME",a)},CLASS_NAME:"OpenLayers.Control.Panel"});OpenLayers.Control.Button=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_BUTTON,trigger:function(){},CLASS_NAME:"OpenLayers.Control.Button"});OpenLayers.Control.ZoomIn=OpenLayers.Class(OpenLayers.Control.Button,{trigger:function(){if(this.map){this.map.zoomIn()}},CLASS_NAME:"OpenLayers.Control.ZoomIn"});OpenLayers.Control.ZoomOut=OpenLayers.Class(OpenLayers.Control.Button,{trigger:function(){if(this.map){this.map.zoomOut()}},CLASS_NAME:"OpenLayers.Control.ZoomOut"});OpenLayers.Control.ZoomToMaxExtent=OpenLayers.Class(OpenLayers.Control.Button,{trigger:function(){if(this.map){this.map.zoomToMaxExtent()}},CLASS_NAME:"OpenLayers.Control.ZoomToMaxExtent"});OpenLayers.Control.ZoomPanel=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(a){OpenLayers.Control.Panel.prototype.initialize.apply(this,[a]);this.addControls([new OpenLayers.Control.ZoomIn(),new OpenLayers.Control.ZoomToMaxExtent(),new OpenLayers.Control.ZoomOut()])},CLASS_NAME:"OpenLayers.Control.ZoomPanel"});OpenLayers.Handler=OpenLayers.Class({id:null,control:null,map:null,keyMask:null,active:false,evt:null,touch:false,initialize:function(d,b,a){OpenLayers.Util.extend(this,a);this.control=d;this.callbacks=b;var c=this.map||d.map;if(c){this.setMap(c)}this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_")},setMap:function(a){this.map=a},checkModifiers:function(a){if(this.keyMask==null){return true}var b=(a.shiftKey?OpenLayers.Handler.MOD_SHIFT:0)|(a.ctrlKey?OpenLayers.Handler.MOD_CTRL:0)|(a.altKey?OpenLayers.Handler.MOD_ALT:0)|(a.metaKey?OpenLayers.Handler.MOD_META:0);return(b==this.keyMask)},activate:function(){if(this.active){return false}var c=OpenLayers.Events.prototype.BROWSER_EVENTS;for(var b=0,a=c.length;b<a;b++){if(this[c[b]]){this.register(c[b],this[c[b]])}}this.active=true;return true},deactivate:function(){if(!this.active){return false}var c=OpenLayers.Events.prototype.BROWSER_EVENTS;for(var b=0,a=c.length;b<a;b++){if(this[c[b]]){this.unregister(c[b],this[c[b]])}}this.touch=false;this.active=false;return true},startTouch:function(){if(!this.touch){this.touch=true;var c=["mousedown","mouseup","mousemove","click","dblclick","mouseout"];for(var b=0,a=c.length;b<a;b++){if(this[c[b]]){this.unregister(c[b],this[c[b]])}}}},callback:function(b,a){if(b&&this.callbacks[b]){this.callbacks[b].apply(this.control,a)}},register:function(a,b){this.map.events.registerPriority(a,this,b);this.map.events.registerPriority(a,this,this.setEvent)},unregister:function(a,b){this.map.events.unregister(a,this,b);this.map.events.unregister(a,this,this.setEvent)},setEvent:function(a){this.evt=a;return true},destroy:function(){this.deactivate();this.control=this.map=null},CLASS_NAME:"OpenLayers.Handler"});OpenLayers.Handler.MOD_NONE=0;OpenLayers.Handler.MOD_SHIFT=1;OpenLayers.Handler.MOD_CTRL=2;OpenLayers.Handler.MOD_ALT=4;OpenLayers.Handler.MOD_META=8;OpenLayers.Handler.Drag=OpenLayers.Class(OpenLayers.Handler,{started:false,stopDown:true,dragging:false,last:null,start:null,lastMoveEvt:null,oldOnselectstart:null,interval:0,timeoutId:null,documentDrag:false,documentEvents:null,initialize:function(d,c,a){OpenLayers.Handler.prototype.initialize.apply(this,arguments);if(this.documentDrag===true){var b=this;this._docMove=function(e){b.mousemove({xy:{x:e.clientX,y:e.clientY},element:document})};this._docUp=function(e){b.mouseup({xy:{x:e.clientX,y:e.clientY}})}}},dragstart:function(b){var a=true;this.dragging=false;if(this.checkModifiers(b)&&(OpenLayers.Event.isLeftClick(b)||OpenLayers.Event.isSingleTouch(b))){this.started=true;this.start=b.xy;this.last=b.xy;OpenLayers.Element.addClass(this.map.viewPortDiv,"olDragDown");this.down(b);this.callback("down",[b.xy]);OpenLayers.Event.preventDefault(b);if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart?document.onselectstart:OpenLayers.Function.True}document.onselectstart=OpenLayers.Function.False;a=!this.stopDown}else{this.started=false;this.start=null;this.last=null}return a},dragmove:function(a){this.lastMoveEvt=a;if(this.started&&!this.timeoutId&&(a.xy.x!=this.last.x||a.xy.y!=this.last.y)){if(this.documentDrag===true&&this.documentEvents){if(a.element===document){this.adjustXY(a);this.setEvent(a)}else{this.removeDocumentEvents()}}if(this.interval>0){this.timeoutId=setTimeout(OpenLayers.Function.bind(this.removeTimeout,this),this.interval)}this.dragging=true;this.move(a);this.callback("move",[a.xy]);if(!this.oldOnselectstart){this.oldOnselectstart=document.onselectstart;document.onselectstart=OpenLayers.Function.False}this.last=a.xy}return true},dragend:function(b){if(this.started){if(this.documentDrag===true&&this.documentEvents){this.adjustXY(b);this.removeDocumentEvents()}var a=(this.start!=this.last);this.started=false;this.dragging=false;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown");this.up(b);this.callback("up",[b.xy]);if(a){this.callback("done",[b.xy])}document.onselectstart=this.oldOnselectstart}return true},down:function(a){},move:function(a){},up:function(a){},out:function(a){},mousedown:function(a){return this.dragstart(a)},touchstart:function(a){this.startTouch();return this.dragstart(a)},mousemove:function(a){return this.dragmove(a)},touchmove:function(a){return this.dragmove(a)},removeTimeout:function(){this.timeoutId=null;if(this.dragging){this.mousemove(this.lastMoveEvt)}},mouseup:function(a){return this.dragend(a)},touchend:function(a){a.xy=this.last;return this.dragend(a)},mouseout:function(b){if(this.started&&OpenLayers.Util.mouseLeft(b,this.map.viewPortDiv)){if(this.documentDrag===true){this.addDocumentEvents()}else{var a=(this.start!=this.last);this.started=false;this.dragging=false;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown");this.out(b);this.callback("out",[]);if(a){this.callback("done",[b.xy])}if(document.onselectstart){document.onselectstart=this.oldOnselectstart}}}return true},click:function(a){return(this.start==this.last)},activate:function(){var a=false;if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.dragging=false;a=true}return a},deactivate:function(){var a=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.started=false;this.dragging=false;this.start=null;this.last=null;a=true;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDragDown")}return a},adjustXY:function(a){var b=OpenLayers.Util.pagePosition(this.map.viewPortDiv);a.xy.x-=b[0];a.xy.y-=b[1]},addDocumentEvents:function(){OpenLayers.Element.addClass(document.body,"olDragDown");this.documentEvents=true;OpenLayers.Event.observe(document,"mousemove",this._docMove);OpenLayers.Event.observe(document,"mouseup",this._docUp)},removeDocumentEvents:function(){OpenLayers.Element.removeClass(document.body,"olDragDown");this.documentEvents=false;OpenLayers.Event.stopObserving(document,"mousemove",this._docMove);OpenLayers.Event.stopObserving(document,"mouseup",this._docUp)},CLASS_NAME:"OpenLayers.Handler.Drag"});OpenLayers.Handler.Box=OpenLayers.Class(OpenLayers.Handler,{dragHandler:null,boxDivClassName:"olHandlerBoxZoomBox",boxOffsets:null,initialize:function(c,b,a){OpenLayers.Handler.prototype.initialize.apply(this,arguments);this.dragHandler=new OpenLayers.Handler.Drag(this,{down:this.startBox,move:this.moveBox,out:this.removeBox,up:this.endBox},{keyMask:this.keyMask})},destroy:function(){OpenLayers.Handler.prototype.destroy.apply(this,arguments);if(this.dragHandler){this.dragHandler.destroy();this.dragHandler=null}},setMap:function(a){OpenLayers.Handler.prototype.setMap.apply(this,arguments);if(this.dragHandler){this.dragHandler.setMap(a)}},startBox:function(a){this.callback("start",[]);this.zoomBox=OpenLayers.Util.createDiv("zoomBox",{x:-9999,y:-9999});this.zoomBox.className=this.boxDivClassName;this.zoomBox.style.zIndex=this.map.Z_INDEX_BASE.Popup-1;this.map.viewPortDiv.appendChild(this.zoomBox);OpenLayers.Element.addClass(this.map.viewPortDiv,"olDrawBox")},moveBox:function(e){var d=this.dragHandler.start.x;var b=this.dragHandler.start.y;var c=Math.abs(d-e.x);var a=Math.abs(b-e.y);var f=this.getBoxOffsets();this.zoomBox.style.width=(c+f.width+1)+"px";this.zoomBox.style.height=(a+f.height+1)+"px";this.zoomBox.style.left=(e.x<d?d-c-f.left:d-f.left)+"px";this.zoomBox.style.top=(e.y<b?b-a-f.top:b-f.top)+"px"},endBox:function(b){var a;if(Math.abs(this.dragHandler.start.x-b.x)>5||Math.abs(this.dragHandler.start.y-b.y)>5){var g=this.dragHandler.start;var f=Math.min(g.y,b.y);var c=Math.max(g.y,b.y);var e=Math.min(g.x,b.x);var d=Math.max(g.x,b.x);a=new OpenLayers.Bounds(e,c,d,f)}else{a=this.dragHandler.start.clone()}this.removeBox();this.callback("done",[a])},removeBox:function(){this.map.viewPortDiv.removeChild(this.zoomBox);this.zoomBox=null;this.boxOffsets=null;OpenLayers.Element.removeClass(this.map.viewPortDiv,"olDrawBox")},activate:function(){if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.dragHandler.activate();return true}else{return false}},deactivate:function(){if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){if(this.dragHandler.deactivate()){if(this.zoomBox){this.removeBox()}}return true}else{return false}},getBoxOffsets:function(){if(!this.boxOffsets){var d=document.createElement("div");d.style.position="absolute";d.style.border="1px solid black";d.style.width="3px";document.body.appendChild(d);var a=d.clientWidth==3;document.body.removeChild(d);var f=parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-left-width"));var c=parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-right-width"));var e=parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-top-width"));var b=parseInt(OpenLayers.Element.getStyle(this.zoomBox,"border-bottom-width"));this.boxOffsets={left:f,right:c,top:e,bottom:b,width:a===false?f+c:0,height:a===false?e+b:0}}return this.boxOffsets},CLASS_NAME:"OpenLayers.Handler.Box"});OpenLayers.Control.ZoomBox=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,out:false,keyMask:null,alwaysZoom:false,zoomOnClick:true,draw:function(){this.handler=new OpenLayers.Handler.Box(this,{done:this.zoomBox},{keyMask:this.keyMask})},zoomBox:function(v){if(v instanceof OpenLayers.Bounds){var e,n=v.getCenterPixel();if(!this.out){var r=this.map.getLonLatFromPixel({x:v.left,y:v.bottom});var b=this.map.getLonLatFromPixel({x:v.right,y:v.top});e=new OpenLayers.Bounds(r.lon,r.lat,b.lon,b.lat)}else{var t=v.right-v.left;var j=v.bottom-v.top;var c=Math.min((this.map.size.h/j),(this.map.size.w/t));var g=this.map.getExtent();var u=this.map.getLonLatFromPixel(n);var h=u.lon-(g.getWidth()/2)*c;var l=u.lon+(g.getWidth()/2)*c;var o=u.lat-(g.getHeight()/2)*c;var q=u.lat+(g.getHeight()/2)*c;e=new OpenLayers.Bounds(h,o,l,q)}var k=this.map.getZoom(),i=this.map.getSize(),d={x:i.w/2,y:i.h/2},a=this.map.getZoomForExtent(e),f=this.map.getResolution(),s=this.map.getResolutionForZoom(a);if(f==s){this.map.setCenter(this.map.getLonLatFromPixel(n))}else{var m={x:(f*n.x-s*d.x)/(f-s),y:(f*n.y-s*d.y)/(f-s)};this.map.zoomTo(a,m)}if(k==this.map.getZoom()&&this.alwaysZoom==true){this.map.zoomTo(k+(this.out?-1:1))}}else{if(this.zoomOnClick){if(!this.out){this.map.zoomTo(this.map.getZoom()+1,v)}else{this.map.zoomTo(this.map.getZoom()-1,v)}}}},CLASS_NAME:"OpenLayers.Control.ZoomBox"});OpenLayers.Control.DragPan=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,panned:false,interval:0,documentDrag:false,kinetic:null,enableKinetic:true,kineticInterval:10,draw:function(){if(this.enableKinetic&&OpenLayers.Kinetic){var a={interval:this.kineticInterval};if(typeof this.enableKinetic==="object"){a=OpenLayers.Util.extend(a,this.enableKinetic)}this.kinetic=new OpenLayers.Kinetic(a)}this.handler=new OpenLayers.Handler.Drag(this,{move:this.panMap,done:this.panMapDone,down:this.panMapStart},{interval:this.interval,documentDrag:this.documentDrag})},panMapStart:function(){if(this.kinetic){this.kinetic.begin()}},panMap:function(a){if(this.kinetic){this.kinetic.update(a)}this.panned=true;this.map.pan(this.handler.last.x-a.x,this.handler.last.y-a.y,{dragging:true,animate:false})},panMapDone:function(c){if(this.panned){var b=null;if(this.kinetic){b=this.kinetic.end(c)}this.map.pan(this.handler.last.x-c.x,this.handler.last.y-c.y,{dragging:!!b,animate:false});if(b){var a=this;this.kinetic.move(b,function(d,f,e){a.map.pan(d,f,{dragging:!e,animate:false})})}this.panned=false}},CLASS_NAME:"OpenLayers.Control.DragPan"});OpenLayers.Handler.MouseWheel=OpenLayers.Class(OpenLayers.Handler,{wheelListener:null,interval:0,maxDelta:Number.POSITIVE_INFINITY,delta:0,cumulative:true,initialize:function(c,b,a){OpenLayers.Handler.prototype.initialize.apply(this,arguments);this.wheelListener=OpenLayers.Function.bindAsEventListener(this.onWheelEvent,this)},destroy:function(){OpenLayers.Handler.prototype.destroy.apply(this,arguments);this.wheelListener=null},onWheelEvent:function(m){if(!this.map||!this.checkModifiers(m)){return}var h=false;var d=false;var g=false;var b=OpenLayers.Event.element(m);while((b!=null)&&!g&&!h){if(!h){try{var c;if(b.currentStyle){c=b.currentStyle.overflow}else{var a=document.defaultView.getComputedStyle(b,null);c=a.getPropertyValue("overflow")}h=(c&&(c=="auto")||(c=="scroll"))}catch(f){}}if(!d){d=OpenLayers.Element.hasClass(b,"olScrollable");if(!d){for(var j=0,l=this.map.layers.length;j<l;j++){var k=this.map.layers[j];if(b==k.div||b==k.pane){d=true;break}}}}g=(b==this.map.div);b=b.parentNode}if(!h&&g){if(d){var o=0;if(m.wheelDelta){o=m.wheelDelta;if(o%160===0){o=o*0.75}o=o/120}else{if(m.detail){o=-(m.detail/Math.abs(m.detail))}}this.delta+=o;window.clearTimeout(this._timeoutId);if(this.interval&&Math.abs(this.delta)<this.maxDelta){var n=OpenLayers.Util.extend({},m);this._timeoutId=window.setTimeout(OpenLayers.Function.bind(function(){this.wheelZoom(n)},this),this.interval)}else{this.wheelZoom(m)}}OpenLayers.Event.stop(m)}},wheelZoom:function(a){var b=this.delta;this.delta=0;if(b){a.xy=this.map.events.getMousePosition(a);if(b<0){this.callback("down",[a,this.cumulative?Math.max(-this.maxDelta,b):-1])}else{this.callback("up",[a,this.cumulative?Math.min(this.maxDelta,b):1])}}},activate:function(a){if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){var b=this.wheelListener;OpenLayers.Event.observe(window,"DOMMouseScroll",b);OpenLayers.Event.observe(window,"mousewheel",b);OpenLayers.Event.observe(document,"mousewheel",b);return true}else{return false}},deactivate:function(a){if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){var b=this.wheelListener;OpenLayers.Event.stopObserving(window,"DOMMouseScroll",b);OpenLayers.Event.stopObserving(window,"mousewheel",b);OpenLayers.Event.stopObserving(document,"mousewheel",b);return true}else{return false}},CLASS_NAME:"OpenLayers.Handler.MouseWheel"});OpenLayers.Handler.Click=OpenLayers.Class(OpenLayers.Handler,{delay:300,single:true,"double":false,pixelTolerance:0,dblclickTolerance:13,stopSingle:false,stopDouble:false,timerId:null,down:null,last:null,first:null,rightclickTimerId:null,touchstart:function(a){this.startTouch();this.down=this.getEventInfo(a);this.last=this.getEventInfo(a);return true},touchmove:function(a){this.last=this.getEventInfo(a);return true},touchend:function(a){if(this.down){a.xy=this.last.xy;a.lastTouches=this.last.touches;this.handleSingle(a);this.down=null}return true},mousedown:function(a){this.down=this.getEventInfo(a);this.last=this.getEventInfo(a);return true},mouseup:function(b){var a=true;if(this.checkModifiers(b)&&this.control.handleRightClicks&&OpenLayers.Event.isRightClick(b)){a=this.rightclick(b)}return a},rightclick:function(b){if(this.passesTolerance(b)){if(this.rightclickTimerId!=null){this.clearTimer();this.callback("dblrightclick",[b]);return !this.stopDouble}else{var a=this["double"]?OpenLayers.Util.extend({},b):this.callback("rightclick",[b]);var c=OpenLayers.Function.bind(this.delayedRightCall,this,a);this.rightclickTimerId=window.setTimeout(c,this.delay)}}return !this.stopSingle},delayedRightCall:function(a){this.rightclickTimerId=null;if(a){this.callback("rightclick",[a])}},click:function(a){if(!this.last){this.last=this.getEventInfo(a)}this.handleSingle(a);return !this.stopSingle},dblclick:function(a){this.handleDouble(a);return !this.stopDouble},handleDouble:function(a){if(this.passesDblclickTolerance(a)){if(this["double"]){this.callback("dblclick",[a])}this.clearTimer()}},handleSingle:function(b){if(this.passesTolerance(b)){if(this.timerId!=null){if(this.last.touches&&this.last.touches.length===1){if(this["double"]){OpenLayers.Event.preventDefault(b)}this.handleDouble(b)}if(!this.last.touches||this.last.touches.length!==2){this.clearTimer()}}else{this.first=this.getEventInfo(b);var a=this.single?OpenLayers.Util.extend({},b):null;this.queuePotentialClick(a)}}},queuePotentialClick:function(a){this.timerId=window.setTimeout(OpenLayers.Function.bind(this.delayedCall,this,a),this.delay)},passesTolerance:function(a){var d=true;if(this.pixelTolerance!=null&&this.down&&this.down.xy){d=this.pixelTolerance>=this.down.xy.distanceTo(a.xy);if(d&&this.touch&&this.down.touches.length===this.last.touches.length){for(var b=0,c=this.down.touches.length;b<c;++b){if(this.getTouchDistance(this.down.touches[b],this.last.touches[b])>this.pixelTolerance){d=false;break}}}}return d},getTouchDistance:function(b,a){return Math.sqrt(Math.pow(b.clientX-a.clientX,2)+Math.pow(b.clientY-a.clientY,2))},passesDblclickTolerance:function(a){var b=true;if(this.down&&this.first){b=this.down.xy.distanceTo(this.first.xy)<=this.dblclickTolerance}return b},clearTimer:function(){if(this.timerId!=null){window.clearTimeout(this.timerId);this.timerId=null}if(this.rightclickTimerId!=null){window.clearTimeout(this.rightclickTimerId);this.rightclickTimerId=null}},delayedCall:function(a){this.timerId=null;if(a){this.callback("click",[a])}},getEventInfo:function(b){var d;if(b.touches){var a=b.touches.length;d=new Array(a);var e;for(var c=0;c<a;c++){e=b.touches[c];d[c]={clientX:e.olClientX,clientY:e.olClientY}}}return{xy:b.xy,touches:d}},deactivate:function(){var a=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.clearTimer();this.down=null;this.first=null;this.last=null;a=true}return a},CLASS_NAME:"OpenLayers.Handler.Click"});OpenLayers.Control.Navigation=OpenLayers.Class(OpenLayers.Control,{dragPan:null,dragPanOptions:null,pinchZoom:null,pinchZoomOptions:null,documentDrag:false,zoomBox:null,zoomBoxEnabled:true,zoomWheelEnabled:true,mouseWheelOptions:null,handleRightClicks:false,zoomBoxKeyMask:OpenLayers.Handler.MOD_SHIFT,autoActivate:true,initialize:function(a){this.handlers={};OpenLayers.Control.prototype.initialize.apply(this,arguments)},destroy:function(){this.deactivate();if(this.dragPan){this.dragPan.destroy()}this.dragPan=null;if(this.zoomBox){this.zoomBox.destroy()}this.zoomBox=null;if(this.pinchZoom){this.pinchZoom.destroy()}this.pinchZoom=null;OpenLayers.Control.prototype.destroy.apply(this,arguments)},activate:function(){this.dragPan.activate();if(this.zoomWheelEnabled){this.handlers.wheel.activate()}this.handlers.click.activate();if(this.zoomBoxEnabled){this.zoomBox.activate()}if(this.pinchZoom){this.pinchZoom.activate()}return OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){if(this.pinchZoom){this.pinchZoom.deactivate()}this.zoomBox.deactivate();this.dragPan.deactivate();this.handlers.click.deactivate();this.handlers.wheel.deactivate();return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},draw:function(){if(this.handleRightClicks){this.map.viewPortDiv.oncontextmenu=OpenLayers.Function.False}var b={click:this.defaultClick,dblclick:this.defaultDblClick,dblrightclick:this.defaultDblRightClick};var c={"double":true,stopDouble:true};this.handlers.click=new OpenLayers.Handler.Click(this,b,c);this.dragPan=new OpenLayers.Control.DragPan(OpenLayers.Util.extend({map:this.map,documentDrag:this.documentDrag},this.dragPanOptions));this.zoomBox=new OpenLayers.Control.ZoomBox({map:this.map,keyMask:this.zoomBoxKeyMask});this.dragPan.draw();this.zoomBox.draw();var a=this.map.fractionalZoom?{}:{cumulative:false,interval:50,maxDelta:6};this.handlers.wheel=new OpenLayers.Handler.MouseWheel(this,{up:this.wheelUp,down:this.wheelDown},OpenLayers.Util.extend(a,this.mouseWheelOptions));if(OpenLayers.Control.PinchZoom){this.pinchZoom=new OpenLayers.Control.PinchZoom(OpenLayers.Util.extend({map:this.map},this.pinchZoomOptions))}},defaultClick:function(a){if(a.lastTouches&&a.lastTouches.length==2){this.map.zoomOut()}},defaultDblClick:function(a){this.map.zoomTo(this.map.zoom+1,a.xy)},defaultDblRightClick:function(a){this.map.zoomTo(this.map.zoom-1,a.xy)},wheelChange:function(a,d){if(!this.map.fractionalZoom){d=Math.round(d)}var c=this.map.getZoom(),b=c+d;b=Math.max(b,0);b=Math.min(b,this.map.getNumZoomLevels());if(b===c){return}this.map.zoomTo(b,a.xy)},wheelUp:function(a,b){this.wheelChange(a,b||1)},wheelDown:function(a,b){this.wheelChange(a,b||-1)},disableZoomBox:function(){this.zoomBoxEnabled=false;this.zoomBox.deactivate()},enableZoomBox:function(){this.zoomBoxEnabled=true;if(this.active){this.zoomBox.activate()}},disableZoomWheel:function(){this.zoomWheelEnabled=false;this.handlers.wheel.deactivate()},enableZoomWheel:function(){this.zoomWheelEnabled=true;if(this.active){this.handlers.wheel.activate()}},CLASS_NAME:"OpenLayers.Control.Navigation"});OpenLayers.Kinetic=OpenLayers.Class({threshold:0,deceleration:0.0035,nbPoints:100,delay:200,points:undefined,timerId:undefined,initialize:function(a){OpenLayers.Util.extend(this,a)},begin:function(){OpenLayers.Animation.stop(this.timerId);this.timerId=undefined;this.points=[]},update:function(a){this.points.unshift({xy:a,tick:new Date().getTime()});if(this.points.length>this.nbPoints){this.points.pop()}},end:function(k){var j,a=new Date().getTime();for(var f=0,e=this.points.length,h;f<e;f++){h=this.points[f];if(a-h.tick>this.delay){break}j=h}if(!j){return}var d=new Date().getTime()-j.tick;var g=Math.sqrt(Math.pow(k.x-j.xy.x,2)+Math.pow(k.y-j.xy.y,2));var c=g/d;if(c==0||c<this.threshold){return}var b=Math.asin((k.y-j.xy.y)/g);if(j.xy.x<=k.x){b=Math.PI-b}return{speed:c,theta:b}},move:function(c,i){var h=c.speed;var f=Math.cos(c.theta);var e=-Math.sin(c.theta);var d=new Date().getTime();var b=0;var a=0;var g=function(){if(this.timerId==null){return}var m=new Date().getTime()-d;var n=(-this.deceleration*Math.pow(m,2))/2+h*m;var j=n*f;var o=n*e;var l={};l.end=false;var k=-this.deceleration*m+h;if(k<=0){OpenLayers.Animation.stop(this.timerId);this.timerId=null;l.end=true}l.x=j-b;l.y=o-a;b=j;a=o;i(l.x,l.y,l.end)};this.timerId=OpenLayers.Animation.start(OpenLayers.Function.bind(g,this))},CLASS_NAME:"OpenLayers.Kinetic"});OpenLayers.Control.Pan=OpenLayers.Class(OpenLayers.Control.Button,{slideFactor:50,slideRatio:null,direction:null,initialize:function(b,a){this.direction=b;this.CLASS_NAME+=this.direction;OpenLayers.Control.prototype.initialize.apply(this,[a])},trigger:function(){if(this.map){var a=OpenLayers.Function.bind(function(b){return this.slideRatio?this.map.getSize()[b]*this.slideRatio:this.slideFactor},this);switch(this.direction){case OpenLayers.Control.Pan.NORTH:this.map.pan(0,-a("h"));break;case OpenLayers.Control.Pan.SOUTH:this.map.pan(0,a("h"));break;case OpenLayers.Control.Pan.WEST:this.map.pan(-a("w"),0);break;case OpenLayers.Control.Pan.EAST:this.map.pan(a("w"),0);break}}},CLASS_NAME:"OpenLayers.Control.Pan"});OpenLayers.Control.Pan.NORTH="North";OpenLayers.Control.Pan.SOUTH="South";OpenLayers.Control.Pan.EAST="East";OpenLayers.Control.Pan.WEST="West";OpenLayers.Control.PanPanel=OpenLayers.Class(OpenLayers.Control.Panel,{slideFactor:50,slideRatio:null,initialize:function(a){OpenLayers.Control.Panel.prototype.initialize.apply(this,[a]);var a={slideFactor:this.slideFactor,slideRatio:this.slideRatio};this.addControls([new OpenLayers.Control.Pan(OpenLayers.Control.Pan.NORTH,a),new OpenLayers.Control.Pan(OpenLayers.Control.Pan.SOUTH,a),new OpenLayers.Control.Pan(OpenLayers.Control.Pan.EAST,a),new OpenLayers.Control.Pan(OpenLayers.Control.Pan.WEST,a)])},CLASS_NAME:"OpenLayers.Control.PanPanel"});Ext.namespace("GeoExt");GeoExt.ZoomSlider=Ext.extend(Ext.slider.SingleSlider,{map:null,baseCls:"gx-zoomslider",aggressive:false,updating:false,initComponent:function(){GeoExt.ZoomSlider.superclass.initComponent.call(this);if(this.map){if(this.map instanceof GeoExt.MapPanel){this.map=this.map.map}this.bind(this.map)}if(this.aggressive===true){this.on("change",this.changeHandler,this)}else{this.on("changecomplete",this.changeHandler,this)}this.on("beforedestroy",this.unbind,this)},onRender:function(){GeoExt.ZoomSlider.superclass.onRender.apply(this,arguments);this.el.addClass(this.baseCls)},afterRender:function(){Ext.slider.SingleSlider.superclass.afterRender.apply(this,arguments);this.update()},addToMapPanel:function(a){this.on({render:function(){var b=this.getEl();b.setStyle({position:"absolute",zIndex:a.map.Z_INDEX_BASE.Control});b.on({mousedown:this.stopMouseEvents,click:this.stopMouseEvents})},afterrender:function(){this.bind(a.map)},scope:this})},stopMouseEvents:function(a){a.stopEvent()},removeFromMapPanel:function(a){var b=this.getEl();b.un("mousedown",this.stopMouseEvents,this);b.un("click",this.stopMouseEvents,this);this.unbind()},bind:function(a){this.map=a;this.map.events.on({zoomend:this.onZoomEnd,updatesize:this.initZoomValues,changebaselayer:this.initZoomValues,scope:this});this.initZoomValues()},onZoomEnd:function(){this.update()},unbind:function(){if(this.map&&this.map.events){this.map.events.un({zoomend:this.onZoomEnd,updatesize:this.initZoomValues,changebaselayer:this.initZoomValues,scope:this})}},initZoomValues:function(){var a=this.map.baseLayer;if(a){if(this.initialConfig.minValue===undefined){var b=this.map.getMinZoom?this.map.getMinZoom():0;this.minValue=Math.max(b,a.minZoomLevel||0)}if(this.initialConfig.maxValue===undefined){this.maxValue=a.minZoomLevel==null?a.numZoomLevels-1:a.maxZoomLevel}this.update(true)}},getZoom:function(){return this.getValue()},getScale:function(){return OpenLayers.Util.getScaleFromResolution(this.map.getResolutionForZoom(this.getValue()),this.map.getUnits())},getResolution:function(){return this.map.getResolutionForZoom(this.getValue())},changeHandler:function(){if(this.map&&!this.updating){this.map.zoomTo(this.getValue())}},update:function(a){if(this.rendered&&this.map){this.updating=true;if(a){this.thumbs[0].value=null}this.setValue(this.map.getZoom());this.updating=false}}});Ext.reg("gx_zoomslider",GeoExt.ZoomSlider);Ext.namespace("GeoExt");GeoExt.ZoomSliderTip=Ext.extend(GeoExt.SliderTip,{template:"<div>Zoom Level: {zoom}</div><div>Resolution: {resolution}</div><div>Scale: 1 : {scale}</div>",compiledTemplate:null,init:function(a){this.compiledTemplate=new Ext.Template(this.template);GeoExt.ZoomSliderTip.superclass.init.call(this,a)},getText:function(a){var b={zoom:a.value,resolution:this.slider.getResolution(),scale:Math.round(this.slider.getScale())};return this.compiledTemplate.apply(b)}});Ext.namespace("gxp");gxp.Viewer=Ext.extend(Ext.util.Observable,{defaultToolType:"gxp_tool",tools:null,selectedLayer:null,authenticate:null,saveErrorText:"Trouble saving: ",constructor:function(a){this.addEvents("ready","beforecreateportal","portalready","beforelayerselectionchange","layerselectionchange","featureedit","authorizationchange","beforesave","save","beforehashchange");Ext.apply(this,{layerSources:{},portalItems:[]});this.createLayerRecordQueue=[];(a.loadConfig||this.loadConfig).call(this,a,this.applyConfig);gxp.Viewer.superclass.constructor.apply(this,arguments)},selectLayer:function(a){a=a||null;var c=false;var b=this.fireEvent("beforelayerselectionchange",a);if(b!==false){c=true;if(this.selectedLayer){this.selectedLayer.set("selected",false)}this.selectedLayer=a;if(this.selectedLayer){this.selectedLayer.set("selected",true)}this.fireEvent("layerselectionchange",a)}return c},loadConfig:function(a){this.applyConfig(a)},applyConfig:function(a){this.initialConfig=Ext.apply({},a);Ext.apply(this,this.initialConfig);this.load()},load:function(){if(this.proxy){OpenLayers.ProxyHost=this.proxy}this.initMapPanel();this.initTools();var b,a=[];for(var c in this.sources){a.push(this.createSourceLoader(c))}a.push(function(d){Ext.onReady(function(){this.initPortal();d()},this)});gxp.util.dispatch(a,this.activate,this)},createSourceLoader:function(a){return function(b){var c=this.sources[a];c.projection=this.initialConfig.map.projection;this.addLayerSource({id:a,config:c,callback:b,fallback:function(e,f,d){b()},scope:this})}},addLayerSource:function(b){var e=b.id||Ext.id(null,"gxp-source-");var d;var a=b.config;a.id=e;try{d=Ext.ComponentMgr.createPlugin(a,this.defaultSourceType)}catch(c){throw new Error("Could not create new source plugin with ptype: "+b.config.ptype)}d.on({ready:{fn:function(){var f=b.callback||Ext.emptyFn;f.call(b.scope||this,e)},scope:this,single:true},failure:{fn:function(){var f=b.fallback||Ext.emptyFn;delete this.layerSources[e];f.apply(b.scope||this,arguments)},scope:this,single:true}});this.layerSources[e]=d;d.init(this);return d},initMapPanel:function(){var a=Ext.apply({},this.initialConfig.map);var e={};var d={wrapDateLine:a.wrapDateLine!==undefined?a.wrapDateLine:true,maxResolution:a.maxResolution,numZoomLevels:a.numZoomLevels,displayInLayerSwitcher:false};if(this.initialConfig.map){var c="theme,controls,resolutions,projection,units,maxExtent,restrictedExtent,maxResolution,numZoomLevels,panMethod".split(",");var f;for(var b=c.length-1;b>=0;--b){f=c[b];if(f in a){e[f]=a[f];delete a[f]}}}this.mapPanel=Ext.ComponentMgr.create(Ext.applyIf({xtype:a.xtype||"gx_mappanel",map:Ext.applyIf({theme:e.theme||null,controls:e.controls||[new OpenLayers.Control.Navigation({zoomWheelOptions:{interval:250},dragPanOptions:{enableKinetic:true}}),new OpenLayers.Control.PanPanel(),new OpenLayers.Control.ZoomPanel(),new OpenLayers.Control.Attribution()],maxExtent:e.maxExtent&&OpenLayers.Bounds.fromArray(e.maxExtent),restrictedExtent:e.restrictedExtent&&OpenLayers.Bounds.fromArray(e.restrictedExtent),numZoomLevels:e.numZoomLevels||20},e),center:a.center&&new OpenLayers.LonLat(a.center[0],a.center[1]),resolutions:a.resolutions,forceInitialExtent:true,layers:[new OpenLayers.Layer(null,d)],items:this.mapItems,plugins:this.mapPlugins,tbar:a.tbar||new Ext.Toolbar({hidden:true})},a));this.mapPanel.getTopToolbar().on({afterlayout:this.mapPanel.map.updateSize,show:this.mapPanel.map.updateSize,hide:this.mapPanel.map.updateSize,scope:this.mapPanel.map});this.mapPanel.layers.on({add:function(j,h){var g;for(var k=h.length-1;k>=0;k--){g=h[k];if(g.get("selected")===true){this.selectLayer(g)}}},remove:function(h,g){if(g.get("selected")===true){this.selectLayer()}},scope:this})},initTools:function(){this.tools={};if(this.initialConfig.tools&&this.initialConfig.tools.length>0){var b;for(var c=0,a=this.initialConfig.tools.length;c<a;c++){try{b=Ext.ComponentMgr.createPlugin(this.initialConfig.tools[c],this.defaultToolType)}catch(d){throw new Error("Could not create tool plugin with ptype: "+this.initialConfig.tools[c].ptype)}b.init(this)}}},initPortal:function(){var a=Ext.apply({},this.portalConfig);if(this.portalItems.length===0){this.mapPanel.region="center";this.portalItems.push(this.mapPanel)}this.fireEvent("beforecreateportal");this.portal=Ext.ComponentMgr.create(Ext.applyIf(a,{layout:"fit",hideBorders:true,items:{layout:"border",deferredRender:false,items:this.portalItems}}),a.renderTo?"panel":"viewport");this.fireEvent("portalready")},activate:function(){Ext.QuickTips.init();this.addLayers();this.checkLayerRecordQueue();this.fireEvent("ready")},addLayers:function(){var k=this.initialConfig.map;if(k&&k.layers){var h,a,g,j=[],e=[];for(var f=0;f<k.layers.length;++f){h=k.layers[f];a=this.layerSources[h.source];if(a){g=a.createLayerRecord(h);if(g){if(g.get("group")==="background"){j.push(g)}else{e.push(g)}}}else{if(window.console){console.warn("Non-existing source '"+h.source+"' referenced in layer config.")}}}var b=this.mapPanel;var c=b.map;var d=j.concat(e);if(d.length){b.layers.add(d)}}},getLayerRecordFromMap:function(b){var a=null;if(this.mapPanel){this.mapPanel.layers.each(function(c){if(c.get("source")==b.source&&c.get("name")==b.name){a=c;return false}})}return a},createLayerRecord:function(a,c,b){this.createLayerRecordQueue.push({config:a,callback:c,scope:b});this.checkLayerRecordQueue()},checkLayerRecordQueue:function(){var g,h,e,a,f;var d=[];for(var b=0,c=this.createLayerRecordQueue.length;b<c;++b){f=false;g=this.createLayerRecordQueue[b];e=g.config.source;if(e in this.layerSources){h=this.layerSources[e];a=h.createLayerRecord(g.config);if(a){(function(i,j){window.setTimeout(function(){i.callback.call(i.scope,j)},0)})(g,a);f=true}else{if(h.lazy){h.store.load({callback:this.checkLayerRecordQueue,scope:this})}}}if(!f){d.push(g)}}this.createLayerRecordQueue=d},getSource:function(a){return a&&this.layerSources[a.get("source")]},getState:function(){var c=Ext.apply({},this.initialConfig);var a=this.mapPanel.map.getCenter();Ext.apply(c.map,{center:[a.lon,a.lat],zoom:this.mapPanel.map.zoom,layers:[]});var b={};this.mapPanel.layers.each(function(d){var e=d.getLayer();if(e.displayInLayerSwitcher){var g=d.get("source");var f=this.layerSources[g];if(!f){throw new Error("Could not find source for record '"+d.get("name")+" and layer "+e.name+"'")}c.map.layers.push(f.getConfigForRecord(d));if(!b[g]){b[g]=f.getState()}}},this);Ext.apply(this.sources,b);c.tools=[];Ext.iterate(this.tools,function(d,f,e){if(f.getState!=gxp.plugins.Tool.prototype.getState){c.tools.push(f.getState())}});return c},isAuthorized:function(c){var a=true;if(this.authorizedRoles){a=false;if(!c){c="ROLE_ADMINISTRATOR"}if(!Ext.isArray(c)){c=[c]}for(var b=c.length-1;b>=0;--b){if(~this.authorizedRoles.indexOf(c[b])){a=true;break}}}return a},setAuthorizedRoles:function(a){this.authorizedRoles=a;this.fireEvent("authorizationchange")},cancelAuthentication:function(){if(this._authFn){this.un("authorizationchange",this._authFn,this)}this.fireEvent("authorizationchange")},isAuthenticated:function(a){return !this.authorizedRoles||this.authorizedRoles.length>0},doAuthorized:function(c,d,b){if(this.isAuthorized(c)||!this.authenticate){window.setTimeout(function(){d.call(b)},0)}else{this.authenticate();this._authFn=function a(){delete this._authFn;this.doAuthorized(c,d,b,true)};this.on("authorizationchange",this._authFn,this,{single:true})}},save:function(f,c){var d=Ext.util.JSON.encode(this.getState());var e,b;if(this.id){e="PUT";b="../maps/"+this.id}else{e="POST";b="../maps/"}var a={method:e,url:b,data:d};if(this.fireEvent("beforesave",a,f)!==false){OpenLayers.Request.issue(Ext.apply(a,{callback:function(g){this.handleSave(g);if(f){f.call(c||this,g)}},scope:this}))}},handleSave:function(c){if(c.status==200){var a=Ext.util.JSON.decode(c.responseText);var b=a.id;if(b){this.id=b;var d="#maps/"+b;if(this.fireEvent("beforehashchange",d)!==false){window.location.hash=d}this.fireEvent("save",this.id)}}else{if(window.console){console.warn(this.saveErrorText+c.responseText)}}},destroy:function(){this.mapPanel.destroy();this.portal&&this.portal.destroy()}});(function(){OpenLayers.DOTS_PER_INCH=25.4/0.28})();Ext.namespace("gxp");gxp.EmbedMapDialog=Ext.extend(Ext.Container,{url:null,url:null,publishMessage:"Your map is ready to be published to the web! Simply copy the following HTML to embed the map in your website:",heightLabel:"Height",widthLabel:"Width",mapSizeLabel:"Map Size",miniSizeLabel:"Mini",smallSizeLabel:"Small",premiumSizeLabel:"Premium",largeSizeLabel:"Large",snippetArea:null,heightField:null,widthField:null,initComponent:function(){Ext.apply(this,this.getConfig());gxp.EmbedMapDialog.superclass.initComponent.call(this)},getIframeHTML:function(){return this.snippetArea.getValue()},updateSnippet:function(){this.snippetArea.setValue('<iframe style="border: none;" height="'+this.heightField.getValue()+'" width="'+this.widthField.getValue()+'" src="'+gxp.util.getAbsoluteUrl(this.url)+'"></iframe>');if(this.snippetArea.isVisible()===true){this.snippetArea.focus(true,100)}},getConfig:function(){this.snippetArea=new Ext.form.TextArea({height:70,selectOnFocus:true,readOnly:true});var b={change:this.updateSnippet,specialkey:function(c,d){d.getKey()==d.ENTER&&this.updateSnippet()},scope:this};this.heightField=new Ext.form.NumberField({width:50,value:400,listeners:b});this.widthField=new Ext.form.NumberField({width:50,value:600,listeners:b});var a=new Ext.Container({layout:"column",defaults:{border:false,xtype:"box"},items:[{autoEl:{cls:"gxp-field-label",html:this.mapSizeLabel}},new Ext.form.ComboBox({editable:false,width:75,store:new Ext.data.SimpleStore({fields:["name","height","width"],data:[[this.miniSizeLabel,100,100],[this.smallSizeLabel,200,300],[this.largeSizeLabel,400,600],[this.premiumSizeLabel,600,800]]}),triggerAction:"all",displayField:"name",value:this.largeSizeLabel,mode:"local",listeners:{select:function(e,c,d){this.widthField.setValue(c.get("width"));this.heightField.setValue(c.get("height"));this.updateSnippet()},scope:this}}),{autoEl:{cls:"gxp-field-label",html:this.heightLabel}},this.heightField,{autoEl:{cls:"gxp-field-label",html:this.widthLabel}},this.widthField]});return{border:false,defaults:{border:false,cls:"gxp-export-section",xtype:"container",layout:"fit"},items:[{items:[a]},{xtype:"box",autoEl:{tag:"p",html:this.publishMessage}},{items:[this.snippetArea]}],listeners:{afterrender:this.updateSnippet,scope:this}}}});Ext.reg("gxp_embedmapdialog",gxp.EmbedMapDialog);Ext.namespace("gxp");gxp.RulePanel=Ext.extend(Ext.TabPanel,{fonts:undefined,symbolType:"Point",rule:null,attributes:null,nestedFilters:true,minScaleDenominatorLimit:Math.pow(0.5,19)*40075016.68*39.3701*OpenLayers.DOTS_PER_INCH/256,maxScaleDenominatorLimit:40075016.68*39.3701*OpenLayers.DOTS_PER_INCH/256,scaleLevels:20,scaleSliderTemplate:"{scaleType} Scale 1:{scale}",modifyScaleTipContext:Ext.emptyFn,labelFeaturesText:"Label Features",labelsText:"Labels",basicText:"Basic",advancedText:"Advanced",limitByScaleText:"Limit by scale",limitByConditionText:"Limit by condition",symbolText:"Symbol",nameText:"Name",initComponent:function(){var a={plain:true,border:false};Ext.applyIf(this,a);if(!this.rule){this.rule=new OpenLayers.Rule({name:this.uniqueRuleName()})}else{if(!this.initialConfig.symbolType){this.symbolType=this.getSymbolTypeFromRule(this.rule)||this.symbolType}}this.activeTab=0;this.textSymbolizer=new gxp.TextSymbolizer({symbolizer:this.getTextSymbolizer(),attributes:this.attributes,fonts:this.fonts,listeners:{change:function(b){this.fireEvent("change",this,this.rule)},scope:this}});this.scaleLimitPanel=new gxp.ScaleLimitPanel({maxScaleDenominator:this.rule.maxScaleDenominator||undefined,limitMaxScaleDenominator:!!this.rule.maxScaleDenominator,maxScaleDenominatorLimit:this.maxScaleDenominatorLimit,minScaleDenominator:this.rule.minScaleDenominator||undefined,limitMinScaleDenominator:!!this.rule.minScaleDenominator,minScaleDenominatorLimit:this.minScaleDenominatorLimit,scaleLevels:this.scaleLevels,scaleSliderTemplate:this.scaleSliderTemplate,modifyScaleTipContext:this.modifyScaleTipContext,listeners:{change:function(c,d,b){this.rule.minScaleDenominator=d;this.rule.maxScaleDenominator=b;this.fireEvent("change",this,this.rule)},scope:this}});this.filterBuilder=new gxp.FilterBuilder({allowGroups:this.nestedFilters,filter:this.rule&&this.rule.filter&&this.rule.filter.clone(),attributes:this.attributes,listeners:{change:function(b){var c=b.getFilter();this.rule.filter=c;this.fireEvent("change",this,this.rule)},scope:this}});this.items=[{title:this.labelsText,autoScroll:true,bodyStyle:{padding:"10px"},items:[{xtype:"fieldset",title:this.labelFeaturesText,autoHeight:true,checkboxToggle:true,collapsed:!this.hasTextSymbolizer(),items:[this.textSymbolizer],listeners:{collapse:function(){OpenLayers.Util.removeItem(this.rule.symbolizers,this.getTextSymbolizer());this.fireEvent("change",this,this.rule)},expand:function(){this.setTextSymbolizer(this.textSymbolizer.symbolizer);this.fireEvent("change",this,this.rule)},scope:this}}]}];if(this.getSymbolTypeFromRule(this.rule)||this.symbolType){this.items=[{title:this.basicText,autoScroll:true,items:[this.createHeaderPanel(),this.createSymbolizerPanel()]},this.items[0],{title:this.advancedText,defaults:{style:{margin:"7px"}},autoScroll:true,items:[{xtype:"fieldset",title:this.limitByScaleText,checkboxToggle:true,collapsed:!(this.rule&&(this.rule.minScaleDenominator||this.rule.maxScaleDenominator)),autoHeight:true,items:[this.scaleLimitPanel],listeners:{collapse:function(){delete this.rule.minScaleDenominator;delete this.rule.maxScaleDenominator;this.fireEvent("change",this,this.rule)},expand:function(){var b=this.getActiveTab();this.activeTab=null;this.setActiveTab(b);var c=false;if(this.scaleLimitPanel.limitMinScaleDenominator){this.rule.minScaleDenominator=this.scaleLimitPanel.minScaleDenominator;c=true}if(this.scaleLimitPanel.limitMaxScaleDenominator){this.rule.maxScaleDenominator=this.scaleLimitPanel.maxScaleDenominator;c=true}if(c){this.fireEvent("change",this,this.rule)}},scope:this}},{xtype:"fieldset",title:this.limitByConditionText,checkboxToggle:true,collapsed:!(this.rule&&this.rule.filter),autoHeight:true,items:[this.filterBuilder],listeners:{collapse:function(){delete this.rule.filter;this.fireEvent("change",this,this.rule)},expand:function(){var b=false;this.rule.filter=this.filterBuilder.getFilter();this.fireEvent("change",this,this.rule)},scope:this}}]}]}this.items[0].autoHeight=true;this.addEvents("change");this.on({tabchange:function(b,c){c.doLayout()},scope:this});gxp.RulePanel.superclass.initComponent.call(this)},hasTextSymbolizer:function(){var d,c;for(var a=0,b=this.rule.symbolizers.length;a<b;++a){d=this.rule.symbolizers[a];if(d instanceof OpenLayers.Symbolizer.Text){c=d;break}}return c},getTextSymbolizer:function(){var a=this.hasTextSymbolizer();if(!a){a=new OpenLayers.Symbolizer.Text({graphic:false})}return a},setTextSymbolizer:function(c){var d;for(var a=0,b=this.rule.symbolizers.length;a<b;++a){candidate=this.rule.symbolizers[a];if(this.rule.symbolizers[a] instanceof OpenLayers.Symbolizer.Text){this.rule.symbolizers[a]=c;d=true;break}}if(!d){this.rule.symbolizers.push(c)}},uniqueRuleName:function(){return OpenLayers.Util.createUniqueID("rule_")},createHeaderPanel:function(){this.symbolizerSwatch=new GeoExt.FeatureRenderer({symbolType:this.symbolType,isFormField:true,fieldLabel:this.symbolText});return{xtype:"form",border:false,labelAlign:"top",defaults:{border:false},style:{padding:"0.3em 0 0 1em"},items:[{layout:"column",defaults:{border:false,style:{"padding-right":"1em"}},items:[{layout:"form",width:150,items:[{xtype:"textfield",fieldLabel:this.nameText,anchor:"95%",value:this.rule&&(this.rule.title||this.rule.name||""),listeners:{change:function(a,b){this.rule.title=b;this.fireEvent("change",this,this.rule)},scope:this}}]},{layout:"form",width:70,items:[this.symbolizerSwatch]}]}]}},createSymbolizerPanel:function(){var f,e;var b=OpenLayers.Symbolizer[this.symbolType];var g=false;if(b){for(var c=0,d=this.rule.symbolizers.length;c<d;++c){f=this.rule.symbolizers[c];if(f instanceof b){g=true;e=f;break}}if(!e){e=new b({fill:false,stroke:false})}}else{throw new Error("Appropriate symbolizer type not included in build: "+this.symbolType)}this.symbolizerSwatch.setSymbolizers([e],{draw:this.symbolizerSwatch.rendered});var a={xtype:"gxp_"+this.symbolType.toLowerCase()+"symbolizer",symbolizer:e,bodyStyle:{padding:"10px"},border:false,labelWidth:70,defaults:{labelWidth:70},listeners:{change:function(h){this.symbolizerSwatch.setSymbolizers([h],{draw:this.symbolizerSwatch.rendered});if(!g){this.rule.symbolizers.push(h);g=true}this.fireEvent("change",this,this.rule)},scope:this}};if(this.symbolType==="Point"&&this.pointGraphics){a.pointGraphics=this.pointGraphics}return a},getSymbolTypeFromRule:function(e){var d,c;for(var a=0,b=e.symbolizers.length;a<b;++a){d=e.symbolizers[a];if(!(d instanceof OpenLayers.Symbolizer.Text)){c=d.CLASS_NAME.split(".").pop();break}}return c}});Ext.reg("gxp_rulepanel",gxp.RulePanel);Ext.namespace("gxp");gxp.StylePropertiesDialog=Ext.extend(Ext.Container,{titleText:"General",nameFieldText:"Name",titleFieldText:"Title",abstractFieldText:"Abstract",userStyle:null,initComponent:function(){var a={change:function(d,c){this.userStyle[d.name]=c;this.fireEvent("change",this,this.userStyle)},scope:this};var b={layout:"form",items:[{xtype:"fieldset",title:this.titleText,labelWidth:75,defaults:{xtype:"textfield",anchor:"100%",listeners:a},items:[{xtype:this.initialConfig.nameEditable?"textfield":"displayfield",fieldLabel:this.nameFieldText,name:"name",value:this.userStyle.name,maskRe:/[A-Za-z0-9_]/},{fieldLabel:this.titleFieldText,name:"title",value:this.userStyle.title},{xtype:"textarea",fieldLabel:this.abstractFieldText,name:"description",value:this.userStyle.description}]}]};Ext.applyIf(this,b);this.addEvents("change");gxp.StylePropertiesDialog.superclass.initComponent.apply(this,arguments)}});Ext.reg("gxp_stylepropertiesdialog",gxp.StylePropertiesDialog);OpenLayers.ElementsIndexer=OpenLayers.Class({maxZIndex:null,order:null,indices:null,compare:null,initialize:function(a){this.compare=a?OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER_Y_ORDER:OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER_DRAWING_ORDER;this.clear()},insert:function(c){if(this.exists(c)){this.remove(c)}var f=c.id;this.determineZIndex(c);var d=-1;var e=this.order.length;var a;while(e-d>1){a=parseInt((d+e)/2);var b=this.compare(this,c,OpenLayers.Util.getElement(this.order[a]));if(b>0){d=a}else{e=a}}this.order.splice(e,0,f);this.indices[f]=this.getZIndex(c);return this.getNextElement(e)},remove:function(b){var d=b.id;var a=OpenLayers.Util.indexOf(this.order,d);if(a>=0){this.order.splice(a,1);delete this.indices[d];if(this.order.length>0){var c=this.order[this.order.length-1];this.maxZIndex=this.indices[c]}else{this.maxZIndex=0}}},clear:function(){this.order=[];this.indices={};this.maxZIndex=0},exists:function(a){return(this.indices[a.id]!=null)},getZIndex:function(a){return a._style.graphicZIndex},determineZIndex:function(a){var b=a._style.graphicZIndex;if(b==null){b=this.maxZIndex;a._style.graphicZIndex=b}else{if(b>this.maxZIndex){this.maxZIndex=b}}},getNextElement:function(b){var a=b+1;if(a<this.order.length){var c=OpenLayers.Util.getElement(this.order[a]);if(c==undefined){c=this.getNextElement(a)}return c}else{return null}},CLASS_NAME:"OpenLayers.ElementsIndexer"});OpenLayers.ElementsIndexer.IndexingMethods={Z_ORDER:function(e,d,b){var a=e.getZIndex(d);var f=0;if(b){var c=e.getZIndex(b);f=a-c}return f},Z_ORDER_DRAWING_ORDER:function(c,b,a){var d=OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER(c,b,a);if(a&&d==0){d=1}return d},Z_ORDER_Y_ORDER:function(d,c,b){var e=OpenLayers.ElementsIndexer.IndexingMethods.Z_ORDER(d,c,b);if(b&&e===0){var a=b._boundsBottom-c._boundsBottom;e=(a===0)?1:a}return e}};OpenLayers.Renderer.Elements=OpenLayers.Class(OpenLayers.Renderer,{rendererRoot:null,root:null,vectorRoot:null,textRoot:null,xmlns:null,xOffset:0,indexer:null,BACKGROUND_ID_SUFFIX:"_background",LABEL_ID_SUFFIX:"_label",LABEL_OUTLINE_SUFFIX:"_outline",initialize:function(a,b){OpenLayers.Renderer.prototype.initialize.apply(this,arguments);this.rendererRoot=this.createRenderRoot();this.root=this.createRoot("_root");this.vectorRoot=this.createRoot("_vroot");this.textRoot=this.createRoot("_troot");this.root.appendChild(this.vectorRoot);this.root.appendChild(this.textRoot);this.rendererRoot.appendChild(this.root);this.container.appendChild(this.rendererRoot);if(b&&(b.zIndexing||b.yOrdering)){this.indexer=new OpenLayers.ElementsIndexer(b.yOrdering)}},destroy:function(){this.clear();this.rendererRoot=null;this.root=null;this.xmlns=null;OpenLayers.Renderer.prototype.destroy.apply(this,arguments)},clear:function(){var b;var a=this.vectorRoot;if(a){while(b=a.firstChild){a.removeChild(b)}}a=this.textRoot;if(a){while(b=a.firstChild){a.removeChild(b)}}if(this.indexer){this.indexer.clear()}},setExtent:function(e,g){var c=OpenLayers.Renderer.prototype.setExtent.apply(this,arguments);var b=this.getResolution();if(this.map.baseLayer&&this.map.baseLayer.wrapDateLine){var a,d=e.getWidth()/this.map.getExtent().getWidth(),e=e.scale(1/d),f=this.map.getMaxExtent();if(f.right>e.left&&f.right<e.right){a=true}else{if(f.left>e.left&&f.left<e.right){a=false}}if(a!==this.rightOfDateLine||g){c=false;this.xOffset=a===true?f.getWidth()/b:0}this.rightOfDateLine=a}return c},getNodeType:function(b,a){},drawGeometry:function(j,a,d){var h=j.CLASS_NAME;var c=true;if((h=="OpenLayers.Geometry.Collection")||(h=="OpenLayers.Geometry.MultiPoint")||(h=="OpenLayers.Geometry.MultiLineString")||(h=="OpenLayers.Geometry.MultiPolygon")){for(var f=0,g=j.components.length;f<g;f++){c=this.drawGeometry(j.components[f],a,d)&&c}return c}c=false;var e=false;if(a.display!="none"){if(a.backgroundGraphic){this.redrawBackgroundNode(j.id,j,a,d)}else{e=true}c=this.redrawNode(j.id,j,a,d)}if(c==false){var b=document.getElementById(j.id);if(b){if(b._style.backgroundGraphic){e=true}b.parentNode.removeChild(b)}}if(e){var b=document.getElementById(j.id+this.BACKGROUND_ID_SUFFIX);if(b){b.parentNode.removeChild(b)}}return c},redrawNode:function(g,f,b,e){b=this.applyDefaultSymbolizer(b);var c=this.nodeFactory(g,this.getNodeType(f,b));c._featureId=e;c._boundsBottom=f.getBounds().bottom;c._geometryClass=f.CLASS_NAME;c._style=b;var a=this.drawGeometryNode(c,f,b);if(a===false){return false}c=a.node;if(this.indexer){var d=this.indexer.insert(c);if(d){this.vectorRoot.insertBefore(c,d)}else{this.vectorRoot.appendChild(c)}}else{if(c.parentNode!==this.vectorRoot){this.vectorRoot.appendChild(c)}}this.postDraw(c);return a.complete},redrawBackgroundNode:function(e,d,b,c){var a=OpenLayers.Util.extend({},b);a.externalGraphic=a.backgroundGraphic;a.graphicXOffset=a.backgroundXOffset;a.graphicYOffset=a.backgroundYOffset;a.graphicZIndex=a.backgroundGraphicZIndex;a.graphicWidth=a.backgroundWidth||a.graphicWidth;a.graphicHeight=a.backgroundHeight||a.graphicHeight;a.backgroundGraphic=null;a.backgroundXOffset=null;a.backgroundYOffset=null;a.backgroundGraphicZIndex=null;return this.redrawNode(e+this.BACKGROUND_ID_SUFFIX,d,a,null)},drawGeometryNode:function(c,e,b){b=b||c._style;var a={isFilled:b.fill===undefined?true:b.fill,isStroked:b.stroke===undefined?!!b.strokeWidth:b.stroke};var d;switch(e.CLASS_NAME){case"OpenLayers.Geometry.Point":if(b.graphic===false){a.isFilled=false;a.isStroked=false}d=this.drawPoint(c,e);break;case"OpenLayers.Geometry.LineString":a.isFilled=false;d=this.drawLineString(c,e);break;case"OpenLayers.Geometry.LinearRing":d=this.drawLinearRing(c,e);break;case"OpenLayers.Geometry.Polygon":d=this.drawPolygon(c,e);break;case"OpenLayers.Geometry.Rectangle":d=this.drawRectangle(c,e);break;default:break}c._options=a;if(d!=false){return{node:this.setStyle(c,b,a,e),complete:d}}else{return false}},postDraw:function(a){},drawPoint:function(a,b){},drawLineString:function(a,b){},drawLinearRing:function(a,b){},drawPolygon:function(a,b){},drawRectangle:function(a,b){},drawCircle:function(a,b){},removeText:function(c){var a=document.getElementById(c+this.LABEL_ID_SUFFIX);if(a){this.textRoot.removeChild(a)}var b=document.getElementById(c+this.LABEL_OUTLINE_SUFFIX);if(b){this.textRoot.removeChild(b)}},getFeatureIdFromEvent:function(a){var d=a.target;var b=d&&d.correspondingUseElement;var c=b?b:(d||a.srcElement);return c._featureId},eraseGeometry:function(g,f){if((g.CLASS_NAME=="OpenLayers.Geometry.MultiPoint")||(g.CLASS_NAME=="OpenLayers.Geometry.MultiLineString")||(g.CLASS_NAME=="OpenLayers.Geometry.MultiPolygon")||(g.CLASS_NAME=="OpenLayers.Geometry.Collection")){for(var d=0,a=g.components.length;d<a;d++){this.eraseGeometry(g.components[d],f)}}else{var c=OpenLayers.Util.getElement(g.id);if(c&&c.parentNode){if(c.geometry){c.geometry.destroy();c.geometry=null}c.parentNode.removeChild(c);if(this.indexer){this.indexer.remove(c)}if(c._style.backgroundGraphic){var b=g.id+this.BACKGROUND_ID_SUFFIX;var e=OpenLayers.Util.getElement(b);if(e&&e.parentNode){e.parentNode.removeChild(e)}}}}},nodeFactory:function(c,a){var b=OpenLayers.Util.getElement(c);if(b){if(!this.nodeTypeCompare(b,a)){b.parentNode.removeChild(b);b=this.nodeFactory(c,a)}}else{b=this.createNode(a,c)}return b},nodeTypeCompare:function(b,a){},createNode:function(a,b){},moveRoot:function(b){var a=this.root;if(b.root.parentNode==this.rendererRoot){a=b.root}a.parentNode.removeChild(a);b.rendererRoot.appendChild(a)},getRenderLayerId:function(){return this.root.parentNode.parentNode.id},isComplexSymbol:function(a){return(a!="circle")&&!!a},CLASS_NAME:"OpenLayers.Renderer.Elements"});OpenLayers.Renderer.SVG=OpenLayers.Class(OpenLayers.Renderer.Elements,{xmlns:"http://www.w3.org/2000/svg",xlinkns:"http://www.w3.org/1999/xlink",MAX_PIXEL:15000,translationParameters:null,symbolMetrics:null,initialize:function(a){if(!this.supported()){return}OpenLayers.Renderer.Elements.prototype.initialize.apply(this,arguments);this.translationParameters={x:0,y:0};this.symbolMetrics={}},supported:function(){var a="http://www.w3.org/TR/SVG11/feature#";return(document.implementation&&(document.implementation.hasFeature("org.w3c.svg","1.0")||document.implementation.hasFeature(a+"SVG","1.1")||document.implementation.hasFeature(a+"BasicStructure","1.1")))},inValidRange:function(a,e,b){var d=a+(b?0:this.translationParameters.x);var c=e+(b?0:this.translationParameters.y);return(d>=-this.MAX_PIXEL&&d<=this.MAX_PIXEL&&c>=-this.MAX_PIXEL&&c<=this.MAX_PIXEL)},setExtent:function(c,e){var b=OpenLayers.Renderer.Elements.prototype.setExtent.apply(this,arguments);var a=this.getResolution(),g=-c.left/a,f=c.top/a;if(e){this.left=g;this.top=f;var d="0 0 "+this.size.w+" "+this.size.h;this.rendererRoot.setAttributeNS(null,"viewBox",d);this.translate(this.xOffset,0);return true}else{var h=this.translate(g-this.left+this.xOffset,f-this.top);if(!h){this.setExtent(c,true)}return b&&h}},translate:function(a,c){if(!this.inValidRange(a,c,true)){return false}else{var b="";if(a||c){b="translate("+a+","+c+")"}this.root.setAttributeNS(null,"transform",b);this.translationParameters={x:a,y:c};return true}},setSize:function(a){OpenLayers.Renderer.prototype.setSize.apply(this,arguments);this.rendererRoot.setAttributeNS(null,"width",this.size.w);this.rendererRoot.setAttributeNS(null,"height",this.size.h)},getNodeType:function(c,b){var a=null;switch(c.CLASS_NAME){case"OpenLayers.Geometry.Point":if(b.externalGraphic){a="image"}else{if(this.isComplexSymbol(b.graphicName)){a="svg"}else{a="circle"}}break;case"OpenLayers.Geometry.Rectangle":a="rect";break;case"OpenLayers.Geometry.LineString":a="polyline";break;case"OpenLayers.Geometry.LinearRing":a="polygon";break;case"OpenLayers.Geometry.Polygon":case"OpenLayers.Geometry.Curve":a="path";break;default:break}return a},setStyle:function(q,u,b){u=u||q._style;b=b||q._options;var w=u.title||u.graphicTitle;if(w){q.setAttributeNS(null,"title",w);var o=q.getElementsByTagName("title");if(o.length>0){o[0].firstChild.textContent=w}else{var f=this.nodeFactory(null,"title");f.textContent=w;q.appendChild(f)}}var k=parseFloat(q.getAttributeNS(null,"r"));var j=1;var d;if(q._geometryClass=="OpenLayers.Geometry.Point"&&k){q.style.visibility="";if(u.graphic===false){q.style.visibility="hidden"}else{if(u.externalGraphic){d=this.getPosition(q);if(u.graphicWidth&&u.graphicHeight){q.setAttributeNS(null,"preserveAspectRatio","none")}var n=u.graphicWidth||u.graphicHeight;var m=u.graphicHeight||u.graphicWidth;n=n?n:u.pointRadius*2;m=m?m:u.pointRadius*2;var v=(u.graphicXOffset!=undefined)?u.graphicXOffset:-(0.5*n);var g=(u.graphicYOffset!=undefined)?u.graphicYOffset:-(0.5*m);var a=u.graphicOpacity||u.fillOpacity;q.setAttributeNS(null,"x",(d.x+v).toFixed());q.setAttributeNS(null,"y",(d.y+g).toFixed());q.setAttributeNS(null,"width",n);q.setAttributeNS(null,"height",m);q.setAttributeNS(this.xlinkns,"xlink:href",u.externalGraphic);q.setAttributeNS(null,"style","opacity: "+a);q.onclick=OpenLayers.Event.preventDefault}else{if(this.isComplexSymbol(u.graphicName)){var c=u.pointRadius*3;var l=c*2;var e=this.importSymbol(u.graphicName);d=this.getPosition(q);j=this.symbolMetrics[e.id][0]*3/l;var h=q.parentNode;var i=q.nextSibling;if(h){h.removeChild(q)}q.firstChild&&q.removeChild(q.firstChild);q.appendChild(e.firstChild.cloneNode(true));q.setAttributeNS(null,"viewBox",e.getAttributeNS(null,"viewBox"));q.setAttributeNS(null,"width",l);q.setAttributeNS(null,"height",l);q.setAttributeNS(null,"x",d.x-c);q.setAttributeNS(null,"y",d.y-c);if(i){h.insertBefore(q,i)}else{if(h){h.appendChild(q)}}}else{q.setAttributeNS(null,"r",u.pointRadius)}}}var t=u.rotation;if((t!==undefined||q._rotation!==undefined)&&d){q._rotation=t;t|=0;if(q.nodeName!=="svg"){q.setAttributeNS(null,"transform","rotate("+t+" "+d.x+" "+d.y+")")}else{var s=this.symbolMetrics[e.id];q.firstChild.setAttributeNS(null,"transform","rotate("+t+" "+s[1]+" "+s[2]+")")}}}if(b.isFilled){q.setAttributeNS(null,"fill",u.fillColor);q.setAttributeNS(null,"fill-opacity",u.fillOpacity)}else{q.setAttributeNS(null,"fill","none")}if(b.isStroked){q.setAttributeNS(null,"stroke",u.strokeColor);q.setAttributeNS(null,"stroke-opacity",u.strokeOpacity);q.setAttributeNS(null,"stroke-width",u.strokeWidth*j);q.setAttributeNS(null,"stroke-linecap",u.strokeLinecap||"round");q.setAttributeNS(null,"stroke-linejoin","round");u.strokeDashstyle&&q.setAttributeNS(null,"stroke-dasharray",this.dashStyle(u,j))}else{q.setAttributeNS(null,"stroke","none")}if(u.pointerEvents){q.setAttributeNS(null,"pointer-events",u.pointerEvents)}if(u.cursor!=null){q.setAttributeNS(null,"cursor",u.cursor)}return q},dashStyle:function(c,b){var a=c.strokeWidth*b;var d=c.strokeDashstyle;switch(d){case"solid":return"none";case"dot":return[1,4*a].join();case"dash":return[4*a,4*a].join();case"dashdot":return[4*a,4*a,1,4*a].join();case"longdash":return[8*a,4*a].join();case"longdashdot":return[8*a,4*a,1,4*a].join();default:return OpenLayers.String.trim(d).replace(/\s+/g,",")}},createNode:function(a,c){var b=document.createElementNS(this.xmlns,a);if(c){b.setAttributeNS(null,"id",c)}return b},nodeTypeCompare:function(b,a){return(a==b.nodeName)},createRenderRoot:function(){var a=this.nodeFactory(this.container.id+"_svgRoot","svg");a.style.display="block";return a},createRoot:function(a){return this.nodeFactory(this.container.id+a,"g")},createDefs:function(){var a=this.nodeFactory(this.container.id+"_defs","defs");this.rendererRoot.appendChild(a);return a},drawPoint:function(a,b){return this.drawCircle(a,b,1)},drawCircle:function(d,e,b){var c=this.getResolution();var a=((e.x-this.featureDx)/c+this.left);var f=(this.top-e.y/c);if(this.inValidRange(a,f)){d.setAttributeNS(null,"cx",a);d.setAttributeNS(null,"cy",f);d.setAttributeNS(null,"r",b);return d}else{return false}},drawLineString:function(b,c){var a=this.getComponentsString(c.components);if(a.path){b.setAttributeNS(null,"points",a.path);return(a.complete?b:null)}else{return false}},drawLinearRing:function(b,c){var a=this.getComponentsString(c.components);if(a.path){b.setAttributeNS(null,"points",a.path);return(a.complete?b:null)}else{return false}},drawPolygon:function(b,h){var g="";var i=true;var a=true;var c,k;for(var e=0,f=h.components.length;e<f;e++){g+=" M";c=this.getComponentsString(h.components[e].components," ");k=c.path;if(k){g+=" "+k;a=c.complete&&a}else{i=false}}g+=" z";if(i){b.setAttributeNS(null,"d",g);b.setAttributeNS(null,"fill-rule","evenodd");return a?b:null}else{return false}},drawRectangle:function(c,d){var b=this.getResolution();var a=((d.x-this.featureDx)/b+this.left);var e=(this.top-d.y/b);if(this.inValidRange(a,e)){c.setAttributeNS(null,"x",a);c.setAttributeNS(null,"y",e);c.setAttributeNS(null,"width",d.width/b);c.setAttributeNS(null,"height",d.height/b);return c}else{return false}},drawText:function(f,b,q){var a=(!!b.labelOutlineWidth);if(a){var l=OpenLayers.Util.extend({},b);l.fontColor=l.labelOutlineColor;l.fontStrokeColor=l.labelOutlineColor;l.fontStrokeWidth=b.labelOutlineWidth;if(b.labelOutlineOpacity){l.fontOpacity=b.labelOutlineOpacity}delete l.labelOutlineWidth;this.drawText(f,l,q)}var c=this.getResolution();var o=((q.x-this.featureDx)/c+this.left);var k=(q.y/c-this.top);var r=(a)?this.LABEL_OUTLINE_SUFFIX:this.LABEL_ID_SUFFIX;var n=this.nodeFactory(f+r,"text");n.setAttributeNS(null,"x",o);n.setAttributeNS(null,"y",-k);if(b.fontColor){n.setAttributeNS(null,"fill",b.fontColor)}if(b.fontStrokeColor){n.setAttributeNS(null,"stroke",b.fontStrokeColor)}if(b.fontStrokeWidth){n.setAttributeNS(null,"stroke-width",b.fontStrokeWidth)}if(b.fontOpacity){n.setAttributeNS(null,"opacity",b.fontOpacity)}if(b.fontFamily){n.setAttributeNS(null,"font-family",b.fontFamily)}if(b.fontSize){n.setAttributeNS(null,"font-size",b.fontSize)}if(b.fontWeight){n.setAttributeNS(null,"font-weight",b.fontWeight)}if(b.fontStyle){n.setAttributeNS(null,"font-style",b.fontStyle)}if(b.labelSelect===true){n.setAttributeNS(null,"pointer-events","visible");n._featureId=f}else{n.setAttributeNS(null,"pointer-events","none")}var h=b.labelAlign||OpenLayers.Renderer.defaultSymbolizer.labelAlign;n.setAttributeNS(null,"text-anchor",OpenLayers.Renderer.SVG.LABEL_ALIGN[h[0]]||"middle");if(OpenLayers.IS_GECKO===true){n.setAttributeNS(null,"dominant-baseline",OpenLayers.Renderer.SVG.LABEL_ALIGN[h[1]]||"central")}var d=b.label.split("\n");var g=d.length;while(n.childNodes.length>g){n.removeChild(n.lastChild)}for(var e=0;e<g;e++){var j=this.nodeFactory(f+r+"_tspan_"+e,"tspan");if(b.labelSelect===true){j._featureId=f;j._geometry=q;j._geometryClass=q.CLASS_NAME}if(OpenLayers.IS_GECKO===false){j.setAttributeNS(null,"baseline-shift",OpenLayers.Renderer.SVG.LABEL_VSHIFT[h[1]]||"-35%")}j.setAttribute("x",o);if(e==0){var m=OpenLayers.Renderer.SVG.LABEL_VFACTOR[h[1]];if(m==null){m=-0.5}j.setAttribute("dy",(m*(g-1))+"em")}else{j.setAttribute("dy","1em")}j.textContent=(d[e]==="")?" ":d[e];if(!j.parentNode){n.appendChild(j)}}if(!n.parentNode){this.textRoot.appendChild(n)}},getComponentsString:function(d,c){var f=[];var a=true;var e=d.length;var j=[];var g,h;for(var b=0;b<e;b++){h=d[b];f.push(h);g=this.getShortString(h);if(g){j.push(g)}else{if(b>0){if(this.getShortString(d[b-1])){j.push(this.clipLine(d[b],d[b-1]))}}if(b<e-1){if(this.getShortString(d[b+1])){j.push(this.clipLine(d[b],d[b+1]))}}a=false}}return{path:j.join(c||","),complete:a}},clipLine:function(e,h){if(h.equals(e)){return""}var f=this.getResolution();var b=this.MAX_PIXEL-this.translationParameters.x;var a=this.MAX_PIXEL-this.translationParameters.y;var d=(h.x-this.featureDx)/f+this.left;var j=this.top-h.y/f;var c=(e.x-this.featureDx)/f+this.left;var i=this.top-e.y/f;var g;if(c<-b||c>b){g=(i-j)/(c-d);c=c<0?-b:b;i=j+(c-d)*g}if(i<-a||i>a){g=(c-d)/(i-j);i=i<0?-a:a;c=d+(i-j)*g}return c+","+i},getShortString:function(b){var c=this.getResolution();var a=((b.x-this.featureDx)/c+this.left);var d=(this.top-b.y/c);if(this.inValidRange(a,d)){return a+","+d}else{return false}},getPosition:function(a){return({x:parseFloat(a.getAttributeNS(null,"cx")),y:parseFloat(a.getAttributeNS(null,"cy"))})},importSymbol:function(f){if(!this.defs){this.defs=this.createDefs()}var b=this.container.id+"-"+f;var c=document.getElementById(b);if(c!=null){return c}var e=OpenLayers.Renderer.symbol[f];if(!e){throw new Error(f+" is not a valid symbol name")}var h=this.nodeFactory(b,"symbol");var d=this.nodeFactory(null,"polygon");h.appendChild(d);var n=new OpenLayers.Bounds(Number.MAX_VALUE,Number.MAX_VALUE,0,0);var l=[];var k,j;for(var g=0;g<e.length;g=g+2){k=e[g];j=e[g+1];n.left=Math.min(n.left,k);n.bottom=Math.min(n.bottom,j);n.right=Math.max(n.right,k);n.top=Math.max(n.top,j);l.push(k,",",j)}d.setAttributeNS(null,"points",l.join(" "));var a=n.getWidth();var m=n.getHeight();var o=[n.left-a,n.bottom-m,a*3,m*3];h.setAttributeNS(null,"viewBox",o.join(" "));this.symbolMetrics[b]=[Math.max(a,m),n.getCenterLonLat().lon,n.getCenterLonLat().lat];this.defs.appendChild(h);return h},getFeatureIdFromEvent:function(a){var c=OpenLayers.Renderer.Elements.prototype.getFeatureIdFromEvent.apply(this,arguments);if(!c){var b=a.target;c=b.parentNode&&b!=this.rendererRoot?b.parentNode._featureId:undefined}return c},CLASS_NAME:"OpenLayers.Renderer.SVG"});OpenLayers.Renderer.SVG.LABEL_ALIGN={l:"start",r:"end",b:"bottom",t:"hanging"};OpenLayers.Renderer.SVG.LABEL_VSHIFT={t:"-70%",b:"0"};OpenLayers.Renderer.SVG.LABEL_VFACTOR={t:0,b:-1};OpenLayers.Renderer.SVG.preventDefault=function(a){OpenLayers.Event.preventDefault(a)};OpenLayers.Renderer.VML=OpenLayers.Class(OpenLayers.Renderer.Elements,{xmlns:"urn:schemas-microsoft-com:vml",symbolCache:{},offset:null,initialize:function(b){if(!this.supported()){return}if(!document.namespaces.olv){document.namespaces.add("olv",this.xmlns);var e=document.createStyleSheet();var c=["shape","rect","oval","fill","stroke","imagedata","group","textbox"];for(var d=0,a=c.length;d<a;d++){e.addRule("olv\\:"+c[d],"behavior: url(#default#VML); position: absolute; display: inline-block;")}}OpenLayers.Renderer.Elements.prototype.initialize.apply(this,arguments)},supported:function(){return !!(document.namespaces)},setExtent:function(k,b){var a=OpenLayers.Renderer.Elements.prototype.setExtent.apply(this,arguments);var d=this.getResolution();var c=(k.left/d)|0;var h=(k.top/d-this.size.h)|0;if(b||!this.offset){this.offset={x:c,y:h};c=0;h=0}else{c=c-this.offset.x;h=h-this.offset.y}var m=(c-this.xOffset)+" "+h;this.root.coordorigin=m;var j=[this.root,this.vectorRoot,this.textRoot];var g;for(var e=0,f=j.length;e<f;++e){g=j[e];var l=this.size.w+" "+this.size.h;g.coordsize=l}this.root.style.flip="y";return a},setSize:function(f){OpenLayers.Renderer.prototype.setSize.apply(this,arguments);var d=[this.rendererRoot,this.root,this.vectorRoot,this.textRoot];var c=this.size.w+"px";var g=this.size.h+"px";var b;for(var e=0,a=d.length;e<a;++e){b=d[e];b.style.width=c;b.style.height=g}},getNodeType:function(c,b){var a=null;switch(c.CLASS_NAME){case"OpenLayers.Geometry.Point":if(b.externalGraphic){a="olv:rect"}else{if(this.isComplexSymbol(b.graphicName)){a="olv:shape"}else{a="olv:oval"}}break;case"OpenLayers.Geometry.Rectangle":a="olv:rect";break;case"OpenLayers.Geometry.LineString":case"OpenLayers.Geometry.LinearRing":case"OpenLayers.Geometry.Polygon":case"OpenLayers.Geometry.Curve":a="olv:shape";break;default:break}return a},setStyle:function(k,o,a,c){o=o||k._style;a=a||k._options;var b=o.fillColor;var s=o.title||o.graphicTitle;if(s){k.title=s}if(k._geometryClass==="OpenLayers.Geometry.Point"){if(o.externalGraphic){a.isFilled=true;var j=o.graphicWidth||o.graphicHeight;var h=o.graphicHeight||o.graphicWidth;j=j?j:o.pointRadius*2;h=h?h:o.pointRadius*2;var m=this.getResolution();var r=(o.graphicXOffset!=undefined)?o.graphicXOffset:-(0.5*j);var e=(o.graphicYOffset!=undefined)?o.graphicYOffset:-(0.5*h);k.style.left=((((c.x-this.featureDx)/m-this.offset.x)+r)|0)+"px";k.style.top=(((c.y/m-this.offset.y)-(e+h))|0)+"px";k.style.width=j+"px";k.style.height=h+"px";k.style.flip="y";b="none";a.isStroked=false}else{if(this.isComplexSymbol(o.graphicName)){var f=this.importSymbol(o.graphicName);k.path=f.path;k.coordorigin=f.left+","+f.bottom;var g=f.size;k.coordsize=g+","+g;this.drawCircle(k,c,o.pointRadius);k.style.flip="y"}else{this.drawCircle(k,c,o.pointRadius)}}}if(a.isFilled){k.fillcolor=b}else{k.filled="false"}var i=k.getElementsByTagName("fill");var n=(i.length==0)?null:i[0];if(!a.isFilled){if(n){k.removeChild(n)}}else{if(!n){n=this.createNode("olv:fill",k.id+"_fill")}n.opacity=o.fillOpacity;if(k._geometryClass==="OpenLayers.Geometry.Point"&&o.externalGraphic){if(o.graphicOpacity){n.opacity=o.graphicOpacity}n.src=o.externalGraphic;n.type="frame";if(!(o.graphicWidth&&o.graphicHeight)){n.aspect="atmost"}}if(n.parentNode!=k){k.appendChild(n)}}var l=o.rotation;if((l!==undefined||k._rotation!==undefined)){k._rotation=l;if(o.externalGraphic){this.graphicRotate(k,r,e,o);n.opacity=0}else{if(k._geometryClass==="OpenLayers.Geometry.Point"){k.style.rotation=l||0}}}var q=k.getElementsByTagName("stroke");var d=(q.length==0)?null:q[0];if(!a.isStroked){k.stroked=false;if(d){d.on=false}}else{if(!d){d=this.createNode("olv:stroke",k.id+"_stroke");k.appendChild(d)}d.on=true;d.color=o.strokeColor;d.weight=o.strokeWidth+"px";d.opacity=o.strokeOpacity;d.endcap=o.strokeLinecap=="butt"?"flat":(o.strokeLinecap||"round");if(o.strokeDashstyle){d.dashstyle=this.dashStyle(o)}}if(o.cursor!="inherit"&&o.cursor!=null){k.style.cursor=o.cursor}return k},graphicRotate:function(n,s,e,r){var r=r||n._style;var o=r.rotation||0;var a,j;if(!(r.graphicWidth&&r.graphicHeight)){var t=new Image();t.onreadystatechange=OpenLayers.Function.bind(function(){if(t.readyState=="complete"||t.readyState=="interactive"){a=t.width/t.height;j=Math.max(r.pointRadius*2,r.graphicWidth||0,r.graphicHeight||0);s=s*a;r.graphicWidth=j*a;r.graphicHeight=j;this.graphicRotate(n,s,e,r)}},this);t.src=r.externalGraphic;return}else{j=Math.max(r.graphicWidth,r.graphicHeight);a=r.graphicWidth/r.graphicHeight}var m=Math.round(r.graphicWidth||j*a);var k=Math.round(r.graphicHeight||j);n.style.width=m+"px";n.style.height=k+"px";var l=document.getElementById(n.id+"_image");if(!l){l=this.createNode("olv:imagedata",n.id+"_image");n.appendChild(l)}l.style.width=m+"px";l.style.height=k+"px";l.src=r.externalGraphic;l.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='', sizingMethod='scale')";var f=o*Math.PI/180;var h=Math.sin(f);var d=Math.cos(f);var g="progid:DXImageTransform.Microsoft.Matrix(M11="+d+",M12="+(-h)+",M21="+h+",M22="+d+",SizingMethod='auto expand')\n";var b=r.graphicOpacity||r.fillOpacity;if(b&&b!=1){g+="progid:DXImageTransform.Microsoft.BasicImage(opacity="+b+")\n"}n.style.filter=g;var q=new OpenLayers.Geometry.Point(-s,-e);var c=new OpenLayers.Bounds(0,0,m,k).toGeometry();c.rotate(r.rotation,q);var i=c.getBounds();n.style.left=Math.round(parseInt(n.style.left)+i.left)+"px";n.style.top=Math.round(parseInt(n.style.top)-i.bottom)+"px"},postDraw:function(a){a.style.visibility="visible";var c=a._style.fillColor;var b=a._style.strokeColor;if(c=="none"&&a.fillcolor!=c){a.fillcolor=c}if(b=="none"&&a.strokecolor!=b){a.strokecolor=b}},setNodeDimension:function(b,e){var d=e.getBounds();if(d){var a=this.getResolution();var c=new OpenLayers.Bounds(((d.left-this.featureDx)/a-this.offset.x)|0,(d.bottom/a-this.offset.y)|0,((d.right-this.featureDx)/a-this.offset.x)|0,(d.top/a-this.offset.y)|0);b.style.left=c.left+"px";b.style.top=c.top+"px";b.style.width=c.getWidth()+"px";b.style.height=c.getHeight()+"px";b.coordorigin=c.left+" "+c.top;b.coordsize=c.getWidth()+" "+c.getHeight()}},dashStyle:function(a){var c=a.strokeDashstyle;switch(c){case"solid":case"dot":case"dash":case"dashdot":case"longdash":case"longdashdot":return c;default:var b=c.split(/[ ,]/);if(b.length==2){if(1*b[0]>=2*b[1]){return"longdash"}return(b[0]==1||b[1]==1)?"dot":"dash"}else{if(b.length==4){return(1*b[0]>=2*b[1])?"longdashdot":"dashdot"}}return"solid"}},createNode:function(a,c){var b=document.createElement(a);if(c){b.id=c}b.unselectable="on";b.onselectstart=OpenLayers.Function.False;return b},nodeTypeCompare:function(c,b){var d=b;var a=d.indexOf(":");if(a!=-1){d=d.substr(a+1)}var e=c.nodeName;a=e.indexOf(":");if(a!=-1){e=e.substr(a+1)}return(d==e)},createRenderRoot:function(){return this.nodeFactory(this.container.id+"_vmlRoot","div")},createRoot:function(a){return this.nodeFactory(this.container.id+a,"olv:group")},drawPoint:function(a,b){return this.drawCircle(a,b,1)},drawCircle:function(d,e,a){if(!isNaN(e.x)&&!isNaN(e.y)){var b=this.getResolution();d.style.left=((((e.x-this.featureDx)/b-this.offset.x)|0)-a)+"px";d.style.top=(((e.y/b-this.offset.y)|0)-a)+"px";var c=a*2;d.style.width=c+"px";d.style.height=c+"px";return d}return false},drawLineString:function(a,b){return this.drawLine(a,b,false)},drawLinearRing:function(a,b){return this.drawLine(a,b,true)},drawLine:function(b,k,g){this.setNodeDimension(b,k);var c=this.getResolution();var a=k.components.length;var e=new Array(a);var h,l,j;for(var f=0;f<a;f++){h=k.components[f];l=((h.x-this.featureDx)/c-this.offset.x)|0;j=(h.y/c-this.offset.y)|0;e[f]=" "+l+","+j+" l "}var d=(g)?" x e":" e";b.path="m"+e.join("")+d;return b},drawPolygon:function(c,m){this.setNodeDimension(c,m);var d=this.getResolution();var s=[];var e,k,o,a,g,b,f,r,h,q,n,l;for(e=0,k=m.components.length;e<k;e++){s.push("m");o=m.components[e].components;a=(e===0);g=null;b=null;for(f=0,r=o.length;f<r;f++){h=o[f];n=((h.x-this.featureDx)/d-this.offset.x)|0;l=(h.y/d-this.offset.y)|0;q=" "+n+","+l;s.push(q);if(f==0){s.push(" l")}if(!a){if(!g){g=q}else{if(g!=q){if(!b){b=q}else{if(b!=q){a=true}}}}}}s.push(a?" x ":" ")}s.push("e");c.path=s.join("");return c},drawRectangle:function(b,c){var a=this.getResolution();b.style.left=(((c.x-this.featureDx)/a-this.offset.x)|0)+"px";b.style.top=((c.y/a-this.offset.y)|0)+"px";b.style.width=((c.width/a)|0)+"px";b.style.height=((c.height/a)|0)+"px";return b},drawText:function(d,a,h){var g=this.nodeFactory(d+this.LABEL_ID_SUFFIX,"olv:rect");var f=this.nodeFactory(d+this.LABEL_ID_SUFFIX+"_textbox","olv:textbox");var c=this.getResolution();g.style.left=(((h.x-this.featureDx)/c-this.offset.x)|0)+"px";g.style.top=((h.y/c-this.offset.y)|0)+"px";g.style.flip="y";f.innerText=a.label;if(a.cursor!="inherit"&&a.cursor!=null){f.style.cursor=a.cursor}if(a.fontColor){f.style.color=a.fontColor}if(a.fontOpacity){f.style.filter="alpha(opacity="+(a.fontOpacity*100)+")"}if(a.fontFamily){f.style.fontFamily=a.fontFamily}if(a.fontSize){f.style.fontSize=a.fontSize}if(a.fontWeight){f.style.fontWeight=a.fontWeight}if(a.fontStyle){f.style.fontStyle=a.fontStyle}if(a.labelSelect===true){g._featureId=d;f._featureId=d;f._geometry=h;f._geometryClass=h.CLASS_NAME}f.style.whiteSpace="nowrap";f.inset="1px,0px,0px,0px";if(!g.parentNode){g.appendChild(f);this.textRoot.appendChild(g)}var e=a.labelAlign||"cm";if(e.length==1){e+="m"}var i=f.clientWidth*(OpenLayers.Renderer.VML.LABEL_SHIFT[e.substr(0,1)]);var b=f.clientHeight*(OpenLayers.Renderer.VML.LABEL_SHIFT[e.substr(1,1)]);g.style.left=parseInt(g.style.left)-i-1+"px";g.style.top=parseInt(g.style.top)+b+"px"},moveRoot:function(b){var a=this.map.getLayer(b.container.id);if(a instanceof OpenLayers.Layer.Vector.RootContainer){a=this.map.getLayer(this.container.id)}a&&a.renderer.clear();OpenLayers.Renderer.Elements.prototype.moveRoot.apply(this,arguments);a&&a.redraw()},importSymbol:function(d){var b=this.container.id+"-"+d;var a=this.symbolCache[b];if(a){return a}var c=OpenLayers.Renderer.symbol[d];if(!c){throw new Error(d+" is not a valid symbol name")}var k=new OpenLayers.Bounds(Number.MAX_VALUE,Number.MAX_VALUE,0,0);var e=["m"];for(var f=0;f<c.length;f=f+2){var h=c[f];var g=c[f+1];k.left=Math.min(k.left,h);k.bottom=Math.min(k.bottom,g);k.right=Math.max(k.right,h);k.top=Math.max(k.top,g);e.push(h);e.push(g);if(f==0){e.push("l")}}e.push("x e");var l=e.join(" ");var j=(k.getWidth()-k.getHeight())/2;if(j>0){k.bottom=k.bottom-j;k.top=k.top+j}else{k.left=k.left+j;k.right=k.right-j}a={path:l,size:k.getWidth(),left:k.left,bottom:k.bottom};this.symbolCache[b]=a;return a},CLASS_NAME:"OpenLayers.Renderer.VML"});OpenLayers.Renderer.VML.LABEL_SHIFT={l:0,c:0.5,r:1,t:0,m:0.5,b:1};OpenLayers.Renderer.Canvas=OpenLayers.Class(OpenLayers.Renderer,{hitDetection:true,hitOverflow:0,canvas:null,features:null,pendingRedraw:false,cachedSymbolBounds:{},initialize:function(a,b){OpenLayers.Renderer.prototype.initialize.apply(this,arguments);this.root=document.createElement("canvas");this.container.appendChild(this.root);this.canvas=this.root.getContext("2d");this.features={};if(this.hitDetection){this.hitCanvas=document.createElement("canvas");this.hitContext=this.hitCanvas.getContext("2d")}},setExtent:function(){OpenLayers.Renderer.prototype.setExtent.apply(this,arguments);return false},eraseGeometry:function(b,a){this.eraseFeatures(this.features[a][0])},supported:function(){return OpenLayers.CANVAS_SUPPORTED},setSize:function(b){this.size=b.clone();var a=this.root;a.style.width=b.w+"px";a.style.height=b.h+"px";a.width=b.w;a.height=b.h;this.resolution=null;if(this.hitDetection){var c=this.hitCanvas;c.style.width=b.w+"px";c.style.height=b.h+"px";c.width=b.w;c.height=b.h}},drawFeature:function(a,b){var f;if(a.geometry){b=this.applyDefaultSymbolizer(b||a.style);var e=a.geometry.getBounds();var d;if(this.map.baseLayer&&this.map.baseLayer.wrapDateLine){d=this.map.getMaxExtent()}var c=e&&e.intersectsBounds(this.extent,{worldBounds:d});f=(b.display!=="none")&&!!e&&c;if(f){this.features[a.id]=[a,b]}else{delete (this.features[a.id])}this.pendingRedraw=true}if(this.pendingRedraw&&!this.locked){this.redraw();this.pendingRedraw=false}return f},drawGeometry:function(e,c,d){var b=e.CLASS_NAME;if((b=="OpenLayers.Geometry.Collection")||(b=="OpenLayers.Geometry.MultiPoint")||(b=="OpenLayers.Geometry.MultiLineString")||(b=="OpenLayers.Geometry.MultiPolygon")){for(var a=0;a<e.components.length;a++){this.drawGeometry(e.components[a],c,d)}return}switch(e.CLASS_NAME){case"OpenLayers.Geometry.Point":this.drawPoint(e,c,d);break;case"OpenLayers.Geometry.LineString":this.drawLineString(e,c,d);break;case"OpenLayers.Geometry.LinearRing":this.drawLinearRing(e,c,d);break;case"OpenLayers.Geometry.Polygon":this.drawPolygon(e,c,d);break;default:break}},drawExternalGraphic:function(i,a,d){var e=new Image();var j=a.title||a.graphicTitle;if(j){e.title=j}var b=a.graphicWidth||a.graphicHeight;var k=a.graphicHeight||a.graphicWidth;b=b?b:a.pointRadius*2;k=k?k:a.pointRadius*2;var g=(a.graphicXOffset!=undefined)?a.graphicXOffset:-(0.5*b);var c=(a.graphicYOffset!=undefined)?a.graphicYOffset:-(0.5*k);var f=a.graphicOpacity||a.fillOpacity;var h=function(){if(!this.features[d]){return}var o=this.getLocalXY(i);var s=o[0];var q=o[1];if(!isNaN(s)&&!isNaN(q)){var l=(s+g)|0;var r=(q+c)|0;var m=this.canvas;m.globalAlpha=f;var n=OpenLayers.Renderer.Canvas.drawImageScaleFactor||(OpenLayers.Renderer.Canvas.drawImageScaleFactor=/android 2.1/.test(navigator.userAgent.toLowerCase())?320/window.screen.width:1);m.drawImage(e,l*n,r*n,b*n,k*n);if(this.hitDetection){this.setHitContextStyle("fill",d);this.hitContext.fillRect(l,r,b,k)}}};e.onload=OpenLayers.Function.bind(h,this);e.src=a.externalGraphic},drawNamedSymbol:function(m,b,h){var n,l,g,f,j,a,c,e;var k;var o=Math.PI/180;var d=OpenLayers.Renderer.symbol[b.graphicName];if(!d){throw new Error(b.graphicName+" is not a valid symbol name")}if(!d.length||d.length<2){return}var s=this.getLocalXY(m);var r=s[0];var q=s[1];if(isNaN(r)||isNaN(q)){return}this.canvas.lineCap="round";this.canvas.lineJoin="round";if(this.hitDetection){this.hitContext.lineCap="round";this.hitContext.lineJoin="round"}if(b.graphicName in this.cachedSymbolBounds){a=this.cachedSymbolBounds[b.graphicName]}else{a=new OpenLayers.Bounds();for(j=0;j<d.length;j+=2){a.extend(new OpenLayers.LonLat(d[j],d[j+1]))}this.cachedSymbolBounds[b.graphicName]=a}this.canvas.save();if(this.hitDetection){this.hitContext.save()}this.canvas.translate(r,q);if(this.hitDetection){this.hitContext.translate(r,q)}e=o*b.rotation;if(!isNaN(e)){this.canvas.rotate(e);if(this.hitDetection){this.hitContext.rotate(e)}}c=2*b.pointRadius/Math.max(a.getWidth(),a.getHeight());this.canvas.scale(c,c);if(this.hitDetection){this.hitContext.scale(c,c)}g=a.getCenterLonLat().lon;f=a.getCenterLonLat().lat;this.canvas.translate(-g,-f);if(this.hitDetection){this.hitContext.translate(-g,-f)}k=b.strokeWidth;b.strokeWidth=k/c;if(b.fill!==false){this.setCanvasStyle("fill",b);this.canvas.beginPath();for(j=0;j<d.length;j=j+2){n=d[j];l=d[j+1];if(j==0){this.canvas.moveTo(n,l)}this.canvas.lineTo(n,l)}this.canvas.closePath();this.canvas.fill();if(this.hitDetection){this.setHitContextStyle("fill",h,b);this.hitContext.beginPath();for(j=0;j<d.length;j=j+2){n=d[j];l=d[j+1];if(j==0){this.canvas.moveTo(n,l)}this.hitContext.lineTo(n,l)}this.hitContext.closePath();this.hitContext.fill()}}if(b.stroke!==false){this.setCanvasStyle("stroke",b);this.canvas.beginPath();for(j=0;j<d.length;j=j+2){n=d[j];l=d[j+1];if(j==0){this.canvas.moveTo(n,l)}this.canvas.lineTo(n,l)}this.canvas.closePath();this.canvas.stroke();if(this.hitDetection){this.setHitContextStyle("stroke",h,b,c);this.hitContext.beginPath();for(j=0;j<d.length;j=j+2){n=d[j];l=d[j+1];if(j==0){this.hitContext.moveTo(n,l)}this.hitContext.lineTo(n,l)}this.hitContext.closePath();this.hitContext.stroke()}}b.strokeWidth=k;this.canvas.restore();if(this.hitDetection){this.hitContext.restore()}this.setCanvasStyle("reset")},setCanvasStyle:function(b,a){if(b==="fill"){this.canvas.globalAlpha=a.fillOpacity;this.canvas.fillStyle=a.fillColor}else{if(b==="stroke"){this.canvas.globalAlpha=a.strokeOpacity;this.canvas.strokeStyle=a.strokeColor;this.canvas.lineWidth=a.strokeWidth}else{this.canvas.globalAlpha=0;this.canvas.lineWidth=1}}},featureIdToHex:function(c){var d=Number(c.split("_").pop())+1;if(d>=16777216){this.hitOverflow=d-16777215;d=d%16777216+1}var b="000000"+d.toString(16);var a=b.length;b="#"+b.substring(a-6,a);return b},setHitContextStyle:function(b,e,a,d){var c=this.featureIdToHex(e);if(b=="fill"){this.hitContext.globalAlpha=1;this.hitContext.fillStyle=c}else{if(b=="stroke"){this.hitContext.globalAlpha=1;this.hitContext.strokeStyle=c;if(typeof d==="undefined"){this.hitContext.lineWidth=a.strokeWidth+2}else{if(!isNaN(d)){this.hitContext.lineWidth=a.strokeWidth+2/d}}}else{this.hitContext.globalAlpha=0;this.hitContext.lineWidth=1}}},drawPoint:function(g,c,f){if(c.graphic!==false){if(c.externalGraphic){this.drawExternalGraphic(g,c,f)}else{if(c.graphicName&&(c.graphicName!="circle")){this.drawNamedSymbol(g,c,f)}else{var d=this.getLocalXY(g);var h=d[0];var e=d[1];if(!isNaN(h)&&!isNaN(e)){var b=Math.PI*2;var a=c.pointRadius;if(c.fill!==false){this.setCanvasStyle("fill",c);this.canvas.beginPath();this.canvas.arc(h,e,a,0,b,true);this.canvas.fill();if(this.hitDetection){this.setHitContextStyle("fill",f,c);this.hitContext.beginPath();this.hitContext.arc(h,e,a,0,b,true);this.hitContext.fill()}}if(c.stroke!==false){this.setCanvasStyle("stroke",c);this.canvas.beginPath();this.canvas.arc(h,e,a,0,b,true);this.canvas.stroke();if(this.hitDetection){this.setHitContextStyle("stroke",f,c);this.hitContext.beginPath();this.hitContext.arc(h,e,a,0,b,true);this.hitContext.stroke()}this.setCanvasStyle("reset")}}}}}},drawLineString:function(c,a,b){a=OpenLayers.Util.applyDefaults({fill:false},a);this.drawLinearRing(c,a,b)},drawLinearRing:function(c,a,b){if(a.fill!==false){this.setCanvasStyle("fill",a);this.renderPath(this.canvas,c,a,b,"fill");if(this.hitDetection){this.setHitContextStyle("fill",b,a);this.renderPath(this.hitContext,c,a,b,"fill")}}if(a.stroke!==false){this.setCanvasStyle("stroke",a);this.renderPath(this.canvas,c,a,b,"stroke");if(this.hitDetection){this.setHitContextStyle("stroke",b,a);this.renderPath(this.hitContext,c,a,b,"stroke")}}this.setCanvasStyle("reset")},renderPath:function(c,k,a,e,h){var f=k.components;var g=f.length;c.beginPath();var b=this.getLocalXY(f[0]);var l=b[0];var j=b[1];if(!isNaN(l)&&!isNaN(j)){c.moveTo(b[0],b[1]);for(var d=1;d<g;++d){var m=this.getLocalXY(f[d]);c.lineTo(m[0],m[1])}if(h==="fill"){c.fill()}else{c.stroke()}}},drawPolygon:function(f,c,e){var d=f.components;var a=d.length;this.drawLinearRing(d[0],c,e);for(var b=1;b<a;++b){this.canvas.globalCompositeOperation="destination-out";if(this.hitDetection){this.hitContext.globalCompositeOperation="destination-out"}this.drawLinearRing(d[b],OpenLayers.Util.applyDefaults({stroke:false,fillOpacity:1},c),e);this.canvas.globalCompositeOperation="source-over";if(this.hitDetection){this.hitContext.globalCompositeOperation="source-over"}this.drawLinearRing(d[b],OpenLayers.Util.applyDefaults({fill:false},c),e)}},drawText:function(l,a){var m=this.getLocalXY(l);this.setCanvasStyle("reset");this.canvas.fillStyle=a.fontColor;this.canvas.globalAlpha=a.fontOpacity||1;var d=[a.fontStyle?a.fontStyle:"normal","normal",a.fontWeight?a.fontWeight:"normal",a.fontSize?a.fontSize:"1em",a.fontFamily?a.fontFamily:"sans-serif"].join(" ");var c=a.label.split("\n");var f=c.length;if(this.canvas.fillText){this.canvas.font=d;this.canvas.textAlign=OpenLayers.Renderer.Canvas.LABEL_ALIGN[a.labelAlign[0]]||"center";this.canvas.textBaseline=OpenLayers.Renderer.Canvas.LABEL_ALIGN[a.labelAlign[1]]||"middle";var j=OpenLayers.Renderer.Canvas.LABEL_FACTOR[a.labelAlign[1]];if(j==null){j=-0.5}var k=this.canvas.measureText("Mg").height||this.canvas.measureText("xx").width;m[1]+=k*j*(f-1);for(var e=0;e<f;e++){if(a.labelOutlineWidth){this.canvas.save();this.canvas.globalAlpha=a.labelOutlineOpacity||a.fontOpacity||1;this.canvas.strokeStyle=a.labelOutlineColor;this.canvas.lineWidth=a.labelOutlineWidth;this.canvas.strokeText(c[e],m[0],m[1]+(k*e)+1);this.canvas.restore()}this.canvas.fillText(c[e],m[0],m[1]+(k*e))}}else{if(this.canvas.mozDrawText){this.canvas.mozTextStyle=d;var b=OpenLayers.Renderer.Canvas.LABEL_FACTOR[a.labelAlign[0]];if(b==null){b=-0.5}var j=OpenLayers.Renderer.Canvas.LABEL_FACTOR[a.labelAlign[1]];if(j==null){j=-0.5}var k=this.canvas.mozMeasureText("xx");m[1]+=k*(1+(j*f));for(var e=0;e<f;e++){var h=m[0]+(b*this.canvas.mozMeasureText(c[e]));var g=m[1]+(e*k);this.canvas.translate(h,g);this.canvas.mozDrawText(c[e]);this.canvas.translate(-h,-g)}}}this.setCanvasStyle("reset")},getLocalXY:function(b){var c=this.getResolution();var d=this.extent;var a=((b.x-this.featureDx)/c+(-d.left/c));var e=((d.top/c)-b.y/c);return[a,e]},clear:function(){var a=this.root.height;var b=this.root.width;this.canvas.clearRect(0,0,b,a);this.features={};if(this.hitDetection){this.hitContext.clearRect(0,0,b,a)}},getFeatureIdFromEvent:function(g){var c,i;if(this.hitDetection&&this.root.style.display!=="none"){if(!this.map.dragging){var h=g.xy;var f=h.x|0;var e=h.y|0;var d=this.hitContext.getImageData(f,e,1,1).data;if(d[3]===255){var a=d[2]+(256*(d[1]+(256*d[0])));if(a){c="OpenLayers_Feature_Vector_"+(a-1+this.hitOverflow);try{i=this.features[c][0]}catch(b){}}}}}return i},eraseFeatures:function(b){if(!(OpenLayers.Util.isArray(b))){b=[b]}for(var a=0;a<b.length;++a){delete this.features[b[a].id]}this.redraw()},redraw:function(){if(!this.locked){var j=this.root.height;var c=this.root.width;this.canvas.clearRect(0,0,c,j);if(this.hitDetection){this.hitContext.clearRect(0,0,c,j)}var f=[];var l,g,a;var h=(this.map.baseLayer&&this.map.baseLayer.wrapDateLine)&&this.map.getMaxExtent();for(var b in this.features){if(!this.features.hasOwnProperty(b)){continue}l=this.features[b][0];g=l.geometry;this.calculateFeatureDx(g.getBounds(),h);a=this.features[b][1];this.drawGeometry(g,a,l.id);if(a.label){f.push([l,a])}}var k;for(var d=0,e=f.length;d<e;++d){k=f[d];this.drawText(k[0].geometry.getCentroid(),k[1])}}},CLASS_NAME:"OpenLayers.Renderer.Canvas"});OpenLayers.Renderer.Canvas.LABEL_ALIGN={l:"left",r:"right",t:"top",b:"bottom"};OpenLayers.Renderer.Canvas.LABEL_FACTOR={l:0,r:-1,t:0,b:-1};OpenLayers.Renderer.Canvas.drawImageScaleFactor=null;OpenLayers.Format.SLD.v1_0_0_GeoServer=OpenLayers.Class(OpenLayers.Format.SLD.v1_0_0,{version:"1.0.0",profile:"GeoServer",readers:OpenLayers.Util.applyDefaults({sld:OpenLayers.Util.applyDefaults({Priority:function(a,c){var b=this.readers.ogc._expression.call(this,a);if(b){c.priority=b}},VendorOption:function(a,b){if(!b.vendorOptions){b.vendorOptions={}}b.vendorOptions[a.getAttribute("name")]=this.getChildValue(a)},TextSymbolizer:function(b,c){OpenLayers.Format.SLD.v1_0_0.prototype.readers.sld.TextSymbolizer.apply(this,arguments);var a=this.multipleSymbolizers?c.symbolizers[c.symbolizers.length-1]:c.symbolizer.Text;if(a.graphic===undefined){a.graphic=false}}},OpenLayers.Format.SLD.v1_0_0.prototype.readers.sld)},OpenLayers.Format.SLD.v1_0_0.prototype.readers),writers:OpenLayers.Util.applyDefaults({sld:OpenLayers.Util.applyDefaults({Priority:function(a){return this.writers.sld._OGCExpression.call(this,"sld:Priority",a)},VendorOption:function(a){return this.createElementNSPlus("sld:VendorOption",{attributes:{name:a.name},value:a.value})},TextSymbolizer:function(b){var a=OpenLayers.Format.SLD.v1_0_0.prototype.writers;var c=a.sld["TextSymbolizer"].apply(this,arguments);if(b.graphic!==false&&(b.externalGraphic||b.graphicName)){this.writeNode("Graphic",b,c)}if("priority" in b){this.writeNode("Priority",b.priority,c)}return this.addVendorOptions(c,b)},PointSymbolizer:function(b){var a=OpenLayers.Format.SLD.v1_0_0.prototype.writers;var c=a.sld["PointSymbolizer"].apply(this,arguments);return this.addVendorOptions(c,b)},LineSymbolizer:function(b){var a=OpenLayers.Format.SLD.v1_0_0.prototype.writers;var c=a.sld["LineSymbolizer"].apply(this,arguments);return this.addVendorOptions(c,b)},PolygonSymbolizer:function(b){var a=OpenLayers.Format.SLD.v1_0_0.prototype.writers;var c=a.sld["PolygonSymbolizer"].apply(this,arguments);return this.addVendorOptions(c,b)}},OpenLayers.Format.SLD.v1_0_0.prototype.writers.sld)},OpenLayers.Format.SLD.v1_0_0.prototype.writers),addVendorOptions:function(d,c){var a=c.vendorOptions;if(a){for(var b in c.vendorOptions){this.writeNode("VendorOption",{name:b,value:c.vendorOptions[b]},d)}}return d},CLASS_NAME:"OpenLayers.Format.SLD.v1_0_0_GeoServer"});Ext.namespace("gxp");gxp.WMSStylesDialog=Ext.extend(Ext.Container,{addStyleText:"Add",addStyleTip:"Add a new style",chooseStyleText:"Choose style",deleteStyleText:"Remove",deleteStyleTip:"Delete the selected style",editStyleText:"Edit",editStyleTip:"Edit the selected style",duplicateStyleText:"Duplicate",duplicateStyleTip:"Duplicate the selected style",addRuleText:"Add",addRuleTip:"Add a new rule",newRuleText:"New Rule",deleteRuleText:"Remove",deleteRuleTip:"Delete the selected rule",editRuleText:"Edit",editRuleTip:"Edit the selected rule",duplicateRuleText:"Duplicate",duplicateRuleTip:"Duplicate the selected rule",cancelText:"Cancel",saveText:"Save",styleWindowTitle:"User Style: {0}",ruleWindowTitle:"Style Rule: {0}",stylesFieldsetTitle:"Styles",rulesFieldsetTitle:"Rules",errorTitle:"Error saving style",errorMsg:"There was an error saving the style back to the server.",layerRecord:null,layerDescription:null,symbolType:null,stylesStore:null,selectedStyle:null,selectedRule:null,editable:true,modified:false,dialogCls:Ext.Window,initComponent:function(){this.addEvents("ready","modified","styleselected","beforesaved","saved");var a={layout:"form",disabled:true,items:[{xtype:"fieldset",title:this.stylesFieldsetTitle,labelWidth:85,style:"margin-bottom: 0;"},{xtype:"toolbar",style:"border-width: 0 1px 1px 1px; margin-bottom: 10px;",items:[{xtype:"button",iconCls:"add",text:this.addStyleText,tooltip:this.addStyleTip,handler:this.addStyle,scope:this},{xtype:"button",iconCls:"delete",text:this.deleteStyleText,tooltip:this.deleteStyleTip,handler:function(){this.stylesStore.remove(this.selectedStyle)},scope:this},{xtype:"button",iconCls:"edit",text:this.editStyleText,tooltip:this.editStyleTip,handler:function(){this.editStyle()},scope:this},{xtype:"button",iconCls:"duplicate",text:this.duplicateStyleText,tooltip:this.duplicateStyleTip,handler:function(){var d=this.selectedStyle;var c=d.get("userStyle").clone();c.isDefault=false;c.name=this.newStyleName();var b=this.stylesStore;b.add(new b.recordType({name:c.name,title:c.title,"abstract":c.description,userStyle:c}));this.editStyle(d)},scope:this}]}]};Ext.applyIf(this,a);this.createStylesStore();this.on({beforesaved:function(){this._saving=true},saved:function(){delete this._saving},savefailed:function(){Ext.Msg.show({title:this.errorTitle,msg:this.errorMsg,icon:Ext.MessageBox.ERROR,buttons:{ok:true}});delete this._saving},render:function(){gxp.util.dispatch([this.getStyles],function(){this.enable()},this)},scope:this});gxp.WMSStylesDialog.superclass.initComponent.apply(this,arguments)},addStyle:function(){if(!this._ready){this.on("ready",this.addStyle,this);return}var c=this.selectedStyle;var a=this.stylesStore;var b=new OpenLayers.Style(null,{name:this.newStyleName(),rules:[this.createRule()]});a.add(new a.recordType({name:b.name,userStyle:b}));this.editStyle(c)},editStyle:function(b){var c=this.selectedStyle.get("userStyle");var d={bbar:["->",{text:this.cancelText,iconCls:"cancel",handler:function(){a.propertiesDialog.userStyle=c;a.destroy();if(b){this._cancelling=true;this.stylesStore.remove(this.selectedStyle);this.changeStyle(b,{updateCombo:true,markModified:true});delete this._cancelling}},scope:this},{text:this.saveText,iconCls:"save",handler:function(){a.destroy()}}]};var a=new this.dialogCls(Ext.apply(d,{title:String.format(this.styleWindowTitle,c.title||c.name),shortTitle:c.title||c.name,bodyBorder:false,autoHeight:true,width:300,modal:true,items:{border:false,items:{xtype:"gxp_stylepropertiesdialog",ref:"../propertiesDialog",userStyle:c.clone(),nameEditable:false,style:"padding: 10px;"}},listeners:{beforedestroy:function(){this.selectedStyle.set("userStyle",a.propertiesDialog.userStyle)},scope:this}}));this.showDlg(a)},createSLD:function(b){b=b||{};var c={version:"1.0.0",namedLayers:{}};var a=this.layerRecord.get("name");c.namedLayers[a]={name:a,userStyles:[]};this.stylesStore.each(function(d){if(!b.userStyles||b.userStyles.indexOf(d.get("name"))!==-1){c.namedLayers[a].userStyles.push(d.get("userStyle"))}});return new OpenLayers.Format.SLD({multipleSymbolizers:true,profile:"GeoServer"}).write(c)},saveStyles:function(a){this.modified===true&&this.fireEvent("beforesaved",this,a)},updateStyleRemoveButton:function(){var a=this.selectedStyle&&this.selectedStyle.get("userStyle");this.items.get(1).items.get(1).setDisabled(!a||this.stylesStore.getCount()<=1||a.isDefault===true)},updateRuleRemoveButton:function(){this.items.get(3).items.get(1).setDisabled(!this.selectedRule||this.items.get(2).items.get(0).rules.length<2)},createRule:function(){return new OpenLayers.Rule({symbolizers:[new OpenLayers.Symbolizer[this.symbolType]]})},addRulesFieldSet:function(){var b=new Ext.form.FieldSet({itemId:"rulesfieldset",title:this.rulesFieldsetTitle,autoScroll:true,style:"margin-bottom: 0;",hideMode:"offsets",hidden:true});var a=new Ext.Toolbar({style:"border-width: 0 1px 1px 1px;",hidden:true,items:[{xtype:"button",iconCls:"add",text:this.addRuleText,tooltip:this.addRuleTip,handler:this.addRule,scope:this},{xtype:"button",iconCls:"delete",text:this.deleteRuleText,tooltip:this.deleteRuleTip,handler:this.removeRule,scope:this,disabled:true},{xtype:"button",iconCls:"edit",text:this.editRuleText,toolitp:this.editRuleTip,handler:function(){this.layerDescription?this.editRule():this.describeLayer(this.editRule)},scope:this,disabled:true},{xtype:"button",iconCls:"duplicate",text:this.duplicateRuleText,tip:this.duplicateRuleTip,handler:this.duplicateRule,scope:this,disabled:true}]});this.add(b,a);this.doLayout();return b},addRule:function(){var a=this.items.get(2).items.get(0);this.selectedStyle.get("userStyle").rules.push(this.createRule());a.update();this.selectedStyle.store.afterEdit(this.selectedStyle);this.updateRuleRemoveButton()},removeRule:function(){var a=this.selectedRule;this.items.get(2).items.get(0).unselect();this.selectedStyle.get("userStyle").rules.remove(a);this.afterRuleChange()},duplicateRule:function(){var a=this.items.get(2).items.get(0);var b=this.selectedRule.clone();this.selectedStyle.get("userStyle").rules.push(b);a.update();this.selectedStyle.store.afterEdit(this.selectedStyle);this.updateRuleRemoveButton()},editRule:function(){var c=this.selectedRule;var b=c.clone();var a=new this.dialogCls({title:String.format(this.ruleWindowTitle,c.title||c.name||this.newRuleText),shortTitle:c.title||c.name||this.newRuleText,layout:"fit",width:320,height:450,modal:true,items:[{xtype:"gxp_rulepanel",ref:"rulePanel",symbolType:this.symbolType,rule:c,attributes:new GeoExt.data.AttributeStore({url:this.layerDescription.owsURL,baseParams:{SERVICE:this.layerDescription.owsType,REQUEST:"DescribeFeatureType",TYPENAME:this.layerDescription.typeName},method:"GET",disableCaching:false}),autoScroll:true,border:false,defaults:{autoHeight:true,hideMode:"offsets"},listeners:{change:this.saveRule,tabchange:function(){if(a instanceof Ext.Window){a.syncShadow()}},scope:this}}],bbar:["->",{text:this.cancelText,iconCls:"cancel",handler:function(){this.saveRule(a.rulePanel,b);a.destroy()},scope:this},{text:this.saveText,iconCls:"save",handler:function(){a.destroy()}}]});this.showDlg(a)},saveRule:function(d,f){var c=this.selectedStyle;var b=this.items.get(2).items.get(0);var e=c.get("userStyle");var a=e.rules.indexOf(this.selectedRule);e.rules[a]=f;this.afterRuleChange(f)},afterRuleChange:function(b){var a=this.items.get(2).items.get(0);this.selectedRule=b;this.selectedStyle.store.afterEdit(this.selectedStyle)},setRulesFieldSetVisible:function(a){this.items.get(3).setVisible(a&&this.editable);this.items.get(2).setVisible(a);this.doLayout()},parseSLD:function(f,t){var h=f.responseXML;if(!h||!h.documentElement){h=new OpenLayers.Format.XML().read(f.responseText)}var d=this.layerRecord.getLayer().params;var b=this.initialConfig.styleName||d.STYLES;if(b){this.selectedStyle=this.stylesStore.getAt(this.stylesStore.findExact("name",b))}var r=new OpenLayers.Format.SLD({profile:"GeoServer",multipleSymbolizers:true});try{var a=r.read(h);var n=a.namedLayers[d.LAYERS].userStyles;var c;if(d.SLD_BODY){var q=r.read(d.SLD_BODY);c=q.namedLayers[d.LAYERS].userStyles;Array.prototype.push.apply(n,c)}this.stylesStore.removeAll();this.selectedStyle=null;var o,j,l,s;for(var g=0,k=n.length;g<k;++g){o=n[g];l=this.stylesStore.findExact("name",o.name);l!==-1&&this.stylesStore.removeAt(l);j=new this.stylesStore.recordType({name:o.name,title:o.title,"abstract":o.description,userStyle:o});j.phantom=false;this.stylesStore.add(j);if(!this.selectedStyle&&(b===o.name||(!b&&o.isDefault===true))){this.selectedStyle=j}if(o.isDefault===true){s=j}}if(!this.selectedStyle){this.selectedStyle=s}this.addRulesFieldSet();this.createLegend(this.selectedStyle.get("userStyle").rules);this.stylesStoreReady();d.SLD_BODY&&this.markModified()}catch(m){if(window.console){console.warn(m.message)}this.setupNonEditable()}},createLegend:function(b){var a=OpenLayers.Symbolizer.Raster;if(a&&b[0]&&b[0].symbolizers[0] instanceof a){throw new Error("Raster symbolizers are not supported.")}else{this.addVectorLegend(b)}},setupNonEditable:function(){this.editable=false;this.items.get(1).hide();var a=this.getComponent("rulesfieldset")||this.addRulesFieldSet();a.add(this.createLegendImage());this.doLayout();this.items.get(3).hide();this.stylesStoreReady()},stylesStoreReady:function(){this.stylesStore.commitChanges();this.stylesStore.on({load:function(){this.addStylesCombo();this.updateStyleRemoveButton()},add:function(b,a,c){this.updateStyleRemoveButton();var d=this.items.get(0).items.get(0);this.markModified();d.fireEvent("select",d,b.getAt(c),c);d.setValue(this.selectedStyle.get("name"))},remove:function(b,a,c){if(!this._cancelling){this._removing=true;var d=Math.min(c,b.getCount()-1);this.updateStyleRemoveButton();var e=this.items.get(0).items.get(0);this.markModified();e.fireEvent("select",e,b.getAt(d),d);e.setValue(this.selectedStyle.get("name"));delete this._removing}},update:function(b,a){var d=a.get("userStyle");var c={name:d.name,title:d.title||d.name,"abstract":d.description};Ext.apply(a.data,c);this.changeStyle(a,{updateCombo:true,markModified:true})},scope:this});this.stylesStore.fireEvent("load",this.stylesStore,this.stylesStore.getRange());this._ready=true;this.fireEvent("ready")},markModified:function(){if(this.modified===false){this.modified=true}if(!this._saving){this.fireEvent("modified",this,this.selectedStyle.get("name"))}},createStylesStore:function(b){var a=this.layerRecord.get("styles")||[];this.stylesStore=new Ext.data.JsonStore({data:{styles:a},idProperty:"name",root:"styles",fields:["name","title","abstract","legend","userStyle"],listeners:{add:function(d,c){for(var f,e=c.length-1;e>=0;--e){f=c[e];d.suspendEvents();f.get("title")||f.set("title",f.get("name"));d.resumeEvents()}}}})},getStyles:function(c){var b=this.layerRecord.getLayer();if(this.editable===true){var a=b.params.VERSION;if(parseFloat(a)>1.1){a="1.1.1"}Ext.Ajax.request({url:b.url,params:{SERVICE:"WMS",VERSION:a,REQUEST:"GetStyles",LAYERS:[b.params.LAYERS].join(",")},method:"GET",disableCaching:false,success:this.parseSLD,failure:this.setupNonEditable,callback:c,scope:this})}else{this.setupNonEditable()}},describeLayer:function(c){if(this.layerDescription){window.setTimeout(function(){c.call(this)},0)}else{var b=this.layerRecord.getLayer();var a=b.params.VERSION;if(parseFloat(a)>1.1){a="1.1.1"}Ext.Ajax.request({url:b.url,params:{SERVICE:"WMS",VERSION:a,REQUEST:"DescribeLayer",LAYERS:[b.params.LAYERS].join(",")},method:"GET",disableCaching:false,success:function(e){var d=new OpenLayers.Format.WMSDescribeLayer().read(e.responseXML&&e.responseXML.documentElement?e.responseXML:e.responseText);this.layerDescription=d[0]},callback:c,scope:this})}},addStylesCombo:function(){var a=this.stylesStore;var b=new Ext.form.ComboBox(Ext.apply({fieldLabel:this.chooseStyleText,store:a,editable:false,displayField:"title",valueField:"name",value:this.selectedStyle?this.selectedStyle.get("title"):this.layerRecord.getLayer().params.STYLES||"default",disabled:!a.getCount(),mode:"local",typeAhead:true,triggerAction:"all",forceSelection:true,anchor:"100%",listeners:{select:function(d,c){this.changeStyle(c);if(!c.phantom&&!this._removing){this.fireEvent("styleselected",this,c.get("name"))}},scope:this}},this.initialConfig.stylesComboOptions));this.items.get(0).add(b);this.doLayout()},createLegendImage:function(){var a=new GeoExt.WMSLegend({showTitle:false,layerRecord:this.layerRecord,autoScroll:true,defaults:{listeners:{render:function(b){b.getEl().on({load:function(c,d){if(d.getAttribute("src")!=b.defaultImgSrc){this.setRulesFieldSetVisible(true);if(b.getEl().getHeight()>250){a.setHeight(250)}}},error:function(){this.setRulesFieldSetVisible(false)},scope:this})},scope:this}}});return a},changeStyle:function(a,b){b=b||{};var d=this.items.get(2).items.get(0);this.selectedStyle=a;this.updateStyleRemoveButton();var c=a.get("name");if(this.editable===true){var e=a.get("userStyle");if(e.isDefault===true){c=""}var f=d.rules.indexOf(this.selectedRule);d.ownerCt.remove(d);this.createLegend(e.rules,{selectedRuleIndex:f})}if(b.updateCombo===true){this.items.get(0).items.get(0).setValue(e.name);b.markModified===true&&this.markModified()}},addVectorLegend:function(f,b){b=Ext.applyIf(b||{},{enableDD:true});this.symbolType=b.symbolType;if(!this.symbolType){var a=["Point","Line","Polygon"];highest=0;var g=f[0].symbolizers,e;for(var c=g.length-1;c>=0;c--){e=g[c].CLASS_NAME.split(".").pop();highest=Math.max(highest,a.indexOf(e))}this.symbolType=a[highest]}var d=this.items.get(2).add({xtype:"gx_vectorlegend",showTitle:false,height:f.length>10?250:undefined,autoScroll:f.length>10,rules:f,symbolType:this.symbolType,selectOnClick:true,enableDD:b.enableDD,listeners:{ruleselected:function(h,i){this.selectedRule=i;var j=this.items.get(3).items;this.updateRuleRemoveButton();j.get(2).enable();j.get(3).enable()},ruleunselected:function(h,i){this.selectedRule=null;var j=this.items.get(3).items;j.get(1).disable();j.get(2).disable();j.get(3).disable()},rulemoved:function(){this.markModified()},afterlayout:function(){if(this.selectedRule!==null&&d.selectedRule===null&&d.rules.indexOf(this.selectedRule)!==-1){d.selectRuleEntry(this.selectedRule)}},scope:this}});this.setRulesFieldSetVisible(true);return d},newStyleName:function(){var a=this.layerRecord.get("name");return a.split(":").pop()+"_"+gxp.util.md5(a+new Date()+Math.random()).substr(0,8)},showDlg:function(a){a.show()}});gxp.WMSStylesDialog.createGeoServerStylerConfig=function(a,b){var c=a.getLayer();if(!b){b=a.get("restUrl")}if(!b){b=c.url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest")}return{xtype:"gxp_wmsstylesdialog",layerRecord:a,plugins:[{ptype:"gxp_geoserverstylewriter",baseUrl:b}],listeners:{styleselected:function(e,d){c.mergeNewParams({styles:d})},modified:function(e,d){e.saveStyles()},saved:function(e,d){c.mergeNewParams({_olSalt:Math.random(),styles:d})},scope:this}}};OpenLayers.Renderer.defaultSymbolizer={fillColor:"#808080",fillOpacity:1,strokeColor:"#000000",strokeOpacity:1,strokeWidth:1,strokeDashstyle:"solid",pointRadius:3,graphicName:"square",fontColor:"#000000",fontSize:10,haloColor:"#FFFFFF",haloOpacity:1,haloRadius:1,labelAlign:"cm"};Ext.reg("gxp_wmsstylesdialog",gxp.WMSStylesDialog);Ext.namespace("gxp");gxp.ScaleLimitPanel=Ext.extend(Ext.Panel,{maxScaleDenominatorLimit:40075016.68*39.3701*OpenLayers.DOTS_PER_INCH/256,limitMaxScaleDenominator:true,maxScaleDenominator:undefined,minScaleDenominatorLimit:Math.pow(0.5,19)*40075016.68*39.3701*OpenLayers.DOTS_PER_INCH/256,limitMinScaleDenominator:true,minScaleDenominator:undefined,scaleLevels:20,scaleSliderTemplate:"{scaleType} Scale 1:{scale}",modifyScaleTipContext:Ext.emptyFn,scaleFactor:null,changing:false,border:false,maxScaleLimitText:"Max scale limit",minScaleLimitText:"Min scale limit",initComponent:function(){this.layout="column";this.defaults={border:false,bodyStyle:"margin: 0 5px;"};this.bodyStyle={padding:"5px"};this.scaleSliderTemplate=new Ext.Template(this.scaleSliderTemplate);Ext.applyIf(this,{minScaleDenominator:this.minScaleDenominatorLimit,maxScaleDenominator:this.maxScaleDenominatorLimit});this.scaleFactor=Math.pow(this.maxScaleDenominatorLimit/this.minScaleDenominatorLimit,1/(this.scaleLevels-1));this.scaleSlider=new Ext.Slider({vertical:true,height:100,values:[0,100],listeners:{changecomplete:function(a,b){this.updateScaleValues(a)},render:function(a){a.thumbs[0].el.setVisible(this.limitMaxScaleDenominator);a.thumbs[1].el.setVisible(this.limitMinScaleDenominator);a.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this},plugins:[new gxp.slider.Tip({getText:(function(a){var b=a.slider.thumbs.indexOf(a);var d=a.value;var e=this.sliderValuesToScale([a.value]);var c={scale:String(e[0]),zoom:(a.value*(this.scaleLevels/100)).toFixed(1),type:(b===0)?"Max":"Min",scaleType:(b===0)?"Min":"Max"};this.modifyScaleTipContext(this,c);return this.scaleSliderTemplate.apply(c)}).createDelegate(this)})]});this.maxScaleDenominatorInput=new Ext.form.NumberField({allowNegative:false,width:100,fieldLabel:"1",value:Math.round(this.maxScaleDenominator),disabled:!this.limitMaxScaleDenominator,validator:(function(a){return !this.limitMinScaleDenominator||(a>this.minScaleDenominator)}).createDelegate(this),listeners:{valid:function(c){var b=Number(c.getValue());var a=Math.round(this.maxScaleDenominatorLimit);if(b<a&&b>this.minScaleDenominator){this.maxScaleDenominator=b;this.updateSliderValues()}},change:function(c){var b=Number(c.getValue());var a=Math.round(this.maxScaleDenominatorLimit);if(b>a){c.setValue(a)}else{if(b<this.minScaleDenominator){c.setValue(this.minScaleDenominator)}else{this.maxScaleDenominator=b;this.updateSliderValues()}}},scope:this}});this.minScaleDenominatorInput=new Ext.form.NumberField({allowNegative:false,width:100,fieldLabel:"1",value:Math.round(this.minScaleDenominator),disabled:!this.limitMinScaleDenominator,validator:(function(a){return !this.limitMaxScaleDenominator||(a<this.maxScaleDenominator)}).createDelegate(this),listeners:{valid:function(c){var b=Number(c.getValue());var a=Math.round(this.minScaleDenominatorLimit);if(b>a&&b<this.maxScaleDenominator){this.minScaleDenominator=b;this.updateSliderValues()}},change:function(c){var b=Number(c.getValue());var a=Math.round(this.minScaleDenominatorLimit);if(b<a){c.setValue(a)}else{if(b>this.maxScaleDenominator){c.setValue(this.maxScaleDenominator)}else{this.minScaleDenominator=b;this.updateSliderValues()}}},scope:this}});this.items=[this.scaleSlider,{xtype:"panel",layout:"form",defaults:{border:false},items:[{labelWidth:90,layout:"form",width:150,items:[{xtype:"checkbox",checked:!!this.limitMinScaleDenominator,fieldLabel:this.maxScaleLimitText,listeners:{check:function(c,b){this.limitMinScaleDenominator=b;var a=this.scaleSlider;a.setValue(1,100);a.thumbs[1].el.setVisible(b);this.minScaleDenominatorInput.setDisabled(!b);this.updateScaleValues(a);a.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this}}]},{labelWidth:10,layout:"form",items:[this.minScaleDenominatorInput]},{labelWidth:90,layout:"form",items:[{xtype:"checkbox",checked:!!this.limitMaxScaleDenominator,fieldLabel:this.minScaleLimitText,listeners:{check:function(c,b){this.limitMaxScaleDenominator=b;var a=this.scaleSlider;a.setValue(0,0);a.thumbs[0].el.setVisible(b);this.maxScaleDenominatorInput.setDisabled(!b);this.updateScaleValues(a);a.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this}}]},{labelWidth:10,layout:"form",items:[this.maxScaleDenominatorInput]}]}];this.addEvents("change");gxp.ScaleLimitPanel.superclass.initComponent.call(this)},updateScaleValues:function(e){if(!this.changing){var b=e.getValues();var d=false;if(!this.limitMaxScaleDenominator){if(b[0]>0){b[0]=0;d=true}}if(!this.limitMinScaleDenominator){if(b[1]<100){b[1]=100;d=true}}if(d){e.setValue(0,b[0]);e.setValue(1,b[1])}else{var f=this.sliderValuesToScale(b);var a=f[0];var c=f[1];this.changing=true;this.minScaleDenominatorInput.setValue(c);this.maxScaleDenominatorInput.setValue(a);this.changing=false;this.fireEvent("change",this,(this.limitMinScaleDenominator)?c:undefined,(this.limitMaxScaleDenominator)?a:undefined)}}},updateSliderValues:function(){if(!this.changing){var c=this.minScaleDenominator;var a=this.maxScaleDenominator;var b=this.scaleToSliderValues([a,c]);this.changing=true;this.scaleSlider.setValue(0,b[0]);this.scaleSlider.setValue(1,b[1]);this.changing=false;this.fireEvent("change",this,(this.limitMinScaleDenominator)?c:undefined,(this.limitMaxScaleDenominator)?a:undefined)}},sliderValuesToScale:function(b){var a=100/(this.scaleLevels-1);return[Math.round(Math.pow(this.scaleFactor,(100-b[0])/a)*this.minScaleDenominatorLimit),Math.round(Math.pow(this.scaleFactor,(100-b[1])/a)*this.minScaleDenominatorLimit)]},scaleToSliderValues:function(b){var a=100/(this.scaleLevels-1);return[100-(a*Math.log(b[0]/this.minScaleDenominatorLimit)/Math.log(this.scaleFactor)),100-(a*Math.log(b[1]/this.minScaleDenominatorLimit)/Math.log(this.scaleFactor))]}});Ext.reg("gxp_scalelimitpanel",gxp.ScaleLimitPanel);Ext.namespace("gxp.slider");gxp.slider.Tip=Ext.extend(Ext.slider.Tip,{hover:true,dragging:false,init:function(a){if(this.hover){a.on("render",this.registerThumbListeners,this)}this.slider=a;gxp.slider.Tip.superclass.init.apply(this,arguments)},registerThumbListeners:function(){for(var b=0,a=this.slider.thumbs.length;b<a;++b){this.slider.thumbs[b].el.on({mouseover:this.createHoverListener(b),mouseout:function(){if(!this.dragging){this.hide.apply(this,arguments)}},scope:this})}},createHoverListener:function(a){return(function(){this.onSlide(this.slider,{},this.slider.thumbs[a]);this.dragging=false}).createDelegate(this)},onSlide:function(b,c,a){this.dragging=true;gxp.slider.Tip.superclass.onSlide.apply(this,arguments)}});Ext.namespace("gxp.plugins");gxp.plugins.FormFieldHelp=Ext.extend(Object,{ptype:"gxp_formfieldhelp",helpText:null,dismissDelay:5000,constructor:function(a){Ext.apply(this,a)},init:function(a){this.target=a;a.on("render",this.showHelp,this)},showHelp:function(){var a;if(this.target.label){a=this.target.label}else{a=this.target.getEl()}Ext.QuickTips.register({target:a,dismissDelay:this.dismissDelay,text:this.helpText})}});Ext.preg(gxp.plugins.FormFieldHelp.prototype.ptype,gxp.plugins.FormFieldHelp);Ext.namespace("gxp");gxp.TextSymbolizer=Ext.extend(Ext.Panel,{fonts:undefined,symbolizer:null,defaultSymbolizer:null,attributes:null,colorManager:null,haloCache:null,border:false,layout:"form",labelValuesText:"Label values",haloText:"Halo",sizeText:"Size",priorityText:"Priority",labelOptionsText:"Label options",autoWrapText:"Auto wrap",followLineText:"Follow line",maxDisplacementText:"Maximum displacement",repeatText:"Repeat",forceLeftToRightText:"Force left to right",groupText:"Grouping",spaceAroundText:"Space around",labelAllGroupText:"Label all segments in line group",maxAngleDeltaText:"Maximum angle delta",conflictResolutionText:"Conflict resolution",goodnessOfFitText:"Goodness of fit",polygonAlignText:"Polygon alignment",graphicResizeText:"Graphic resize",graphicMarginText:"Graphic margin",graphicTitle:"Graphic",fontColorTitle:"Font color and opacity",positioningText:"Label positioning",anchorPointText:"Anchor point",displacementXText:"Displacement (X-direction)",displacementYText:"Displacement (Y-direction)",perpendicularOffsetText:"Perpendicular offset",priorityHelp:"The higher the value of the specified field, the sooner the label will be drawn (which makes it win in the conflict resolution game)",autoWrapHelp:"Wrap labels that exceed a certain length in pixels",followLineHelp:"Should the label follow the geometry of the line?",maxDisplacementHelp:"Maximum displacement in pixels if label position is busy",repeatHelp:"Repeat labels after a certain number of pixels",forceLeftToRightHelp:"Labels are usually flipped to make them readable. If the character happens to be a directional arrow then this is not desirable",groupHelp:"Grouping works by collecting all features with the same label text, then choosing a representative geometry for the group. Road data is a classic example to show why grouping is useful. It is usually desirable to display only a single label for all of 'Main Street', not a label for every block of 'Main Street.'",spaceAroundHelp:"Overlapping and Separating Labels. By default GeoServer will not render labels 'on top of each other'. By using the spaceAround option you can either allow labels to overlap, or add extra space around labels. The value supplied for the option is a positive or negative size in pixels. Using the default value of 0, the bounding box of a label cannot overlap the bounding box of another label.",labelAllGroupHelp:"The labelAllGroup option makes sure that all of the segments in a line group are labeled instead of just the longest one.",conflictResolutionHelp:"By default labels are subjected to conflict resolution, meaning the renderer will not allow any label to overlap with a label that has been drawn already. Setting this parameter to false pull the label out of the conflict resolution game, meaning the label will be drawn even if it overlaps with other labels, and other labels drawn after it won’t mind overlapping with it.",goodnessOfFitHelp:"Geoserver will remove labels if they are a particularly bad fit for the geometry they are labeling. For Polygons: the label is sampled approximately at every letter. The distance from these points to the polygon is determined and each sample votes based on how close it is to the polygon. The default value is 0.5.",graphic_resizeHelp:"Specifies a mode for resizing label graphics (such as highway shields) to fit the text of the label. The default mode, ‘none’, never modifies the label graphic. In stretch mode, GeoServer will resize the graphic to exactly surround the label text, possibly modifying the image’s aspect ratio. In proportional mode, GeoServer will expand the image to be large enough to surround the text while preserving its original aspect ratio.",maxAngleDeltaHelp:"Designed to use used in conjuection with followLine, the maxAngleDelta option sets the maximum angle, in degrees, between two subsequent characters in a curved label. Large angles create either visually disconnected words or overlapping characters. It is advised not to use angles larger than 30.",polygonAlignHelp:"GeoServer normally tries to place horizontal labels within a polygon, and give up in case the label position is busy or if the label does not fit enough in the polygon. This options allows GeoServer to try alternate rotations for the labels. Possible options: the default value, only the rotation manually specified in the <Rotation> tag will be used (manual), If the label does not fit horizontally and the polygon is taller than wider the vertical alignement will also be tried (ortho), If the label does not fit horizontally the minimum bounding rectangle will be computed and a label aligned to it will be tried out as well (mbr).",graphic_marginHelp:"Similar to the margin shorthand property in CSS for HTML, its interpretation varies depending on how many margin values are provided: 1 = use that margin length on all sides of the label 2 = use the first for top & bottom margins and the second for left & right margins. 3 = use the first for the top margin, second for left & right margins, third for the bottom margin. 4 = use the first for the top margin, second for the right margin, third for the bottom margin, and fourth for the left margin.",initComponent:function(){if(!this.symbolizer){this.symbolizer={}}Ext.applyIf(this.symbolizer,this.defaultSymbolizer);if(!this.symbolizer.vendorOptions){this.symbolizer.vendorOptions={}}this.haloCache={};this.attributes.on("load",this.showHideGeometryOptions,this);this.attributes.load();var a={xtype:"combo",fieldLabel:this.labelValuesText,store:this.attributes,mode:"local",lastQuery:"",editable:false,triggerAction:"all",allowBlank:false,displayField:"name",valueField:"name",value:this.symbolizer.label&&this.symbolizer.label.replace(/^\${(.*)}$/,"$1"),listeners:{select:function(c,b){this.symbolizer.label="${"+b.get("name")+"}";this.fireEvent("change",this.symbolizer)},scope:this},width:120};this.attributesComboConfig=this.attributesComboConfig||{};Ext.applyIf(this.attributesComboConfig,a);this.labelWidth=80;this.items=[this.attributesComboConfig,{cls:"x-html-editor-tb",style:"background: transparent; border: none; padding: 0 0em 0.5em;",xtype:"toolbar",items:[{xtype:"gxp_fontcombo",fonts:this.fonts||undefined,width:110,value:this.symbolizer.fontFamily,listeners:{select:function(c,b){this.symbolizer.fontFamily=b.get("field1");this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"tbtext",text:this.sizeText+": "},{xtype:"numberfield",allowNegative:false,emptyText:OpenLayers.Renderer.defaultSymbolizer.fontSize,value:this.symbolizer.fontSize,width:30,listeners:{change:function(c,b){b=parseFloat(b);if(isNaN(b)){delete this.symbolizer.fontSize}else{this.symbolizer.fontSize=b}this.fireEvent("change",this.symbolizer)},scope:this}},{enableToggle:true,cls:"x-btn-icon",iconCls:"x-edit-bold",pressed:this.symbolizer.fontWeight==="bold",listeners:{toggle:function(b,c){this.symbolizer.fontWeight=c?"bold":"normal";this.fireEvent("change",this.symbolizer)},scope:this}},{enableToggle:true,cls:"x-btn-icon",iconCls:"x-edit-italic",pressed:this.symbolizer.fontStyle==="italic",listeners:{toggle:function(b,c){this.symbolizer.fontStyle=c?"italic":"normal";this.fireEvent("change",this.symbolizer)},scope:this}}]},{xtype:"gxp_fillsymbolizer",fillText:this.fontColorTitle,symbolizer:this.symbolizer,colorProperty:"fontColor",opacityProperty:"fontOpacity",checkboxToggle:false,autoHeight:true,width:213,labelWidth:70,plugins:this.colorManager&&[new this.colorManager()],listeners:{change:function(b){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"fieldset",title:this.graphicTitle,checkboxToggle:true,hideMode:"offsets",collapsed:!(this.symbolizer.fillColor||this.symbolizer.fillOpacity||this.symbolizer.vendorOptions["graphic-resize"]||this.symbolizer.vendorOptions["graphic-margin"]),labelWidth:70,items:[{xtype:"gxp_pointsymbolizer",symbolizer:this.symbolizer,listeners:{change:function(b){b.graphic=!!b.graphicName||!!b.externalGraphic;this.fireEvent("change",this.symbolizer)},scope:this},border:false,labelWidth:70},this.createVendorSpecificField({name:"graphic-resize",xtype:"combo",store:["none","stretch","proportional"],mode:"local",listeners:{select:function(c,b){if(c.getValue()==="none"){this.graphicMargin.hide()}else{if(Ext.isEmpty(this.graphicMargin.getValue())){this.graphicMargin.setValue(0);this.symbolizer.vendorOptions["graphic-margin"]=0}this.graphicMargin.show()}},scope:this},width:100,triggerAction:"all",fieldLabel:this.graphicResizeText}),this.createVendorSpecificField({name:"graphic-margin",ref:"../graphicMargin",hidden:(this.symbolizer.vendorOptions["graphic-resize"]!=="stretch"&&this.symbolizer.vendorOptions["graphic-resize"]!=="proportional"),width:100,fieldLabel:this.graphicMarginText,xtype:"textfield"})],listeners:{collapse:function(){this.graphicCache={externalGraphic:this.symbolizer.externalGraphic,fillColor:this.symbolizer.fillColor,fillOpacity:this.symbolizer.fillOpacity,graphicName:this.symbolizer.graphicName,pointRadius:this.symbolizer.pointRadius,rotation:this.symbolizer.rotation,strokeColor:this.symbolizer.strokeColor,strokeWidth:this.symbolizer.strokeWidth,strokeDashStyle:this.symbolizer.strokeDashStyle};delete this.symbolizer.externalGraphic;delete this.symbolizer.fillColor;delete this.symbolizer.fillOpacity;delete this.symbolizer.graphicName;delete this.symbolizer.pointRadius;delete this.symbolizer.rotation;delete this.symbolizer.strokeColor;delete this.symbolizer.strokeWidth;delete this.symbolizer.strokeDashStyle;this.fireEvent("change",this.symbolizer)},expand:function(){Ext.apply(this.symbolizer,this.graphicCache);this.doLayout();this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"fieldset",title:this.haloText,checkboxToggle:true,collapsed:!(this.symbolizer.haloRadius||this.symbolizer.haloColor||this.symbolizer.haloOpacity),autoHeight:true,labelWidth:50,items:[{xtype:"numberfield",fieldLabel:this.sizeText,anchor:"89%",allowNegative:false,emptyText:OpenLayers.Renderer.defaultSymbolizer.haloRadius,value:this.symbolizer.haloRadius,listeners:{change:function(c,b){b=parseFloat(b);if(isNaN(b)){delete this.symbolizer.haloRadius}else{this.symbolizer.haloRadius=b}this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_fillsymbolizer",symbolizer:{fillColor:("haloColor" in this.symbolizer)?this.symbolizer.haloColor:OpenLayers.Renderer.defaultSymbolizer.haloColor,fillOpacity:("haloOpacity" in this.symbolizer)?this.symbolizer.haloOpacity:OpenLayers.Renderer.defaultSymbolizer.haloOpacity*100},defaultColor:OpenLayers.Renderer.defaultSymbolizer.haloColor,checkboxToggle:false,width:190,labelWidth:60,plugins:this.colorManager&&[new this.colorManager()],listeners:{change:function(b){this.symbolizer.haloColor=b.fillColor;this.symbolizer.haloOpacity=b.fillOpacity;this.fireEvent("change",this.symbolizer)},scope:this}}],listeners:{collapse:function(){this.haloCache={haloRadius:this.symbolizer.haloRadius,haloColor:this.symbolizer.haloColor,haloOpacity:this.symbolizer.haloOpacity};delete this.symbolizer.haloRadius;delete this.symbolizer.haloColor;delete this.symbolizer.haloOpacity;this.fireEvent("change",this.symbolizer)},expand:function(){Ext.apply(this.symbolizer,this.haloCache);this.doLayout();this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"fieldset",collapsed:!(this.symbolizer.labelAlign||this.symbolizer.vendorOptions.polygonAlign||this.symbolizer.labelXOffset||this.symbolizer.labelYOffset||this.symbolizer.labelPerpendicularOffset),title:this.positioningText,checkboxToggle:true,autoHeight:true,labelWidth:75,defaults:{width:100},items:[this.createField(Ext.applyIf({fieldLabel:this.anchorPointText,geometryTypes:["POINT"],value:this.symbolizer.labelAlign||"lb",store:[["lt","Left-top"],["ct","Center-top"],["rt","Right-top"],["lm","Left-center"],["cm","Center"],["rm","Right-center"],["lb","Left-bottom"],["cb","Center-bottom"],["rb","Right-bottom"]],listeners:{select:function(c,b){this.symbolizer.labelAlign=c.getValue();delete this.symbolizer.labelAnchorPointX;delete this.symbolizer.labelAnchorPointY;this.fireEvent("change",this.symbolizer)},scope:this}},this.attributesComboConfig)),this.createField({xtype:"numberfield",geometryTypes:["POINT"],fieldLabel:this.displacementXText,value:this.symbolizer.labelXOffset,listeners:{change:function(c,b){this.symbolizer.labelXOffset=b;this.fireEvent("change",this.symbolizer)},scope:this}}),this.createField({xtype:"numberfield",geometryTypes:["POINT"],fieldLabel:this.displacementYText,value:this.symbolizer.labelYOffset,listeners:{change:function(c,b){this.symbolizer.labelYOffset=b;this.fireEvent("change",this.symbolizer)},scope:this}}),this.createField({xtype:"numberfield",geometryTypes:["LINE"],fieldLabel:this.perpendicularOffsetText,value:this.symbolizer.labelPerpendicularOffset,listeners:{change:function(c,b){if(Ext.isEmpty(b)){delete this.symbolizer.labelPerpendicularOffset}else{this.symbolizer.labelPerpendicularOffset=b}this.fireEvent("change",this.symbolizer)},scope:this}}),this.createVendorSpecificField({name:"polygonAlign",geometryTypes:["POLYGON"],xtype:"combo",mode:"local",value:this.symbolizer.vendorOptions.polygonAlign||"manual",triggerAction:"all",store:["manual","ortho","mbr"],fieldLabel:this.polygonAlignText})]},{xtype:"fieldset",title:this.priorityText,checkboxToggle:true,collapsed:!(this.symbolizer.priority),autoHeight:true,labelWidth:50,items:[Ext.applyIf({fieldLabel:this.priorityText,value:this.symbolizer.priority&&this.symbolizer.priority.replace(/^\${(.*)}$/,"$1"),allowBlank:true,name:"priority",plugins:[{ptype:"gxp_formfieldhelp",dismissDelay:20000,helpText:this.priorityHelp}],listeners:{select:function(c,b){this.symbolizer[c.name]="${"+b.get("name")+"}";this.fireEvent("change",this.symbolizer)},scope:this}},this.attributesComboConfig)]},{xtype:"fieldset",title:this.labelOptionsText,checkboxToggle:true,collapsed:!(this.symbolizer.vendorOptions.autoWrap||this.symbolizer.vendorOptions.followLine||this.symbolizer.vendorOptions.maxAngleDelta||this.symbolizer.vendorOptions.maxDisplacement||this.symbolizer.vendorOptions.repeat||this.symbolizer.vendorOptions.forceLeftToRight||this.symbolizer.vendorOptions.group||this.symbolizer.vendorOptions.spaceAround||this.symbolizer.vendorOptions.labelAllGroup||this.symbolizer.vendorOptions.conflictResolution||this.symbolizer.vendorOptions.goodnessOfFit||this.symbolizer.vendorOptions.polygonAlign),autoHeight:true,labelWidth:80,defaults:{width:100},items:[this.createVendorSpecificField({name:"autoWrap",allowBlank:false,fieldLabel:this.autoWrapText}),this.createVendorSpecificField({name:"followLine",geometryTypes:["LINE"],xtype:"checkbox",listeners:{check:function(b,c){if(!c){this.maxAngleDelta.hide()}else{this.maxAngleDelta.show()}},scope:this},fieldLabel:this.followLineText}),this.createVendorSpecificField({name:"maxAngleDelta",ref:"../maxAngleDelta",hidden:(this.symbolizer.vendorOptions.followLine==null),geometryTypes:["LINE"],fieldLabel:this.maxAngleDeltaText}),this.createVendorSpecificField({name:"maxDisplacement",fieldLabel:this.maxDisplacementText}),this.createVendorSpecificField({name:"repeat",geometryTypes:["LINE"],fieldLabel:this.repeatText}),this.createVendorSpecificField({name:"forceLeftToRight",xtype:"checkbox",geometryTypes:["LINE"],fieldLabel:this.forceLeftToRightText}),this.createVendorSpecificField({name:"group",listeners:{check:function(b,c){if(this.geometryType==="LINE"){if(c===false){this.labelAllGroup.hide()}else{this.labelAllGroup.show()}}},scope:this},xtype:"checkbox",yesno:true,fieldLabel:this.groupText}),this.createVendorSpecificField({name:"labelAllGroup",ref:"../labelAllGroup",geometryTypes:["LINE"],hidden:(this.symbolizer.vendorOptions.group!=="yes"),xtype:"checkbox",fieldLabel:this.labelAllGroupText}),this.createVendorSpecificField({name:"conflictResolution",xtype:"checkbox",listeners:{check:function(b,c){if(!c){this.spaceAround.hide()}else{this.spaceAround.show()}},scope:this},fieldLabel:this.conflictResolutionText}),this.createVendorSpecificField({name:"spaceAround",hidden:(this.symbolizer.vendorOptions.conflictResolution!==true),allowNegative:true,ref:"../spaceAround",fieldLabel:this.spaceAroundText}),this.createVendorSpecificField({name:"goodnessOfFit",geometryTypes:["POLYGON"],fieldLabel:this.goodnessOfFitText})]}];this.addEvents("change");gxp.TextSymbolizer.superclass.initComponent.call(this)},createField:function(a){var b=Ext.ComponentMgr.create(a);if(a.geometryTypes){this.on("geometrytype",function(c){if(a.geometryTypes.indexOf(c)===-1){b.hide()}})}return b},createVendorSpecificField:function(a){var b=function(e,d){if(Ext.isEmpty(d)){delete this.symbolizer.vendorOptions[a.name]}else{if(a.yesno===true){this.symbolizer.vendorOptions[a.name]=(d==true)?"yes":"no"}else{this.symbolizer.vendorOptions[a.name]=d}}this.fireEvent("change",this.symbolizer)};var c=Ext.ComponentMgr.create(Ext.applyIf(a,{xtype:"numberfield",allowNegative:false,value:a.value||this.symbolizer.vendorOptions[a.name],checked:(a.yesno===true)?(this.symbolizer.vendorOptions[a.name]==="yes"):this.symbolizer.vendorOptions[a.name],plugins:[{ptype:"gxp_formfieldhelp",dismissDelay:20000,helpText:this[a.name.replace(/-/g,"_")+"Help"]}]}));c.on("change",b,this);c.on("check",b,this);if(a.geometryTypes){this.on("geometrytype",function(d){if(a.geometryTypes.indexOf(d)===-1){c.hide()}})}return c},showHideGeometryOptions:function(){var a=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;var d=/gml:((Multi)?(Polygon|Surface)).*/;var e=/gml:((Multi)?(Point)).*/;var c=/gml:((Multi)?(Line|Curve|Surface)).*/;var b=null;this.attributes.each(function(h){var g=h.get("type");var f=a.exec(g);if(f){if(d.exec(g)){b="POLYGON"}else{if(e.exec(g)){b="POINT"}else{if(c.exec(g)){b="LINE"}}}}},this);if(b!==null){this.geometryType=b;this.fireEvent("geometrytype",b)}}});Ext.reg("gxp_textsymbolizer",gxp.TextSymbolizer);Ext.namespace("gxp");gxp.FillSymbolizer=Ext.extend(Ext.FormPanel,{symbolizer:null,colorProperty:"fillColor",opacityProperty:"fillOpacity",colorManager:null,checkboxToggle:true,defaultColor:null,border:false,fillText:"Fill",colorText:"Color",opacityText:"Opacity",initComponent:function(){if(!this.symbolizer){this.symbolizer={}}var a;if(this.colorManager){a=[new this.colorManager()]}var b=100;if(this.opacityProperty in this.symbolizer){b=this.symbolizer[this.opacityProperty]*100}else{if(OpenLayers.Renderer.defaultSymbolizer[this.opacityProperty]){b=OpenLayers.Renderer.defaultSymbolizer[this.opacityProperty]*100}}this.items=[{xtype:"fieldset",title:this.fillText,autoHeight:true,checkboxToggle:this.checkboxToggle,collapsed:this.checkboxToggle===true&&this.symbolizer.fill===false,hideMode:"offsets",defaults:{width:100},items:[{xtype:"gxp_colorfield",fieldLabel:this.colorText,name:"color",emptyText:OpenLayers.Renderer.defaultSymbolizer[this.colorProperty],value:this.symbolizer[this.colorProperty],defaultBackground:this.defaultColor||OpenLayers.Renderer.defaultSymbolizer[this.colorProperty],plugins:a,listeners:{valid:function(e){var d=e.getValue();var c=this.symbolizer[this.colorProperty]!=d;this.symbolizer[this.colorProperty]=d;c&&this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"slider",fieldLabel:this.opacityText,name:"opacity",values:[b],isFormField:true,listeners:{changecomplete:function(c,d){this.symbolizer[this.opacityProperty]=d/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(c){return c.value+"%"}})]}],listeners:{collapse:function(){if(this.symbolizer.fill!==false){this.symbolizer.fill=false;this.fireEvent("change",this.symbolizer)}},expand:function(){this.symbolizer.fill=true;this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.FillSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_fillsymbolizer",gxp.FillSymbolizer);Ext.namespace("gxp.form");gxp.form.ColorField=Ext.extend(Ext.form.TextField,{cssColors:{aqua:"#00FFFF",black:"#000000",blue:"#0000FF",fuchsia:"#FF00FF",gray:"#808080",green:"#008000",lime:"#00FF00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#FF0000",silver:"#C0C0C0",teal:"#008080",white:"#FFFFFF",yellow:"#FFFF00"},defaultBackground:"#ffffff",initComponent:function(){if(this.value){this.value=this.hexToColor(this.value)}gxp.form.ColorField.superclass.initComponent.call(this);this.on({render:this.colorField,valid:this.colorField,scope:this})},isDark:function(f){var c=false;if(f){var e=parseInt(f.substring(1,3),16)/255;var d=parseInt(f.substring(3,5),16)/255;var a=parseInt(f.substring(5,7),16)/255;var h=(e*0.299)+(d*0.587)+(a*0.144);c=h<0.5}return c},colorField:function(){var a=this.colorToHex(this.getValue())||this.defaultBackground;this.getEl().setStyle({background:a,color:this.isDark(a)?"#ffffff":"#000000"})},getHexValue:function(){return this.colorToHex(gxp.form.ColorField.superclass.getValue.apply(this,arguments))},getValue:function(){var a=this.getHexValue();var b=this.initialConfig.value;if(a===this.hexToColor(b)){a=b}return a},setValue:function(a){gxp.form.ColorField.superclass.setValue.apply(this,[this.hexToColor(a)])},colorToHex:function(a){if(!a){return a}var b;if(a.match(/^#[0-9a-f]{6}$/i)){b=a}else{b=this.cssColors[a.toLowerCase()]||null}return b},hexToColor:function(b){if(!b){return b}var a=b;for(var d in this.cssColors){if(this.cssColors[d]==a.toUpperCase()){a=d;break}}return a}});Ext.reg("gxp_colorfield",gxp.form.ColorField);Ext.namespace("gxp.form");gxp.form.FontComboBox=Ext.extend(Ext.form.ComboBox,{fonts:["Serif","SansSerif","Arial","Courier New","Tahoma","Times New Roman","Verdana"],defaultFont:"Serif",allowBlank:false,mode:"local",triggerAction:"all",editable:false,initComponent:function(){var c=this.fonts||gxp.form.FontComboBox.prototype.fonts;var b=this.defaultFont;if(c.indexOf(this.defaultFont)===-1){b=c[0]}var a={displayField:"field1",valueField:"field1",store:c,value:b,tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item"><span style="font-family: {field1};">{field1}</span></div></tpl>')};Ext.applyIf(this,a);gxp.form.FontComboBox.superclass.initComponent.call(this)}});Ext.reg("gxp_fontcombo",gxp.form.FontComboBox);Ext.namespace("gxp");gxp.PolygonSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,initComponent:function(){this.items=[{xtype:"gxp_fillsymbolizer",symbolizer:this.symbolizer,listeners:{change:function(a){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,listeners:{change:function(a){this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.PolygonSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_polygonsymbolizer",gxp.PolygonSymbolizer);Ext.namespace("gxp");gxp.StrokeSymbolizer=Ext.extend(Ext.FormPanel,{solidStrokeName:"solid",dashStrokeName:"dash",dotStrokeName:"dot",titleText:"Stroke",styleText:"Style",colorText:"Color",widthText:"Width",opacityText:"Opacity",symbolizer:null,colorManager:null,checkboxToggle:true,defaultColor:null,dashStyles:null,border:false,initComponent:function(){this.dashStyles=this.dashStyles||[["solid",this.solidStrokeName],["4 4",this.dashStrokeName],["2 4",this.dotStrokeName]];if(!this.symbolizer){this.symbolizer={}}var a;if(this.colorManager){a=[new this.colorManager]}this.items=[{xtype:"fieldset",title:this.titleText,autoHeight:true,checkboxToggle:this.checkboxToggle,collapsed:this.checkboxToggle===true&&this.symbolizer.stroke===false,hideMode:"offsets",defaults:{width:100},items:[{xtype:"combo",name:"style",fieldLabel:this.styleText,store:new Ext.data.SimpleStore({data:this.dashStyles,fields:["value","display"]}),displayField:"display",valueField:"value",value:this.getDashArray(this.symbolizer.strokeDashstyle)||OpenLayers.Renderer.defaultSymbolizer.strokeDashstyle,mode:"local",allowBlank:true,triggerAction:"all",editable:false,listeners:{select:function(c,b){this.symbolizer.strokeDashstyle=b.get("value");this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_colorfield",name:"color",fieldLabel:this.colorText,emptyText:OpenLayers.Renderer.defaultSymbolizer.strokeColor,value:this.symbolizer.strokeColor,defaultBackground:this.defaultColor||OpenLayers.Renderer.defaultSymbolizer.strokeColor,plugins:a,listeners:{valid:function(d){var c=d.getValue();var b=this.symbolizer.strokeColor!=c;this.symbolizer.strokeColor=c;b&&this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"numberfield",name:"width",fieldLabel:this.widthText,allowNegative:false,emptyText:OpenLayers.Renderer.defaultSymbolizer.strokeWidth,value:this.symbolizer.strokeWidth,listeners:{change:function(c,b){b=parseFloat(b);if(isNaN(b)){delete this.symbolizer.strokeWidth}else{this.symbolizer.strokeWidth=b}this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"slider",name:"opacity",fieldLabel:this.opacityText,values:[(("strokeOpacity" in this.symbolizer)?this.symbolizer.strokeOpacity:OpenLayers.Renderer.defaultSymbolizer.strokeOpacity)*100],isFormField:true,listeners:{changecomplete:function(b,c){this.symbolizer.strokeOpacity=c/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(b){return b.value+"%"}})]}],listeners:{collapse:function(){if(this.symbolizer.stroke!==false){this.symbolizer.stroke=false;this.fireEvent("change",this.symbolizer)}},expand:function(){this.symbolizer.stroke=true;this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.StrokeSymbolizer.superclass.initComponent.call(this)},getDashArray:function(b){var d;if(b){var c=b.split(/\s+/);var a=c[0]/c[1];if(!isNaN(a)){d=a>=1?"4 4":"2 4"}}return d}});Ext.reg("gxp_strokesymbolizer",gxp.StrokeSymbolizer);Ext.namespace("gxp");gxp.LineSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,initComponent:function(){this.items=[{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,listeners:{change:function(a){this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.LineSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_linesymbolizer",gxp.LineSymbolizer);Ext.namespace("gxp");gxp.PointSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,graphicCircleText:"circle",graphicSquareText:"square",graphicTriangleText:"triangle",graphicStarText:"star",graphicCrossText:"cross",graphicXText:"x",graphicExternalText:"external",urlText:"URL",opacityText:"opacity",symbolText:"Symbol",sizeText:"Size",rotationText:"Rotation",pointGraphics:null,colorManager:null,external:null,layout:"form",initComponent:function(){if(!this.symbolizer){this.symbolizer={}}if(!this.pointGraphics){this.pointGraphics=[{display:this.graphicXText,display:"Airport",value:"https://staging.geonode.wfp.org/uploaded/geoserver_icons/Global_Layers/Airport.png",mark:false},{display:this.graphicXText,display:"Beneficiary",value:"https://staging.geonode.wfp.org/uploaded/geoserver_icons/standard/WFP_Corporate_Icons/Beneficiaries_neg.png",mark:false},{display:this.graphicXText,display:"Bridge",value:"https://staging.geonode.wfp.org/uploaded/geoserver_icons/standard/Transport_Logistics_Cluster/Bridge.png",mark:false},{display:this.graphicXText,display:"Conflict",value:"https://staging.geonode.wfp.org/uploaded/geoserver_icons/standard/WFP_Corporate_Icons/Conflict_neg.png",mark:false},{display:this.graphicXText,display:"Earthquake",value:"https://staging.geonode.wfp.org/uploaded/geoserver_icons/standard/Emergency/earthquake.png",mark:false},{display:this.graphicXText,display:"Port",value:"https://staging.geonode.wfp.org/uploaded/geoserver_icons/Global_Layers/Port.png",mark:false},{display:this.graphicXText,display:"Refugee Camp",value:"https://staging.geonode.wfp.org/uploaded/geoserver_icons/Global_Layers/opweb_refugee_camp.png",mark:false},{display:this.graphicXText,display:"Warehouse",value:"https://staging.geonode.wfp.org/uploaded/geoserver_icons/standard/WFP_Corporate_Icons/Schoolfeeding_neg.png",mark:false},{display:this.graphicCircleText,value:"circle",mark:true},{display:this.graphicCrossText,value:"cross",mark:true},{display:this.graphicSquareText,value:"square",mark:true},{display:this.graphicStarText,value:"star",mark:true},{display:this.graphicTriangleText,value:"triangle",mark:true},{display:this.graphicXText,value:"x",mark:true},{display:this.graphicExternalText}]}this.external=!!this.symbolizer.externalGraphic;this.markPanel=new Ext.Panel({border:false,collapsed:this.external,layout:"form",items:[{xtype:"gxp_fillsymbolizer",symbolizer:this.symbolizer,labelWidth:this.labelWidth,labelAlign:this.labelAlign,colorManager:this.colorManager,listeners:{change:function(a){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,labelWidth:this.labelWidth,labelAlign:this.labelAlign,colorManager:this.colorManager,listeners:{change:function(a){this.fireEvent("change",this.symbolizer)},scope:this}}]});this.urlField=new Ext.form.TextField({name:"url",fieldLabel:this.urlText,value:this.symbolizer.externalGraphic,hidden:!this.external,listeners:{change:function(b,a){this.symbolizer.externalGraphic=a;this.fireEvent("change",this.symbolizer)},scope:this},width:100});this.graphicPanel=new Ext.Panel({border:false,collapsed:!this.external,layout:"form",items:[this.urlField,{xtype:"slider",name:"opacity",fieldLabel:this.opacityText,value:[(this.symbolizer.graphicOpacity==null)?100:this.symbolizer.graphicOpacity*100],isFormField:true,listeners:{changecomplete:function(a,b){this.symbolizer.graphicOpacity=b/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(a){return a.value+"%"}})],width:100}]});this.items=[{xtype:"combo",name:"mark",fieldLabel:this.symbolText,store:new Ext.data.JsonStore({data:{root:this.pointGraphics},root:"root",fields:["value","display","preview",{name:"mark",type:"boolean"}]}),value:this.external?0:this.symbolizer.graphicName,displayField:"display",valueField:"value",tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item gx-pointsymbolizer-mark-item"><tpl if="preview"><img src="{preview}" alt="{display}"/></tpl><span>{display}</span></div></tpl>'),mode:"local",allowBlank:false,triggerAction:"all",editable:false,listeners:{select:function(c,a){var e=a.get("mark");var b=a.get("value");if(!e){if(b){this.urlField.hide();this.symbolizer.externalGraphic=b}else{this.urlField.show()}if(!this.external){this.external=true;var d=this.urlField.getValue();if(!Ext.isEmpty(d)){this.symbolizer.externalGraphic=d}delete this.symbolizer.graphicName;this.updateGraphicDisplay()}}else{if(this.external){this.external=false;delete this.symbolizer.externalGraphic;this.updateGraphicDisplay()}this.symbolizer.graphicName=b}this.fireEvent("change",this.symbolizer)},scope:this},width:100},{xtype:"textfield",name:"size",fieldLabel:this.sizeText,value:this.symbolizer.pointRadius&&this.symbolizer.pointRadius*2,listeners:{change:function(b,a){this.symbolizer.pointRadius=a/2;this.fireEvent("change",this.symbolizer)},scope:this},width:100},{xtype:"textfield",name:"rotation",fieldLabel:this.rotationText,value:this.symbolizer.rotation,listeners:{change:function(b,a){this.symbolizer.rotation=a;this.fireEvent("change",this.symbolizer)},scope:this},width:100},this.markPanel,this.graphicPanel];this.addEvents("change");gxp.PointSymbolizer.superclass.initComponent.call(this)},updateGraphicDisplay:function(){if(this.external){this.markPanel.collapse();this.graphicPanel.expand()}else{this.graphicPanel.collapse();this.markPanel.expand()}}});Ext.reg("gxp_pointsymbolizer",gxp.PointSymbolizer);OpenLayers.Control.ScaleLine=OpenLayers.Class(OpenLayers.Control,{maxWidth:100,topOutUnits:"km",topInUnits:"m",bottomOutUnits:"mi",bottomInUnits:"ft",eTop:null,eBottom:null,geodesic:false,draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);if(!this.eTop){this.eTop=document.createElement("div");this.eTop.className=this.displayClass+"Top";var a=this.topInUnits.length;this.div.appendChild(this.eTop);if((this.topOutUnits=="")||(this.topInUnits=="")){this.eTop.style.visibility="hidden"}else{this.eTop.style.visibility="visible"}this.eBottom=document.createElement("div");this.eBottom.className=this.displayClass+"Bottom";this.div.appendChild(this.eBottom);if((this.bottomOutUnits=="")||(this.bottomInUnits=="")){this.eBottom.style.visibility="hidden"}else{this.eBottom.style.visibility="visible"}}this.map.events.register("moveend",this,this.update);this.update();return this.div},getBarLen:function(b){var d=parseInt(Math.log(b)/Math.log(10));var a=Math.pow(10,d);var c=parseInt(b/a);var e;if(c>5){e=5}else{if(c>2){e=2}else{e=1}}return e*a},update:function(){var j=this.map.getResolution();if(!j){return}var o=this.map.getUnits();var e=OpenLayers.INCHES_PER_UNIT;var l=this.maxWidth*j*e[o];var n=1;if(this.geodesic===true){var b=(this.map.getGeodesicPixelSize().w||0.000001)*this.maxWidth;var f=l/e.km;n=b/f;l*=n}var a;var d;if(l>100000){a=this.topOutUnits;d=this.bottomOutUnits}else{a=this.topInUnits;d=this.bottomInUnits}var h=l/e[a];var k=l/e[d];var i=this.getBarLen(h);var g=this.getBarLen(k);h=i/e[o]*e[a];k=g/e[o]*e[d];var c=h/j/n;var m=k/j/n;if(this.eBottom.style.visibility=="visible"){this.eBottom.style.width=Math.round(m)+"px";this.eBottom.innerHTML=g+" "+d}if(this.eTop.style.visibility=="visible"){this.eTop.style.width=Math.round(c)+"px";this.eTop.innerHTML=i+" "+a}},CLASS_NAME:"OpenLayers.Control.ScaleLine"});Ext.namespace("gxp");gxp.ScaleOverlay=Ext.extend(Ext.Panel,{map:null,zoomLevelText:"Zoom level",initComponent:function(){gxp.ScaleOverlay.superclass.initComponent.call(this);this.cls="map-overlay";if(this.map){if(this.map instanceof GeoExt.MapPanel){this.map=this.map.map}this.bind(this.map)}this.on("beforedestroy",this.unbind,this)},addToMapPanel:function(a){this.on({afterrender:function(){this.bind(a.map)},scope:this})},stopMouseEvents:function(a){a.stopEvent()},removeFromMapPanel:function(a){var b=this.getEl();b.un("mousedown",this.stopMouseEvents,this);b.un("click",this.stopMouseEvents,this);this.unbind()},addScaleLine:function(){var a=new Ext.BoxComponent({autoEl:{tag:"div",cls:"olControlScaleLine overlay-element overlay-scaleline"}});this.on("afterlayout",function(){a.getEl().dom.style.position="relative";a.getEl().dom.style.display="inline";this.getEl().on("click",this.stopMouseEvents,this);this.getEl().on("mousedown",this.stopMouseEvents,this)},this);a.on("render",function(){var b=new OpenLayers.Control.ScaleLine({geodesic:true,div:a.getEl().dom});this.map.addControl(b);b.activate()},this);this.add(a)},handleZoomEnd:function(){var a=this.zoomStore.queryBy(function(b){return this.map.getZoom()==b.data.level},this);if(a.length>0){a=a.items[0];this.zoomSelector.setValue("1 : "+parseInt(a.data.scale,10))}else{if(!this.zoomSelector.rendered){return}this.zoomSelector.clearValue()}},addScaleCombo:function(){this.zoomStore=new GeoExt.data.ScaleStore({map:this.map});this.zoomSelector=new Ext.form.ComboBox({emptyText:this.zoomLevelText,tpl:'<tpl for="."><div class="x-combo-list-item">1 : {[parseInt(values.scale)]}</div></tpl>',editable:false,triggerAction:"all",mode:"local",store:this.zoomStore,width:110});this.zoomSelector.on({click:this.stopMouseEvents,mousedown:this.stopMouseEvents,select:function(d,b,c){this.map.zoomTo(b.data.level)},scope:this});this.map.events.register("zoomend",this,this.handleZoomEnd);var a=new Ext.Panel({items:[this.zoomSelector],cls:"overlay-element overlay-scalechooser",border:false});this.add(a)},bind:function(a){this.map=a;this.addScaleLine();this.addScaleCombo();this.doLayout()},unbind:function(){if(this.map&&this.map.events){this.map.events.unregister("zoomend",this,this.handleZoomEnd)}this.zoomStore=null;this.zoomSelector=null}});Ext.reg("gxp_scaleoverlay",gxp.ScaleOverlay);Ext.namespace("gxp.plugins");gxp.plugins.Tool=Ext.extend(Ext.util.Observable,{ptype:"gxp_tool",autoActivate:true,actionTarget:"map.tbar",showButtonText:false,output:null,constructor:function(a){this.initialConfig=a||{};this.active=false;Ext.apply(this,a);if(!this.id){this.id=Ext.id()}this.output=[];this.addEvents("activate","deactivate");gxp.plugins.Tool.superclass.constructor.apply(this,arguments)},init:function(a){a.tools[this.id]=this;this.target=a;this.autoActivate&&this.activate();this.target.on("portalready",this.addActions,this)},activate:function(){if(this.active===false){this.active=true;this.fireEvent("activate",this);return true}},deactivate:function(){if(this.active===true){this.active=false;this.fireEvent("deactivate",this);return true}},getContainer:function(f){var b,d,a,e=f.split("."),c=e[0];if(c){if(c=="map"){b=this.target.mapPanel}else{b=Ext.getCmp(c)||this.target.portal[c];if(!b){throw new Error("Can't find component with id: "+c)}}}else{b=this.target.portal}d=e.length>1&&e[1];if(d){a={tbar:"getTopToolbar",bbar:"getBottomToolbar",fbar:"getFooterToolbar"}[d];if(a){b=b[a]()}else{b=b[d]}}return b},addActions:function(c){c=c||this.actions;if(!c||this.actionTarget===null){this.removeOutput();this.addOutput(this.outputConfig);return}var m=this.actionTarget instanceof Array?this.actionTarget:[this.actionTarget];var o=c instanceof Array?c:[c];var b,k,n,e,d,h,g,l=null;for(e=m.length-1;e>=0;--e){k=m[e];if(k){if(k instanceof Object){l=k.index;k=k.target}g=this.getContainer(k)}for(d=0,h=o.length;d<h;++d){if(!(o[d] instanceof Ext.Action||o[d] instanceof Ext.Component)){n=Ext.getCmp(o[d]);if(n){o[d]=n}if(typeof o[d]!="string"){if(d==this.defaultAction){o[d].pressed=true}o[d]=new Ext.Action(o[d])}}b=o[d];if(d==this.defaultAction&&b instanceof GeoExt.Action){b.isDisabled()?b.activateOnEnable=true:b.control.activate()}if(g){if(this.showButtonText){b.setText(b.initialConfig.buttonText)}if(g instanceof Ext.menu.Menu){b=Ext.apply(new Ext.menu.CheckItem(b),{text:b.initialConfig.menuText,group:b.initialConfig.toggleGroup,groupClass:null})}else{if(!(g instanceof Ext.Toolbar)){b=new Ext.Button(b)}}var f=(l===null)?g.add(b):g.insert(l,b);b=b instanceof Ext.Button?b:f;if(l!==null){l+=1}if(this.outputAction!=null&&d==this.outputAction){var n;b.on("click",function(){if(n){this.outputTarget?n.show():n.ownerCt.ownerCt.show()}else{n=this.addOutput()}},this)}}}if(g){g.isVisible()?g.doLayout():g instanceof Ext.menu.Menu||g.show()}}this.actions=o;return this.actions},addOutput:function(c){if(!c&&!this.outputConfig){return}c=c||{};var f=this.outputTarget;var a;if(f){a=this.getContainer(f);if(!(c instanceof Ext.Component)){Ext.apply(c,this.outputConfig)}}else{var d=this.outputConfig||{};a=new Ext.Window(Ext.apply({hideBorders:true,shadow:false,closeAction:"hide",autoHeight:!d.height,layout:d.height?"fit":undefined,items:[{defaults:Ext.applyIf({autoHeight:!d.height&&!(d.defaults&&d.defaults.height)},d.defaults)}]},d)).show().items.get(0)}if(a){var b=a.add(c);b.on("removed",function(g){this.output.remove(g)},this,{single:true});if(b instanceof Ext.Window){b.show()}else{a.doLayout()}this.output.push(b);return b}else{var e=this.ptype;if(window.console){console.error("Failed to create output for plugin with ptype: "+e)}}},removeOutput:function(){var b;for(var a=this.output.length-1;a>=0;--a){b=this.output[a];if(!this.outputTarget){b.findParentBy(function(c){return c instanceof Ext.Window}).close()}else{if(b.ownerCt){b.ownerCt.remove(b);if(b.ownerCt instanceof Ext.Window){b.ownerCt[b.ownerCt.closeAction]()}}else{b.remove()}}}this.output=[]},getState:function(){return Ext.apply({},this.initialConfig)}});Ext.preg(gxp.plugins.Tool.prototype.ptype,gxp.plugins.Tool);Ext.namespace("gxp.data");gxp.data.WFSProtocolProxy=Ext.extend(GeoExt.data.ProtocolProxy,{setFilter:function(a){this.protocol.filter=a;this.protocol.options.filter=a},constructor:function(a){Ext.applyIf(a,{version:"1.1.0"});if(!(this.protocol&&this.protocol instanceof OpenLayers.Protocol)){a.protocol=new OpenLayers.Protocol.WFS(Ext.apply({version:a.version,srsName:a.srsName,url:a.url,featureType:a.featureType,featureNS:a.featureNS,geometryName:a.geometryName,schema:a.schema,filter:a.filter,maxFeatures:a.maxFeatures,multi:a.multi},a.protocol))}gxp.data.WFSProtocolProxy.superclass.constructor.apply(this,arguments)},doRequest:function(e,c,d,f,g,h,i){delete d.xaction;if(e===Ext.data.Api.actions.read){this.load(d,f,g,h,i)}else{if(!(c instanceof Array)){c=[c]}var b=new Array(c.length),k;Ext.each(c,function(m,l){b[l]=m.getFeature();k=b[l];k.modified=Ext.apply(k.modified||{},{attributes:Ext.apply((k.modified&&k.modified.attributes)||{},m.modified)})},this);var a={action:e,records:c,callback:g,scope:h};var j={callback:function(l){this.onProtocolCommit(l,a)},scope:this};Ext.applyIf(j,d);this.protocol.commit(b,j)}},onProtocolCommit:function(g,c){if(g.success()){var d=g.reqFeatures;var b,u;var e=[];var t=g.insertIds||[];var m,r,k=0;for(m=0,r=d.length;m<r;++m){u=d[m];b=u.state;if(b){if(b==OpenLayers.State.DELETE){e.push(u)}else{if(b==OpenLayers.State.INSERT){u.fid=t[k];++k}else{if(u.modified){u.modified={}}}}u.state=null}}for(m=0,r=e.length;m<r;++m){u=e[m];u.layer&&u.layer.destroyFeatures([u])}r=d.length;var l=new Array(r);var q;for(m=0;m<r;++m){q=d[m];l[m]={id:q.id,feature:q,state:null};var n=c.records[m].fields;for(var s in q.attributes){if(n.containsKey(s)){l[m][s]=q.attributes[s]}}}c.callback.call(c.scope,l,g.priv,true)}else{var h=g.priv;if(h.status>=200&&h.status<300){this.fireEvent("exception",this,"remote",c.action,c,g.error,c.records)}else{this.fireEvent("exception",this,"response",c.action,c,h)}c.callback.call(c.scope,[],h,false)}}});Ext.namespace("gxp.data");gxp.data.WFSFeatureStore=Ext.extend(GeoExt.data.FeatureStore,{setOgcFilter:function(a){this.proxy.setFilter(a)},constructor:function(a){if(!(a.proxy&&a.proxy instanceof GeoExt.data.ProtocolProxy)){a.proxy=new gxp.data.WFSProtocolProxy(Ext.apply({srsName:a.srsName,url:a.url,featureType:a.featureType,featureNS:a.featureNS,geometryName:a.geometryName,schema:a.schema,filter:a.ogcFilter,maxFeatures:a.maxFeatures,multi:a.multi},a.proxy))}if(!a.writer){a.writer=new Ext.data.DataWriter({write:Ext.emptyFn})}gxp.data.WFSFeatureStore.superclass.constructor.apply(this,arguments);this.reader.extractValues=(function(d,b,c){var e=this.readRecords([d.feature]);return e.records[0].data}).createDelegate(this.reader);this.reader.meta.idProperty="id";this.reader.getId=function(b){return b.id}}});Ext.namespace("gxp.plugins");gxp.plugins.FeatureManager=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_featuremanager",maxFeatures:100,paging:true,pagingType:null,autoZoomPage:false,autoSetLayer:true,autoLoadFeatures:false,layerRecord:null,featureStore:null,hitCountProtocol:null,featureLayer:null,schema:null,geometryType:null,toolsShowingLayer:null,selectStyle:null,style:null,pages:null,page:null,numberOfFeatures:null,numPages:null,pageIndex:null,constructor:function(a){this.addEvents("beforequery","query","beforelayerchange","layerchange","beforesetpage","setpage","beforeclearfeatures","clearfeatures","beforesave","exception");if(a&&!a.pagingType){this.pagingType=gxp.plugins.FeatureManager.QUADTREE_PAGING}if(a&&a.layer){this.autoSetLayer=false}gxp.plugins.FeatureManager.superclass.constructor.apply(this,arguments)},init:function(a){gxp.plugins.FeatureManager.superclass.init.apply(this,arguments);this.toolsShowingLayer={};this.style={all:new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:this.initialConfig.symbolizer||{Point:{pointRadius:4,graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:4,strokeOpacity:1,strokeColor:"#ff9933"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#ff6633",fillColor:"white",fillOpacity:0.3}}})]}),selected:new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{display:"none"}})]})};this.featureLayer=new OpenLayers.Layer.Vector(this.id,{displayInLayerSwitcher:false,visibility:false,styleMap:new OpenLayers.StyleMap({select:Ext.applyIf(Ext.apply({display:""},this.selectStyle),OpenLayers.Feature.Vector.style.select),vertex:this.style.all},{extendDefault:false})});this.target.on({ready:function(){this.target.mapPanel.map.addLayer(this.featureLayer)},scope:this});this.on({beforedestroy:function(){this.target.mapPanel.map.removeLayer(this.featureLayer)},scope:this})},activate:function(){if(gxp.plugins.FeatureManager.superclass.activate.apply(this,arguments)){if(this.autoSetLayer){this.target.on("beforelayerselectionchange",this.setLayer,this)}if(this.layer){var a=Ext.apply({},this.layer);this.target.createLayerRecord(a,this.setLayer,this)}this.on("layerchange",this.setSchema,this);return true}},deactivate:function(){if(gxp.plugins.FeatureManager.superclass.deactivate.apply(this,arguments)){if(this.autoSetLayer){this.target.un("beforelayerselectionchange",this.setLayer,this)}this.un("layerchange",this.setSchema,this);this.setLayer();return true}},getPageExtent:function(){if(this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING){return this.page.extent}else{return this.featureStore.layer.getDataExtent()}},setLayer:function(a){var b=this.fireEvent("beforelayerchange",this,a);if(b!==false){if(a){this.featureLayer.projection=a.getLayer().projection}if(a!==this.layerRecord){this.clearFeatureStore();this.layerRecord=a;if(a){this.autoLoadFeatures===true?this.loadFeatures():this.setFeatureStore()}else{this.fireEvent("layerchange",this,null)}}}return b},setSchema:function(c,a,b){this.schema=b},showLayer:function(b,a){this.toolsShowingLayer[b]=a||"all";this.setLayerDisplay()},hideLayer:function(a){delete this.toolsShowingLayer[a];this.setLayerDisplay()},setLayerDisplay:function(){var a=this.visible();var c=this.target.mapPanel.map;if(a){var b=this.style[a];if(b!==this.featureLayer.styleMap.styles["default"]){this.featureLayer.styleMap.styles["default"]=b;this.featureLayer.redraw()}this.featureLayer.setVisibility(true);c.events.on({addlayer:this.raiseLayer,scope:this})}else{if(this.featureLayer.map){this.featureLayer.setVisibility(false);c.events.un({addlayer:this.raiseLayer,scope:this})}}},visible:function(){var a=false;for(var b in this.toolsShowingLayer){if(a!="all"){a=this.toolsShowingLayer[b]}}return a},raiseLayer:function(){var a=this.featureLayer&&this.featureLayer.map;if(a){a.setLayerIndex(this.featureLayer,a.layers.length)}},loadFeatures:function(b,d,a){if(this.fireEvent("beforequery",this,b,d,a)!==false){this.filter=b;this.pages=null;if(d){var c=this;c._activeQuery&&c.un("query",c._activeQuery);this.on("query",c._activeQuery=function(g,f){delete c._activeQuery;this.un("query",arguments.callee,this);var e=f.getCount();if(f.getCount()==0){d.call(a,[])}else{this.featureLayer.events.register("featuresadded",this,function(h){this.featureLayer.events.unregister("featuresadded",this,arguments.callee);d.call(a,h.features)})}},this,{single:true})}if(!this.featureStore){this.paging&&this.on("layerchange",function(e,g,f){if(f){this.un("layerchange",arguments.callee,this);this.setPage()}},this);this.setFeatureStore(b,!this.paging)}else{this.featureStore.setOgcFilter(b);if(this.paging){this.setPage()}else{this.featureStore.load()}}}},clearFeatures:function(){var a=this.featureStore;if(a){if(this.fireEvent("beforeclearfeatures",this)!==false){a.removeAll();this.fireEvent("clearfeatures",this);var b=a.proxy;b.abortRequest();if(b.protocol.response){b.protocol.response.abort()}}}},getProjection:function(b){var a=this.target.mapPanel.map.getProjectionObject();var c=b.getLayer().projection;if(c&&c.equals(a)){a=c}return a},setFeatureStore:function(c,b){var a=this.layerRecord;var d=this.target.getSource(a);if(d&&d instanceof gxp.plugins.WMSSource){d.getSchema(a,function(i){if(i===false){this.clearFeatureStore()}else{var f=[],j;var e=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;var h={"xsd:boolean":"boolean","xsd:int":"int","xsd:integer":"int","xsd:short":"int","xsd:long":"int","xsd:date":"date","xsd:string":"string","xsd:float":"float","xsd:double":"float"};i.each(function(m){var k=e.exec(m.get("type"));if(k){j=m.get("name");this.geometryType=k[1]}else{var l=h[m.get("type")];var n={name:m.get("name"),type:h[l]};if(l=="date"){n.dateFormat="Y-m-d\\Z"}f.push(n)}},this);var g={srsName:this.getProjection(a).getCode(),url:i.url,featureType:i.reader.raw.featureTypes[0].typeName,featureNS:i.reader.raw.targetNamespace,geometryName:j};this.hitCountProtocol=new OpenLayers.Protocol.WFS(Ext.apply({version:"1.1.0",readOptions:{output:"object"},resultType:"hits",filter:c},g));this.featureStore=new gxp.data.WFSFeatureStore(Ext.apply({fields:f,proxy:{protocol:{outputFormat:this.format,multi:this.multi}},maxFeatures:this.maxFeatures,layer:this.featureLayer,ogcFilter:c,autoLoad:b,autoSave:false,listeners:{beforewrite:function(l,n,k,m){this.fireEvent("beforesave",this,l,m.params)},write:function(m,o,k,n,l){this.redrawMatchingLayers(a)},load:function(l,k,m){this.fireEvent("query",this,l,this.filter)},scope:this}},g))}this.fireEvent("layerchange",this,a,i)},this)}else{this.clearFeatureStore();this.fireEvent("layerchange",this,a,false)}},redrawMatchingLayers:function(a){var b=a.get("name");var c=a.get("source");this.target.mapPanel.layers.each(function(d){if(d.get("source")===c&&d.get("name")===b){d.getLayer().redraw(true)}})},clearFeatureStore:function(){if(this.featureStore){this.featureStore.removeAll();this.featureStore.unbind();this.featureStore.destroy();this.numberOfFeatures=null;this.featureStore=null;this.geometryType=null}},processPage:function(f,b,j,k){b=b||{};var e=b.lonLat?null:b.index;var d=b.next;var a=this.pages;var c=this.pages.indexOf(f);this.setPageFilter(f);var g=d?c==(a.indexOf(d)||a.length)-1:true;var h=b.lonLat?f.extent.containsLonLat(b.lonLat):true;if(h&&f.numFeatures&&f.numFeatures<=this.maxFeatures){j.call(this,f)}else{if(h&&(c==e||g)){this.hitCountProtocol.read({callback:function(l){var n=e,m=b.lonLat;if(d){n=(a.indexOf(d)||a.length)-1}if(!n&&m&&f.extent.containsLonLat(m)){n=a.indexOf(f)}f.numFeatures=l.numberOfFeatures;if(this.page){return}if(f.numFeatures>this.maxFeatures){this.createLeaf(f,Ext.applyIf({index:n,next:d},b),j,k)}else{if(f.numFeatures==0&&a.length>1){a.remove(f);b.allowEmpty===false&&this.setPage({index:e%this.pages.length,allowEmpty:false})}else{if(this.pages.indexOf(f)==n){j.call(this,f)}}}},scope:this})}}},createLeaf:function(k,d,n,q){d=d||{};var h=this.layerRecord.getLayer();var e=this.pages.indexOf(k);this.pages.remove(k);var s=k.extent;var c=s.getCenterLonLat();var f=[s.left,c.lon,s.left,c.lon];var m=[c.lat,c.lat,s.bottom,s.bottom];var a=[c.lon,s.right,c.lon,s.right];var o=[s.top,s.top,c.lat,c.lat];var g,j;for(g=3;g>=0;--g){j={extent:new OpenLayers.Bounds(f[g],m[g],a[g],o[g])};this.pages.splice(e,0,j);this.processPage(j,d,n,q)}},getPagingExtent:function(a){var b=this.layerRecord.getLayer();var d=this.getSpatialFilter();var c=d?d.value:this.target.mapPanel.map[a]();if(c&&b.maxExtent){if(c.containsBounds(b.maxExtent)){c=b.maxExtent}}return c},getSpatialFilter:function(){var b;if(this.filter instanceof OpenLayers.Filter.Spatial&&this.filter.type===OpenLayers.Filter.Spatial.BBOX){b=this.filter}else{if(this.filter instanceof OpenLayers.Filter.Logical&&this.filter.type===OpenLayers.Filter.Logical.AND){for(var c,a=this.filter.filters.length-1;a>=0;--a){c=this.filter.filters[a];if(c instanceof OpenLayers.Filter.Spatial&&c.type===OpenLayers.Filter.Spatial.BBOX){b=c;break}}}}return b},setPageFilter:function(c){var a;if(c.extent){var b=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:this.featureStore.geometryName,value:c.extent});a=this.filter?new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[this.filter,b]}):b}else{a=this.filter}this.featureStore.setOgcFilter(a);this.hitCountProtocol.filter=a;this.hitCountProtocol.options.filter=a;return a},nextPage:function(d,b){var a;if(this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING){var c=this.page;this.page=null;a=(this.pages.indexOf(c)+1)%this.pages.length}else{a=this.pageIndex+1%this.numPages}this.setPage({index:a,allowEmpty:false},d,b)},previousPage:function(c,b){var a;if(this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING){a=this.pages.indexOf(this.page)-1;if(a<0){a=this.pages.length-1}}else{a=this.pageIndex-1;if(a<0){a=this.numPages-1}}this.setPage({index:a,allowEmpty:false,next:this.page},c)},setPage:function(a,g,j){if(this.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING){if(this.filter instanceof OpenLayers.Filter.FeatureId){this.featureStore.load({callback:function(){g&&g.call(j)}});return}if(this.fireEvent("beforesetpage",this,a,g,j)!==false){if(!a){var k=this.getPagingExtent("getExtent");var d=new OpenLayers.LonLat(k.left,k.top);var h=this.target.mapPanel.map.getMaxExtent();if(!h.containsLonLat(d,true)){d=new OpenLayers.LonLat(h.left,h.top)}a={lonLat:d,allowEmpty:false}}a.index=a.index||0;if(a.index=="last"){a.index=this.pages.length-1;a.next=this.pages[0]}this.page=null;if(!this.pages){var c=this.layerRecord.getLayer();var e=this.getPagingExtent("getMaxExtent");this.pages=[{extent:e}];a.index=0}else{if(a.lonLat){for(var b=this.pages.length-1;b>=0;--b){if(this.pages[b].extent.containsLonLat(a.lonLat)){a.index=b;break}}}}this.processPage(this.pages[a.index],a,function(l){var m=this.target.mapPanel.map;this.page=l;this.setPageFilter(l);if(this.autoZoomPage&&!m.getExtent().containsLonLat(l.extent.getCenterLonLat())){m.zoomToExtent(l.extent)}var i=this.pages.indexOf(this.page);this.fireEvent("setpage",this,a,g,j,i,this.pages.length);this.featureStore.load({callback:function(){g&&g.call(j,l)}})},this)}}else{if(this.fireEvent("beforesetpage",this,a,g,j)!==false){if(!a){this.hitCountProtocol.read({filter:this.filter,callback:function(i){this.numberOfFeatures=i.numberOfFeatures;this.numPages=Math.ceil(this.numberOfFeatures/this.maxFeatures);this.pageIndex=0;this.fireEvent("setpage",this,a,g,j,this.pageIndex,this.numPages);this.featureStore.load({output:"object",callback:function(){g&&g.call(j)}})},scope:this})}else{if(a.index!=null){if(a.index==="last"){this.pageIndex=this.numPages-1}else{if(a.index==="first"){this.pageIndex=0}else{this.pageIndex=a.index}}var f=this.pageIndex*this.maxFeatures;this.fireEvent("setpage",this,a,g,j,this.pageIndex,this.numPages);this.featureStore.load({startIndex:f,callback:function(){g&&g.call(j)}})}}}}}});gxp.plugins.FeatureManager.QUADTREE_PAGING=0;gxp.plugins.FeatureManager.WFS_PAGING=1;Ext.preg(gxp.plugins.FeatureManager.prototype.ptype,gxp.plugins.FeatureManager);OpenLayers.Handler.Feature=OpenLayers.Class(OpenLayers.Handler,{EVENTMAP:{click:{"in":"click",out:"clickout"},mousemove:{"in":"over",out:"out"},dblclick:{"in":"dblclick",out:null},mousedown:{"in":null,out:null},mouseup:{"in":null,out:null},touchstart:{"in":"click",out:"clickout"}},feature:null,lastFeature:null,down:null,up:null,clickTolerance:4,geometryTypes:null,stopClick:true,stopDown:true,stopUp:false,initialize:function(d,b,c,a){OpenLayers.Handler.prototype.initialize.apply(this,[d,c,a]);this.layer=b},touchstart:function(a){this.startTouch();return OpenLayers.Event.isMultiTouch(a)?true:this.mousedown(a)},touchmove:function(a){OpenLayers.Event.preventDefault(a)},mousedown:function(a){if(OpenLayers.Event.isLeftClick(a)||OpenLayers.Event.isSingleTouch(a)){this.down=a.xy}return this.handle(a)?!this.stopDown:true},mouseup:function(a){this.up=a.xy;return this.handle(a)?!this.stopUp:true},click:function(a){return this.handle(a)?!this.stopClick:true},mousemove:function(a){if(!this.callbacks.over&&!this.callbacks.out){return true}this.handle(a);return true},dblclick:function(a){return !this.handle(a)},geometryTypeMatches:function(a){return this.geometryTypes==null||OpenLayers.Util.indexOf(this.geometryTypes,a.geometry.CLASS_NAME)>-1},handle:function(a){if(this.feature&&!this.feature.layer){this.feature=null}var c=a.type;var f=false;var e=!!(this.feature);var d=(c=="click"||c=="dblclick"||c=="touchstart");this.feature=this.layer.getFeatureFromEvent(a);if(this.feature&&!this.feature.layer){this.feature=null}if(this.lastFeature&&!this.lastFeature.layer){this.lastFeature=null}if(this.feature){if(c==="touchstart"){OpenLayers.Event.preventDefault(a)}var b=(this.feature!=this.lastFeature);if(this.geometryTypeMatches(this.feature)){if(e&&b){if(this.lastFeature){this.triggerCallback(c,"out",[this.lastFeature])}this.triggerCallback(c,"in",[this.feature])}else{if(!e||d){this.triggerCallback(c,"in",[this.feature])}}this.lastFeature=this.feature;f=true}else{if(this.lastFeature&&(e&&b||d)){this.triggerCallback(c,"out",[this.lastFeature])}this.feature=null}}else{if(this.lastFeature&&(e||d)){this.triggerCallback(c,"out",[this.lastFeature])}}return f},triggerCallback:function(d,e,b){var c=this.EVENTMAP[d][e];if(c){if(d=="click"&&this.up&&this.down){var a=Math.sqrt(Math.pow(this.up.x-this.down.x,2)+Math.pow(this.up.y-this.down.y,2));if(a<=this.clickTolerance){this.callback(c,b)}this.up=this.down=null}else{this.callback(c,b)}}},activate:function(){var a=false;if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.moveLayerToTop();this.map.events.on({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});a=true}return a},deactivate:function(){var a=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.moveLayerBack();this.feature=null;this.lastFeature=null;this.down=null;this.up=null;this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});a=true}return a},handleMapEvents:function(a){if(a.type=="removelayer"||a.property=="order"){this.moveLayerToTop()}},moveLayerToTop:function(){var a=Math.max(this.map.Z_INDEX_BASE.Feature-1,this.layer.getZIndex())+1;this.layer.setZIndex(a)},moveLayerBack:function(){var a=this.layer.getZIndex()-1;if(a>=this.map.Z_INDEX_BASE.Feature){this.layer.setZIndex(a)}else{this.map.setLayerZIndex(this.layer,this.map.getLayerIndex(this.layer))}},CLASS_NAME:"OpenLayers.Handler.Feature"});OpenLayers.Layer.Vector.RootContainer=OpenLayers.Class(OpenLayers.Layer.Vector,{displayInLayerSwitcher:false,layers:null,display:function(){},getFeatureFromEvent:function(a){var d=this.layers;var c;for(var b=0;b<d.length;b++){c=d[b].getFeatureFromEvent(a);if(c){return c}}},setMap:function(a){OpenLayers.Layer.Vector.prototype.setMap.apply(this,arguments);this.collectRoots();a.events.register("changelayer",this,this.handleChangeLayer)},removeMap:function(a){a.events.unregister("changelayer",this,this.handleChangeLayer);this.resetRoots();OpenLayers.Layer.Vector.prototype.removeMap.apply(this,arguments)},collectRoots:function(){var b;for(var a=0;a<this.map.layers.length;++a){b=this.map.layers[a];if(OpenLayers.Util.indexOf(this.layers,b)!=-1){b.renderer.moveRoot(this.renderer)}}},resetRoots:function(){var b;for(var a=0;a<this.layers.length;++a){b=this.layers[a];if(this.renderer&&b.renderer.getRenderLayerId()==this.id){this.renderer.moveRoot(b.renderer)}}},handleChangeLayer:function(a){var b=a.layer;if(a.property=="order"&&OpenLayers.Util.indexOf(this.layers,b)!=-1){this.resetRoots();this.collectRoots()}},CLASS_NAME:"OpenLayers.Layer.Vector.RootContainer"});OpenLayers.Control.SelectFeature=OpenLayers.Class(OpenLayers.Control,{multipleKey:null,toggleKey:null,multiple:false,clickout:true,toggle:false,hover:false,highlightOnly:false,box:false,onBeforeSelect:function(){},onSelect:function(){},onUnselect:function(){},scope:null,geometryTypes:null,layer:null,layers:null,callbacks:null,selectStyle:null,renderIntent:"select",handlers:null,initialize:function(c,a){OpenLayers.Control.prototype.initialize.apply(this,[a]);if(this.scope===null){this.scope=this}this.initLayer(c);var b={click:this.clickFeature,clickout:this.clickoutFeature};if(this.hover){b.over=this.overFeature;b.out=this.outFeature}this.callbacks=OpenLayers.Util.extend(b,this.callbacks);this.handlers={feature:new OpenLayers.Handler.Feature(this,this.layer,this.callbacks,{geometryTypes:this.geometryTypes})};if(this.box){this.handlers.box=new OpenLayers.Handler.Box(this,{done:this.selectBox},{boxDivClassName:"olHandlerBoxSelectFeature"})}},initLayer:function(a){if(OpenLayers.Util.isArray(a)){this.layers=a;this.layer=new OpenLayers.Layer.Vector.RootContainer(this.id+"_container",{layers:a})}else{this.layer=a}},destroy:function(){if(this.active&&this.layers){this.map.removeLayer(this.layer)}OpenLayers.Control.prototype.destroy.apply(this,arguments);if(this.layers){this.layer.destroy()}},activate:function(){if(!this.active){if(this.layers){this.map.addLayer(this.layer)}this.handlers.feature.activate();if(this.box&&this.handlers.box){this.handlers.box.activate()}}return OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){if(this.active){this.handlers.feature.deactivate();if(this.handlers.box){this.handlers.box.deactivate()}if(this.layers){this.map.removeLayer(this.layer)}}return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},unselectAll:function(b){var f=this.layers||[this.layer],d,c,a,e;for(a=0;a<f.length;++a){d=f[a];e=0;if(d.selectedFeatures!=null){while(d.selectedFeatures.length>e){c=d.selectedFeatures[e];if(!b||b.except!=c){this.unselect(c)}else{++e}}}}},clickFeature:function(a){if(!this.hover){var b=(OpenLayers.Util.indexOf(a.layer.selectedFeatures,a)>-1);if(b){if(this.toggleSelect()){this.unselect(a)}else{if(!this.multipleSelect()){this.unselectAll({except:a})}}}else{if(!this.multipleSelect()){this.unselectAll({except:a})}this.select(a)}}},multipleSelect:function(){return this.multiple||(this.handlers.feature.evt&&this.handlers.feature.evt[this.multipleKey])},toggleSelect:function(){return this.toggle||(this.handlers.feature.evt&&this.handlers.feature.evt[this.toggleKey])},clickoutFeature:function(a){if(!this.hover&&this.clickout){this.unselectAll()}},overFeature:function(b){var a=b.layer;if(this.hover){if(this.highlightOnly){this.highlight(b)}else{if(OpenLayers.Util.indexOf(a.selectedFeatures,b)==-1){this.select(b)}}}},outFeature:function(a){if(this.hover){if(this.highlightOnly){if(a._lastHighlighter==this.id){if(a._prevHighlighter&&a._prevHighlighter!=this.id){delete a._lastHighlighter;var b=this.map.getControl(a._prevHighlighter);if(b){b.highlight(a)}}else{this.unhighlight(a)}}}else{this.unselect(a)}}},highlight:function(c){var b=c.layer;var a=this.events.triggerEvent("beforefeaturehighlighted",{feature:c});if(a!==false){c._prevHighlighter=c._lastHighlighter;c._lastHighlighter=this.id;var d=this.selectStyle||this.renderIntent;b.drawFeature(c,d);this.events.triggerEvent("featurehighlighted",{feature:c})}},unhighlight:function(b){var a=b.layer;if(b._prevHighlighter==undefined){delete b._lastHighlighter}else{if(b._prevHighlighter==this.id){delete b._prevHighlighter}else{b._lastHighlighter=b._prevHighlighter;delete b._prevHighlighter}}a.drawFeature(b,b.style||b.layer.style||"default");this.events.triggerEvent("featureunhighlighted",{feature:b})},select:function(c){var a=this.onBeforeSelect.call(this.scope,c);var b=c.layer;if(a!==false){a=b.events.triggerEvent("beforefeatureselected",{feature:c});if(a!==false){b.selectedFeatures.push(c);this.highlight(c);if(!this.handlers.feature.lastFeature){this.handlers.feature.lastFeature=b.selectedFeatures[0]}b.events.triggerEvent("featureselected",{feature:c});this.onSelect.call(this.scope,c)}}},unselect:function(b){var a=b.layer;this.unhighlight(b);OpenLayers.Util.removeItem(a.selectedFeatures,b);a.events.triggerEvent("featureunselected",{feature:b});this.onUnselect.call(this.scope,b)},selectBox:function(e){if(e instanceof OpenLayers.Bounds){var h=this.map.getLonLatFromPixel({x:e.left,y:e.bottom});var k=this.map.getLonLatFromPixel({x:e.right,y:e.top});var a=new OpenLayers.Bounds(h.lon,h.lat,k.lon,k.lat);if(!this.multipleSelect()){this.unselectAll()}var j=this.multiple;this.multiple=true;var d=this.layers||[this.layer];this.events.triggerEvent("boxselectionstart",{layers:d});var f;for(var b=0;b<d.length;++b){f=d[b];for(var c=0,g=f.features.length;c<g;++c){var m=f.features[c];if(!m.getVisibility()){continue}if(this.geometryTypes==null||OpenLayers.Util.indexOf(this.geometryTypes,m.geometry.CLASS_NAME)>-1){if(a.toGeometry().intersects(m.geometry)){if(OpenLayers.Util.indexOf(f.selectedFeatures,m)==-1){this.select(m)}}}}}this.multiple=j;this.events.triggerEvent("boxselectionend",{layers:d})}},setMap:function(a){this.handlers.feature.setMap(a);if(this.box){this.handlers.box.setMap(a)}OpenLayers.Control.prototype.setMap.apply(this,arguments)},setLayer:function(b){var a=this.active;this.unselectAll();this.deactivate();if(this.layers){this.layer.destroy();this.layers=null}this.initLayer(b);this.handlers.feature.layer=this.layer;if(a){this.activate()}},CLASS_NAME:"OpenLayers.Control.SelectFeature"});OpenLayers.Format.WMSGetFeatureInfo=OpenLayers.Class(OpenLayers.Format.XML,{layerIdentifier:"_layer",featureIdentifier:"_feature",regExes:{trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g)},gmlFormat:null,read:function(e){var a;if(typeof e=="string"){e=OpenLayers.Format.XML.prototype.read.apply(this,[e])}var b=e.documentElement;if(b){var c=this;var d=this["read_"+b.nodeName];if(d){a=d.call(this,b)}else{a=new OpenLayers.Format.GML((this.options?this.options:{})).read(e)}}else{a=e}return a},read_msGMLOutput:function(h){var e=[];var b=this.getSiblingNodesByTagCriteria(h,this.layerIdentifier);if(b){for(var k=0,n=b.length;k<n;++k){var c=b[k];var l=c.nodeName;if(c.prefix){l=l.split(":")[1]}var l=l.replace(this.layerIdentifier,"");var m=this.getSiblingNodesByTagCriteria(c,this.featureIdentifier);if(m){for(var g=0;g<m.length;g++){var a=m[g];var d=this.parseGeometry(a);var f=this.parseAttributes(a);var o=new OpenLayers.Feature.Vector(d.geometry,f,null);o.bounds=d.bounds;o.type=l;e.push(o)}}}}return e},read_FeatureInfoResponse:function(h){var e=[];var l=this.getElementsByTagNameNS(h,"*","FIELDS");for(var k=0,m=l.length;k<m;k++){var b=l[k];var n=null;var g={};var f;var o=b.attributes.length;if(o>0){for(f=0;f<o;f++){var c=b.attributes[f];g[c.nodeName]=c.nodeValue}}else{var a=b.childNodes;for(f=0,o=a.length;f<o;++f){var d=a[f];if(d.nodeType!=3){g[d.getAttribute("name")]=d.getAttribute("value")}}}e.push(new OpenLayers.Feature.Vector(n,g,null))}return e},getSiblingNodesByTagCriteria:function(f,i){var a=[];var c,e,d,g,b;if(f&&f.hasChildNodes()){c=f.childNodes;d=c.length;for(var h=0;h<d;h++){b=c[h];while(b&&b.nodeType!=1){b=b.nextSibling;h++}e=(b?b.nodeName:"");if(e.length>0&&e.indexOf(i)>-1){a.push(b)}else{g=this.getSiblingNodesByTagCriteria(b,i);if(g.length>0){(a.length==0)?a=g:a.push(g)}}}}return a},parseAttributes:function(e){var f={};if(e.nodeType==1){var c=e.childNodes;var d=c.length;for(var g=0;g<d;++g){var b=c[g];if(b.nodeType==1){var k=b.childNodes;var a=(b.prefix)?b.nodeName.split(":")[1]:b.nodeName;if(k.length==0){f[a]=null}else{if(k.length==1){var j=k[0];if(j.nodeType==3||j.nodeType==4){var h=j.nodeValue.replace(this.regExes.trimSpace,"");f[a]=h}}}}}}return f},parseGeometry:function(c){if(!this.gmlFormat){this.gmlFormat=new OpenLayers.Format.GML()}var a=this.gmlFormat.parseFeature(c);var d,b=null;if(a){d=a.geometry&&a.geometry.clone();b=a.bounds&&a.bounds.clone();a.destroy()}return{geometry:d,bounds:b}},CLASS_NAME:"OpenLayers.Format.WMSGetFeatureInfo"});Ext.namespace("gxp.plugins");gxp.plugins.ClickableFeatures=Ext.extend(gxp.plugins.Tool,{featureManager:null,autoLoadFeature:false,autoLoadedFeature:null,toleranceParameters:["BUFFER","RADIUS"],constructor:function(a){if(a&&"autoLoadFeatures" in a){a.autoLoadFeature=a.autoLoadFeatures;delete a.autoLoadFeatures;if(window.console){console.warn("Deprecated config option 'autoLoadFeatures' for ptype: '"+a.ptype+"'. Use 'autoLoadFeature' instead.")}}gxp.plugins.ClickableFeatures.superclass.constructor.apply(this,[a])},noFeatureClick:function(j){if(!this.selectControl){this.selectControl=new OpenLayers.Control.SelectFeature(this.target.tools[this.featureManager].featureLayer,this.initialConfig.controlOptions)}var l=this.target.mapPanel.map.getLonLatFromPixel(j.xy);var n=this.target.tools[this.featureManager];var f=n.page;if(n.visible()=="all"&&n.paging&&f&&f.extent.containsLonLat(l)){return}var d=n.layerRecord&&n.layerRecord.getLayer();if(!d){return}var a=this.target.mapPanel.map;var m=a.getSize();var b=Ext.applyIf({REQUEST:"GetFeatureInfo",BBOX:a.getExtent().toBBOX(),WIDTH:m.w,HEIGHT:m.h,X:parseInt(j.xy.x),Y:parseInt(j.xy.y),QUERY_LAYERS:d.params.LAYERS,INFO_FORMAT:"application/vnd.ogc.gml",EXCEPTIONS:"application/vnd.ogc.se_xml",FEATURE_COUNT:1},d.params);if(typeof this.tolerance==="number"){for(var c=0,k=this.toleranceParameters.length;c<k;++c){b[this.toleranceParameters[c]]=this.tolerance}}var e=a.getProjectionObject();var g=d.projection;if(g&&g.equals(e)){e=g}if(parseFloat(d.params.VERSION)>=1.3){b.CRS=e.getCode()}else{b.SRS=e.getCode()}var h=new GeoExt.data.FeatureStore({fields:{},proxy:new GeoExt.data.ProtocolProxy({protocol:new OpenLayers.Protocol.HTTP({url:(typeof d.url==="string")?d.url:d.url[0],params:b,format:new OpenLayers.Format.WMSGetFeatureInfo()})}),autoLoad:true,listeners:{load:function(o,i){if(i.length>0){var u=i[0].get("fid");var t=new OpenLayers.Filter.FeatureId({fids:[u]});var r=function(){n.loadFeatures(t,function(v){if(v.length){this.autoLoadedFeature=v[0];this.select(v[0])}},this)}.createDelegate(this);var s=n.featureLayer.getFeatureByFid(u);if(s){this.select(s)}else{if(n.paging&&n.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING){var q=this.target.mapPanel.map.getLonLatFromPixel(j.xy);n.setPage({lonLat:q},function(){var v=n.featureLayer.getFeatureByFid(u);if(v){this.select(v)}else{if(this.autoLoadFeature===true){r()}}},this)}else{r()}}}},scope:this}})},select:function(a){this.selectControl.unselectAll();this.selectControl.select(a)}});Ext.namespace("gxp.plugins");gxp.plugins.SchemaAnnotations={getAnnotationsFromSchema:function(f){var b=null;var a=f.get("annotation");if(a!==undefined){b={};var g=GeoExt.Lang.locale.split("-").shift();var d,e;for(d=0,e=a.appinfo.length;d<e;++d){var c=Ext.decode(a.appinfo[d]);if(c.title&&c.title[g]){b.label=c.title[g];break}}for(d=0,e=a.documentation.length;d<e;++d){if(a.documentation[d].lang===g){b.helpText=a.documentation[d].textContent;break}}}return b}};Ext.namespace("gxp.plugins");gxp.plugins.FeatureEditorGrid=Ext.extend(Ext.grid.PropertyGrid,{ptype:"gxp_editorgrid",xtype:"gxp_editorgrid",feature:null,schema:null,fields:null,excludeFields:null,propertyNames:null,readOnly:null,border:false,initComponent:function(){if(!this.dateFormat){this.dateFormat=Ext.form.DateField.prototype.format}if(!this.timeFormat){this.timeFormat=Ext.form.TimeField.prototype.format}this.customRenderers=this.customRenderers||{};this.customEditors=this.customEditors||{};var e=this.feature,b;if(this.fields){b={};for(var d=0,f=this.fields.length;d<f;++d){b[this.fields[d]]=e.attributes[this.fields[d]]}}else{b=e.attributes}if(!this.excludeFields){this.excludeFields=[]}if(this.schema){var a=this.fields?this.fields.join(",").toUpperCase().split(","):[];this.schema.each(function(k){var j=k.get("type");if(j.match(/^[^:]*:?((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry))/)){return}var h=k.get("name");if(this.fields){if(a.indexOf(h.toUpperCase())==-1){this.excludeFields.push(h)}}var l=e.attributes[h];var o=GeoExt.form.recordToField(k);var n=this.getAnnotationsFromSchema(k);if(n&&n.label){this.propertyNames=this.propertyNames||{};this.propertyNames[h]=n.label}var i;if(typeof l=="string"){var m;switch(j.split(":").pop()){case"date":m=this.dateFormat;o.editable=false;break;case"dateTime":if(!m){m=this.dateFormat+" "+this.timeFormat;o.editable=true}o.format=m;i={startedit:function(r,s){if(!(s instanceof Date)){var q=Date.parseDate(s.replace(/Z$/,""),"c");if(q){this.setValue(q)}}}};this.customRenderers[h]=(function(){return function(r){var q=r;if(typeof r=="string"){q=Date.parseDate(r.replace(/Z$/,""),"c")}return q?q.format(m):r}})();break;case"boolean":i={startedit:function(q,r){this.setValue(Boolean(r))}};break;default:break}}this.customEditors[h]=new Ext.grid.GridEditor({field:Ext.create(o),listeners:i});b[h]=l},this);e.attributes=b}this.source=b;var g=this.excludeFields.length?this.excludeFields.join(",").toUpperCase().split(","):[];this.viewConfig={forceFit:true,getRowClass:function(h){if(g.indexOf(h.get("name").toUpperCase())!==-1){return"x-hide-nosize"}}};this.listeners={beforeedit:function(){return this.featureEditor&&this.featureEditor.editing},propertychange:function(){if(this.featureEditor){this.featureEditor.setFeatureState(this.featureEditor.getDirtyState())}},scope:this};var c=Ext.data.Store.prototype.sort;Ext.data.Store.prototype.sort=function(){};gxp.plugins.FeatureEditorGrid.superclass.initComponent.apply(this,arguments);Ext.data.Store.prototype.sort=c;this.propStore.isEditableValue=function(){return true}},init:function(a){this.featureEditor=a;this.featureEditor.on("canceledit",this.onCancelEdit,this);this.featureEditor.add(this);this.featureEditor.doLayout()},destroy:function(){if(this.featureEditor){this.featureEditor.un("canceledit",this.onCancelEdit,this);this.featureEditor=null}gxp.plugins.FeatureEditorGrid.superclass.destroy.call(this)},onCancelEdit:function(a,b){if(b){this.setSource(b.attributes)}}});Ext.override(gxp.plugins.FeatureEditorGrid,gxp.plugins.SchemaAnnotations);Ext.preg(gxp.plugins.FeatureEditorGrid.prototype.ptype,gxp.plugins.FeatureEditorGrid);Ext.reg(gxp.plugins.FeatureEditorGrid.prototype.xtype,gxp.plugins.FeatureEditorGrid);OpenLayers.Handler.Keyboard=OpenLayers.Class(OpenLayers.Handler,{KEY_EVENTS:["keydown","keyup"],eventListener:null,observeElement:null,initialize:function(c,b,a){OpenLayers.Handler.prototype.initialize.apply(this,arguments);this.eventListener=OpenLayers.Function.bindAsEventListener(this.handleKeyEvent,this)},destroy:function(){this.deactivate();this.eventListener=null;OpenLayers.Handler.prototype.destroy.apply(this,arguments)},activate:function(){if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.observeElement=this.observeElement||document;for(var b=0,a=this.KEY_EVENTS.length;b<a;b++){OpenLayers.Event.observe(this.observeElement,this.KEY_EVENTS[b],this.eventListener)}return true}else{return false}},deactivate:function(){var c=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){for(var b=0,a=this.KEY_EVENTS.length;b<a;b++){OpenLayers.Event.stopObserving(this.observeElement,this.KEY_EVENTS[b],this.eventListener)}c=true}return c},handleKeyEvent:function(a){if(this.checkModifiers(a)){this.callback(a.type,[a])}},CLASS_NAME:"OpenLayers.Handler.Keyboard"});OpenLayers.Control.ModifyFeature=OpenLayers.Class(OpenLayers.Control,{documentDrag:false,geometryTypes:null,clickout:true,toggle:true,standalone:false,layer:null,feature:null,vertex:null,vertices:null,virtualVertices:null,handlers:null,deleteCodes:null,virtualStyle:null,vertexRenderIntent:null,mode:null,createVertices:true,modified:false,radiusHandle:null,dragHandle:null,onModificationStart:function(){},onModification:function(){},onModificationEnd:function(){},initialize:function(c,b){b=b||{};this.layer=c;this.vertices=[];this.virtualVertices=[];this.virtualStyle=OpenLayers.Util.extend({},this.layer.style||this.layer.styleMap.createSymbolizer(null,b.vertexRenderIntent));this.virtualStyle.fillOpacity=0.3;this.virtualStyle.strokeOpacity=0.3;this.deleteCodes=[46,68];this.mode=OpenLayers.Control.ModifyFeature.RESHAPE;OpenLayers.Control.prototype.initialize.apply(this,[b]);if(!(OpenLayers.Util.isArray(this.deleteCodes))){this.deleteCodes=[this.deleteCodes]}var d={down:function(f){this.vertex=null;var g=this.layer.getFeatureFromEvent(this.handlers.drag.evt);if(g){this.dragStart(g)}else{if(this.clickout){this._unselect=this.feature}}},move:function(f){delete this._unselect;if(this.vertex){this.dragVertex(this.vertex,f)}},up:function(){this.handlers.drag.stopDown=false;if(this._unselect){this.unselectFeature(this._unselect);delete this._unselect}},done:function(f){if(this.vertex){this.dragComplete(this.vertex)}}};var a={documentDrag:this.documentDrag,stopDown:false};var e={keydown:this.handleKeypress};this.handlers={keyboard:new OpenLayers.Handler.Keyboard(this,e),drag:new OpenLayers.Handler.Drag(this,d,a)}},destroy:function(){if(this.map){this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this})}this.layer=null;OpenLayers.Control.prototype.destroy.apply(this,[])},activate:function(){if(OpenLayers.Control.prototype.activate.apply(this,arguments)){this.moveLayerToTop();this.map.events.on({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});return this.handlers.keyboard.activate()&&this.handlers.drag.activate()}return false},deactivate:function(){var b=false;if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){this.moveLayerBack();this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});this.layer.removeFeatures(this.vertices,{silent:true});this.layer.removeFeatures(this.virtualVertices,{silent:true});this.vertices=[];this.handlers.drag.deactivate();this.handlers.keyboard.deactivate();var a=this.feature;if(a&&a.geometry&&a.layer){this.unselectFeature(a)}b=true}return b},beforeSelectFeature:function(a){return this.layer.events.triggerEvent("beforefeaturemodified",{feature:a})},selectFeature:function(b){if(this.feature===b||(this.geometryTypes&&OpenLayers.Util.indexOf(this.geometryTypes,b.geometry.CLASS_NAME)==-1)){return}if(this.beforeSelectFeature(b)!==false){if(this.feature){this.unselectFeature(this.feature)}this.feature=b;this.layer.selectedFeatures.push(b);this.layer.drawFeature(b,"select");this.modified=false;this.resetVertices();this.onModificationStart(this.feature)}var a=b.modified;if(b.geometry&&!(a&&a.geometry)){this._originalGeometry=b.geometry.clone()}},unselectFeature:function(a){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];this.layer.destroyFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[];if(this.dragHandle){this.layer.destroyFeatures([this.dragHandle],{silent:true});delete this.dragHandle}if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});delete this.radiusHandle}this.layer.drawFeature(this.feature,"default");this.feature=null;OpenLayers.Util.removeItem(this.layer.selectedFeatures,a);this.onModificationEnd(a);this.layer.events.triggerEvent("afterfeaturemodified",{feature:a,modified:this.modified});this.modified=false},dragStart:function(b){var a=b.geometry.CLASS_NAME=="OpenLayers.Geometry.Point";if(!this.standalone&&((!b._sketch&&a)||!b._sketch)){if(this.toggle&&this.feature===b){this._unselect=b}this.selectFeature(b)}if(b._sketch||a){this.vertex=b;this.handlers.drag.stopDown=true}},dragVertex:function(c,a){var d=this.map.getLonLatFromViewPortPx(a);var b=c.geometry;b.move(d.lon-b.x,d.lat-b.y);this.modified=true;if(this.feature.geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){this.layer.events.triggerEvent("vertexmodified",{vertex:c.geometry,feature:this.feature,pixel:a})}else{if(c._index){c.geometry.parent.addComponent(c.geometry,c._index);delete c._index;OpenLayers.Util.removeItem(this.virtualVertices,c);this.vertices.push(c)}else{if(c==this.dragHandle){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});this.radiusHandle=null}}else{if(c!==this.radiusHandle){this.layer.events.triggerEvent("vertexmodified",{vertex:c.geometry,feature:this.feature,pixel:a})}}}if(this.virtualVertices.length>0){this.layer.destroyFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[]}this.layer.drawFeature(this.feature,this.standalone?undefined:"select")}this.layer.drawFeature(c)},dragComplete:function(a){this.resetVertices();this.setFeatureState();this.onModification(this.feature);this.layer.events.triggerEvent("featuremodified",{feature:this.feature})},setFeatureState:function(){if(this.feature.state!=OpenLayers.State.INSERT&&this.feature.state!=OpenLayers.State.DELETE){this.feature.state=OpenLayers.State.UPDATE;if(this.modified&&this._originalGeometry){var a=this.feature;a.modified=OpenLayers.Util.extend(a.modified,{geometry:this._originalGeometry});delete this._originalGeometry}}},resetVertices:function(){if(this.vertices.length>0){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[]}if(this.virtualVertices.length>0){this.layer.removeFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[]}if(this.dragHandle){this.layer.destroyFeatures([this.dragHandle],{silent:true});this.dragHandle=null}if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});this.radiusHandle=null}if(this.feature&&this.feature.geometry.CLASS_NAME!="OpenLayers.Geometry.Point"){if((this.mode&OpenLayers.Control.ModifyFeature.DRAG)){this.collectDragHandle()}if((this.mode&(OpenLayers.Control.ModifyFeature.ROTATE|OpenLayers.Control.ModifyFeature.RESIZE))){this.collectRadiusHandle()}if(this.mode&OpenLayers.Control.ModifyFeature.RESHAPE){if(!(this.mode&OpenLayers.Control.ModifyFeature.RESIZE)){this.collectVertices()}}}},handleKeypress:function(a){var b=a.keyCode;if(this.feature&&OpenLayers.Util.indexOf(this.deleteCodes,b)!=-1){var c=this.layer.getFeatureFromEvent(this.handlers.drag.evt);if(c&&OpenLayers.Util.indexOf(this.vertices,c)!=-1&&!this.handlers.drag.dragging&&c.geometry.parent){c.geometry.parent.removeComponent(c.geometry);this.layer.events.triggerEvent("vertexremoved",{vertex:c.geometry,feature:this.feature,pixel:a.xy});this.layer.drawFeature(this.feature,this.standalone?undefined:"select");this.modified=true;this.resetVertices();this.setFeatureState();this.onModification(this.feature);this.layer.events.triggerEvent("featuremodified",{feature:this.feature})}}},collectVertices:function(){this.vertices=[];this.virtualVertices=[];var a=this;function b(h){var d,e,j,f;if(h.CLASS_NAME=="OpenLayers.Geometry.Point"){e=new OpenLayers.Feature.Vector(h);e._sketch=true;e.renderIntent=a.vertexRenderIntent;a.vertices.push(e)}else{var c=h.components.length;if(h.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){c-=1}for(d=0;d<c;++d){j=h.components[d];if(j.CLASS_NAME=="OpenLayers.Geometry.Point"){e=new OpenLayers.Feature.Vector(j);e._sketch=true;e.renderIntent=a.vertexRenderIntent;a.vertices.push(e)}else{b(j)}}if(a.createVertices&&h.CLASS_NAME!="OpenLayers.Geometry.MultiPoint"){for(d=0,f=h.components.length;d<f-1;++d){var m=h.components[d];var n=h.components[d+1];if(m.CLASS_NAME=="OpenLayers.Geometry.Point"&&n.CLASS_NAME=="OpenLayers.Geometry.Point"){var k=(m.x+n.x)/2;var g=(m.y+n.y)/2;var l=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(k,g),null,a.virtualStyle);l.geometry.parent=h;l._index=d+1;l._sketch=true;a.virtualVertices.push(l)}}}}}b.call(this,this.feature.geometry);this.layer.addFeatures(this.virtualVertices,{silent:true});this.layer.addFeatures(this.vertices,{silent:true})},collectDragHandle:function(){var d=this.feature.geometry;var a=d.getBounds().getCenterLonLat();var c=new OpenLayers.Geometry.Point(a.lon,a.lat);var b=new OpenLayers.Feature.Vector(c);c.move=function(e,f){OpenLayers.Geometry.Point.prototype.move.call(this,e,f);d.move(e,f)};b._sketch=true;this.dragHandle=b;this.dragHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.dragHandle],{silent:true})},collectRadiusHandle:function(){var h=this.feature.geometry;var a=h.getBounds();var b=a.getCenterLonLat();var i=new OpenLayers.Geometry.Point(b.lon,b.lat);var g=new OpenLayers.Geometry.Point(a.right,a.bottom);var f=new OpenLayers.Feature.Vector(g);var c=(this.mode&OpenLayers.Control.ModifyFeature.RESIZE);var e=(this.mode&OpenLayers.Control.ModifyFeature.RESHAPE);var d=(this.mode&OpenLayers.Control.ModifyFeature.ROTATE);g.move=function(u,t){OpenLayers.Geometry.Point.prototype.move.call(this,u,t);var v=this.x-i.x;var q=this.y-i.y;var w=v-u;var r=q-t;if(d){var k=Math.atan2(r,w);var j=Math.atan2(q,v);var n=j-k;n*=180/Math.PI;h.rotate(n,i)}if(c){var m,s;if(e){m=q/r;s=(v/w)/m}else{var o=Math.sqrt((w*w)+(r*r));var l=Math.sqrt((v*v)+(q*q));m=l/o}h.resize(m,i,s)}};f._sketch=true;this.radiusHandle=f;this.radiusHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.radiusHandle],{silent:true})},setMap:function(a){this.handlers.drag.setMap(a);OpenLayers.Control.prototype.setMap.apply(this,arguments)},handleMapEvents:function(a){if(a.type=="removelayer"||a.property=="order"){this.moveLayerToTop()}},moveLayerToTop:function(){var a=Math.max(this.map.Z_INDEX_BASE.Feature-1,this.layer.getZIndex())+1;this.layer.setZIndex(a)},moveLayerBack:function(){var a=this.layer.getZIndex()-1;if(a>=this.map.Z_INDEX_BASE.Feature){this.layer.setZIndex(a)}else{this.map.setLayerZIndex(this.layer,this.map.getLayerIndex(this.layer))}},CLASS_NAME:"OpenLayers.Control.ModifyFeature"});OpenLayers.Control.ModifyFeature.RESHAPE=1;OpenLayers.Control.ModifyFeature.RESIZE=2;OpenLayers.Control.ModifyFeature.ROTATE=4;OpenLayers.Control.ModifyFeature.DRAG=8;Ext.namespace("gxp");gxp.FeatureEditPopup=Ext.extend(GeoExt.Popup,{closeMsgTitle:"Save Changes?",closeMsg:"This feature has unsaved changes. Would you like to save your changes?",deleteMsgTitle:"Delete Feature?",deleteMsg:"Are you sure you want to delete this feature?",editButtonText:"Edit",editButtonTooltip:"Make this feature editable",deleteButtonText:"Delete",deleteButtonTooltip:"Delete this feature",cancelButtonText:"Cancel",cancelButtonTooltip:"Stop editing, discard changes",saveButtonText:"Save",saveButtonTooltip:"Save changes",layout:"fit",feature:null,schema:null,readOnly:false,allowDelete:false,editing:false,editorPluginConfig:{ptype:"gxp_editorgrid"},modifyControl:null,geometry:null,attributes:null,cancelButton:null,saveButton:null,editButton:null,deleteButton:null,initComponent:function(){this.addEvents("startedit","stopedit","beforefeaturemodified","featuremodified","canceledit","cancelclose");var a=this.feature;if(a instanceof GeoExt.data.FeatureRecord){a=this.feature=a.getFeature()}if(!this.location){this.location=a}this.anchored=!this.editing;if(!this.title&&a.fid){this.title=a.fid}this.editButton=new Ext.Button({text:this.editButtonText,tooltip:this.editButtonTooltip,iconCls:"edit",handler:this.startEditing,scope:this});this.deleteButton=new Ext.Button({text:this.deleteButtonText,tooltip:this.deleteButtonTooltip,iconCls:"delete",hidden:!this.allowDelete,handler:this.deleteFeature,scope:this});this.cancelButton=new Ext.Button({text:this.cancelButtonText,tooltip:this.cancelButtonTooltip,iconCls:"cancel",hidden:true,handler:function(){this.stopEditing(false)},scope:this});this.saveButton=new Ext.Button({text:this.saveButtonText,tooltip:this.saveButtonTooltip,iconCls:"save",hidden:true,handler:function(){this.stopEditing(true)},scope:this});this.plugins=[Ext.apply({feature:a,schema:this.schema,fields:this.fields,excludeFields:this.excludeFields,propertyNames:this.propertyNames,readOnly:this.readOnly},this.editorPluginConfig)];this.bbar=new Ext.Toolbar({hidden:this.readOnly,items:[this.editButton,this.deleteButton,this.saveButton,this.cancelButton]});gxp.FeatureEditPopup.superclass.initComponent.call(this);this.on({show:function(){if(this.editing){this.editing=null;this.startEditing()}},beforeclose:function(){if(!this.editing){return}if(this.feature.state===this.getDirtyState()){Ext.Msg.show({title:this.closeMsgTitle,msg:this.closeMsg,buttons:Ext.Msg.YESNOCANCEL,fn:function(b){if(b&&b!=="cancel"){this.stopEditing(b==="yes");this.close()}else{this.fireEvent("cancelclose",this)}},scope:this,icon:Ext.MessageBox.QUESTION,animEl:this.getEl()});return false}else{this.stopEditing(false)}},scope:this})},getDirtyState:function(){return this.feature.state===OpenLayers.State.INSERT?this.feature.state:OpenLayers.State.UPDATE},startEditing:function(){if(!this.editing){this.fireEvent("startedit",this);this.editing=true;this.anc&&this.unanchorPopup();this.editButton.hide();this.deleteButton.hide();this.saveButton.show();this.cancelButton.show();this.geometry=this.feature.geometry&&this.feature.geometry.clone();this.attributes=Ext.apply({},this.feature.attributes);this.modifyControl=new OpenLayers.Control.ModifyFeature(this.feature.layer,{standalone:true,vertexRenderIntent:this.vertexRenderIntent});this.feature.layer.map.addControl(this.modifyControl);this.modifyControl.activate();if(this.feature.geometry){this.modifyControl.selectFeature(this.feature)}}},stopEditing:function(f){if(this.editing){this.fireEvent("stopedit",this);this.modifyControl.deactivate();this.modifyControl.destroy();var c=this.feature;if(c.state===this.getDirtyState()){if(f===true){this.fireEvent("beforefeaturemodified",this,c);if(this.schema){var e,g;for(var b in c.attributes){g=this.schema.getAt(this.schema.findExact("name",b));e=c.attributes[b];if(e instanceof Date){var d=g.get("type").split(":").pop();c.attributes[b]=e.format(d=="date"?"Y-m-d":"c")}}}this.fireEvent("featuremodified",this,c)}else{if(c.state===OpenLayers.State.INSERT){this.editing=false;c.layer&&c.layer.destroyFeatures([c]);this.fireEvent("canceledit",this,null);this.close()}else{var a=c.layer;a.drawFeature(c,{display:"none"});c.geometry=this.geometry;c.attributes=this.attributes;this.setFeatureState(null);a.drawFeature(c);this.fireEvent("canceledit",this,c)}}}if(!this.isDestroyed){this.cancelButton.hide();this.saveButton.hide();this.editButton.show();this.allowDelete&&this.deleteButton.show()}this.editing=false}},deleteFeature:function(){Ext.Msg.show({title:this.deleteMsgTitle,msg:this.deleteMsg,buttons:Ext.Msg.YESNO,fn:function(a){if(a==="yes"){this.setFeatureState(OpenLayers.State.DELETE);this.fireEvent("featuremodified",this,this.feature);this.close()}},scope:this,icon:Ext.MessageBox.QUESTION,animEl:this.getEl()})},setFeatureState:function(b){this.feature.state=b;var a=this.feature.layer;a&&a.events.triggerEvent("featuremodified",{feature:this.feature})}});Ext.reg("gxp_featureeditpopup",gxp.FeatureEditPopup);OpenLayers.Control.DrawFeature=OpenLayers.Class(OpenLayers.Control,{layer:null,callbacks:null,multi:false,featureAdded:function(){},initialize:function(b,c,a){OpenLayers.Control.prototype.initialize.apply(this,[a]);this.callbacks=OpenLayers.Util.extend({done:this.drawFeature,modify:function(f,e){this.layer.events.triggerEvent("sketchmodified",{vertex:f,feature:e})},create:function(f,e){this.layer.events.triggerEvent("sketchstarted",{vertex:f,feature:e})}},this.callbacks);this.layer=b;this.handlerOptions=this.handlerOptions||{};this.handlerOptions.layerOptions=OpenLayers.Util.applyDefaults(this.handlerOptions.layerOptions,{renderers:b.renderers,rendererOptions:b.rendererOptions});if(!("multi" in this.handlerOptions)){this.handlerOptions.multi=this.multi}var d=this.layer.styleMap&&this.layer.styleMap.styles.temporary;if(d){this.handlerOptions.layerOptions=OpenLayers.Util.applyDefaults(this.handlerOptions.layerOptions,{styleMap:new OpenLayers.StyleMap({"default":d})})}this.handler=new c(this,this.callbacks,this.handlerOptions)},drawFeature:function(c){var a=new OpenLayers.Feature.Vector(c);var b=this.layer.events.triggerEvent("sketchcomplete",{feature:a});if(b!==false){a.state=OpenLayers.State.INSERT;this.layer.addFeatures([a]);this.featureAdded(a);this.events.triggerEvent("featureadded",{feature:a})}},insertXY:function(a,b){if(this.handler&&this.handler.line){this.handler.insertXY(a,b)}},insertDeltaXY:function(b,a){if(this.handler&&this.handler.line){this.handler.insertDeltaXY(b,a)}},insertDirectionLength:function(b,a){if(this.handler&&this.handler.line){this.handler.insertDirectionLength(b,a)}},insertDeflectionLength:function(b,a){if(this.handler&&this.handler.line){this.handler.insertDeflectionLength(b,a)}},undo:function(){return this.handler.undo&&this.handler.undo()},redo:function(){return this.handler.redo&&this.handler.redo()},finishSketch:function(){this.handler.finishGeometry()},cancel:function(){this.handler.cancel()},CLASS_NAME:"OpenLayers.Control.DrawFeature"});OpenLayers.Handler.Point=OpenLayers.Class(OpenLayers.Handler,{point:null,layer:null,multi:false,citeCompliant:false,mouseDown:false,stoppedDown:null,lastDown:null,lastUp:null,persist:false,stopDown:false,stopUp:false,layerOptions:null,pixelTolerance:5,lastTouchPx:null,initialize:function(c,b,a){if(!(a&&a.layerOptions&&a.layerOptions.styleMap)){this.style=OpenLayers.Util.extend(OpenLayers.Feature.Vector.style["default"],{})}OpenLayers.Handler.prototype.initialize.apply(this,arguments)},activate:function(){if(!OpenLayers.Handler.prototype.activate.apply(this,arguments)){return false}var a=OpenLayers.Util.extend({displayInLayerSwitcher:false,calculateInRange:OpenLayers.Function.True,wrapDateLine:this.citeCompliant},this.layerOptions);this.layer=new OpenLayers.Layer.Vector(this.CLASS_NAME,a);this.map.addLayer(this.layer);return true},createFeature:function(a){var b=this.layer.getLonLatFromViewPortPx(a);var c=new OpenLayers.Geometry.Point(b.lon,b.lat);this.point=new OpenLayers.Feature.Vector(c);this.callback("create",[this.point.geometry,this.point]);this.point.geometry.clearBounds();this.layer.addFeatures([this.point],{silent:true})},deactivate:function(){if(!OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){return false}this.cancel();if(this.layer.map!=null){this.destroyFeature(true);this.layer.destroy(false)}this.layer=null;return true},destroyFeature:function(a){if(this.layer&&(a||!this.persist)){this.layer.destroyFeatures()}this.point=null},destroyPersistedFeature:function(){var a=this.layer;if(a&&a.features.length>1){this.layer.features[0].destroy()}},finalize:function(b){var a=b?"cancel":"done";this.mouseDown=false;this.lastDown=null;this.lastUp=null;this.lastTouchPx=null;this.callback(a,[this.geometryClone()]);this.destroyFeature(b)},cancel:function(){this.finalize(true)},click:function(a){OpenLayers.Event.stop(a);return false},dblclick:function(a){OpenLayers.Event.stop(a);return false},modifyFeature:function(a){if(!this.point){this.createFeature(a)}var b=this.layer.getLonLatFromViewPortPx(a);this.point.geometry.x=b.lon;this.point.geometry.y=b.lat;this.callback("modify",[this.point.geometry,this.point,false]);this.point.geometry.clearBounds();this.drawFeature()},drawFeature:function(){this.layer.drawFeature(this.point,this.style)},getGeometry:function(){var a=this.point&&this.point.geometry;if(a&&this.multi){a=new OpenLayers.Geometry.MultiPoint([a])}return a},geometryClone:function(){var a=this.getGeometry();return a&&a.clone()},mousedown:function(a){return this.down(a)},touchstart:function(a){this.startTouch();this.lastTouchPx=a.xy;return this.down(a)},mousemove:function(a){return this.move(a)},touchmove:function(a){this.lastTouchPx=a.xy;return this.move(a)},mouseup:function(a){return this.up(a)},touchend:function(a){a.xy=this.lastTouchPx;return this.up(a)},down:function(a){this.mouseDown=true;this.lastDown=a.xy;if(!this.touch){this.modifyFeature(a.xy)}this.stoppedDown=this.stopDown;return !this.stopDown},move:function(a){if(!this.touch&&(!this.mouseDown||this.stoppedDown)){this.modifyFeature(a.xy)}return true},up:function(a){this.mouseDown=false;this.stoppedDown=this.stopDown;if(!this.checkModifiers(a)){return true}if(this.lastUp&&this.lastUp.equals(a.xy)){return true}if(this.lastDown&&this.passesTolerance(this.lastDown,a.xy,this.pixelTolerance)){if(this.touch){this.modifyFeature(a.xy)}if(this.persist){this.destroyPersistedFeature()}this.lastUp=a.xy;this.finalize();return !this.stopUp}else{return true}},mouseout:function(a){if(OpenLayers.Util.mouseLeft(a,this.map.viewPortDiv)){this.stoppedDown=this.stopDown;this.mouseDown=false}},passesTolerance:function(e,d,a){var b=true;if(a!=null&&e&&d){var c=e.distanceTo(d);if(c>a){b=false}}return b},CLASS_NAME:"OpenLayers.Handler.Point"});OpenLayers.Handler.Path=OpenLayers.Class(OpenLayers.Handler.Point,{line:null,maxVertices:null,doubleTouchTolerance:20,freehand:false,freehandToggle:"shiftKey",timerId:null,redoStack:null,createFeature:function(a){var b=this.layer.getLonLatFromViewPortPx(a);var c=new OpenLayers.Geometry.Point(b.lon,b.lat);this.point=new OpenLayers.Feature.Vector(c);this.line=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([this.point.geometry]));this.callback("create",[this.point.geometry,this.getSketch()]);this.point.geometry.clearBounds();this.layer.addFeatures([this.line,this.point],{silent:true})},destroyFeature:function(a){OpenLayers.Handler.Point.prototype.destroyFeature.call(this,a);this.line=null},destroyPersistedFeature:function(){var a=this.layer;if(a&&a.features.length>2){this.layer.features[0].destroy()}},removePoint:function(){if(this.point){this.layer.removeFeatures([this.point])}},addPoint:function(a){this.layer.removeFeatures([this.point]);var b=this.layer.getLonLatFromViewPortPx(a);this.point=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(b.lon,b.lat));this.line.geometry.addComponent(this.point.geometry,this.line.geometry.components.length);this.layer.addFeatures([this.point]);this.callback("point",[this.point.geometry,this.getGeometry()]);this.callback("modify",[this.point.geometry,this.getSketch()]);this.drawFeature();delete this.redoStack},insertXY:function(a,b){this.line.geometry.addComponent(new OpenLayers.Geometry.Point(a,b),this.getCurrentPointIndex());this.drawFeature();delete this.redoStack},insertDeltaXY:function(b,a){var c=this.getCurrentPointIndex()-1;var d=this.line.geometry.components[c];if(d&&!isNaN(d.x)&&!isNaN(d.y)){this.insertXY(d.x+b,d.y+a)}},insertDirectionLength:function(d,c){d*=Math.PI/180;var b=c*Math.cos(d);var a=c*Math.sin(d);this.insertDeltaXY(b,a)},insertDeflectionLength:function(c,b){var d=this.getCurrentPointIndex()-1;if(d>0){var e=this.line.geometry.components[d];var f=this.line.geometry.components[d-1];var a=Math.atan2(e.y-f.y,e.x-f.x);this.insertDirectionLength((a*180/Math.PI)+c,b)}},getCurrentPointIndex:function(){return this.line.geometry.components.length-1},undo:function(){var h=this.line.geometry;var e=h.components;var b=this.getCurrentPointIndex()-1;var g=e[b];var f=h.removeComponent(g);if(f){if(this.touch&&b>0){e=h.components;var d=e[b-1];var a=this.getCurrentPointIndex();var c=e[a];c.x=d.x;c.y=d.y}if(!this.redoStack){this.redoStack=[]}this.redoStack.push(g);this.drawFeature()}return f},redo:function(){var a=this.redoStack&&this.redoStack.pop();if(a){this.line.geometry.addComponent(a,this.getCurrentPointIndex());this.drawFeature()}return !!a},freehandMode:function(a){return(this.freehandToggle&&a[this.freehandToggle])?!this.freehand:this.freehand},modifyFeature:function(b,a){if(!this.line){this.createFeature(b)}var c=this.layer.getLonLatFromViewPortPx(b);this.point.geometry.x=c.lon;this.point.geometry.y=c.lat;this.callback("modify",[this.point.geometry,this.getSketch(),a]);this.point.geometry.clearBounds();this.drawFeature()},drawFeature:function(){this.layer.drawFeature(this.line,this.style);this.layer.drawFeature(this.point,this.style)},getSketch:function(){return this.line},getGeometry:function(){var a=this.line&&this.line.geometry;if(a&&this.multi){a=new OpenLayers.Geometry.MultiLineString([a])}return a},touchstart:function(a){if(this.timerId&&this.passesTolerance(this.lastTouchPx,a.xy,this.doubleTouchTolerance)){this.finishGeometry();window.clearTimeout(this.timerId);this.timerId=null;return false}else{if(this.timerId){window.clearTimeout(this.timerId);this.timerId=null}this.timerId=window.setTimeout(OpenLayers.Function.bind(function(){this.timerId=null},this),300);return OpenLayers.Handler.Point.prototype.touchstart.call(this,a)}},down:function(a){var b=this.stopDown;if(this.freehandMode(a)){b=true;if(this.touch){this.modifyFeature(a.xy,!!this.lastUp);OpenLayers.Event.stop(a)}}if(!this.touch&&(!this.lastDown||!this.passesTolerance(this.lastDown,a.xy,this.pixelTolerance))){this.modifyFeature(a.xy,!!this.lastUp)}this.mouseDown=true;this.lastDown=a.xy;this.stoppedDown=b;return !b},move:function(a){if(this.stoppedDown&&this.freehandMode(a)){if(this.persist){this.destroyPersistedFeature()}if(this.maxVertices&&this.line&&this.line.geometry.components.length===this.maxVertices){this.removePoint();this.finalize()}else{this.addPoint(a.xy)}return false}if(!this.touch&&(!this.mouseDown||this.stoppedDown)){this.modifyFeature(a.xy,!!this.lastUp)}return true},up:function(a){if(this.mouseDown&&(!this.lastUp||!this.lastUp.equals(a.xy))){if(this.stoppedDown&&this.freehandMode(a)){if(this.persist){this.destroyPersistedFeature()}this.removePoint();this.finalize()}else{if(this.passesTolerance(this.lastDown,a.xy,this.pixelTolerance)){if(this.touch){this.modifyFeature(a.xy)}if(this.lastUp==null&&this.persist){this.destroyPersistedFeature()}this.addPoint(a.xy);this.lastUp=a.xy;if(this.line.geometry.components.length===this.maxVertices+1){this.finishGeometry()}}}}this.stoppedDown=this.stopDown;this.mouseDown=false;return !this.stopUp},finishGeometry:function(){var a=this.line.geometry.components.length-1;this.line.geometry.removeComponent(this.line.geometry.components[a]);this.removePoint();this.finalize()},dblclick:function(a){if(!this.freehandMode(a)){this.finishGeometry()}return false},CLASS_NAME:"OpenLayers.Handler.Path"});OpenLayers.Handler.Polygon=OpenLayers.Class(OpenLayers.Handler.Path,{holeModifier:null,drawingHole:false,polygon:null,createFeature:function(a){var b=this.layer.getLonLatFromViewPortPx(a);var c=new OpenLayers.Geometry.Point(b.lon,b.lat);this.point=new OpenLayers.Feature.Vector(c);this.line=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LinearRing([this.point.geometry]));this.polygon=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon([this.line.geometry]));this.callback("create",[this.point.geometry,this.getSketch()]);this.point.geometry.clearBounds();this.layer.addFeatures([this.polygon,this.point],{silent:true})},addPoint:function(a){if(!this.drawingHole&&this.holeModifier&&this.evt&&this.evt[this.holeModifier]){var f=this.point.geometry;var e=this.control.layer.features;var d,c;for(var b=e.length-1;b>=0;--b){d=e[b].geometry;if((d instanceof OpenLayers.Geometry.Polygon||d instanceof OpenLayers.Geometry.MultiPolygon)&&d.intersects(f)){c=e[b];this.control.layer.removeFeatures([c],{silent:true});this.control.layer.events.registerPriority("sketchcomplete",this,this.finalizeInteriorRing);this.control.layer.events.registerPriority("sketchmodified",this,this.enforceTopology);c.geometry.addComponent(this.line.geometry);this.polygon=c;this.drawingHole=true;break}}}OpenLayers.Handler.Path.prototype.addPoint.apply(this,arguments)},getCurrentPointIndex:function(){return this.line.geometry.components.length-2},enforceTopology:function(d){var a=d.vertex;var c=this.line.geometry.components;if(!this.polygon.geometry.intersects(a)){var b=c[c.length-3];a.x=b.x;a.y=b.y}},finishGeometry:function(){var a=this.line.geometry.components.length-2;this.line.geometry.removeComponent(this.line.geometry.components[a]);this.removePoint();this.finalize()},finalizeInteriorRing:function(){var c=this.line.geometry;var b=(c.getArea()!==0);if(b){var h=this.polygon.geometry.components;for(var d=h.length-2;d>=0;--d){if(c.intersects(h[d])){b=false;break}}if(b){var g;outer:for(var d=h.length-2;d>0;--d){var e=h[d].components;for(var a=0,f=e.length;a<f;++a){if(c.containsPoint(e[a])){b=false;break outer}}}}}if(b){if(this.polygon.state!==OpenLayers.State.INSERT){this.polygon.state=OpenLayers.State.UPDATE}}else{this.polygon.geometry.removeComponent(c)}this.restoreFeature();return false},cancel:function(){if(this.drawingHole){this.polygon.geometry.removeComponent(this.line.geometry);this.restoreFeature(true)}return OpenLayers.Handler.Path.prototype.cancel.apply(this,arguments)},restoreFeature:function(a){this.control.layer.events.unregister("sketchcomplete",this,this.finalizeInteriorRing);this.control.layer.events.unregister("sketchmodified",this,this.enforceTopology);this.layer.removeFeatures([this.polygon],{silent:true});this.control.layer.addFeatures([this.polygon],{silent:true});this.drawingHole=false;if(!a){this.control.layer.events.triggerEvent("sketchcomplete",{feature:this.polygon})}},destroyFeature:function(a){OpenLayers.Handler.Path.prototype.destroyFeature.call(this,a);this.polygon=null},drawFeature:function(){this.layer.drawFeature(this.polygon,this.style);this.layer.drawFeature(this.point,this.style)},getSketch:function(){return this.polygon},getGeometry:function(){var a=this.polygon&&this.polygon.geometry;if(a&&this.multi){a=new OpenLayers.Geometry.MultiPolygon([a])}return a},CLASS_NAME:"OpenLayers.Handler.Polygon"});Ext.namespace("gxp.plugins");gxp.plugins.FeatureEditor=Ext.extend(gxp.plugins.ClickableFeatures,{ptype:"gxp_featureeditor",commitMessage:false,splitButton:null,iconClsAdd:"gxp-icon-addfeature",closeOnSave:false,supportAbstractGeometry:false,supportNoGeometry:false,iconClsEdit:"gxp-icon-editfeature",exceptionTitle:"Save Failed",exceptionText:"Trouble saving features",pointText:"Point",lineText:"Line",polygonText:"Polygon",noGeometryText:"Event",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:",createFeatureActionTip:"Create a new feature",createFeatureActionText:"Create",editFeatureActionTip:"Edit existing feature",editFeatureActionText:"Modify",splitButtonText:"Edit",splitButtonTooltip:"Edit features on selected WMS layer",outputTarget:"map",snappingAgent:null,readOnly:false,modifyOnly:false,showSelectedOnly:true,roles:["ROLE_ADMINISTRATOR"],createAction:null,editAction:null,activeIndex:0,drawControl:null,popup:null,schema:null,constructor:function(a){this.addEvents("layereditable","featureeditable");gxp.plugins.FeatureEditor.superclass.constructor.apply(this,arguments)},init:function(a){gxp.plugins.FeatureEditor.superclass.init.apply(this,arguments);this.target.on("authorizationchange",this.onAuthorizationChange,this)},destroy:function(){this.target.un("authorizationchange",this.onAuthorizationChange,this);gxp.plugins.FeatureEditor.superclass.destroy.apply(this,arguments)},onAuthorizationChange:function(){if(!this.target.isAuthorized(this.roles)){this.selectControl.deactivate();this.drawControl.deactivate()}this.enableOrDisable()},addActions:function(){var b;var k=this.getFeatureManager();var j=k.featureLayer;var g=false;function h(o,n){var q=Array.prototype.slice.call(arguments);q.splice(0,2);if(!g&&b&&!b.isDestroyed){if(b.editing){function l(){g=true;m.call(this);if(n==="setLayer"){this.target.selectLayer(q[0])}else{if(n==="clearFeatures"){window.setTimeout(function(){o[n].call(o)})}else{o[n].apply(o,q)}}}function m(){k.featureStore.un("write",l,this);b.un("canceledit",l,this);b.un("cancelclose",m,this)}k.featureStore.on("write",l,this);b.on({canceledit:l,cancelclose:m,scope:this});b.close()}return !b.editing}g=false}k.on({beforequery:h.createDelegate(this,"loadFeatures",1),beforelayerchange:h.createDelegate(this,"setLayer",1),beforesetpage:h.createDelegate(this,"setPage",1),beforeclearfeatures:h.createDelegate(this,"clearFeatures",1),scope:this});this.drawControl=new OpenLayers.Control.DrawFeature(j,OpenLayers.Handler.Point,{eventListeners:{featureadded:function(l){if(this.autoLoadFeature===true){this.autoLoadedFeature=l.feature}},activate:function(){this.target.doAuthorized(this.roles,function(){k.showLayer(this.id,this.showSelectedOnly&&"selected")},this)},deactivate:function(){k.hideLayer(this.id)},scope:this}});this.selectControl=new OpenLayers.Control.SelectFeature(j,{clickout:false,multipleKey:"fakeKey",eventListeners:{activate:function(){this.target.doAuthorized(this.roles,function(){if(this.autoLoadFeature===true||k.paging){this.target.mapPanel.map.events.register("click",this,this.noFeatureClick)}k.showLayer(this.id,this.showSelectedOnly&&"selected");this.selectControl.unselectAll(b&&b.editing&&{except:b.feature})},this)},deactivate:function(){if(this.autoLoadFeature===true||k.paging){this.target.mapPanel.map.events.unregister("click",this,this.noFeatureClick)}if(b){if(b.editing){b.on("cancelclose",function(){this.selectControl.activate()},this,{single:true})}b.on("close",function(){k.hideLayer(this.id)},this,{single:true});b.close()}else{k.hideLayer(this.id)}},scope:this}});j.events.on({beforefeatureremoved:function(l){if(this.popup&&l.feature===this.popup.feature){this.selectControl.unselect(l.feature)}},featureunselected:function(l){var m=l.feature;if(m){this.fireEvent("featureeditable",this,m,false)}if(m&&m.geometry&&b&&!b.hidden){b.close()}},beforefeatureselected:function(l){if(b){return !b.editing}},featureselected:function(l){var m=l.feature;if(m){this.fireEvent("featureeditable",this,m,true)}var n=k.featureStore;if(this._forcePopupForNoGeometry===true||(this.selectControl.active&&m.geometry!==null)){if(this.readOnly===false){this.selectControl.deactivate();k.showLayer(this.id,this.showSelectedOnly&&"selected")}b=this.addOutput({xtype:"gxp_featureeditpopup",collapsible:true,feature:n.getByFeature(m),vertexRenderIntent:"vertex",readOnly:this.readOnly,fields:this.fields,excludeFields:this.excludeFields,editing:m.state===OpenLayers.State.INSERT,schema:this.schema,allowDelete:true,width:200,height:250});b.on({close:function(){if(this.readOnly===false){this.selectControl.activate()}if(m.layer&&m.layer.selectedFeatures.indexOf(m)!==-1){this.selectControl.unselect(m)}if(m===this.autoLoadedFeature){if(m.layer){m.layer.removeFeatures([l.feature])}this.autoLoadedFeature=null}},featuremodified:function(o,q){n.on({beforewrite:{fn:function(s,u,r,t){if(this.commitMessage===true){t.params.handle=this._commitMsg;delete this._commitMsg}},single:true},beforesave:{fn:function(){if(o&&o.isVisible()){o.disable()}if(this.commitMessage===true){if(!this._commitMsg){var r=arguments.callee;Ext.Msg.show({prompt:true,title:this.commitTitle,msg:this.commitText,buttons:Ext.Msg.OK,fn:function(s,t){if(s==="ok"){this._commitMsg=t;n.un("beforesave",r,this);n.save()}},scope:this,multiline:true});return false}}},single:this.commitMessage!==true},write:{fn:function(){if(o){if(o.isVisible()){o.enable()}if(this.closeOnSave){o.close()}}var r=k.layerRecord;this.target.fireEvent("featureedit",k,{name:r.get("name"),source:r.get("source")})},single:true},exception:{fn:function(u,v,w,t,s,r){var x=this.exceptionText;if(v==="remote"){if(s.exceptionReport){x=gxp.util.getOGCExceptionText(s.exceptionReport)}}else{x="Status: "+s.status}k.fireEvent("exception",k,s.exceptionReport||{},x,r);if(k.hasListener("exception")===false&&n.hasListener("exception")===false){Ext.Msg.show({title:this.exceptionTitle,msg:x,icon:Ext.MessageBox.ERROR,buttons:{ok:true}})}if(o&&o.isVisible()){o.enable();o.startEditing()}},single:true},scope:this});if(q.state===OpenLayers.State.DELETE){n._removing=true;n.remove(n.getRecordFromFeature(q));delete n._removing}n.save()},canceledit:function(o,q){n.commitChanges()},scope:this});this.popup=b}},sketchcomplete:function(l){k.featureLayer.events.register("featuresadded",this,function(m){k.featureLayer.events.unregister("featuresadded",this,arguments.callee);this.drawControl.deactivate();this.selectControl.activate();this.selectControl.select(m.features[0])})},scope:this});var e=this.toggleGroup||Ext.id();var d=[];var c={tooltip:this.createFeatureActionTip,menuText:this.initialConfig.createFeatureActionText,text:this.initialConfig.createFeatureActionText,iconCls:this.iconClsAdd,disabled:true,hidden:this.modifyOnly||this.readOnly,toggleGroup:e,group:e,groupClass:null,enableToggle:true,allowDepress:true,control:this.drawControl,deactivateOnDisable:true,map:this.target.mapPanel.map,listeners:{checkchange:this.onItemCheckchange,scope:this}};if(this.supportAbstractGeometry===true){var a=[];if(this.supportNoGeometry===true){a.push(new Ext.menu.CheckItem({text:this.noGeometryText,iconCls:"gxp-icon-event",groupClass:null,group:e,listeners:{checkchange:function(n,m){if(m===true){var l=new OpenLayers.Feature.Vector(null);l.state=OpenLayers.State.INSERT;j.addFeatures([l]);this._forcePopupForNoGeometry=true;j.events.triggerEvent("featureselected",{feature:l});delete this._forcePopupForNoGeometry}if(this.createAction.items[0] instanceof Ext.menu.CheckItem){this.createAction.items[0].setChecked(false)}else{this.createAction.items[0].toggle(false)}},scope:this}}))}var f=function(n,m,l){if(m===true){this.setHandler(l,false)}if(this.createAction.items[0] instanceof Ext.menu.CheckItem){this.createAction.items[0].setChecked(m)}else{this.createAction.items[0].toggle(m)}};a.push(new Ext.menu.CheckItem({groupClass:null,text:this.pointText,group:e,iconCls:"gxp-icon-point",listeners:{checkchange:f.createDelegate(this,[OpenLayers.Handler.Point],2)}}),new Ext.menu.CheckItem({groupClass:null,text:this.lineText,group:e,iconCls:"gxp-icon-line",listeners:{checkchange:f.createDelegate(this,[OpenLayers.Handler.Path],2)}}),new Ext.menu.CheckItem({groupClass:null,text:this.polygonText,group:e,iconCls:"gxp-icon-polygon",listeners:{checkchange:f.createDelegate(this,[OpenLayers.Handler.Polygon],2)}}));d.push(new GeoExt.Action(Ext.apply(c,{menu:new Ext.menu.Menu({items:a})})))}else{d.push(new GeoExt.Action(c))}d.push(new GeoExt.Action({tooltip:this.editFeatureActionTip,text:this.initialConfig.editFeatureActionText,menuText:this.initialConfig.editFeatureActionText,iconCls:this.iconClsEdit,disabled:true,toggleGroup:e,group:e,groupClass:null,enableToggle:true,allowDepress:true,control:this.selectControl,deactivateOnDisable:true,map:this.target.mapPanel.map,listeners:{checkchange:this.onItemCheckchange,scope:this}}));this.createAction=d[0];this.editAction=d[1];if(this.splitButton){this.splitButton=new Ext.SplitButton({menu:{items:[Ext.apply(new Ext.menu.CheckItem(d[0]),{text:this.createFeatureActionText}),Ext.apply(new Ext.menu.CheckItem(d[1]),{text:this.editFeatureActionText})]},disabled:true,buttonText:this.splitButtonText,tooltip:this.splitButtonTooltip,iconCls:this.iconClsAdd,enableToggle:true,toggleGroup:this.toggleGroup,allowDepress:true,handler:function(l,m){if(l.pressed){l.menu.items.itemAt(this.activeIndex).setChecked(true)}},scope:this,listeners:{toggle:function(l,m){if(!m){l.menu.items.each(function(n){n.setChecked(false)})}},render:function(l){Ext.ButtonToggleMgr.register(l)}}});d=[this.splitButton]}d=gxp.plugins.FeatureEditor.superclass.addActions.call(this,d);k.on("layerchange",this.onLayerChange,this);var i=this.getSnappingAgent();if(i){i.registerEditor(this)}return d},onItemCheckchange:function(b,a){if(this.splitButton){this.activeIndex=b.ownerCt.items.indexOf(b);this.splitButton.toggle(a);if(a){this.splitButton.setIconClass(b.iconCls)}}},getFeatureManager:function(){var a=this.target.tools[this.featureManager];if(!a){throw new Error("Unable to access feature manager by id: "+this.featureManager)}return a},getSnappingAgent:function(){var a;var b=this.snappingAgent;if(b){a=this.target.tools[b];if(!a){throw new Error("Unable to locate snapping agent with id: "+b)}}return a},setHandler:function(a,d){var c=this.drawControl;var b=c.active;if(b){c.deactivate()}c.handler.destroy();c.handler=new a(c,c.callbacks,Ext.apply(c.handlerOptions,{multi:d}));if(b){c.activate()}},enableOrDisable:function(){var a=!this.schema;if(this.splitButton){this.splitButton.setDisabled(a)}this.createAction.setDisabled(a);this.editAction.setDisabled(a);return a},onLayerChange:function(j,g,c){this.schema=c;var e=this.enableOrDisable();if(e){this.fireEvent("layereditable",this,g,false);return}var d=this.drawControl;var f=this.createAction;var a={Point:OpenLayers.Handler.Point,Line:OpenLayers.Handler.Path,Curve:OpenLayers.Handler.Path,Polygon:OpenLayers.Handler.Polygon,Surface:OpenLayers.Handler.Polygon};var b=j.geometryType&&j.geometryType.replace("Multi","");var i=b&&a[b];if(i){var h=(b!=j.geometryType);this.setHandler(i,h);f.enable()}else{if(this.supportAbstractGeometry===true&&j.geometryType&&j.geometryType==="Geometry"){f.enable()}else{f.disable()}}this.fireEvent("layereditable",this,g,true)},select:function(a){this.selectControl.unselectAll(this.popup&&this.popup.editing&&{except:this.popup.feature});this.selectControl.select(a)}});Ext.preg(gxp.plugins.FeatureEditor.prototype.ptype,gxp.plugins.FeatureEditor);Ext.namespace("GeoExt.grid");GeoExt.grid.FeatureSelectionModelMixin=function(){return{autoActivateControl:true,layerFromStore:true,selectControl:null,bound:false,superclass:null,selectedFeatures:[],autoPanMapOnSelection:false,constructor:function(a){a=a||{};if(a.selectControl instanceof OpenLayers.Control.SelectFeature){if(!a.singleSelect){var b=a.selectControl;a.singleSelect=!(b.multiple||!!b.multipleKey)}}else{if(a.layer instanceof OpenLayers.Layer.Vector){this.selectControl=this.createSelectControl(a.layer,a.selectControl);delete a.layer;delete a.selectControl}}if(a.autoPanMapOnSelection){this.autoPanMapOnSelection=true;delete a.autoPanMapOnSelection}this.superclass=arguments.callee.superclass;this.superclass.constructor.call(this,a)},initEvents:function(){this.superclass.initEvents.call(this);if(this.layerFromStore){var a=this.grid.getStore()&&this.grid.getStore().layer;if(a&&!(this.selectControl instanceof OpenLayers.Control.SelectFeature)){this.selectControl=this.createSelectControl(a,this.selectControl)}}if(this.selectControl){this.bind(this.selectControl)}},createSelectControl:function(b,a){a=a||{};var d=a.singleSelect!==undefined?a.singleSelect:this.singleSelect;a=OpenLayers.Util.extend({toggle:true,multipleKey:d?null:(Ext.isMac?"metaKey":"ctrlKey")},a);var c=new OpenLayers.Control.SelectFeature(b,a);b.map.addControl(c);return c},bind:function(e,b){if(!this.bound){b=b||{};this.selectControl=e;if(e instanceof OpenLayers.Layer.Vector){this.selectControl=this.createSelectControl(e,b.controlConfig)}if(this.autoActivateControl){this.selectControl.activate()}var d=this.getLayers();for(var c=0,a=d.length;c<a;c++){d[c].events.on({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this})}this.on("rowselect",this.rowSelected,this);this.on("rowdeselect",this.rowDeselected,this);this.bound=true}return this.selectControl},unbind:function(){var c=this.selectControl;if(this.bound){var d=this.getLayers();for(var b=0,a=d.length;b<a;b++){d[b].events.un({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this})}this.un("rowselect",this.rowSelected,this);this.un("rowdeselect",this.rowDeselected,this);if(this.autoActivateControl){c.deactivate()}this.selectControl=null;this.bound=false}return c},featureSelected:function(a){if(!this._selecting){var b=this.grid.store;var c=b.findBy(function(d,e){return d.getFeature()==a.feature});if(c!=-1&&!this.isSelected(c)){this._selecting=true;this.selectRow(c,!this.singleSelect);this._selecting=false;this.grid.getView().focusRow(c)}}},featureUnselected:function(a){if(!this._selecting){var b=this.grid.store;var c=b.findBy(function(d,e){return d.getFeature()==a.feature});if(c!=-1&&this.isSelected(c)){this._selecting=true;this.deselectRow(c);this._selecting=false;this.grid.getView().focusRow(c)}}},rowSelected:function(c,g,b){var e=b.getFeature();if(!this._selecting&&e){var f=this.getLayers();for(var d=0,a=f.length;d<a;d++){if(f[d].selectedFeatures.indexOf(e)==-1){this._selecting=true;this.selectControl.select(e);this._selecting=false;this.selectedFeatures.push(e);break}}if(this.autoPanMapOnSelection){this.recenterToSelectionExtent()}}},rowDeselected:function(c,g,b){var e=b.getFeature();if(!this._selecting&&e){var f=this.getLayers();for(var d=0,a=f.length;d<a;d++){if(f[d].selectedFeatures.indexOf(e)!=-1){this._selecting=true;this.selectControl.unselect(e);this._selecting=false;OpenLayers.Util.removeItem(this.selectedFeatures,e);break}}if(this.autoPanMapOnSelection&&this.selectedFeatures.length>0){this.recenterToSelectionExtent()}}},getLayers:function(){return this.selectControl.layers||[this.selectControl.layer]},recenterToSelectionExtent:function(){var c=this.selectControl.map;var b=this.getSelectionExtent();var a=c.getZoomForExtent(b,false);if(a>c.getZoom()){c.setCenter(b.getCenterLonLat())}else{c.zoomToExtent(b)}},getSelectionExtent:function(){var b=null;var d=this.selectedFeatures;if(d&&(d.length>0)){var e=null;for(var c=0,a=d.length;c<a;c++){e=d[c].geometry;if(e){if(b===null){b=new OpenLayers.Bounds()}b.extend(e.getBounds())}}}return b}}};GeoExt.grid.FeatureSelectionModel=Ext.extend(Ext.grid.RowSelectionModel,new GeoExt.grid.FeatureSelectionModelMixin);Ext.namespace("gxp.grid");gxp.grid.FeatureGrid=Ext.extend(Ext.grid.GridPanel,{map:null,ignoreFields:null,includeFields:null,layer:null,columnsSortable:true,columnMenuDisabled:false,initComponent:function(){this.ignoreFields=["feature","state","fid"].concat(this.ignoreFields);if(this.store){this.cm=this.createColumnModel(this.store);if(this.map){this.layer=new OpenLayers.Layer.Vector(this.id+"_layer");this.map.addLayer(this.layer)}}else{this.store=new Ext.data.Store();this.cm=new Ext.grid.ColumnModel({columns:[]})}if(this.layer){this.sm=this.sm||new GeoExt.grid.FeatureSelectionModel({layerFromStore:false,layer:this.layer});if(this.store instanceof GeoExt.data.FeatureStore){this.store.bind(this.layer)}}if(!this.dateFormat){this.dateFormat=Ext.form.DateField.prototype.format}if(!this.timeFormat){this.timeFormat=Ext.form.TimeField.prototype.format}gxp.grid.FeatureGrid.superclass.initComponent.call(this)},onDestroy:function(){if(this.initialConfig&&this.initialConfig.map&&!this.initialConfig.layer){this.layer.destroy();delete this.layer}gxp.grid.FeatureGrid.superclass.onDestroy.apply(this,arguments)},setStore:function(a,b){if(b){this.schema=b}if(a){if(this.store instanceof GeoExt.data.FeatureStore){this.store.unbind()}if(this.layer){this.layer.destroyFeatures();a.bind(this.layer)}this.reconfigure(a,this.createColumnModel(a))}else{this.reconfigure(new Ext.data.Store(),new Ext.grid.ColumnModel({columns:[]}))}},getColumns:function(j){function b(k){return function(m){var l=m;if(typeof m=="string"){l=Date.parseDate(m.replace(/Z$/,""),"c")}return l?l.format(k):m}}var d=[],e=this.customEditors||{},f=this.customRenderers||{},a,h,c,i,g;(this.schema||j.fields).each(function(l){if(this.schema){a=l.get("name");h=l.get("type").split(":").pop();i=null;switch(h){case"date":i=this.dateFormat;break;case"datetime":i=i?i:this.dateFormat+" "+this.timeFormat;c=undefined;g=b(i);break;case"boolean":c="booleancolumn";break;case"string":c="gridcolumn";break;default:c="numbercolumn";break}}else{a=l.name}if(this.ignoreFields.indexOf(a)===-1&&(this.includeFields===null||this.includeFields.indexOf(a)>=0)){var k=this.columnConfig?this.columnConfig[a]:null;d.push(Ext.apply({dataIndex:a,hidden:this.fieldVisibility?(!this.fieldVisibility[a]):false,header:this.propertyNames?(this.propertyNames[a]||a):a,sortable:this.columnsSortable,menuDisabled:this.columnMenuDisabled,xtype:c,editor:e[a]||{xtype:"textfield"},format:i,renderer:f[a]||(c?undefined:g)},k))}},this);return d},createColumnModel:function(a){var b=this.getColumns(a);return new Ext.grid.ColumnModel(b)}});Ext.reg("gxp_featuregrid",gxp.grid.FeatureGrid);Ext.namespace("gxp.plugins");gxp.plugins.FeatureGrid=Ext.extend(gxp.plugins.ClickableFeatures,{ptype:"gxp_featuregrid",schema:null,showTotalResults:false,alwaysDisplayOnMap:false,displayMode:"all",autoExpand:false,autoCollapse:false,selectOnMap:false,displayFeatureText:"Display on map",firstPageTip:"First page",previousPageTip:"Previous page",zoomPageExtentTip:"Zoom to page extent",nextPageTip:"Next page",lastPageTip:"Last page",totalMsg:"Features {1} to {2} of {0}",displayTotalResults:function(){var a=this.target.tools[this.featureManager];if(this.showTotalResults===true){this.displayItem.setText(a.numberOfFeatures!==null?String.format(this.totalMsg,a.numberOfFeatures,a.pageIndex*a.maxFeatures+Math.min(a.numberOfFeatures,1),Math.min((a.pageIndex+1)*a.maxFeatures,a.numberOfFeatures)):"")}},addOutput:function(b){var a=this.target.tools[this.featureManager];var f=this.target.mapPanel.map,e;this.selectControl=new OpenLayers.Control.SelectFeature(a.featureLayer,this.initialConfig.controlOptions);if(this.selectOnMap){if(this.autoLoadFeature||(a.paging&&a.pagingType===gxp.plugins.FeatureManager.QUADTREE_PAGING)){this.selectControl.events.on({activate:function(){f.events.register("click",this,this.noFeatureClick)},deactivate:function(){f.events.unregister("click",this,this.noFeatureClick)},scope:this})}f.addControl(this.selectControl);e={selectControl:this.selectControl}}else{e={selectControl:this.selectControl,singleSelect:false,autoActivateControl:false,listeners:{beforerowselect:function(){if((window.event&&window.event.type=="contextmenu")||this.selectControl.active||a.featureStore.getModifiedRecords().length){return false}},scope:this}}}this.displayItem=new Ext.Toolbar.TextItem({});b=Ext.apply({xtype:"gxp_featuregrid",border:false,sm:new GeoExt.grid.FeatureSelectionModel(e),autoScroll:true,columnMenuDisabled:!!a.paging,bbar:(a.paging?[{iconCls:"x-tbar-page-first",ref:"../firstPageButton",tooltip:this.firstPageTip,disabled:true,handler:function(){a.setPage({index:0})}},{iconCls:"x-tbar-page-prev",ref:"../prevPageButton",tooltip:this.previousPageTip,disabled:true,handler:function(){a.previousPage()}},{iconCls:"gxp-icon-zoom-to",ref:"../zoomToPageButton",tooltip:this.zoomPageExtentTip,disabled:true,hidden:(a.pagingType!==gxp.plugins.FeatureManager.QUADTREE_PAGING)||a.autoZoomPage,handler:function(){var g=a.getPageExtent();if(g!==null){f.zoomToExtent(g)}}},{iconCls:"x-tbar-page-next",ref:"../nextPageButton",tooltip:this.nextPageTip,disabled:true,handler:function(){a.nextPage()}},{iconCls:"x-tbar-page-last",ref:"../lastPageButton",tooltip:this.lastPageTip,disabled:true,handler:function(){a.setPage({index:"last"})}},{xtype:"tbspacer",width:10},this.displayItem]:[]).concat(["->"].concat(!this.alwaysDisplayOnMap?[{text:this.displayFeatureText,enableToggle:true,toggleHandler:function(g,h){this.selectOnMap&&this.selectControl[h?"activate":"deactivate"]();a[h?"showLayer":"hideLayer"](this.id,this.displayMode)},scope:this}]:[])),contextMenu:new Ext.menu.Menu({items:[]})},b||{});var d=gxp.plugins.FeatureGrid.superclass.addOutput.call(this,b);d.on({added:function(j,i){function h(){this.displayTotalResults();this.selectOnMap&&this.selectControl.deactivate();this.autoCollapse&&typeof i.collapse=="function"&&i.collapse()}function g(){this.displayTotalResults();this.selectOnMap&&this.selectControl.activate();this.autoExpand&&typeof i.expand=="function"&&i.expand()}a.on({query:function(l,k){if(k&&k.getCount()){g.call(this)}else{h.call(this)}},layerchange:h,clearfeatures:h,scope:this})},contextmenu:function(g){if(d.contextMenu.items.getCount()>0){var h=d.getView().findRowIndex(g.getTarget());if(h!==false){d.getSelectionModel().selectRow(h);d.contextMenu.showAt(g.getXY());g.stopEvent()}}},scope:this});if(this.alwaysDisplayOnMap||(this.selectOnMap===true&&this.displayMode==="selected")){a.showLayer(this.id,this.displayMode)}a.paging&&a.on({beforesetpage:function(){d.zoomToPageButton.disable()},setpage:function(n,h,m,o,j,i){var g=(i>0);d.zoomToPageButton.setDisabled(!g);var k=(g&&(j!==0));d.firstPageButton.setDisabled(!k);d.prevPageButton.setDisabled(!k);var l=(g&&(j!==i-1));d.lastPageButton.setDisabled(!l);d.nextPageButton.setDisabled(!l)},scope:this});function c(){var h=a.schema,g=["feature","state","fid"];h&&h.each(function(i){i.get("type").indexOf("gml:")==0&&g.push(i.get("name"))});d.ignoreFields=g;d.setStore(a.featureStore,h);if(!a.featureStore){if(a.paging){d.lastPageButton.disable();d.nextPageButton.disable();d.firstPageButton.disable();d.prevPageButton.disable();d.zoomToPageButton.disable()}this.displayTotalResults()}}if(a.featureStore){c.call(this)}a.on("layerchange",c,this);return d}});Ext.preg(gxp.plugins.FeatureGrid.prototype.ptype,gxp.plugins.FeatureGrid);Ext.namespace("gxp.plugins");gxp.plugins.StyleWriter=Ext.extend(Ext.util.Observable,{deletedStyles:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);this.deletedStyles=[];gxp.plugins.StyleWriter.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;a.stylesStore.on({remove:function(c,b,d){var e=b.get("name");b.get("name")===e&&this.deletedStyles.push(e)},scope:this});a.on({beforesaved:this.write,scope:this})},write:function(b,a){b.stylesStore.commitChanges();b.fireEvent("saved",b,b.selectedStyle.get("name"))}});Ext.namespace("gxp.plugins");gxp.plugins.GeoServerStyleWriter=Ext.extend(gxp.plugins.StyleWriter,{baseUrl:"/geoserver/rest",constructor:function(a){this.initialConfig=a;Ext.apply(this,a);gxp.plugins.GeoServerStyleWriter.superclass.constructor.apply(this,arguments)},write:function(b){delete this._failed;b=b||{};var c=[];var a=this.target.stylesStore;a.each(function(e){(e.phantom||a.modified.indexOf(e)!==-1)&&this.writeStyle(e,c)},this);var d=function(){var g=this.target;if(this._failed!==true){this.deleteStyles();var e=this.target.stylesStore.getModifiedRecords();for(var f=e.length-1;f>=0;--f){e[f].phantom=false}g.stylesStore.commitChanges();b.success&&b.success.call(b.scope);g.fireEvent("saved",g,g.selectedStyle.get("name"))}else{g.fireEvent("savefailed",g,g.selectedStyle.get("name"))}};if(c.length>0){gxp.util.dispatch(c,function(){this.assignStyles(b.defaultStyle,d)},this)}else{this.assignStyles(b.defaultStyle,d)}},writeStyle:function(c,b){var a=c.get("userStyle").name;b.push(function(e,d){Ext.Ajax.request({method:c.phantom===true?"POST":"PUT",url:this.baseUrl+"/styles"+(c.phantom===true?"":"/"+a+".xml"),headers:{"Content-Type":"application/vnd.ogc.sld+xml; charset=UTF-8"},xmlData:this.target.createSLD({userStyles:[a]}),failure:function(){this._failed=true;e.call(this)},success:c.phantom===true?function(){Ext.Ajax.request({method:"POST",url:this.baseUrl+"/layers/"+this.target.layerRecord.get("name")+"/styles.json",jsonData:{style:{name:a}},failure:function(){this._failed=true;e.call(this)},success:e,scope:this})}:e,scope:this})})},assignStyles:function(c,b){var a=[];this.target.stylesStore.each(function(d){if(!c&&d.get("userStyle").isDefault===true){c=d.get("name")}if(d.get("name")!==c&&this.deletedStyles.indexOf(d.id)===-1){a.push({name:d.get("name")})}},this);Ext.Ajax.request({method:"PUT",url:this.baseUrl+"/layers/"+this.target.layerRecord.get("name")+".json",jsonData:{layer:{defaultStyle:{name:c},styles:a.length>0?{style:a}:{},enabled:true}},success:b,failure:function(){this._failed=true;b.call(this)},scope:this})},deleteStyles:function(){for(var b=0,a=this.deletedStyles.length;b<a;++b){Ext.Ajax.request({method:"DELETE",url:this.baseUrl+"/styles/"+this.deletedStyles[b]+"?purge=true"})}this.deletedStyles=[]}});Ext.preg("gxp_geoserverstylewriter",gxp.plugins.GeoServerStyleWriter);Ext.namespace("gxp.plugins");gxp.plugins.LayerSource=Ext.extend(Ext.util.Observable,{store:null,lazy:false,hidden:false,title:"",constructor:function(a){this.initialConfig=a;Ext.apply(this,a);this.addEvents("ready","failure");gxp.plugins.LayerSource.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;this.createStore()},getMapProjection:function(){var a=this.target.mapPanel.map.projection;return this.target.mapPanel.map.getProjectionObject()||(a&&new OpenLayers.Projection(a))||new OpenLayers.Projection("EPSG:4326")},getProjection:function(a){var b=a.getLayer();var d=this.getMapProjection();var c=b.projection?b.projection instanceof OpenLayers.Projection?b.projection:new OpenLayers.Projection(b.projection):d;return c.equals(d)?d:null},createStore:function(){this.fireEvent("ready",this)},createLayerRecord:function(a){},getConfigForRecord:function(a){var b=a.getLayer();return{source:a.get("source"),name:a.get("name"),title:a.get("title"),visibility:b.getVisibility(),opacity:b.opacity||undefined,group:a.get("group"),fixed:a.get("fixed"),selected:a.get("selected")}},getState:function(){return Ext.apply({},this.initialConfig)}});OpenLayers.Layer.XYZ=OpenLayers.Class(OpenLayers.Layer.Grid,{isBaseLayer:true,sphericalMercator:false,zoomOffset:0,serverResolutions:null,initialize:function(c,b,a){if(a&&a.sphericalMercator||this.sphericalMercator){a=OpenLayers.Util.extend({projection:"EPSG:900913",numZoomLevels:19},a)}OpenLayers.Layer.Grid.prototype.initialize.apply(this,[c||this.name,b||this.url,{},a])},clone:function(a){if(a==null){a=new OpenLayers.Layer.XYZ(this.name,this.url,this.getOptions())}a=OpenLayers.Layer.Grid.prototype.clone.apply(this,[a]);return a},getURL:function(d){var a=this.getXYZ(d);var b=this.url;if(OpenLayers.Util.isArray(b)){var c=""+a.x+a.y+a.z;b=this.selectUrl(c,b)}return OpenLayers.String.format(b,a)},getXYZ:function(d){var c=this.getServerResolution();var a=Math.round((d.left-this.maxExtent.left)/(c*this.tileSize.w));var f=Math.round((this.maxExtent.top-d.top)/(c*this.tileSize.h));var e=this.getServerZoom();if(this.wrapDateLine){var b=Math.pow(2,e);a=((a%b)+b)%b}return{x:a,y:f,z:e}},setMap:function(a){OpenLayers.Layer.Grid.prototype.setMap.apply(this,arguments);if(!this.tileOrigin){this.tileOrigin=new OpenLayers.LonLat(this.maxExtent.left,this.maxExtent.bottom)}},CLASS_NAME:"OpenLayers.Layer.XYZ"});OpenLayers.Layer.Bing=OpenLayers.Class(OpenLayers.Layer.XYZ,{key:null,serverResolutions:[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135,0.29858214169740677,0.14929107084870338,0.07464553542435169],attributionTemplate:'<span class="olBingAttribution ${type}"><div><a target="_blank" href="http://www.bing.com/maps/"><img src="${logo}" /></a></div>${copyrights}<a style="white-space: nowrap" target="_blank" href="http://www.microsoft.com/maps/product/terms.html">Terms of Use</a></span>',metadata:null,protocolRegex:/^http:/i,type:"Road",culture:"en-US",metadataParams:null,tileOptions:null,protocol:~window.location.href.indexOf("http")?"":"http:",initialize:function(c){c=OpenLayers.Util.applyDefaults({sphericalMercator:true},c);var b=c.name||"Bing "+(c.type||this.type);var a=[b,null,c];OpenLayers.Layer.XYZ.prototype.initialize.apply(this,a);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:"anonymous"},this.options.tileOptions);this.loadMetadata()},loadMetadata:function(){this._callbackId="_callback_"+this.id.replace(/\./g,"_");window[this._callbackId]=OpenLayers.Function.bind(OpenLayers.Layer.Bing.processMetadata,this);var c=OpenLayers.Util.applyDefaults({key:this.key,jsonp:this._callbackId,include:"ImageryProviders"},this.metadataParams);var b=this.protocol+"//dev.virtualearth.net/REST/v1/Imagery/Metadata/"+this.type+"?"+OpenLayers.Util.getParameterString(c);var a=document.createElement("script");a.type="text/javascript";a.src=b;a.id=this._callbackId;document.getElementsByTagName("head")[0].appendChild(a)},initLayer:function(){var c=this.metadata.resourceSets[0].resources[0];var a=c.imageUrl.replace("{quadkey}","${quadkey}");a=a.replace("{culture}",this.culture);a=a.replace(this.protocolRegex,this.protocol);this.url=[];for(var b=0;b<c.imageUrlSubdomains.length;++b){this.url.push(a.replace("{subdomain}",c.imageUrlSubdomains[b]))}this.addOptions({maxResolution:Math.min(this.serverResolutions[c.zoomMin],this.maxResolution||Number.POSITIVE_INFINITY),numZoomLevels:Math.min(c.zoomMax+1-c.zoomMin,this.numZoomLevels)},true);if(!this.isBaseLayer){this.redraw()}this.updateAttribution()},getURL:function(a){if(!this.url){return}var g=this.getXYZ(a),k=g.x,h=g.y,f=g.z;var c=[];for(var d=f;d>0;--d){var j="0";var l=1<<(d-1);if((k&l)!=0){j++}if((h&l)!=0){j++;j++}c.push(j)}var e=c.join("");var b=this.selectUrl(""+k+h+f,this.url);return OpenLayers.String.format(b,{quadkey:e})},updateAttribution:function(){var h=this.metadata;if(!h.resourceSets||!this.map||!this.map.center){return}var g=h.resourceSets[0].resources[0];var q=this.map.getExtent().transform(this.map.getProjectionObject(),new OpenLayers.Projection("EPSG:4326"));var d=g.imageryProviders||[],o=OpenLayers.Util.indexOf(this.serverResolutions,this.getServerResolution()),b="",k,e,n,c,f,m,l;for(e=0,n=d.length;e<n;++e){k=d[e];for(c=0,f=k.coverageAreas.length;c<f;++c){l=k.coverageAreas[c];m=OpenLayers.Bounds.fromArray(l.bbox,true);if(q.intersectsBounds(m)&&o<=l.zoomMax&&o>=l.zoomMin){b+=k.attribution+" "}}}var a=h.brandLogoUri.replace(this.protocolRegex,this.protocol);this.attribution=OpenLayers.String.format(this.attributionTemplate,{type:this.type.toLowerCase(),logo:a,copyrights:b});this.map&&this.map.events.triggerEvent("changelayer",{layer:this,property:"attribution"})},setMap:function(){OpenLayers.Layer.XYZ.prototype.setMap.apply(this,arguments);this.map.events.register("moveend",this,this.updateAttribution)},clone:function(a){if(a==null){a=new OpenLayers.Layer.Bing(this.options)}a=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[a]);return a},destroy:function(){this.map&&this.map.events.unregister("moveend",this,this.updateAttribution);OpenLayers.Layer.XYZ.prototype.destroy.apply(this,arguments)},CLASS_NAME:"OpenLayers.Layer.Bing"});OpenLayers.Layer.Bing.processMetadata=function(b){this.metadata=b;this.initLayer();var a=document.getElementById(this._callbackId);a.parentNode.removeChild(a);window[this._callbackId]=undefined;delete this._callbackId};Ext.namespace("gxp.plugins");gxp.plugins.BingSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_bingsource",title:"Bing Layers",roadTitle:"Bing Roads",aerialTitle:"Bing Aerial",labeledAerialTitle:"Bing Aerial With Labels",apiKey:"AqTGBsziZHIJYYxgivLBf0hVdrAk9mWO5cQcb8Yux8sW5M8c8opEC2lZqKR1ZZXf",createStore:function(){var a=[new OpenLayers.Layer.Bing({key:this.apiKey,name:this.roadTitle,type:"Road",buffer:1,transitionEffect:"resize"}),new OpenLayers.Layer.Bing({key:this.apiKey,name:this.aerialTitle,type:"Aerial",buffer:1,transitionEffect:"resize"}),new OpenLayers.Layer.Bing({key:this.apiKey,name:this.labeledAerialTitle,type:"AerialWithLabels",buffer:1,transitionEffect:"resize"})];this.store=new GeoExt.data.LayerStore({layers:a,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(b){b.set("group","background")});this.fireEvent("ready",this)},createLayerRecord:function(c){var a;var b=this.store.findExact("name",c.name);if(b>-1){a=this.store.getAt(b).copy(Ext.data.Record.id({}));var d=a.getLayer().clone();if(c.title){d.setName(c.title);a.set("title",c.title)}if("visibility" in c){d.visibility=c.visibility}a.set("selected",c.selected||false);a.set("source",c.source);a.set("name",c.name);if("group" in c){a.set("group",c.group)}a.data.layer=d;a.commit()}return a}});Ext.preg(gxp.plugins.BingSource.prototype.ptype,gxp.plugins.BingSource);OpenLayers.Layer.SphericalMercator={getExtent:function(){var a=null;if(this.sphericalMercator){a=this.map.calculateBounds()}else{a=OpenLayers.Layer.FixedZoomLevels.prototype.getExtent.apply(this)}return a},getLonLatFromViewPortPx:function(a){return OpenLayers.Layer.prototype.getLonLatFromViewPortPx.apply(this,arguments)},getViewPortPxFromLonLat:function(a){return OpenLayers.Layer.prototype.getViewPortPxFromLonLat.apply(this,arguments)},initMercatorParameters:function(){this.RESOLUTIONS=[];var a=156543.03390625;for(var b=0;b<=this.MAX_ZOOM_LEVEL;++b){this.RESOLUTIONS[b]=a/Math.pow(2,b)}this.units="m";this.projection=this.projection||"EPSG:900913"},forwardMercator:(function(){var a=new OpenLayers.Projection("EPSG:4326");var b=new OpenLayers.Projection("EPSG:900913");return function(e,d){var c=OpenLayers.Projection.transform({x:e,y:d},a,b);return new OpenLayers.LonLat(c.x,c.y)}})(),inverseMercator:(function(){var a=new OpenLayers.Projection("EPSG:4326");var b=new OpenLayers.Projection("EPSG:900913");return function(d,e){var c=OpenLayers.Projection.transform({x:d,y:e},b,a);return new OpenLayers.LonLat(c.x,c.y)}})()};OpenLayers.Layer.EventPane=OpenLayers.Class(OpenLayers.Layer,{smoothDragPan:true,isBaseLayer:true,isFixed:true,pane:null,mapObject:null,initialize:function(b,a){OpenLayers.Layer.prototype.initialize.apply(this,arguments);if(this.pane==null){this.pane=OpenLayers.Util.createDiv(this.div.id+"_EventPane")}},destroy:function(){this.mapObject=null;this.pane=null;OpenLayers.Layer.prototype.destroy.apply(this,arguments)},setMap:function(a){OpenLayers.Layer.prototype.setMap.apply(this,arguments);this.pane.style.zIndex=parseInt(this.div.style.zIndex)+1;this.pane.style.display=this.div.style.display;this.pane.style.width="100%";this.pane.style.height="100%";if(OpenLayers.BROWSER_NAME=="msie"){this.pane.style.background="url("+OpenLayers.Util.getImageLocation("blank.gif")+")"}if(this.isFixed){this.map.viewPortDiv.appendChild(this.pane)}else{this.map.layerContainerDiv.appendChild(this.pane)}this.loadMapObject();if(this.mapObject==null){this.loadWarningMessage()}},removeMap:function(a){if(this.pane&&this.pane.parentNode){this.pane.parentNode.removeChild(this.pane)}OpenLayers.Layer.prototype.removeMap.apply(this,arguments)},loadWarningMessage:function(){this.div.style.backgroundColor="darkblue";var g=this.map.getSize();var a=Math.min(g.w,300);var e=Math.min(g.h,200);var b=new OpenLayers.Size(a,e);var d=new OpenLayers.Pixel(g.w/2,g.h/2);var c=d.add(-b.w/2,-b.h/2);var f=OpenLayers.Util.createDiv(this.name+"_warning",c,b,null,null,null,"auto");f.style.padding="7px";f.style.backgroundColor="yellow";f.innerHTML=this.getWarningHTML();this.div.appendChild(f)},getWarningHTML:function(){return""},display:function(a){OpenLayers.Layer.prototype.display.apply(this,arguments);this.pane.style.display=this.div.style.display},setZIndex:function(a){OpenLayers.Layer.prototype.setZIndex.apply(this,arguments);this.pane.style.zIndex=parseInt(this.div.style.zIndex)+1},moveByPx:function(b,a){OpenLayers.Layer.prototype.moveByPx.apply(this,arguments);if(this.dragPanMapObject){this.dragPanMapObject(b,-a)}else{this.moveTo(this.map.getCachedCenter())}},moveTo:function(c,d,j){OpenLayers.Layer.prototype.moveTo.apply(this,arguments);if(this.mapObject!=null){var e=this.map.getCenter();var g=this.map.getZoom();if(e!=null){var f=this.getMapObjectCenter();var b=this.getOLLonLatFromMapObjectLonLat(f);var h=this.getMapObjectZoom();var m=this.getOLZoomFromMapObjectZoom(h);if(!(e.equals(b))||g!=m){if(!d&&b&&this.dragPanMapObject&&this.smoothDragPan){var i=this.map.getViewPortPxFromLonLat(b);var k=this.map.getViewPortPxFromLonLat(e);this.dragPanMapObject(k.x-i.x,i.y-k.y)}else{var a=this.getMapObjectLonLatFromOLLonLat(e);var l=this.getMapObjectZoomFromOLZoom(g);this.setMapObjectCenter(a,l,j)}}}}},getLonLatFromViewPortPx:function(a){var b=null;if((this.mapObject!=null)&&(this.getMapObjectCenter()!=null)){var d=this.getMapObjectPixelFromOLPixel(a);var c=this.getMapObjectLonLatFromMapObjectPixel(d);b=this.getOLLonLatFromMapObjectLonLat(c)}return b},getViewPortPxFromLonLat:function(b){var a=null;if((this.mapObject!=null)&&(this.getMapObjectCenter()!=null)){var d=this.getMapObjectLonLatFromOLLonLat(b);var c=this.getMapObjectPixelFromMapObjectLonLat(d);a=this.getOLPixelFromMapObjectPixel(c)}return a},getOLLonLatFromMapObjectLonLat:function(d){var a=null;if(d!=null){var c=this.getLongitudeFromMapObjectLonLat(d);var b=this.getLatitudeFromMapObjectLonLat(d);a=new OpenLayers.LonLat(c,b)}return a},getMapObjectLonLatFromOLLonLat:function(a){var b=null;if(a!=null){b=this.getMapObjectLonLatFromLonLat(a.lon,a.lat)}return b},getOLPixelFromMapObjectPixel:function(d){var b=null;if(d!=null){var a=this.getXFromMapObjectPixel(d);var c=this.getYFromMapObjectPixel(d);b=new OpenLayers.Pixel(a,c)}return b},getMapObjectPixelFromOLPixel:function(a){var b=null;if(a!=null){b=this.getMapObjectPixelFromXY(a.x,a.y)}return b},CLASS_NAME:"OpenLayers.Layer.EventPane"});OpenLayers.Layer.FixedZoomLevels=OpenLayers.Class({initialize:function(){},initResolutions:function(){var c=["minZoomLevel","maxZoomLevel","numZoomLevels"];for(var b=0,a=c.length;b<a;b++){var f=c[b];this[f]=(this.options[f]!=null)?this.options[f]:this.map[f]}if((this.minZoomLevel==null)||(this.minZoomLevel<this.MIN_ZOOM_LEVEL)){this.minZoomLevel=this.MIN_ZOOM_LEVEL}var g;var e=this.MAX_ZOOM_LEVEL-this.minZoomLevel+1;if(((this.options.numZoomLevels==null)&&(this.options.maxZoomLevel!=null))||((this.numZoomLevels==null)&&(this.maxZoomLevel!=null))){g=this.maxZoomLevel-this.minZoomLevel+1}else{g=this.numZoomLevels}if(g!=null){this.numZoomLevels=Math.min(g,e)}else{this.numZoomLevels=e}this.maxZoomLevel=this.minZoomLevel+this.numZoomLevels-1;if(this.RESOLUTIONS!=null){var d=0;this.resolutions=[];for(var b=this.minZoomLevel;b<=this.maxZoomLevel;b++){this.resolutions[d++]=this.RESOLUTIONS[b]}this.maxResolution=this.resolutions[0];this.minResolution=this.resolutions[this.resolutions.length-1]}},getResolution:function(){if(this.resolutions!=null){return OpenLayers.Layer.prototype.getResolution.apply(this,arguments)}else{var a=null;var c=this.map.getSize();var b=this.getExtent();if((c!=null)&&(b!=null)){a=Math.max(b.getWidth()/c.w,b.getHeight()/c.h)}return a}},getExtent:function(){var c=this.map.getSize();var a=this.getLonLatFromViewPortPx({x:0,y:0});var b=this.getLonLatFromViewPortPx({x:c.w,y:c.h});if((a!=null)&&(b!=null)){return new OpenLayers.Bounds(a.lon,b.lat,b.lon,a.lat)}else{return null}},getZoomForResolution:function(a){if(this.resolutions!=null){return OpenLayers.Layer.prototype.getZoomForResolution.apply(this,arguments)}else{var b=OpenLayers.Layer.prototype.getExtent.apply(this,[]);return this.getZoomForExtent(b)}},getOLZoomFromMapObjectZoom:function(a){var b=null;if(a!=null){b=a-this.minZoomLevel;if(this.map.baseLayer!==this){b=this.map.baseLayer.getZoomForResolution(this.getResolutionForZoom(b))}}return b},getMapObjectZoomFromOLZoom:function(a){var b=null;if(a!=null){b=a+this.minZoomLevel;if(this.map.baseLayer!==this){b=this.getZoomForResolution(this.map.baseLayer.getResolutionForZoom(b))}}return b},CLASS_NAME:"OpenLayers.Layer.FixedZoomLevels"});OpenLayers.Layer.Google=OpenLayers.Class(OpenLayers.Layer.EventPane,OpenLayers.Layer.FixedZoomLevels,{MIN_ZOOM_LEVEL:0,MAX_ZOOM_LEVEL:21,RESOLUTIONS:[1.40625,0.703125,0.3515625,0.17578125,0.087890625,0.0439453125,0.02197265625,0.010986328125,0.0054931640625,0.00274658203125,0.001373291015625,0.0006866455078125,0.00034332275390625,0.000171661376953125,0.0000858306884765625,0.00004291534423828125,0.00002145767211914062,0.00001072883605957031,0.00000536441802978515,0.00000268220901489257,0.000001341104507446289,6.705522537231445e-7],type:null,wrapDateLine:true,sphericalMercator:false,version:null,initialize:function(c,b){b=b||{};if(!b.version){b.version=typeof GMap2==="function"?"2":"3"}var a=OpenLayers.Layer.Google["v"+b.version.replace(/\./g,"_")];if(a){OpenLayers.Util.applyDefaults(b,a)}else{throw"Unsupported Google Maps API version: "+b.version}OpenLayers.Util.applyDefaults(b,a.DEFAULTS);if(b.maxExtent){b.maxExtent=b.maxExtent.clone()}OpenLayers.Layer.EventPane.prototype.initialize.apply(this,[c,b]);OpenLayers.Layer.FixedZoomLevels.prototype.initialize.apply(this,[c,b]);if(this.sphericalMercator){OpenLayers.Util.extend(this,OpenLayers.Layer.SphericalMercator);this.initMercatorParameters()}},clone:function(){return new OpenLayers.Layer.Google(this.name,this.getOptions())},setVisibility:function(b){var a=this.opacity==null?1:this.opacity;OpenLayers.Layer.EventPane.prototype.setVisibility.apply(this,arguments);this.setOpacity(a)},display:function(a){if(!this._dragging){this.setGMapVisibility(a)}OpenLayers.Layer.EventPane.prototype.display.apply(this,arguments)},moveTo:function(b,a,c){this._dragging=c;OpenLayers.Layer.EventPane.prototype.moveTo.apply(this,arguments);delete this._dragging},setOpacity:function(b){if(b!==this.opacity){if(this.map!=null){this.map.events.triggerEvent("changelayer",{layer:this,property:"opacity"})}this.opacity=b}if(this.getVisibility()){var a=this.getMapContainer();OpenLayers.Util.modifyDOMElement(a,null,null,null,null,null,null,b)}},destroy:function(){if(this.map){this.setGMapVisibility(false);var a=OpenLayers.Layer.Google.cache[this.map.id];if(a&&a.count<=1){this.removeGMapElements()}}OpenLayers.Layer.EventPane.prototype.destroy.apply(this,arguments)},removeGMapElements:function(){var d=OpenLayers.Layer.Google.cache[this.map.id];if(d){var b=this.mapObject&&this.getMapContainer();if(b&&b.parentNode){b.parentNode.removeChild(b)}var c=d.termsOfUse;if(c&&c.parentNode){c.parentNode.removeChild(c)}var a=d.poweredBy;if(a&&a.parentNode){a.parentNode.removeChild(a)}if(this.mapObject&&window.google&&google.maps&&google.maps.event&&google.maps.event.clearListeners){google.maps.event.clearListeners(this.mapObject,"tilesloaded")}}},removeMap:function(b){if(this.visibility&&this.mapObject){this.setGMapVisibility(false)}var a=OpenLayers.Layer.Google.cache[b.id];if(a){if(a.count<=1){this.removeGMapElements();delete OpenLayers.Layer.Google.cache[b.id]}else{--a.count}}delete this.termsOfUse;delete this.poweredBy;delete this.mapObject;delete this.dragObject;OpenLayers.Layer.EventPane.prototype.removeMap.apply(this,arguments)},getOLBoundsFromMapObjectBounds:function(b){var c=null;if(b!=null){var a=b.getSouthWest();var d=b.getNorthEast();if(this.sphericalMercator){a=this.forwardMercator(a.lng(),a.lat());d=this.forwardMercator(d.lng(),d.lat())}else{a=new OpenLayers.LonLat(a.lng(),a.lat());d=new OpenLayers.LonLat(d.lng(),d.lat())}c=new OpenLayers.Bounds(a.lon,a.lat,d.lon,d.lat)}return c},getWarningHTML:function(){return OpenLayers.i18n("googleWarning")},getMapObjectCenter:function(){return this.mapObject.getCenter()},getMapObjectZoom:function(){return this.mapObject.getZoom()},getLongitudeFromMapObjectLonLat:function(a){return this.sphericalMercator?this.forwardMercator(a.lng(),a.lat()).lon:a.lng()},getLatitudeFromMapObjectLonLat:function(b){var a=this.sphericalMercator?this.forwardMercator(b.lng(),b.lat()).lat:b.lat();return a},getXFromMapObjectPixel:function(a){return a.x},getYFromMapObjectPixel:function(a){return a.y},CLASS_NAME:"OpenLayers.Layer.Google"});OpenLayers.Layer.Google.cache={};OpenLayers.Layer.Google.v2={termsOfUse:null,poweredBy:null,dragObject:null,loadMapObject:function(){if(!this.type){this.type=G_NORMAL_MAP}var g,d,a;var c=OpenLayers.Layer.Google.cache[this.map.id];if(c){g=c.mapObject;d=c.termsOfUse;a=c.poweredBy;++c.count}else{var b=this.map.viewPortDiv;var h=document.createElement("div");h.id=this.map.id+"_GMap2Container";h.style.position="absolute";h.style.width="100%";h.style.height="100%";b.appendChild(h);try{g=new GMap2(h);d=h.lastChild;b.appendChild(d);d.style.zIndex="1100";d.style.right="";d.style.bottom="";d.className="olLayerGoogleCopyright";a=h.lastChild;b.appendChild(a);a.style.zIndex="1100";a.style.right="";a.style.bottom="";a.className="olLayerGooglePoweredBy gmnoprint"}catch(f){throw (f)}OpenLayers.Layer.Google.cache[this.map.id]={mapObject:g,termsOfUse:d,poweredBy:a,count:1}}this.mapObject=g;this.termsOfUse=d;this.poweredBy=a;if(OpenLayers.Util.indexOf(this.mapObject.getMapTypes(),this.type)===-1){this.mapObject.addMapType(this.type)}if(typeof g.getDragObject=="function"){this.dragObject=g.getDragObject()}else{this.dragPanMapObject=null}if(this.isBaseLayer===false){this.setGMapVisibility(this.div.style.display!=="none")}},onMapResize:function(){if(this.visibility&&this.mapObject.isLoaded()){this.mapObject.checkResize()}else{if(!this._resized){var a=this;var b=GEvent.addListener(this.mapObject,"load",function(){GEvent.removeListener(b);delete a._resized;a.mapObject.checkResize();a.moveTo(a.map.getCenter(),a.map.getZoom())})}this._resized=true}},setGMapVisibility:function(c){var b=OpenLayers.Layer.Google.cache[this.map.id];if(b){var a=this.mapObject.getContainer();if(c===true){this.mapObject.setMapType(this.type);a.style.display="";this.termsOfUse.style.left="";this.termsOfUse.style.display="";this.poweredBy.style.display="";b.displayed=this.id}else{if(b.displayed===this.id){delete b.displayed}if(!b.displayed){a.style.display="none";this.termsOfUse.style.display="none";this.termsOfUse.style.left="-9999px";this.poweredBy.style.display="none"}}}},getMapContainer:function(){return this.mapObject.getContainer()},getMapObjectBoundsFromOLBounds:function(c){var b=null;if(c!=null){var a=this.sphericalMercator?this.inverseMercator(c.bottom,c.left):new OpenLayers.LonLat(c.bottom,c.left);var d=this.sphericalMercator?this.inverseMercator(c.top,c.right):new OpenLayers.LonLat(c.top,c.right);b=new GLatLngBounds(new GLatLng(a.lat,a.lon),new GLatLng(d.lat,d.lon))}return b},setMapObjectCenter:function(a,b){this.mapObject.setCenter(a,b)},dragPanMapObject:function(b,a){this.dragObject.moveBy(new GSize(-b,a))},getMapObjectLonLatFromMapObjectPixel:function(a){return this.mapObject.fromContainerPixelToLatLng(a)},getMapObjectPixelFromMapObjectLonLat:function(a){return this.mapObject.fromLatLngToContainerPixel(a)},getMapObjectZoomFromMapObjectBounds:function(a){return this.mapObject.getBoundsZoomLevel(a)},getMapObjectLonLatFromLonLat:function(d,b){var c;if(this.sphericalMercator){var a=this.inverseMercator(d,b);c=new GLatLng(a.lat,a.lon)}else{c=new GLatLng(b,d)}return c},getMapObjectPixelFromXY:function(a,b){return new GPoint(a,b)}};OpenLayers.Layer.Google.v3={DEFAULTS:{sphericalMercator:true,projection:"EPSG:900913"},animationEnabled:true,loadMapObject:function(){if(!this.type){this.type=google.maps.MapTypeId.ROADMAP}var e;var d=OpenLayers.Layer.Google.cache[this.map.id];if(d){e=d.mapObject;++d.count}else{var a=this.map.getCenter();var c=document.createElement("div");c.className="olForeignContainer";c.style.width="100%";c.style.height="100%";e=new google.maps.Map(c,{center:a?new google.maps.LatLng(a.lat,a.lon):new google.maps.LatLng(0,0),zoom:this.map.getZoom()||0,mapTypeId:this.type,disableDefaultUI:true,keyboardShortcuts:false,draggable:false,disableDoubleClickZoom:true,scrollwheel:false,streetViewControl:false});var b=document.createElement("div");b.style.width="100%";b.style.height="100%";e.controls[google.maps.ControlPosition.TOP_LEFT].push(b);d={googleControl:b,mapObject:e,count:1};OpenLayers.Layer.Google.cache[this.map.id]=d}this.mapObject=e;this.setGMapVisibility(this.visibility)},onMapResize:function(){if(this.visibility){google.maps.event.trigger(this.mapObject,"resize")}},setGMapVisibility:function(d){var a=OpenLayers.Layer.Google.cache[this.map.id];var b=this.map;if(a){var j=this.type;var e=b.layers;var g;for(var f=e.length-1;f>=0;--f){g=e[f];if(g instanceof OpenLayers.Layer.Google&&g.visibility===true&&g.inRange===true){j=g.type;d=true;break}}var c=this.mapObject.getDiv();if(d===true){if(c.parentNode!==b.div){if(!a.rendered){var h=this;google.maps.event.addListenerOnce(this.mapObject,"tilesloaded",function(){a.rendered=true;h.setGMapVisibility(h.getVisibility());h.moveTo(h.map.getCenter())})}else{b.div.appendChild(c);a.googleControl.appendChild(b.viewPortDiv);google.maps.event.trigger(this.mapObject,"resize")}}this.mapObject.setMapTypeId(j)}else{if(a.googleControl.hasChildNodes()){b.div.appendChild(b.viewPortDiv);b.div.removeChild(c)}}}},getMapContainer:function(){return this.mapObject.getDiv()},getMapObjectBoundsFromOLBounds:function(c){var b=null;if(c!=null){var a=this.sphericalMercator?this.inverseMercator(c.bottom,c.left):new OpenLayers.LonLat(c.bottom,c.left);var d=this.sphericalMercator?this.inverseMercator(c.top,c.right):new OpenLayers.LonLat(c.top,c.right);b=new google.maps.LatLngBounds(new google.maps.LatLng(a.lat,a.lon),new google.maps.LatLng(d.lat,d.lon))}return b},getMapObjectLonLatFromMapObjectPixel:function(h){var b=this.map.getSize();var f=this.getLongitudeFromMapObjectLonLat(this.mapObject.center);var d=this.getLatitudeFromMapObjectLonLat(this.mapObject.center);var a=this.map.getResolution();var g=h.x-(b.w/2);var e=h.y-(b.h/2);var c=new OpenLayers.LonLat(f+g*a,d-e*a);if(this.wrapDateLine){c=c.wrapDateLine(this.maxExtent)}return this.getMapObjectLonLatFromLonLat(c.lon,c.lat)},getMapObjectPixelFromMapObjectLonLat:function(e){var d=this.getLongitudeFromMapObjectLonLat(e);var c=this.getLatitudeFromMapObjectLonLat(e);var a=this.map.getResolution();var b=this.map.getExtent();return this.getMapObjectPixelFromXY((1/a*(d-b.left)),(1/a*(b.top-c)))},setMapObjectCenter:function(a,c){if(this.animationEnabled===false&&c!=this.mapObject.zoom){var b=this.getMapContainer();google.maps.event.addListenerOnce(this.mapObject,"idle",function(){b.style.visibility=""});b.style.visibility="hidden"}this.mapObject.setOptions({center:a,zoom:c})},getMapObjectZoomFromMapObjectBounds:function(a){return this.mapObject.getBoundsZoomLevel(a)},getMapObjectLonLatFromLonLat:function(d,b){var c;if(this.sphericalMercator){var a=this.inverseMercator(d,b);c=new google.maps.LatLng(a.lat,a.lon)}else{c=new google.maps.LatLng(b,d)}return c},getMapObjectPixelFromXY:function(a,b){return new google.maps.Point(a,b)}};Ext.namespace("gxp.plugins");gxp.plugins.GoogleSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_googlesource",timeout:7000,title:"Google Layers",roadmapAbstract:"Show street map",satelliteAbstract:"Show satellite imagery",hybridAbstract:"Show imagery with street names",terrainAbstract:"Show street map with terrain",otherParams:"sensor=false",constructor:function(a){this.config=a;gxp.plugins.GoogleSource.superclass.constructor.apply(this,arguments)},createStore:function(){gxp.plugins.GoogleSource.loader.onLoad({otherParams:this.otherParams,timeout:this.timeout,callback:this.syncCreateStore,errback:function(){delete this.store;this.fireEvent("failure",this,"The Google Maps script failed to load within the provided timeout ("+(this.timeout/1000)+" s).")},scope:this})},syncCreateStore:function(){var a={ROADMAP:{"abstract":this.roadmapAbstract,MAX_ZOOM_LEVEL:20},SATELLITE:{"abstract":this.satelliteAbstract},HYBRID:{"abstract":this.hybridAbstract},TERRAIN:{"abstract":this.terrainAbstract,MAX_ZOOM_LEVEL:15}};var d=[];var b,c;for(b in a){c=google.maps.MapTypeId[b];d.push(new OpenLayers.Layer.Google("Google "+c.replace(/\w/,function(e){return e.toUpperCase()}),{type:c,typeName:b,MAX_ZOOM_LEVEL:a[b].MAX_ZOOM_LEVEL,maxExtent:new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34),restrictedExtent:new OpenLayers.Bounds(-20037508.34,-20037508.34,20037508.34,20037508.34),projection:this.projection}))}this.store=new GeoExt.data.LayerStore({layers:d,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"typeName"},{name:"abstract",type:"string"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(e){e.set("abstract",a[e.get("name")]["abstract"])});this.fireEvent("ready",this)},createLayerRecord:function(b){var a;var d=function(e){return e.get("name")===b.name};if(this.target.mapPanel.layers.findBy(d)==-1){a=this.store.getAt(this.store.findBy(d)).clone();var c=a.getLayer();if(b.title){c.setName(b.title);a.set("title",b.title)}if("visibility" in b){c.visibility=b.visibility}a.set("selected",b.selected||false);a.set("source",b.source);a.set("name",b.name);if("group" in b){a.set("group",b.group)}a.commit()}return a}});gxp.plugins.GoogleSource.loader=new (Ext.extend(Ext.util.Observable,{ready:!!(window.google&&google.maps),loading:false,constructor:function(){this.addEvents("ready","failure");return Ext.util.Observable.prototype.constructor.apply(this,arguments)},onScriptLoad:function(){var a=gxp.plugins.GoogleSource.loader;if(!a.ready){a.ready=true;a.loading=false;a.fireEvent("ready")}},onLoad:function(a){if(this.ready){window.setTimeout(function(){a.callback.call(a.scope)},0)}else{if(!this.loading){this.loadScript(a)}else{this.on({ready:a.callback,failure:a.errback||Ext.emptyFn,scope:a.scope})}}},loadScript:function(d){var f={autoload:Ext.encode({modules:[{name:"maps",version:3.3,nocss:"true",callback:"gxp.plugins.GoogleSource.loader.onScriptLoad",other_params:d.otherParams}]})};var c=document.createElement("script");c.src="http://www.google.com/jsapi?"+Ext.urlEncode(f);var b=d.errback||Ext.emptyFn;var e=d.timeout||gxp.plugins.GoogleSource.prototype.timeout;window.setTimeout((function(){if(!gxp.plugins.GoogleSource.loader.ready){this.loading=false;this.ready=false;document.getElementsByTagName("head")[0].removeChild(c);b.call(d.scope);this.fireEvent("failure");this.purgeListeners()}}).createDelegate(this),e);this.on({ready:d.callback,scope:d.scope});this.loading=true;function a(){document.getElementsByTagName("head")[0].appendChild(c)}if(document.body){a()}else{Ext.onReady(a)}}}))();Ext.preg(gxp.plugins.GoogleSource.prototype.ptype,gxp.plugins.GoogleSource);Ext.namespace("gxp.plugins");gxp.plugins.OLSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_olsource",createLayerRecord:function(b){var f;var a=window;var c=b.type.split(".");for(var e=0,k=c.length;e<k;++e){a=a[c[e]];if(!a){break}}if(a&&a.prototype&&a.prototype.initialize){var h=function(){a.prototype.initialize.apply(this,b.args)};h.prototype=a.prototype;var g=new h();if("visibility" in b){g.visibility=b.visibility}var j=GeoExt.data.LayerRecord.create([{name:"name",type:"string"},{name:"source",type:"string"},{name:"group",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"},{name:"type",type:"string"},{name:"args"},{name:"queryable",type:"boolean"}]);var d={layer:g,title:g.name,name:b.name||g.name,source:b.source,group:b.group,fixed:("fixed" in b)?b.fixed:false,selected:("selected" in b)?b.selected:false,queryable:("queryable" in b)?b.queryable:false,type:b.type,args:b.args,properties:("properties" in b)?b.properties:undefined};f=new j(d,g.id)}else{throw new Error("Cannot construct OpenLayers layer from given type: "+b.type)}return f},getConfigForRecord:function(a){var b=gxp.plugins.OLSource.superclass.getConfigForRecord.apply(this,arguments);var c=a.getLayer();return Ext.apply(b,{type:a.get("type"),args:a.get("args")})}});Ext.preg(gxp.plugins.OLSource.prototype.ptype,gxp.plugins.OLSource);OpenLayers.Layer.OSM=OpenLayers.Class(OpenLayers.Layer.XYZ,{name:"OpenStreetMap",url:["http://a.tile.openstreetmap.org/${z}/${x}/${y}.png","http://b.tile.openstreetmap.org/${z}/${x}/${y}.png","http://c.tile.openstreetmap.org/${z}/${x}/${y}.png"],attribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",sphericalMercator:true,wrapDateLine:true,tileOptions:null,initialize:function(c,b,a){OpenLayers.Layer.XYZ.prototype.initialize.apply(this,arguments);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:"anonymous"},this.options&&this.options.tileOptions)},clone:function(a){if(a==null){a=new OpenLayers.Layer.OSM(this.name,this.url,this.getOptions())}a=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[a]);return a},CLASS_NAME:"OpenLayers.Layer.OSM"});Ext.namespace("gxp.plugins");gxp.plugins.OSMSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_osmsource",title:"OpenStreetMap Layers",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/' target='_blank'>OpenStreetMap</a>",createStore:function(){var a={projection:"EPSG:900913",maxExtent:new OpenLayers.Bounds(-128*156543.0339,-128*156543.0339,128*156543.0339,128*156543.0339),maxResolution:156543.03390625,numZoomLevels:19,units:"m",buffer:1,transitionEffect:"resize"};var b=[new OpenLayers.Layer.OSM("OpenStreetMap",["http://a.tile.openstreetmap.org/${z}/${x}/${y}.png","http://b.tile.openstreetmap.org/${z}/${x}/${y}.png","http://c.tile.openstreetmap.org/${z}/${x}/${y}.png"],OpenLayers.Util.applyDefaults({attribution:this.mapnikAttribution,type:"mapnik"},a))];this.store=new GeoExt.data.LayerStore({layers:b,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(c){c.set("group","background")});this.fireEvent("ready",this)},createLayerRecord:function(c){var a;var b=this.store.findExact("name",c.name);if(b>-1){a=this.store.getAt(b).copy(Ext.data.Record.id({}));var d=a.getLayer().clone();if(c.title){d.setName(c.title);a.set("title",c.title)}if("visibility" in c){d.visibility=c.visibility}a.set("selected",c.selected||false);a.set("source",c.source);a.set("name",c.name);if("group" in c){a.set("group",c.group)}a.data.layer=d;a.commit()}return a}});Ext.preg(gxp.plugins.OSMSource.prototype.ptype,gxp.plugins.OSMSource);OpenLayers.Layer.TMS=OpenLayers.Class(OpenLayers.Layer.Grid,{serviceVersion:"1.0.0",layername:null,type:null,isBaseLayer:true,tileOrigin:null,serverResolutions:null,zoomOffset:0,initialize:function(d,c,b){var a=[];a.push(d,c,{},b);OpenLayers.Layer.Grid.prototype.initialize.apply(this,a)},clone:function(a){if(a==null){a=new OpenLayers.Layer.TMS(this.name,this.url,this.getOptions())}a=OpenLayers.Layer.Grid.prototype.clone.apply(this,[a]);return a},getURL:function(d){d=this.adjustBounds(d);var c=this.getServerResolution();var a=Math.round((d.left-this.tileOrigin.lon)/(c*this.tileSize.w));var g=Math.round((d.bottom-this.tileOrigin.lat)/(c*this.tileSize.h));var f=this.getServerZoom();var e=this.serviceVersion+"/"+this.layername+"/"+f+"/"+a+"/"+g+"."+this.type;var b=this.url;if(OpenLayers.Util.isArray(b)){b=this.selectUrl(e,b)}return b+e},setMap:function(a){OpenLayers.Layer.Grid.prototype.setMap.apply(this,arguments);if(!this.tileOrigin){this.tileOrigin=new OpenLayers.LonLat(this.map.maxExtent.left,this.map.maxExtent.bottom)}},CLASS_NAME:"OpenLayers.Layer.TMS"});Ext.namespace("gxp.plugins");gxp.plugins.MapBoxSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_mapboxsource",title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldGlassTitle:"World Glass",worldPrintTitle:"World Print",createStore:function(){var c={projection:"EPSG:900913",numZoomLevels:19,serverResolutions:[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135],buffer:1};var f=[{name:"blue-marble-topo-bathy-jan",numZoomLevels:9},{name:"blue-marble-topo-bathy-jul",numZoomLevels:9},{name:"blue-marble-topo-jan",numZoomLevels:9},{name:"blue-marble-topo-jul",numZoomLevels:9},{name:"control-room",numZoomLevels:9},{name:"geography-class",numZoomLevels:9},{name:"natural-earth-hypso",numZoomLevels:7},{name:"natural-earth-hypso-bathy",numZoomLevels:7},{name:"natural-earth-1",numZoomLevels:7},{name:"natural-earth-2",numZoomLevels:7},{name:"world-dark",numZoomLevels:12},{name:"world-light",numZoomLevels:12},{name:"world-glass",numZoomLevels:11},{name:"world-print",numZoomLevels:10}];var a=f.length;var e=new Array(a);var b;for(var d=0;d<a;++d){b=f[d];e[d]=new OpenLayers.Layer.TMS(this[OpenLayers.String.camelize(b.name)+"Title"],["http://a.tiles.mapbox.com/mapbox/","http://b.tiles.mapbox.com/mapbox/","http://c.tiles.mapbox.com/mapbox/","http://d.tiles.mapbox.com/mapbox/"],OpenLayers.Util.applyDefaults({attribution:/^world/.test(name)?"<a href='http://mapbox.com'>MapBox</a> | Some Data &copy; OSM CC-BY-SA | <a href='http://mapbox.com/tos'>Terms of Service</a>":"<a href='http://mapbox.com'>MapBox</a> | <a href='http://mapbox.com/tos'>Terms of Service</a>",type:"png",tileOrigin:new OpenLayers.LonLat(-128*156543.03390625,-128*156543.03390625),layername:b.name,"abstract":'<div class="thumb-mapbox thumb-mapbox-'+b.name+'"></div>',numZoomLevels:b.numZoomLevels},c))}this.store=new GeoExt.data.LayerStore({layers:e,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"layername"},{name:"abstract",type:"string"},{name:"group",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"}]});this.fireEvent("ready",this)},createLayerRecord:function(c){var a;var b=this.store.findExact("name",c.name);if(b>-1){a=this.store.getAt(b).copy(Ext.data.Record.id({}));var d=a.getLayer().clone();if(c.title){d.setName(c.title);a.set("title",c.title)}if("visibility" in c){d.visibility=c.visibility}a.set("selected",c.selected||false);a.set("source",c.source);a.set("name",c.name);if("group" in c){a.set("group",c.group)}a.data.layer=d;a.commit()}return a}});Ext.preg(gxp.plugins.MapBoxSource.prototype.ptype,gxp.plugins.MapBoxSource);Ext.namespace("gxp.plugins");gxp.plugins.MapQuestSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_mapquestsource",title:"MapQuest Layers",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery",createStore:function(){var a={projection:"EPSG:900913",maxExtent:new OpenLayers.Bounds(-128*156543.0339,-128*156543.0339,128*156543.0339,128*156543.0339),maxResolution:156543.03390625,numZoomLevels:19,units:"m",buffer:1,transitionEffect:"resize",tileOptions:{crossOriginKeyword:null}};var b=[new OpenLayers.Layer.OSM(this.osmTitle,["http://otile1.mqcdn.com/tiles/1.0.0/map/${z}/${x}/${y}.png","http://otile2.mqcdn.com/tiles/1.0.0/map/${z}/${x}/${y}.png","http://otile3.mqcdn.com/tiles/1.0.0/map/${z}/${x}/${y}.png","http://otile4.mqcdn.com/tiles/1.0.0/map/${z}/${x}/${y}.png"],OpenLayers.Util.applyDefaults({attribution:this.osmAttribution,type:"osm"},a)),new OpenLayers.Layer.OSM(this.naipTitle,["http://otile1.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png","http://otile2.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png","http://otile3.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png","http://otile4.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png"],OpenLayers.Util.applyDefaults({attribution:this.naipAttribution,type:"naip"},a))];this.store=new GeoExt.data.LayerStore({layers:b,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(c){c.set("group","background")});this.fireEvent("ready",this)},createLayerRecord:function(c){var a;var b=this.store.findExact("name",c.name);if(b>-1){a=this.store.getAt(b).copy(Ext.data.Record.id({}));var d=a.getLayer().clone();if(c.title){d.setName(c.title);a.set("title",c.title)}if("visibility" in c){d.visibility=c.visibility}a.set("selected",c.selected||false);a.set("source",c.source);a.set("name",c.name);if("group" in c){a.set("group",c.group)}a.data.layer=d;a.commit()}return a}});Ext.preg(gxp.plugins.MapQuestSource.prototype.ptype,gxp.plugins.MapQuestSource);OpenLayers.Format.WMSCapabilities=OpenLayers.Class(OpenLayers.Format.XML.VersionedOGC,{defaultVersion:"1.1.1",profile:null,CLASS_NAME:"OpenLayers.Format.WMSCapabilities"});OpenLayers.Format.WMSCapabilities.v1=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{wms:"http://www.opengis.net/wms",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance"},defaultPrefix:"wms",read:function(c){if(typeof c=="string"){c=OpenLayers.Format.XML.prototype.read.apply(this,[c])}var b=c;if(c&&c.nodeType==9){c=c.documentElement}var a={};this.readNode(c,a);if(a.service===undefined){var d=new OpenLayers.Format.OGCExceptionReport();a.error=d.read(b)}return a},readers:{wms:{Service:function(a,b){b.service={};this.readChildNodes(a,b.service)},Name:function(a,b){b.name=this.getChildValue(a)},Title:function(a,b){b.title=this.getChildValue(a)},Abstract:function(a,b){b["abstract"]=this.getChildValue(a)},BoundingBox:function(b,c){var d={};d.bbox=[parseFloat(b.getAttribute("minx")),parseFloat(b.getAttribute("miny")),parseFloat(b.getAttribute("maxx")),parseFloat(b.getAttribute("maxy"))];var a={x:parseFloat(b.getAttribute("resx")),y:parseFloat(b.getAttribute("resy"))};if(!(isNaN(a.x)&&isNaN(a.y))){d.res=a}return d},OnlineResource:function(a,b){b.href=this.getAttributeNS(a,this.namespaces.xlink,"href")},ContactInformation:function(a,b){b.contactInformation={};this.readChildNodes(a,b.contactInformation)},ContactPersonPrimary:function(a,b){b.personPrimary={};this.readChildNodes(a,b.personPrimary)},ContactPerson:function(a,b){b.person=this.getChildValue(a)},ContactOrganization:function(a,b){b.organization=this.getChildValue(a)},ContactPosition:function(a,b){b.position=this.getChildValue(a)},ContactAddress:function(a,b){b.contactAddress={};this.readChildNodes(a,b.contactAddress)},AddressType:function(a,b){b.type=this.getChildValue(a)},Address:function(a,b){b.address=this.getChildValue(a)},City:function(a,b){b.city=this.getChildValue(a)},StateOrProvince:function(a,b){b.stateOrProvince=this.getChildValue(a)},PostCode:function(a,b){b.postcode=this.getChildValue(a)},Country:function(a,b){b.country=this.getChildValue(a)},ContactVoiceTelephone:function(a,b){b.phone=this.getChildValue(a)},ContactFacsimileTelephone:function(a,b){b.fax=this.getChildValue(a)},ContactElectronicMailAddress:function(a,b){b.email=this.getChildValue(a)},Fees:function(b,c){var a=this.getChildValue(b);if(a&&a.toLowerCase()!="none"){c.fees=a}},AccessConstraints:function(a,b){var c=this.getChildValue(a);if(c&&c.toLowerCase()!="none"){b.accessConstraints=c}},Capability:function(a,b){b.capability={nestedLayers:[],layers:[]};this.readChildNodes(a,b.capability)},Request:function(a,b){b.request={};this.readChildNodes(a,b.request)},GetCapabilities:function(a,b){b.getcapabilities={formats:[]};this.readChildNodes(a,b.getcapabilities)},Format:function(a,b){if(OpenLayers.Util.isArray(b.formats)){b.formats.push(this.getChildValue(a))}else{b.format=this.getChildValue(a)}},DCPType:function(a,b){this.readChildNodes(a,b)},HTTP:function(a,b){this.readChildNodes(a,b)},Get:function(a,b){b.get={};this.readChildNodes(a,b.get);if(!b.href){b.href=b.get.href}},Post:function(a,b){b.post={};this.readChildNodes(a,b.post);if(!b.href){b.href=b.get.href}},GetMap:function(a,b){b.getmap={formats:[]};this.readChildNodes(a,b.getmap)},GetFeatureInfo:function(a,b){b.getfeatureinfo={formats:[]};this.readChildNodes(a,b.getfeatureinfo)},Exception:function(a,b){b.exception={formats:[]};this.readChildNodes(a,b.exception)},Layer:function(c,i){var e,b;if(i.capability){b=i.capability;e=i}else{b=i}var r=c.getAttributeNode("queryable");var d=(r&&r.specified)?c.getAttribute("queryable"):null;r=c.getAttributeNode("cascaded");var m=(r&&r.specified)?c.getAttribute("cascaded"):null;r=c.getAttributeNode("opaque");var j=(r&&r.specified)?c.getAttribute("opaque"):null;var o=c.getAttribute("noSubsets");var a=c.getAttribute("fixedWidth");var l=c.getAttribute("fixedHeight");var q=e||{},n=OpenLayers.Util.extend;var k={nestedLayers:[],styles:e?[].concat(e.styles):[],srs:e?n({},q.srs):{},metadataURLs:[],bbox:e?n({},q.bbox):{},llbbox:q.llbbox,dimensions:e?n({},q.dimensions):{},authorityURLs:e?n({},q.authorityURLs):{},identifiers:{},keywords:[],queryable:(d&&d!=="")?(d==="1"||d==="true"):(q.queryable||false),cascaded:(m!==null)?parseInt(m):(q.cascaded||0),opaque:j?(j==="1"||j==="true"):(q.opaque||false),noSubsets:(o!==null)?(o==="1"||o==="true"):(q.noSubsets||false),fixedWidth:(a!=null)?parseInt(a):(q.fixedWidth||0),fixedHeight:(l!=null)?parseInt(l):(q.fixedHeight||0),minScale:q.minScale,maxScale:q.maxScale,attribution:q.attribution};i.nestedLayers.push(k);k.capability=b;this.readChildNodes(c,k);delete k.capability;if(k.name){var h=k.name.split(":"),g=b.request,f=g.getfeatureinfo;if(h.length>0){k.prefix=h[0]}b.layers.push(k);if(k.formats===undefined){k.formats=g.getmap.formats}if(k.infoFormats===undefined&&f){k.infoFormats=f.formats}}},Attribution:function(a,b){b.attribution={};this.readChildNodes(a,b.attribution)},LogoURL:function(a,b){b.logo={width:a.getAttribute("width"),height:a.getAttribute("height")};this.readChildNodes(a,b.logo)},Style:function(b,c){var a={};c.styles.push(a);this.readChildNodes(b,a)},LegendURL:function(b,c){var a={width:b.getAttribute("width"),height:b.getAttribute("height")};c.legend=a;this.readChildNodes(b,a)},MetadataURL:function(a,b){var c={type:a.getAttribute("type")};b.metadataURLs.push(c);this.readChildNodes(a,c)},DataURL:function(a,b){b.dataURL={};this.readChildNodes(a,b.dataURL)},FeatureListURL:function(a,b){b.featureListURL={};this.readChildNodes(a,b.featureListURL)},AuthorityURL:function(b,d){var a=b.getAttribute("name");var c={};this.readChildNodes(b,c);d.authorityURLs[a]=c.href},Identifier:function(a,c){var b=a.getAttribute("authority");c.identifiers[b]=this.getChildValue(a)},KeywordList:function(a,b){this.readChildNodes(a,b)},SRS:function(a,b){b.srs[this.getChildValue(a)]=true}}},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1"});OpenLayers.Format.WMSCapabilities.v1_1=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1,{readers:{wms:OpenLayers.Util.applyDefaults({WMT_MS_Capabilities:function(a,b){this.readChildNodes(a,b)},Keyword:function(a,b){if(b.keywords){b.keywords.push(this.getChildValue(a))}},DescribeLayer:function(a,b){b.describelayer={formats:[]};this.readChildNodes(a,b.describelayer)},GetLegendGraphic:function(a,b){b.getlegendgraphic={formats:[]};this.readChildNodes(a,b.getlegendgraphic)},GetStyles:function(a,b){b.getstyles={formats:[]};this.readChildNodes(a,b.getstyles)},PutStyles:function(a,b){b.putstyles={formats:[]};this.readChildNodes(a,b.putstyles)},UserDefinedSymbolization:function(a,b){var c={supportSLD:parseInt(a.getAttribute("SupportSLD"))==1,userLayer:parseInt(a.getAttribute("UserLayer"))==1,userStyle:parseInt(a.getAttribute("UserStyle"))==1,remoteWFS:parseInt(a.getAttribute("RemoteWFS"))==1};b.userSymbols=c},LatLonBoundingBox:function(a,b){b.llbbox=[parseFloat(a.getAttribute("minx")),parseFloat(a.getAttribute("miny")),parseFloat(a.getAttribute("maxx")),parseFloat(a.getAttribute("maxy"))]},BoundingBox:function(a,b){var c=OpenLayers.Format.WMSCapabilities.v1.prototype.readers.wms.BoundingBox.apply(this,[a,b]);c.srs=a.getAttribute("SRS");b.bbox[c.srs]=c},ScaleHint:function(e,f){var d=e.getAttribute("min");var a=e.getAttribute("max");var c=Math.pow(2,0.5);var b=OpenLayers.INCHES_PER_UNIT.m;if(d!=0){f.maxScale=parseFloat(((d/c)*b*OpenLayers.DOTS_PER_INCH).toPrecision(13))}if(a!=Number.POSITIVE_INFINITY){f.minScale=parseFloat(((a/c)*b*OpenLayers.DOTS_PER_INCH).toPrecision(13))}},Dimension:function(b,d){var a=b.getAttribute("name").toLowerCase();var c={name:a,units:b.getAttribute("units"),unitsymbol:b.getAttribute("unitSymbol")};d.dimensions[c.name]=c},Extent:function(d,e){var b=d.getAttribute("name").toLowerCase();if(b in e.dimensions){var c=e.dimensions[b];c.nearestVal=d.getAttribute("nearestValue")==="1";c.multipleVal=d.getAttribute("multipleValues")==="1";c.current=d.getAttribute("current")==="1";c["default"]=d.getAttribute("default")||"";var a=this.getChildValue(d);c.values=a.split(",")}}},OpenLayers.Format.WMSCapabilities.v1.prototype.readers.wms)},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_1"});OpenLayers.Format.WMSCapabilities.v1_1_0=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1_1,{version:"1.1.0",readers:{wms:OpenLayers.Util.applyDefaults({SRS:function(e,f){var d=this.getChildValue(e);var b=d.split(/ +/);for(var c=0,a=b.length;c<a;c++){f.srs[b[c]]=true}}},OpenLayers.Format.WMSCapabilities.v1_1.prototype.readers.wms)},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_1_0"});OpenLayers.Format.WMSCapabilities.v1_1_1=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1_1,{version:"1.1.1",readers:{wms:OpenLayers.Util.applyDefaults({SRS:function(a,b){b.srs[this.getChildValue(a)]=true}},OpenLayers.Format.WMSCapabilities.v1_1.prototype.readers.wms)},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_1_1"});OpenLayers.Format.WMSCapabilities.v1_3=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1,{readers:{wms:OpenLayers.Util.applyDefaults({WMS_Capabilities:function(a,b){this.readChildNodes(a,b)},LayerLimit:function(a,b){b.layerLimit=parseInt(this.getChildValue(a))},MaxWidth:function(a,b){b.maxWidth=parseInt(this.getChildValue(a))},MaxHeight:function(a,b){b.maxHeight=parseInt(this.getChildValue(a))},BoundingBox:function(a,b){var c=OpenLayers.Format.WMSCapabilities.v1.prototype.readers.wms.BoundingBox.apply(this,[a,b]);c.srs=a.getAttribute("CRS");b.bbox[c.srs]=c},CRS:function(a,b){this.readers.wms.SRS.apply(this,[a,b])},EX_GeographicBoundingBox:function(a,b){b.llbbox=[];this.readChildNodes(a,b.llbbox)},westBoundLongitude:function(a,b){b[0]=this.getChildValue(a)},eastBoundLongitude:function(a,b){b[2]=this.getChildValue(a)},southBoundLatitude:function(a,b){b[1]=this.getChildValue(a)},northBoundLatitude:function(a,b){b[3]=this.getChildValue(a)},MinScaleDenominator:function(a,b){b.maxScale=parseFloat(this.getChildValue(a)).toPrecision(16)},MaxScaleDenominator:function(a,b){b.minScale=parseFloat(this.getChildValue(a)).toPrecision(16)},Dimension:function(b,d){var a=b.getAttribute("name").toLowerCase();var c={name:a,units:b.getAttribute("units"),unitsymbol:b.getAttribute("unitSymbol"),nearestVal:b.getAttribute("nearestValue")==="1",multipleVal:b.getAttribute("multipleValues")==="1","default":b.getAttribute("default")||"",current:b.getAttribute("current")==="1",values:this.getChildValue(b).split(",")};d.dimensions[c.name]=c},Keyword:function(b,c){var a={value:this.getChildValue(b),vocabulary:b.getAttribute("vocabulary")};if(c.keywords){c.keywords.push(a)}}},OpenLayers.Format.WMSCapabilities.v1.prototype.readers.wms),sld:{UserDefinedSymbolization:function(a,b){this.readers.wms.UserDefinedSymbolization.apply(this,[a,b]);b.userSymbols.inlineFeature=parseInt(a.getAttribute("InlineFeature"))==1;b.userSymbols.remoteWCS=parseInt(a.getAttribute("RemoteWCS"))==1},DescribeLayer:function(a,b){this.readers.wms.DescribeLayer.apply(this,[a,b])},GetLegendGraphic:function(a,b){this.readers.wms.GetLegendGraphic.apply(this,[a,b])}}},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_3"});OpenLayers.Format.WMSCapabilities.v1_3_0=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1_3,{version:"1.3.0",CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_3_0"});Ext.namespace("GeoExt.data");GeoExt.data.WMSCapabilitiesReader=function(a,b){a=a||{};if(!a.format){a.format=new OpenLayers.Format.WMSCapabilities()}if(typeof b!=="function"){b=GeoExt.data.LayerRecord.create(b||a.fields||[{name:"name",type:"string"},{name:"title",type:"string"},{name:"abstract",type:"string"},{name:"queryable",type:"boolean"},{name:"opaque",type:"boolean"},{name:"noSubsets",type:"boolean"},{name:"cascaded",type:"int"},{name:"fixedWidth",type:"int"},{name:"fixedHeight",type:"int"},{name:"minScale",type:"float"},{name:"maxScale",type:"float"},{name:"prefix",type:"string"},{name:"formats"},{name:"styles"},{name:"srs"},{name:"dimensions"},{name:"bbox"},{name:"llbbox"},{name:"attribution"},{name:"keywords"},{name:"identifiers"},{name:"authorityURLs"},{name:"metadataURLs"},{name:"infoFormats"}])}GeoExt.data.WMSCapabilitiesReader.superclass.constructor.call(this,a,b)};Ext.extend(GeoExt.data.WMSCapabilitiesReader,Ext.data.DataReader,{attributionCls:"gx-attribution",read:function(a){var b=a.responseXML;if(!b||!b.documentElement){b=a.responseText}return this.readRecords(b)},serviceExceptionFormat:function(a){if(OpenLayers.Util.indexOf(a,"application/vnd.ogc.se_inimage")>-1){return"application/vnd.ogc.se_inimage"}if(OpenLayers.Util.indexOf(a,"application/vnd.ogc.se_xml")>-1){return"application/vnd.ogc.se_xml"}return a[0]},imageFormat:function(b){var a=b.formats;if(b.opaque&&OpenLayers.Util.indexOf(a,"image/jpeg")>-1){return"image/jpeg"}if(OpenLayers.Util.indexOf(a,"image/png")>-1){return"image/png"}if(OpenLayers.Util.indexOf(a,"image/png; mode=24bit")>-1){return"image/png; mode=24bit"}if(OpenLayers.Util.indexOf(a,"image/gif")>-1){return"image/gif"}return a[0]},imageTransparent:function(a){return a.opaque==undefined||!a.opaque},readRecords:function(w){if(typeof w==="string"||w.nodeType){w=this.meta.format.read(w)}if(!!w.error){throw new Ext.data.DataReader.Error("invalid-response",w.error)}var e=w.version;var c=w.capability||{};var f=c.request&&c.request.getmap&&c.request.getmap.href;var h=c.layers;var g=c.exception?c.exception.formats:[];var q=this.serviceExceptionFormat(g);var o=[];if(f&&h){var l=this.recordType.prototype.fields;var u,b,d,t,a,k;for(var n=0,s=h.length;n<s;n++){u=h[n];if(u.name){b={};for(var m=0,r=l.length;m<r;m++){a=l.items[m];k=u[a.mapping||a.name]||a.defaultValue;k=a.convert(k);b[a.name]=k}d={attribution:u.attribution?this.attributionMarkup(u.attribution):undefined,minScale:u.minScale,maxScale:u.maxScale};if(this.meta.layerOptions){Ext.apply(d,this.meta.layerOptions)}t={layers:u.name,exceptions:q,format:this.imageFormat(u),transparent:this.imageTransparent(u),version:e};if(this.meta.layerParams){Ext.apply(t,this.meta.layerParams)}b.layer=new OpenLayers.Layer.WMS(u.title||u.name,f,t,d);o.push(new this.recordType(b,b.layer.id))}}}return{totalRecords:o.length,success:true,records:o}},attributionMarkup:function(a){var b=[];if(a.logo){b.push("<img class='"+this.attributionCls+"-image' src='"+a.logo.href+"' />")}if(a.title){b.push("<span class='"+this.attributionCls+"-title'>"+a.title+"</span>")}if(a.href){for(var c=0;c<b.length;c++){b[c]="<a class='"+this.attributionCls+"-link' href="+a.href+">"+b[c]+"</a>"}}return b.join(" ")}});Ext.namespace("GeoExt.data");GeoExt.data.WMSCapabilitiesStore=function(a){a=a||{};GeoExt.data.WMSCapabilitiesStore.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(!a.data?new Ext.data.HttpProxy({url:a.url,disableCaching:false,method:"GET"}):undefined),reader:new GeoExt.data.WMSCapabilitiesReader(a,a.fields)}))};Ext.extend(GeoExt.data.WMSCapabilitiesStore,Ext.data.Store);Ext.namespace("GeoExt.data");GeoExt.data.WMSDescribeLayerStore=function(a){a=a||{};GeoExt.data.WMSDescribeLayerStore.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(!a.data?new Ext.data.HttpProxy({url:a.url,disableCaching:false,method:"GET"}):undefined),reader:new GeoExt.data.WMSDescribeLayerReader(a,a.fields)}))};Ext.extend(GeoExt.data.WMSDescribeLayerStore,Ext.data.Store);(function(){function a(c){var d=this.meta.format;if(typeof c==="string"||c.nodeType){c=d.read(c);var b=d.read;d.read=function(){d.read=b;return c}}this.raw=c}Ext.intercept(GeoExt.data.WMSCapabilitiesReader.prototype,"readRecords",a);GeoExt.data.AttributeReader&&Ext.intercept(GeoExt.data.AttributeReader.prototype,"readRecords",a)})();Ext.namespace("gxp.plugins");gxp.plugins.WMSSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_wmssource",baseParams:null,format:null,describeLayerStore:null,describedLayers:null,schemaCache:null,ready:false,requiredProperties:["title","bbox"],constructor:function(a){if(a&&a.forceLazy===true){a.requiredProperties=[];delete a.forceLazy;if(window.console){console.warn("Deprecated config option 'forceLazy: true' for layer source '"+a.id+"'. Use 'requiredProperties: []' instead.")}}gxp.plugins.WMSSource.superclass.constructor.apply(this,arguments);if(!this.format){this.format=new OpenLayers.Format.WMSCapabilities({keepData:true})}},init:function(a){gxp.plugins.WMSSource.superclass.init.apply(this,arguments);this.target.on("authorizationchange",this.onAuthorizationChange,this)},onAuthorizationChange:function(){if(this.disabled!==true&&this.store&&this.url.charAt(0)==="/"){var a=this.store.lastOptions||{params:{}};Ext.apply(a.params,{_dc:Math.random()});this.store.reload(a)}},destroy:function(){this.target.un("authorizationchange",this.onAuthorizationChange,this);gxp.plugins.WMSSource.superclass.destroy.apply(this,arguments)},isLazy:function(){var c=true;var e=this.target.initialConfig.map;if(e&&e.layers){var a;for(var b=0,d=e.layers.length;b<d;++b){a=e.layers[b];if(a.source===this.id){c=this.layerConfigComplete(a);if(c===false){break}}}}return c},layerConfigComplete:function(a){var c=true;if(!Ext.isObject(a.capability)){var d=this.requiredProperties;for(var b=d.length-1;b>=0;--b){c=!!a[d[b]];if(c===false){break}}}return c},createStore:function(){var b=this.baseParams||{SERVICE:"WMS",REQUEST:"GetCapabilities"};if(this.version){b.VERSION=this.version}var a=this.isLazy();this.store=new GeoExt.data.WMSCapabilitiesStore({url:this.trimUrl(this.url,b),baseParams:b,format:this.format,autoLoad:!a,layerParams:{exceptions:null},listeners:{load:function(){if(!this.store.reader.raw||!this.store.reader.raw.service){this.fireEvent("failure",this,"Invalid capabilities document.")}else{if(!this.title){this.title=this.store.reader.raw.service.title}if(!this.ready){this.ready=true;this.fireEvent("ready",this)}else{this.lazy=false}}delete this.format.data},exception:function(j,k,e,m,f,l){delete this.store;var d,c="";if(k==="response"){if(typeof l=="string"){d=l}else{d="Invalid response from server.";var i=this.format&&this.format.data;if(i&&i.parseError){d+="  "+i.parseError.reason+" - line: "+i.parseError.line}var h=f.status;if(h>=200&&h<300){var g=l&&l.arg&&l.arg.exceptionReport;c=gxp.util.getOGCExceptionText(g)}else{c="Status: "+h}}}else{d="Trouble creating layer store from response.";c="Unable to handle response."}this.fireEvent("failure",this,d,c);delete this.format.data},scope:this}});if(a){this.lazy=a;this.ready=true;this.fireEvent("ready",this)}},trimUrl:function(b,f,d){var a=OpenLayers.Util.getParameters(b);f=OpenLayers.Util.upperCaseObject(f);var e=0;for(var c in a){++e;if(c.toUpperCase() in f){--e;delete a[c]}}return b.split("?").shift()+(e?"?"+OpenLayers.Util.getParameterString(a):"")},createLazyLayerRecord:function(b){b=Ext.apply({},b);var c=b.srs||this.target.map.projection;b.srs={};b.srs[c]=true;var d=b.bbox||this.target.map.maxExtent||OpenLayers.Projection.defaults[c].maxExtent;b.bbox={};b.bbox[c]={bbox:d};var a;if(this.store&&this.store instanceof GeoExt.data.WMSCapabilitiesStore){a=new this.store.recordType(b)}else{a=new GeoExt.data.LayerRecord(b)}a.setLayer(new OpenLayers.Layer.WMS(b.title||b.name,b.url||this.url,{layers:b.name,transparent:"transparent" in b?b.transparent:true,cql_filter:b.cql_filter,format:b.format},{projection:c,eventListeners:{tileloaded:this.countAlive,tileerror:this.countAlive,scope:this}}));a.json=b;return a},countAlive:function(a){if(!("_alive" in a.object.metadata)){a.object.metadata._alive=0;a.object.events.register("loadend",this,this.removeDeadLayer)}a.object.metadata._alive+=(a.type=="tileerror"?-1:1)},removeDeadLayer:function(a){a.object.events.un({tileloaded:this.countAlive,tileerror:this.countAlive,loadend:this.removeDeadLayer,scope:this});if(a.object.metadata._alive===0){this.target.mapPanel.map.removeLayer(a.object);if(window.console){console.debug("Unavailable layer "+a.object.name+" removed.")}}delete a.object.metadata._alive},createLayerRecord:function(e){var g,d;var j=this.store.findExact("name",e.name);if(j>-1){d=this.store.getAt(j)}else{if(Ext.isObject(e.capability)){d=this.store.reader.readRecords({capability:{request:{getmap:{href:this.trimUrl(this.url,this.baseParams)}},layers:[e.capability]}}).records[0]}else{if(this.layerConfigComplete(e)){d=this.createLazyLayerRecord(e)}}}if(d){var i=d.getLayer().clone();var k=this.getMapProjection();var b=this.getProjection(d);if(b){i.addOptions({projection:b})}var a=(b||k).getCode(),o=d.get("bbox"),n;if(o&&o[a]){n=OpenLayers.Bounds.fromArray(o[a].bbox,i.reverseAxisOrder())}else{var l=d.get("llbbox");if(l){l[0]=Math.max(l[0],-180);l[1]=Math.max(l[1],-90);l[2]=Math.min(l[2],180);l[3]=Math.min(l[3],90);n=OpenLayers.Bounds.fromArray(l).transform("EPSG:4326",k)}}i.mergeNewParams({STYLES:e.styles,FORMAT:e.format,TRANSPARENT:e.transparent,CQL_FILTER:e.cql_filter});var c=false;if("tiled" in e){c=!e.tiled}else{if(d.data.dimensions&&d.data.dimensions.time){c=true}}i.setName(e.title||i.name);i.addOptions({attribution:i.attribution||e.attribution,maxExtent:n,restrictedExtent:n,singleTile:c,ratio:e.ratio||1,visibility:("visibility" in e)?e.visibility:true,opacity:("opacity" in e)?e.opacity:1,buffer:("buffer" in e)?e.buffer:1,dimensions:d.data.dimensions,transitionEffect:c?"resize":null,minScale:e.minscale,maxScale:e.maxscale});var f=Ext.applyIf({title:i.name,group:e.group,infoFormat:e.infoFormat,getFeatureInfo:e.getFeatureInfo,source:e.source,properties:"gxp_wmslayerpanel",fixed:e.fixed,selected:"selected" in e?e.selected:false,restUrl:this.restUrl,layer:i},d.data);var h=[{name:"source",type:"string"},{name:"group",type:"string"},{name:"properties",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"},{name:"restUrl",type:"string"},{name:"infoFormat",type:"string"},{name:"getFeatureInfo"}];d.fields.each(function(q){h.push(q)});var m=GeoExt.data.LayerRecord.create(h);g=new m(f,i.id);g.json=e}else{if(window.console&&this.store.getCount()>0&&e.name!==undefined){console.warn("Could not create layer record for layer '"+e.name+"'. Check if the layer is found in the WMS GetCapabilities response.")}}return g},getProjection:function(b){var a=this.getMapProjection();var e=a;var d=b.get("srs");if(!d[a.getCode()]){e=null;var f,c;for(c in d){if((f=new OpenLayers.Projection(c)).equals(a)){e=f;break}}}return e},initDescribeLayerStore:function(){var b=this.store.reader.raw;if(this.lazy){b={capability:{request:{describelayer:{href:this.url}}},version:this.version||"1.1.1"}}var c=b.capability.request.describelayer;if(c){var a=b.version;if(parseFloat(a)>1.1){a="1.1.1"}var d={SERVICE:"WMS",VERSION:a,REQUEST:"DescribeLayer"};this.describeLayerStore=new GeoExt.data.WMSDescribeLayerStore({url:this.trimUrl(c.href,d),baseParams:d})}},describeLayer:function(g,h,f){if(!this.describeLayerStore){this.initDescribeLayerStore()}function d(i){window.setTimeout(function(){h.call(f,i)},0)}if(!this.describeLayerStore){d(false);return}if(!this.describedLayers){this.describedLayers={}}var c=g.getLayer().params.LAYERS;var a=function(){var m=Ext.isArray(arguments[1])?arguments[1]:arguments[0];var n,j;for(var k=m.length-1;k>=0;k--){n=m[k];j=n.get("layerName");if(j==c){this.describeLayerStore.un("load",arguments.callee,this);this.describedLayers[j]=true;h.call(f,n);return}else{if(typeof this.describedLayers[j]=="function"){var l=this.describedLayers[j];this.describeLayerStore.un("load",l,this);l.apply(this,arguments)}}}delete e[c];h.call(f,false)};var e=this.describedLayers;var b;if(!e[c]){e[c]=a;this.describeLayerStore.load({params:{LAYERS:c},add:true,callback:a,scope:this})}else{if((b=this.describeLayerStore.findExact("layerName",c))==-1){this.describeLayerStore.on("load",a,this)}else{d(this.describeLayerStore.getAt(b))}}},fetchSchema:function(b,a,e,c){var d=this.schemaCache[a];if(d){if(d.getCount()==0){d.on("load",function(){e.call(c,d)},this,{single:true})}else{e.call(c,d)}}else{d=new GeoExt.data.AttributeStore({url:b,baseParams:{SERVICE:"WFS",VERSION:"1.1.0",REQUEST:"DescribeFeatureType",TYPENAME:a},autoLoad:true,listeners:{load:function(){e.call(c,d)},scope:this}});this.schemaCache[a]=d}},getSchema:function(b,c,a){if(!this.schemaCache){this.schemaCache={}}this.describeLayer(b,function(f){if(f&&f.get("owsType")=="WFS"){var d=f.get("typeName");var e=f.get("owsURL");this.fetchSchema(e,d,c,a)}else{if(!f){this.fetchSchema(this.url,b.get("name"),c,a)}else{c.call(a,false)}}},this)},getWFSProtocol:function(a,c,b){this.getSchema(a,function(e){var g=false;if(e){var f;var d=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;e.each(function(i){var h=d.exec(i.get("type"));if(h){f=i.get("name")}},this);g=new OpenLayers.Protocol.WFS({version:"1.1.0",srsName:a.getLayer().projection.getCode(),url:e.url,featureType:e.reader.raw.featureTypes[0].typeName,featureNS:e.reader.raw.targetNamespace,geometryName:f})}c.call(b,g,e,a)},this)},getConfigForRecord:function(f){var b=Ext.applyIf(gxp.plugins.WMSSource.superclass.getConfigForRecord.apply(this,arguments),f.json),g=f.getLayer(),d=g.params,k=g.options;var a=b.name,j=this.store.reader.raw;if(j){var h=j.capability.layers;for(var e=h.length-1;e>=0;--e){if(h[e].name===a){b.capability=Ext.apply({},h[e]);var c={};c[g.projection.getCode()]=true;b.capability.srs=c;break}}}if(!b.capability){if(g.maxExtent){b.bbox=g.maxExtent.toArray()}b.srs=g.projection.getCode()}return Ext.apply(b,{format:d.FORMAT,styles:d.STYLES,tiled:!k.singleTile,transparent:d.TRANSPARENT,cql_filter:d.CQL_FILTER,minscale:k.minScale,maxscale:k.maxScale,infoFormat:f.get("infoFormat"),attribution:g.attribution})},disable:function(){this.disabled=true},getState:function(){var a=gxp.plugins.WMSSource.superclass.getState.apply(this,arguments);return Ext.applyIf(a,{title:this.title})}});Ext.preg(gxp.plugins.WMSSource.prototype.ptype,gxp.plugins.WMSSource);Ext.namespace("gxp.plugins");gxp.plugins.CatalogueSource=Ext.extend(gxp.plugins.WMSSource,{url:null,yx:null,title:null,lazy:true,hidden:true,proxyOptions:null,describeLayer:function(c,e,b){var d=Ext.data.Record.create([{name:"owsType",type:"string"},{name:"owsURL",type:"string"},{name:"typeName",type:"string"}]);var a=new d({owsType:"WFS",owsURL:c.get("url"),typeName:c.get("name")});e.call(b,a)},destroy:function(){this.store&&this.store.destroy();this.store=null;gxp.plugins.CatalogueSource.superclass.destroy.apply(this,arguments)}});OpenLayers.Format.CSWGetRecords=function(b){b=OpenLayers.Util.applyDefaults(b,OpenLayers.Format.CSWGetRecords.DEFAULTS);var a=OpenLayers.Format.CSWGetRecords["v"+b.version.replace(/\./g,"_")];if(!a){throw"Unsupported CSWGetRecords version: "+b.version}return new a(b)};OpenLayers.Format.CSWGetRecords.DEFAULTS={version:"2.0.2"};OpenLayers.Format.CSWGetRecords.v2_0_2=OpenLayers.Class(OpenLayers.Format.XML,{namespaces:{csw:"http://www.opengis.net/cat/csw/2.0.2",dc:"http://purl.org/dc/elements/1.1/",dct:"http://purl.org/dc/terms/",gmd:"http://www.isotc211.org/2005/gmd",geonet:"http://www.fao.org/geonetwork",ogc:"http://www.opengis.net/ogc",ows:"http://www.opengis.net/ows",xlink:"http://www.w3.org/1999/xlink",xsi:"http://www.w3.org/2001/XMLSchema-instance",xmlns:"http://www.w3.org/2000/xmlns/"},defaultPrefix:"csw",version:"2.0.2",schemaLocation:"http://www.opengis.net/cat/csw/2.0.2 http://schemas.opengis.net/csw/2.0.2/CSW-discovery.xsd",requestId:null,resultType:null,outputFormat:null,outputSchema:null,startPosition:null,maxRecords:null,DistributedSearch:null,ResponseHandler:null,Query:null,regExes:{trimSpace:(/^\s*|\s*$/g),removeSpace:(/\s*/g),splitSpace:(/\s+/),trimComma:(/\s*,\s*/g)},initialize:function(a){OpenLayers.Format.XML.prototype.initialize.apply(this,[a])},read:function(a){if(typeof a=="string"){a=OpenLayers.Format.XML.prototype.read.apply(this,[a])}if(a&&a.nodeType==9){a=a.documentElement}var b={};this.readNode(a,b);return b},readers:{csw:{GetRecordsResponse:function(b,c){c.records=[];this.readChildNodes(b,c);var a=this.getAttributeNS(b,"","version");if(a!=""){c.version=a}},RequestId:function(a,b){b.RequestId=this.getChildValue(a)},SearchStatus:function(a,c){c.SearchStatus={};var b=this.getAttributeNS(a,"","timestamp");if(b!=""){c.SearchStatus.timestamp=b}},SearchResults:function(d,e){this.readChildNodes(d,e);var b=d.attributes;var f={};for(var c=0,a=b.length;c<a;++c){if((b[c].name=="numberOfRecordsMatched")||(b[c].name=="numberOfRecordsReturned")||(b[c].name=="nextRecord")){f[b[c].name]=parseInt(b[c].nodeValue)}else{f[b[c].name]=b[c].nodeValue}}e.SearchResults=f},SummaryRecord:function(b,c){var a={type:"SummaryRecord"};this.readChildNodes(b,a);c.records.push(a)},BriefRecord:function(b,c){var a={type:"BriefRecord"};this.readChildNodes(b,a);c.records.push(a)},DCMIRecord:function(b,c){var a={type:"DCMIRecord"};this.readChildNodes(b,a);c.records.push(a)},Record:function(b,c){var a={type:"Record"};this.readChildNodes(b,a);c.records.push(a)},"*":function(b,c){var a=b.localName||b.nodeName.split(":").pop();c[a]=this.getChildValue(b)}},geonet:{info:function(b,c){var a={};this.readChildNodes(b,a);c.gninfo=a}},dc:{"*":function(f,g){var d=f.localName||f.nodeName.split(":").pop();if(!(OpenLayers.Util.isArray(g[d]))){g[d]=[]}var c={};var b=f.attributes;for(var e=0,a=b.length;e<a;++e){c[b[e].name]=b[e].nodeValue}c.value=this.getChildValue(f);if(c.value!=""){g[d].push(c)}}},dct:{"*":function(b,c){var a=b.localName||b.nodeName.split(":").pop();if(!(OpenLayers.Util.isArray(c[a]))){c[a]=[]}c[a].push(this.getChildValue(b))}},ows:OpenLayers.Util.applyDefaults({BoundingBox:function(a,b){if(b.bounds){b.BoundingBox=[{crs:b.projection,value:[b.bounds.left,b.bounds.bottom,b.bounds.right,b.bounds.top]}];delete b.projection;delete b.bounds}OpenLayers.Format.OWSCommon.v1_0_0.prototype.readers.ows["BoundingBox"].apply(this,arguments)}},OpenLayers.Format.OWSCommon.v1_0_0.prototype.readers.ows)},write:function(a){var b=this.writeNode("csw:GetRecords",a);this.setAttributeNS(b,this.namespaces.xmlns,"xmlns:gmd",this.namespaces.gmd);return OpenLayers.Format.XML.prototype.write.apply(this,[b])},writers:{csw:{GetRecords:function(b){if(!b){b={}}var e=this.createElementNSPlus("csw:GetRecords",{attributes:{service:"CSW",version:this.version,requestId:b.requestId||this.requestId,resultType:b.resultType||this.resultType,outputFormat:b.outputFormat||this.outputFormat,outputSchema:b.outputSchema||this.outputSchema,startPosition:b.startPosition||this.startPosition,maxRecords:b.maxRecords||this.maxRecords}});if(b.DistributedSearch||this.DistributedSearch){this.writeNode("csw:DistributedSearch",b.DistributedSearch||this.DistributedSearch,e)}var d=b.ResponseHandler||this.ResponseHandler;if(OpenLayers.Util.isArray(d)&&d.length>0){for(var c=0,a=d.length;c<a;c++){this.writeNode("csw:ResponseHandler",d[c],e)}}this.writeNode("Query",b.Query||this.Query,e);return e},DistributedSearch:function(a){var b=this.createElementNSPlus("csw:DistributedSearch",{attributes:{hopCount:a.hopCount}});return b},ResponseHandler:function(a){var b=this.createElementNSPlus("csw:ResponseHandler",{value:a.value});return b},Query:function(b){if(!b){b={}}var e=this.createElementNSPlus("csw:Query",{attributes:{typeNames:b.typeNames||"csw:Record"}});var d=b.ElementName;if(OpenLayers.Util.isArray(d)&&d.length>0){for(var c=0,a=d.length;c<a;c++){this.writeNode("csw:ElementName",d[c],e)}}else{this.writeNode("csw:ElementSetName",b.ElementSetName||{value:"summary"},e)}if(b.Constraint){this.writeNode("csw:Constraint",b.Constraint,e)}if(b.SortBy){this.writeNode("ogc:SortBy",b.SortBy,e)}return e},ElementName:function(a){var b=this.createElementNSPlus("csw:ElementName",{value:a.value});return b},ElementSetName:function(a){var b=this.createElementNSPlus("csw:ElementSetName",{attributes:{typeNames:a.typeNames},value:a.value});return b},Constraint:function(a){var b=this.createElementNSPlus("csw:Constraint",{attributes:{version:a.version}});if(a.Filter){var c=new OpenLayers.Format.Filter({version:a.version});b.appendChild(c.write(a.Filter))}else{if(a.CqlText){var d=this.createElementNSPlus("CqlText",{value:a.CqlText.value});b.appendChild(d)}}return b}},ogc:OpenLayers.Format.Filter.v1_1_0.prototype.writers.ogc},CLASS_NAME:"OpenLayers.Format.CSWGetRecords.v2_0_2"});Ext.namespace("GeoExt.data");GeoExt.data.CSWRecordsReader=function(a,b){a=a||{};if(!a.format){a.format=new OpenLayers.Format.CSWGetRecords()}if(!a.root){a.root="records"}GeoExt.data.CSWRecordsReader.superclass.constructor.call(this,a,b)};Ext.extend(GeoExt.data.CSWRecordsReader,Ext.data.JsonReader,{read:function(a){var b=a.data;if(!b){b=a.responseXML;if(!b||!b.documentElement){b=a.responseText}}return this.readRecords(b)},readRecords:function(b){if(typeof b==="string"||b.nodeType){b=this.meta.format.read(b)}if(b.success===false){throw new Ext.data.DataReader.Error("invalid-response",b)}var a=GeoExt.data.CSWRecordsReader.superclass.readRecords.call(this,b);Ext.each(a.records,function(c){for(var f in c.data){var j=c.data[f];if(j instanceof Array){for(var e=0,g=j.length;e<g;++e){if(j[e] instanceof Object){var d=0;for(var h in j[e]){if(j[e].hasOwnProperty(h)){d++}}if(d===1&&j[e].value){j[e]=j[e].value}}}}}});if(b.SearchResults){a.totalRecords=b.SearchResults.numberOfRecordsMatched}return a}});OpenLayers.Protocol.CSW=function(b){b=OpenLayers.Util.applyDefaults(b,OpenLayers.Protocol.CSW.DEFAULTS);var a=OpenLayers.Protocol.CSW["v"+b.version.replace(/\./g,"_")];if(!a){throw"Unsupported CSW version: "+b.version}return new a(b)};OpenLayers.Protocol.CSW.DEFAULTS={version:"2.0.2"};OpenLayers.Protocol.CSW.v2_0_2=OpenLayers.Class(OpenLayers.Protocol,{formatOptions:null,initialize:function(a){OpenLayers.Protocol.prototype.initialize.apply(this,[a]);if(!a.format){this.format=new OpenLayers.Format.CSWGetRecords.v2_0_2(OpenLayers.Util.extend({},this.formatOptions))}},destroy:function(){if(this.options&&!this.options.format){this.format.destroy()}this.format=null;OpenLayers.Protocol.prototype.destroy.apply(this)},read:function(b){b=OpenLayers.Util.extend({},b);OpenLayers.Util.applyDefaults(b,this.options||{});var a=new OpenLayers.Protocol.Response({requestType:"read"});var c=this.format.write(b.params||b);a.priv=OpenLayers.Request.POST({url:b.url,callback:this.createCallback(this.handleRead,a,b),params:b.params,headers:b.headers,data:c});return a},handleRead:function(a,b){if(b.callback){var c=a.priv;if(c.status>=200&&c.status<300){a.data=this.parseData(c);a.code=OpenLayers.Protocol.Response.SUCCESS}else{a.code=OpenLayers.Protocol.Response.FAILURE}b.callback.call(b.scope,a)}},parseData:function(a){var b=a.responseXML;if(!b||!b.documentElement){b=a.responseText}if(!b||b.length<=0){return null}return this.format.read(b)},CLASS_NAME:"OpenLayers.Protocol.CSW.v2_0_2"});Ext.namespace("gxp.plugins");gxp.plugins.CSWCatalogueSource=Ext.extend(gxp.plugins.CatalogueSource,{ptype:"gxp_cataloguesource",createStore:function(){this.store=new Ext.data.Store({proxy:new GeoExt.data.ProtocolProxy(Ext.apply({setParamsAsOptions:true,protocol:new OpenLayers.Protocol.CSW({url:this.url})},this.proxyOptions||{})),reader:new GeoExt.data.CSWRecordsReader({fields:["title","abstract","URI","bounds","projection","references"]})});gxp.plugins.LayerSource.prototype.createStore.apply(this,arguments)},getPagingStart:function(){return 1},getPagingParamNames:function(){return{start:"startPosition",limit:"maxRecords"}},getFullFilter:function(b,a){var c=[];if(b!==undefined){c.push(b)}c=c.concat(a);if(c.length<=1){return c[0]}else{return new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:c})}},filter:function(a){var b=undefined;if(a.queryString!==""){b=new OpenLayers.Filter.Comparison({type:OpenLayers.Filter.Comparison.LIKE,matchCase:false,property:"csw:AnyText",value:"*"+a.queryString+"*"})}var d={resultType:"results",maxRecords:a.limit,Query:{typeNames:"gmd:MD_Metadata",ElementSetName:{value:"full"}}};var c=this.getFullFilter(b,a.filters);if(c!==undefined){Ext.apply(d.Query,{Constraint:{version:"1.1.0",Filter:c}})}Ext.apply(this.store.baseParams,d);this.store.load()}});Ext.preg(gxp.plugins.CSWCatalogueSource.prototype.ptype,gxp.plugins.CSWCatalogueSource);Ext.namespace("gxp.plugins");gxp.plugins.QueryForm=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_queryform",featureManager:null,autoHide:false,schema:null,queryActionText:"Query",cancelButtonText:"Cancel",queryMenuText:"Query layer",queryActionTip:"Query the selected layer",queryByLocationText:"Query by current map extent",queryByAttributesText:"Query by attributes",queryMsg:"Querying...",noFeaturesTitle:"No Match",noFeaturesMessage:"Your query did not return any results.",outputAction:0,autoExpand:null,addActions:function(a){if(!this.initialConfig.actions&&!a){a=[{text:this.queryActionText,menuText:this.queryMenuText,iconCls:"gxp-icon-find",tooltip:this.queryActionTip,disabled:true,toggleGroup:this.toggleGroup,enableToggle:true,allowDepress:true,toggleHandler:function(b,d){if(this.autoExpand&&this.output.length>0){var c=Ext.getCmp(this.autoExpand);c[d?"expand":"collapse"]();if(d){c.expand();if(c.ownerCt&&c.ownerCt instanceof Ext.Panel){c.ownerCt.expand()}}else{this.target.tools[this.featureManager].loadFeatures()}}},scope:this}]}this.actions=gxp.plugins.QueryForm.superclass.addActions.apply(this,a);if(this.actionTarget!==null&&this.actions){this.target.tools[this.featureManager].on("layerchange",function(d,e,c){for(var b=this.actions.length-1;b>=0;--b){this.actions[b].setDisabled(!c)}},this)}},addOutput:function(d){var c=this.target.tools[this.featureManager];d=Ext.apply({border:false,bodyStyle:"padding: 10px",layout:"form",width:320,autoScroll:true,items:[{xtype:"fieldset",ref:"spatialFieldset",title:this.queryByLocationText,anchor:"97%",style:"margin-bottom:0; border-left-color:transparent; border-right-color:transparent; border-width:1px 1px 0 1px; padding-bottom:0",checkboxToggle:true},{xtype:"fieldset",ref:"attributeFieldset",title:this.queryByAttributesText,anchor:"97%",style:"margin-bottom:0",checkboxToggle:true}],bbar:["->",{text:this.cancelButtonText,iconCls:"cancel",handler:function(){var h=this.outputTarget?b.ownerCt:b.ownerCt.ownerCt;if(h&&h instanceof Ext.Window){h.hide()}a(c,c.layerRecord,c.schema);c.loadFeatures()}},{text:this.queryActionText,iconCls:"gxp-icon-find",handler:function(){var i=[];if(b.spatialFieldset.collapsed!==true){i.push(new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:c.featureStore.geometryName,value:this.target.mapPanel.map.getExtent()}))}if(b.attributeFieldset.collapsed!==true){var h=b.filterBuilder.getFilter();h&&i.push(h)}c.loadFeatures(i.length>1?new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:i}):i[0])},scope:this}]},d||{});var b=gxp.plugins.QueryForm.superclass.addOutput.call(this,d);var e=null,f=true;if(this.autoExpand){e=Ext.getCmp(this.autoExpand);function g(){if(f){e.un("expand",g);e.un("collapse",g);e=null}f=true}e.on({expand:g,collapse:g})}var a=function(i,j,h){b.attributeFieldset.removeAll();b.setDisabled(!h);if(e){f=false;e[h?"expand":"collapse"]();if(h&&e&&e.ownerCt&&e.ownerCt instanceof Ext.Panel){e.ownerCt.expand()}}if(h){b.attributeFieldset.add({xtype:"gxp_filterbuilder",ref:"../filterBuilder",attributes:h,allowBlank:true,allowGroups:false});b.spatialFieldset.expand();b.attributeFieldset.expand()}else{b.attributeFieldset.rendered&&b.attributeFieldset.collapse();b.spatialFieldset.rendered&&b.spatialFieldset.collapse()}b.attributeFieldset.doLayout()};c.on("layerchange",a);a(c,c.layerRecord,c.schema);c.on({beforequery:function(){new Ext.LoadMask(b.getEl(),{store:c.featureStore,msg:this.queryMsg}).show()},query:function(i,h){if(h){if(this.target.tools[this.featureManager].featureStore!==null){h.getCount()||Ext.Msg.show({title:this.noFeaturesTitle,msg:this.noFeaturesMessage,buttons:Ext.Msg.OK,icon:Ext.Msg.INFO});if(this.autoHide){var j=this.outputTarget?b.ownerCt:b.ownerCt.ownerCt;j instanceof Ext.Window&&j.hide()}}}},scope:this});return b}});Ext.preg(gxp.plugins.QueryForm.prototype.ptype,gxp.plugins.QueryForm);Ext.namespace("GeoExt.data");GeoExt.data.WMSDescribeLayerReader=function(a,b){a=a||{};if(!a.format){a.format=new OpenLayers.Format.WMSDescribeLayer()}if(!(typeof b==="function")){b=Ext.data.Record.create(b||a.fields||[{name:"owsType",type:"string"},{name:"owsURL",type:"string"},{name:"typeName",type:"string"}])}GeoExt.data.WMSDescribeLayerReader.superclass.constructor.call(this,a,b)};Ext.extend(GeoExt.data.WMSDescribeLayerReader,Ext.data.DataReader,{read:function(a){var b=a.responseXML;if(!b||!b.documentElement){b=a.responseText}return this.readRecords(b)},readRecords:function(e){if(typeof e==="string"||e.nodeType){e=this.meta.format.read(e)}if(!!e.error){throw new Ext.data.DataReader.Error("invalid-response",e.error)}var b=[],d;for(var c=0,a=e.length;c<a;c++){d=e[c];if(d){b.push(new this.recordType(d))}}return{totalRecords:b.length,success:true,records:b}}});OpenLayers.Format.WMSCapabilities.v1_1_1_WMSC=OpenLayers.Class(OpenLayers.Format.WMSCapabilities.v1_1_1,{version:"1.1.1",profile:"WMSC",readers:{wms:OpenLayers.Util.applyDefaults({VendorSpecificCapabilities:function(a,b){b.vendorSpecific={tileSets:[]};this.readChildNodes(a,b.vendorSpecific)},TileSet:function(b,a){var c={srs:{},bbox:{},resolutions:[]};this.readChildNodes(b,c);a.tileSets.push(c)},Resolutions:function(d,e){var c=this.getChildValue(d).split(" ");for(var b=0,a=c.length;b<a;b++){if(c[b]!=""){e.resolutions.push(parseFloat(c[b]))}}},Width:function(a,b){b.width=parseInt(this.getChildValue(a))},Height:function(a,b){b.height=parseInt(this.getChildValue(a))},Layers:function(a,b){b.layers=this.getChildValue(a)},Styles:function(a,b){b.styles=this.getChildValue(a)}},OpenLayers.Format.WMSCapabilities.v1_1_1.prototype.readers.wms)},CLASS_NAME:"OpenLayers.Format.WMSCapabilities.v1_1_1_WMSC"});Ext.namespace("gxp.plugins");gxp.plugins.WMSCSource=Ext.extend(gxp.plugins.WMSSource,{ptype:"gxp_wmscsource",version:"1.1.1",constructor:function(a){a.baseParams={SERVICE:"WMS",REQUEST:"GetCapabilities",TILED:true};if(!a.format){this.format=new OpenLayers.Format.WMSCapabilities({keepData:true,profile:"WMSC",allowFallback:true})}gxp.plugins.WMSCSource.superclass.constructor.apply(this,arguments)},createLayerRecord:function(b){var h=gxp.plugins.WMSCSource.superclass.createLayerRecord.apply(this,arguments);if(!h){return}var d,e;if(this.store.reader.raw){d=this.store.reader.raw.capability}var l=(d&&d.vendorSpecific)?d.vendorSpecific.tileSets:(b.capability&&b.capability.tileSets);var j=h.get("layer");if(l){var a=this.getProjection(h)||this.getMapProjection();for(var f=0,k=l.length;f<k;f++){var c=l[f];if(c.layers===j.params.LAYERS){var m;for(e in c.srs){m=new OpenLayers.Projection(e);break}if(a.equals(m)){var o=c.bbox[e].bbox;j.projection=m;j.addOptions({resolutions:c.resolutions,tileSize:new OpenLayers.Size(c.width,c.height),tileOrigin:new OpenLayers.LonLat(o[0],o[1])});break}}}}else{if(this.lazy){var q=b.tileSize,g=b.tileOrigin;j.addOptions({resolutions:b.resolutions,tileSize:q?new OpenLayers.Size(q[0],q[1]):undefined,tileOrigin:g?OpenLayers.LonLat.fromArray(g):undefined});if(!g){var n;if(this.target.map.maxExtent){n=this.target.map.maxExtent}else{e=b.srs||this.target.map.projection;n=OpenLayers.Projection.defaults[e].maxExtent}if(n){j.tileOrigin=OpenLayers.LonLat.fromArray(n)}}}}j.params.TILED=b.tiled;return h},getConfigForRecord:function(f){var c=gxp.plugins.WMSCSource.superclass.getConfigForRecord.apply(this,arguments),a=c.name,d,g=f.getLayer();if(c.capability&&this.store.reader.raw){var b=this.store.reader.raw.capability;var h=b.vendorSpecific&&b.vendorSpecific.tileSets;if(h){for(var e=h.length-1;e>=0;--e){d=h[e];if(d.layers===a&&d.srs[g.projection]){c.capability.tileSets=[d];break}}}}if(!(c.capability&&c.capability.tileSets)){var j=g.options.tileSize;if(j){c.tileSize=[j.w,j.h]}c.tileOrigin=g.options.tileOrigin;c.resolutions=g.options.resolutions}return Ext.applyIf(c,{cached:!!g.params.TILED})}});Ext.preg(gxp.plugins.WMSCSource.prototype.ptype,gxp.plugins.WMSCSource);Ext.namespace("gxp.plugins");gxp.plugins.ZoomToExtent=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_zoomtoextent",menuText:"Zoom To Max Extent",tooltip:"Zoom To Max Extent",extent:null,closest:true,iconCls:"gxp-icon-zoomtoextent",closest:true,constructor:function(a){gxp.plugins.ZoomToExtent.superclass.constructor.apply(this,arguments);if(this.extent instanceof Array){this.extent=OpenLayers.Bounds.fromArray(this.extent)}},addActions:function(){return gxp.plugins.ZoomToExtent.superclass.addActions.apply(this,[{text:this.buttonText,menuText:this.menuText,iconCls:this.iconCls,tooltip:this.tooltip,handler:function(){var g=this.target.mapPanel.map;var f=typeof this.extent=="function"?this.extent():this.extent;if(!f){var e,b;for(var d=0,a=g.layers.length;d<a;++d){e=g.layers[d];if(e.getVisibility()){b=e.restrictedExtent||e.maxExtent;if(f){f.extend(b)}else{if(b){f=b.clone()}}}}}if(f){var c=g.restrictedExtent||g.maxExtent;if(c){f=new OpenLayers.Bounds(Math.max(f.left,c.left),Math.max(f.bottom,c.bottom),Math.min(f.right,c.right),Math.min(f.top,c.top))}g.zoomToExtent(f,this.closest)}},scope:this}])}});Ext.preg(gxp.plugins.ZoomToExtent.prototype.ptype,gxp.plugins.ZoomToExtent);OpenLayers.Control.NavigationHistory=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOGGLE,previous:null,previousOptions:null,next:null,nextOptions:null,limit:50,autoActivate:true,clearOnDeactivate:false,registry:null,nextStack:null,previousStack:null,listeners:null,restoring:false,initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,[a]);this.registry=OpenLayers.Util.extend({moveend:this.getState},this.registry);var b={trigger:OpenLayers.Function.bind(this.previousTrigger,this),displayClass:this.displayClass+" "+this.displayClass+"Previous"};OpenLayers.Util.extend(b,this.previousOptions);this.previous=new OpenLayers.Control.Button(b);var c={trigger:OpenLayers.Function.bind(this.nextTrigger,this),displayClass:this.displayClass+" "+this.displayClass+"Next"};OpenLayers.Util.extend(c,this.nextOptions);this.next=new OpenLayers.Control.Button(c);this.clear()},onPreviousChange:function(b,a){if(b&&!this.previous.active){this.previous.activate()}else{if(!b&&this.previous.active){this.previous.deactivate()}}},onNextChange:function(b,a){if(b&&!this.next.active){this.next.activate()}else{if(!b&&this.next.active){this.next.deactivate()}}},destroy:function(){OpenLayers.Control.prototype.destroy.apply(this);this.previous.destroy();this.next.destroy();this.deactivate();for(var a in this){this[a]=null}},setMap:function(a){this.map=a;this.next.setMap(a);this.previous.setMap(a)},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);this.next.draw();this.previous.draw()},previousTrigger:function(){var b=this.previousStack.shift();var a=this.previousStack.shift();if(a!=undefined){this.nextStack.unshift(b);this.previousStack.unshift(a);this.restoring=true;this.restore(a);this.restoring=false;this.onNextChange(this.nextStack[0],this.nextStack.length);this.onPreviousChange(this.previousStack[1],this.previousStack.length-1)}else{this.previousStack.unshift(b)}return a},nextTrigger:function(){var a=this.nextStack.shift();if(a!=undefined){this.previousStack.unshift(a);this.restoring=true;this.restore(a);this.restoring=false;this.onNextChange(this.nextStack[0],this.nextStack.length);this.onPreviousChange(this.previousStack[1],this.previousStack.length-1)}return a},clear:function(){this.previousStack=[];this.previous.deactivate();this.nextStack=[];this.next.deactivate()},getState:function(){return{center:this.map.getCenter(),resolution:this.map.getResolution(),projection:this.map.getProjectionObject(),units:this.map.getProjectionObject().getUnits()||this.map.units||this.map.baseLayer.units}},restore:function(e){var a,d;if(this.map.getProjectionObject()==e.projection){d=this.map.getZoomForResolution(e.resolution);a=e.center}else{a=e.center.clone();a.transform(e.projection,this.map.getProjectionObject());var f=e.units;var b=this.map.getProjectionObject().getUnits()||this.map.units||this.map.baseLayer.units;var c=f&&b?OpenLayers.INCHES_PER_UNIT[f]/OpenLayers.INCHES_PER_UNIT[b]:1;d=this.map.getZoomForResolution(c*e.resolution)}this.map.setCenter(a,d)},setListeners:function(){this.listeners={};for(var a in this.registry){this.listeners[a]=OpenLayers.Function.bind(function(){if(!this.restoring){var b=this.registry[a].apply(this,arguments);this.previousStack.unshift(b);if(this.previousStack.length>1){this.onPreviousChange(this.previousStack[1],this.previousStack.length-1)}if(this.previousStack.length>(this.limit+1)){this.previousStack.pop()}if(this.nextStack.length>0){this.nextStack=[];this.onNextChange(null,0)}}return true},this)}},activate:function(){var a=false;if(this.map){if(OpenLayers.Control.prototype.activate.apply(this)){if(this.listeners==null){this.setListeners()}for(var b in this.listeners){this.map.events.register(b,this,this.listeners[b])}a=true;if(this.previousStack.length==0){this.initStack()}}}return a},initStack:function(){if(this.map.getCenter()){this.listeners.moveend()}},deactivate:function(){var b=false;if(this.map){if(OpenLayers.Control.prototype.deactivate.apply(this)){for(var a in this.listeners){this.map.events.unregister(a,this,this.listeners[a])}if(this.clearOnDeactivate){this.clear()}b=true}}return b},CLASS_NAME:"OpenLayers.Control.NavigationHistory"});Ext.namespace("gxp.plugins");gxp.plugins.NavigationHistory=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_navigationhistory",previousMenuText:"Zoom To Previous Extent",nextMenuText:"Zoom To Next Extent",previousTooltip:"Zoom To Previous Extent",nextTooltip:"Zoom To Next Extent",constructor:function(a){gxp.plugins.NavigationHistory.superclass.constructor.apply(this,arguments)},addActions:function(){var a=new OpenLayers.Control.NavigationHistory();this.target.mapPanel.map.addControl(a);var b=[new GeoExt.Action({menuText:this.previousMenuText,iconCls:"gxp-icon-zoom-previous",tooltip:this.previousTooltip,disabled:true,control:a.previous}),new GeoExt.Action({menuText:this.nextMenuText,iconCls:"gxp-icon-zoom-next",tooltip:this.nextTooltip,disabled:true,control:a.next})];return gxp.plugins.NavigationHistory.superclass.addActions.apply(this,[b])}});Ext.preg(gxp.plugins.NavigationHistory.prototype.ptype,gxp.plugins.NavigationHistory);Ext.namespace("gxp.plugins");gxp.plugins.Zoom=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_zoom",zoomMenuText:"Zoom Box",zoomInMenuText:"Zoom In",zoomOutMenuText:"Zoom Out",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Zoom in",zoomOutTooltip:"Zoom out",constructor:function(a){gxp.plugins.Zoom.superclass.constructor.apply(this,arguments)},addActions:function(){var a=[{menuText:this.zoomInMenuText,iconCls:"gxp-icon-zoom-in",tooltip:this.zoomInTooltip,handler:function(){this.target.mapPanel.map.zoomIn()},scope:this},{menuText:this.zoomOutMenuText,iconCls:"gxp-icon-zoom-out",tooltip:this.zoomOutTooltip,handler:function(){this.target.mapPanel.map.zoomOut()},scope:this}];if(this.showZoomBoxAction){a.unshift(new GeoExt.Action({menuText:this.zoomText,iconCls:"gxp-icon-zoom",tooltip:this.zoomTooltip,control:new OpenLayers.Control.ZoomBox(this.controlOptions),map:this.target.mapPanel.map,enableToggle:true,allowDepress:false,toggleGroup:this.toggleGroup}))}return gxp.plugins.Zoom.superclass.addActions.apply(this,[a])}});Ext.preg(gxp.plugins.Zoom.prototype.ptype,gxp.plugins.Zoom);OpenLayers.Control.Measure=OpenLayers.Class(OpenLayers.Control,{callbacks:null,displaySystem:"metric",geodesic:false,displaySystemUnits:{geographic:["dd"],english:["mi","ft","in"],metric:["km","m"]},partialDelay:300,delayedTrigger:null,persist:false,immediate:false,initialize:function(b,a){OpenLayers.Control.prototype.initialize.apply(this,[a]);var c={done:this.measureComplete,point:this.measurePartial};if(this.immediate){c.modify=this.measureImmediate}this.callbacks=OpenLayers.Util.extend(c,this.callbacks);this.handlerOptions=OpenLayers.Util.extend({persist:this.persist},this.handlerOptions);this.handler=new b(this,this.callbacks,this.handlerOptions)},deactivate:function(){this.cancelDelay();return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},cancel:function(){this.cancelDelay();this.handler.cancel()},setImmediate:function(a){this.immediate=a;if(this.immediate){this.callbacks.modify=this.measureImmediate}else{delete this.callbacks.modify}},updateHandler:function(b,a){var c=this.active;if(c){this.deactivate()}this.handler=new b(this,this.callbacks,a);if(c){this.activate()}},measureComplete:function(a){this.cancelDelay();this.measure(a,"measure")},measurePartial:function(a,b){this.cancelDelay();b=b.clone();if(this.handler.freehandMode(this.handler.evt)){this.measure(b,"measurepartial")}else{this.delayedTrigger=window.setTimeout(OpenLayers.Function.bind(function(){this.delayedTrigger=null;this.measure(b,"measurepartial")},this),this.partialDelay)}},measureImmediate:function(a,c,b){if(b&&!this.handler.freehandMode(this.handler.evt)){this.cancelDelay();this.measure(c.geometry,"measurepartial")}},cancelDelay:function(){if(this.delayedTrigger!==null){window.clearTimeout(this.delayedTrigger);this.delayedTrigger=null}},measure:function(d,b){var c,a;if(d.CLASS_NAME.indexOf("LineString")>-1){c=this.getBestLength(d);a=1}else{c=this.getBestArea(d);a=2}this.events.triggerEvent(b,{measure:c[0],units:c[1],order:a,geometry:d})},getBestArea:function(f){var b=this.displaySystemUnits[this.displaySystem];var e,d;for(var c=0,a=b.length;c<a;++c){e=b[c];d=this.getArea(f,e);if(d>1){break}}return[d,e]},getArea:function(f,a){var b,c;if(this.geodesic){b=f.getGeodesicArea(this.map.getProjectionObject());c="m"}else{b=f.getArea();c=this.map.getUnits()}var e=OpenLayers.INCHES_PER_UNIT[a];if(e){var d=OpenLayers.INCHES_PER_UNIT[c];b*=Math.pow((d/e),2)}return b},getBestLength:function(f){var b=this.displaySystemUnits[this.displaySystem];var e,d;for(var c=0,a=b.length;c<a;++c){e=b[c];d=this.getLength(f,e);if(d>1){break}}return[d,e]},getLength:function(f,a){var b,c;if(this.geodesic){b=f.getGeodesicLength(this.map.getProjectionObject());c="m"}else{b=f.getLength();c=this.map.getUnits()}var e=OpenLayers.INCHES_PER_UNIT[a];if(e){var d=OpenLayers.INCHES_PER_UNIT[c];b*=(d/e)}return b},CLASS_NAME:"OpenLayers.Control.Measure"});Ext.namespace("gxp.plugins");gxp.plugins.Measure=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_measure",outputTarget:"map",buttonText:"Measure",lengthMenuText:"Length",areaMenuText:"Area",lengthTooltip:"Measure length",areaTooltip:"Measure area",measureTooltip:"Measure",constructor:function(a){gxp.plugins.Measure.superclass.constructor.apply(this,arguments)},destroy:function(){this.button=null;gxp.plugins.Measure.superclass.destroy.apply(this,arguments)},createMeasureControl:function(c,g){var e=new OpenLayers.StyleMap({"default":new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{Point:{pointRadius:4,graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:3,strokeOpacity:1,strokeColor:"#666666",strokeDashstyle:"dash"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#666666",fillColor:"white",fillOpacity:0.3}}})]})});var b=function(){if(a){a.destroy()}};var d=function(k){var l=k.measure;var i=k.units;f.displaySystem="english";var n=k.geometry.CLASS_NAME.indexOf("LineString")>-1?f.getBestLength(k.geometry):f.getBestArea(k.geometry);var j=n[0];var m=n[1];f.displaySystem="metric";var o=k.order==2?"<sup>2</sup>":"";return l.toFixed(2)+" "+i+o+"<br>"+j.toFixed(2)+" "+m+o};var a;var h=Ext.apply({},this.initialConfig.controlOptions);Ext.applyIf(h,{geodesic:true,persist:true,handlerOptions:{layerOptions:{styleMap:e}},eventListeners:{measurepartial:function(j){b();a=this.addOutput({xtype:"tooltip",html:d(j),title:g,autoHide:false,closable:true,draggable:false,mouseOffset:[0,0],showDelay:1,listeners:{hide:b}});if(j.measure>0){var i=f.handler.lastUp;var k=this.target.mapPanel.getPosition();a.targetXY=[k[0]+i.x,k[1]+i.y];a.show()}},deactivate:b,scope:this}});var f=new OpenLayers.Control.Measure(c,h);return f},addActions:function(){this.activeIndex=0;this.button=new Ext.SplitButton({iconCls:"gxp-icon-measure-length",tooltip:this.measureTooltip,buttonText:this.buttonText,enableToggle:true,toggleGroup:this.toggleGroup,allowDepress:true,handler:function(a,b){if(a.pressed){a.menu.items.itemAt(this.activeIndex).setChecked(true)}},scope:this,listeners:{toggle:function(a,b){if(!b){a.menu.items.each(function(c){c.setChecked(false)})}},render:function(a){Ext.ButtonToggleMgr.register(a)}},menu:new Ext.menu.Menu({items:[new Ext.menu.CheckItem(new GeoExt.Action({text:this.lengthMenuText,iconCls:"gxp-icon-measure-length",toggleGroup:this.toggleGroup,group:this.toggleGroup,listeners:{checkchange:function(b,a){this.activeIndex=0;this.button.toggle(a);if(a){this.button.setIconClass(b.iconCls)}},scope:this},map:this.target.mapPanel.map,control:this.createMeasureControl(OpenLayers.Handler.Path,this.lengthTooltip)})),new Ext.menu.CheckItem(new GeoExt.Action({text:this.areaMenuText,iconCls:"gxp-icon-measure-area",toggleGroup:this.toggleGroup,group:this.toggleGroup,allowDepress:false,listeners:{checkchange:function(b,a){this.activeIndex=1;this.button.toggle(a);if(a){this.button.setIconClass(b.iconCls)}},scope:this},map:this.target.mapPanel.map,control:this.createMeasureControl(OpenLayers.Handler.Polygon,this.areaTooltip)}))]})});return gxp.plugins.Measure.superclass.addActions.apply(this,[this.button])}});Ext.preg(gxp.plugins.Measure.prototype.ptype,gxp.plugins.Measure);OpenLayers.Handler.Hover=OpenLayers.Class(OpenLayers.Handler,{delay:500,pixelTolerance:null,stopMove:false,px:null,timerId:null,mousemove:function(a){if(this.passesTolerance(a.xy)){this.clearTimer();this.callback("move",[a]);this.px=a.xy;a=OpenLayers.Util.extend({},a);this.timerId=window.setTimeout(OpenLayers.Function.bind(this.delayedCall,this,a),this.delay)}return !this.stopMove},mouseout:function(a){if(OpenLayers.Util.mouseLeft(a,this.map.viewPortDiv)){this.clearTimer();this.callback("move",[a])}return true},passesTolerance:function(b){var c=true;if(this.pixelTolerance&&this.px){var a=Math.sqrt(Math.pow(this.px.x-b.x,2)+Math.pow(this.px.y-b.y,2));if(a<this.pixelTolerance){c=false}}return c},clearTimer:function(){if(this.timerId!=null){window.clearTimeout(this.timerId);this.timerId=null}},delayedCall:function(a){this.callback("pause",[a])},deactivate:function(){var a=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.clearTimer();a=true}return a},CLASS_NAME:"OpenLayers.Handler.Hover"});OpenLayers.Control.WMSGetFeatureInfo=OpenLayers.Class(OpenLayers.Control,{hover:false,drillDown:false,maxFeatures:10,clickCallback:"click",output:"features",layers:null,queryVisible:false,url:null,layerUrls:null,infoFormat:"text/html",vendorParams:{},format:null,formatOptions:null,handler:null,hoverRequest:null,initialize:function(a){a=a||{};a.handlerOptions=a.handlerOptions||{};OpenLayers.Control.prototype.initialize.apply(this,[a]);if(!this.format){this.format=new OpenLayers.Format.WMSGetFeatureInfo(a.formatOptions)}if(this.drillDown===true){this.hover=false}if(this.hover){this.handler=new OpenLayers.Handler.Hover(this,{move:this.cancelHover,pause:this.getInfoForHover},OpenLayers.Util.extend(this.handlerOptions.hover||{},{delay:250}))}else{var b={};b[this.clickCallback]=this.getInfoForClick;this.handler=new OpenLayers.Handler.Click(this,b,this.handlerOptions.click||{})}},getInfoForClick:function(a){this.events.triggerEvent("beforegetfeatureinfo",{xy:a.xy});OpenLayers.Element.addClass(this.map.viewPortDiv,"olCursorWait");this.request(a.xy,{})},getInfoForHover:function(a){this.events.triggerEvent("beforegetfeatureinfo",{xy:a.xy});this.request(a.xy,{hover:true})},cancelHover:function(){if(this.hoverRequest){this.hoverRequest.abort();this.hoverRequest=null}},findLayers:function(){var d=this.layers||this.map.layers;var e=[];var c,a;for(var b=d.length-1;b>=0;--b){c=d[b];if(c instanceof OpenLayers.Layer.WMS&&(!this.queryVisible||c.getVisibility())){a=OpenLayers.Util.isArray(c.url)?c.url[0]:c.url;if(this.drillDown===false&&!this.url){this.url=a}if(this.drillDown===true||this.urlMatches(a)){e.push(c)}}}return e},urlMatches:function(b){var d=OpenLayers.Util.isEquivalentUrl(this.url,b);if(!d&&this.layerUrls){for(var c=0,a=this.layerUrls.length;c<a;++c){if(OpenLayers.Util.isEquivalentUrl(this.layerUrls[c],b)){d=true;break}}}return d},buildWMSOptions:function(b,e,c,l){var j=[],m=[];for(var f=0,h=e.length;f<h;f++){if(e[f].params.LAYERS!=null){j=j.concat(e[f].params.LAYERS);m=m.concat(this.getStyleNames(e[f]))}}var a=e[0];var g=this.map.getProjection();var k=a.projection;if(k&&k.equals(this.map.getProjectionObject())){g=k.getCode()}var d=OpenLayers.Util.extend({service:"WMS",version:a.params.VERSION,request:"GetFeatureInfo",exceptions:a.params.EXCEPTIONS,bbox:this.map.getExtent().toBBOX(null,a.reverseAxisOrder()),feature_count:this.maxFeatures,height:this.map.getSize().h,width:this.map.getSize().w,format:l,info_format:a.params.INFO_FORMAT||this.infoFormat},(parseFloat(a.params.VERSION)>=1.3)?{crs:g,i:parseInt(c.x),j:parseInt(c.y)}:{srs:g,x:parseInt(c.x),y:parseInt(c.y)});if(j.length!=0){d=OpenLayers.Util.extend({layers:j,query_layers:j,styles:m},d)}OpenLayers.Util.applyDefaults(d,this.vendorParams);return{url:b,params:OpenLayers.Util.upperCaseObject(d),callback:function(i){this.handleResponse(c,i,b)},scope:this}},getStyleNames:function(b){var a;if(b.params.STYLES){a=b.params.STYLES}else{if(OpenLayers.Util.isArray(b.params.LAYERS)){a=new Array(b.params.LAYERS.length)}else{a=b.params.LAYERS.replace(/[^,]/g,"")}}return a},request:function(b,m){var d=this.findLayers();if(d.length==0){this.events.triggerEvent("nogetfeatureinfo");OpenLayers.Element.removeClass(this.map.viewPortDiv,"olCursorWait");return}m=m||{};if(this.drillDown===false){var k=this.buildWMSOptions(this.url,d,b,d[0].params.FORMAT);var c=OpenLayers.Request.GET(k);if(m.hover===true){this.hoverRequest=c}}else{this._requestCount=0;this._numRequests=0;this.features=[];var j={},a;for(var e=0,h=d.length;e<h;e++){var f=d[e];var g,l=false;a=OpenLayers.Util.isArray(f.url)?f.url[0]:f.url;if(a in j){j[a].push(f)}else{this._numRequests++;j[a]=[f]}}var d;for(var a in j){d=j[a];var k=this.buildWMSOptions(a,d,b,d[0].params.FORMAT);OpenLayers.Request.GET(k)}}},triggerGetFeatureInfo:function(b,c,a){this.events.triggerEvent("getfeatureinfo",{text:b.responseText,features:a,request:b,xy:c});OpenLayers.Element.removeClass(this.map.viewPortDiv,"olCursorWait")},handleResponse:function(e,c,a){var d=c.responseXML;if(!d||!d.documentElement){d=c.responseText}var b=this.format.read(d);if(this.drillDown===false){this.triggerGetFeatureInfo(c,e,b)}else{this._requestCount++;if(this.output==="object"){this._features=(this._features||[]).concat({url:a,features:b})}else{this._features=(this._features||[]).concat(b)}if(this._requestCount===this._numRequests){this.triggerGetFeatureInfo(c,e,this._features.concat());delete this._features;delete this._requestCount;delete this._numRequests}}},CLASS_NAME:"OpenLayers.Control.WMSGetFeatureInfo"});Ext.namespace("gxp.plugins");gxp.plugins.WMSGetFeatureInfo=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_wmsgetfeatureinfo",outputTarget:"map",popupCache:null,infoActionTip:"Get Feature Info",popupTitle:"Feature Info",buttonText:"Identify",format:"html",addActions:function(){this.popupCache={};var d=gxp.plugins.WMSGetFeatureInfo.superclass.addActions.call(this,[{tooltip:this.infoActionTip,iconCls:"gxp-icon-getfeatureinfo",buttonText:this.buttonText,toggleGroup:this.toggleGroup,enableToggle:true,allowDepress:true,toggleHandler:function(g,h){for(var f=0,e=c.controls.length;f<e;f++){if(h){c.controls[f].activate()}else{c.controls[f].deactivate()}}}}]);var a=this.actions[0].items[0];var c={controls:[]};var b=function(){var f=this.target.mapPanel.layers.queryBy(function(i){return i.get("queryable")});var j=this.target.mapPanel.map;var h;for(var g=0,e=c.controls.length;g<e;g++){h=c.controls[g];h.deactivate();h.destroy()}c.controls=[];f.each(function(k){var m=k.getLayer();var r=Ext.apply({},this.vendorParams),q;if(this.layerParams){for(var l=this.layerParams.length-1;l>=0;--l){q=this.layerParams[l].toUpperCase();r[q]=m.params[q]}}var n=k.get("infoFormat");if(n===undefined){n=this.format=="html"?"text/html":"application/vnd.ogc.gml"}var o=new OpenLayers.Control.WMSGetFeatureInfo(Ext.applyIf({url:m.url,queryVisible:true,layers:[m],infoFormat:n,vendorParams:r,eventListeners:{getfeatureinfo:function(i){var t=k.get("title")||k.get("name");if(n=="text/html"){var s=i.text.match(/<body[^>]*>([\s\S]*)<\/body>/);if(s&&!s[1].match(/^\s*$/)){this.displayPopup(i,t,s[1])}}else{if(n=="text/plain"){this.displayPopup(i,t,"<pre>"+i.text+"</pre>")}else{if(i.features&&i.features.length>0){this.displayPopup(i,t,null,k.get("getFeatureInfo"))}}}},scope:this}},this.controlOptions));j.addControl(o);c.controls.push(o);if(a.pressed){o.activate()}},this)};this.target.mapPanel.layers.on("update",b,this);this.target.mapPanel.layers.on("add",b,this);this.target.mapPanel.layers.on("remove",b,this);return d},displayPopup:function(h,g,k,f){var b;var a=h.xy.x+"."+h.xy.y;f=f||{};if(!(a in this.popupCache)){b=this.addOutput({xtype:"gx_popup",title:this.popupTitle,layout:"accordion",fill:false,autoScroll:true,location:h.xy,map:this.target.mapPanel,width:250,height:300,defaults:{layout:"fit",autoScroll:true,autoHeight:true,autoWidth:true,collapsible:true}});b.on({close:(function(i){return function(m){delete this.popupCache[i]}})(a),scope:this});this.popupCache[a]=b}else{b=this.popupCache[a]}var c=h.features,d=[];if(!k&&c){var l;for(var e=0,j=c.length;e<j;++e){l=c[e];d.push(Ext.apply({xtype:"gxp_editorgrid",readOnly:true,listeners:{beforeedit:function(i){return false}},title:l.fid?l.fid:g,feature:l,fields:f.fields,propertyNames:f.propertyNames},this.itemConfig))}}else{if(k){d.push(Ext.apply({title:g,html:k},this.itemConfig))}}b.add(d);b.doLayout()}});Ext.preg(gxp.plugins.WMSGetFeatureInfo.prototype.ptype,gxp.plugins.WMSGetFeatureInfo);Ext.namespace("gxp.plugins");gxp.plugins.Navigation=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_navigation",menuText:"Pan Map",tooltip:"Pan Map",constructor:function(a){gxp.plugins.Navigation.superclass.constructor.apply(this,arguments)},addActions:function(){var a;if(!this.controlOptions){candidates=this.target.mapPanel.map.getControlsByClass("OpenLayers.Control.Navigation");if(candidates.length){a=candidates[0]}}else{this.controlOptions=this.controlOptions||{};Ext.applyIf(this.controlOptions,{dragPanOptions:{enableKinetic:true}});a=new OpenLayers.Control.Navigation(this.controlOptions)}var b=[new GeoExt.Action({tooltip:this.tooltip,menuText:this.menuText,iconCls:"gxp-icon-pan",enableToggle:true,pressed:true,allowDepress:false,control:a,map:a.map?null:this.target.mapPanel.map,toggleGroup:this.toggleGroup})];return gxp.plugins.Navigation.superclass.addActions.apply(this,[b])}});Ext.preg(gxp.plugins.Navigation.prototype.ptype,gxp.plugins.Navigation);Ext.namespace("gxp.plugins");gxp.plugins.LayerTree=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_layertree",shortTitle:"Layers",rootNodeText:"Layers",overlayNodeText:"Overlays",baseNodeText:"Base Layers",groups:null,defaultGroup:"default",treeNodeUI:null,constructor:function(a){gxp.plugins.LayerTree.superclass.constructor.apply(this,arguments);if(!this.groups){this.groups={"default":this.overlayNodeText,background:{title:this.baseNodeText,exclusive:true}}}if(!this.treeNodeUI){this.treeNodeUI=Ext.extend(GeoExt.tree.LayerNodeUI,new GeoExt.tree.TreeNodeUIEventMixin())}},addOutput:function(b){b=Ext.apply(this.createOutputConfig(),b||{});var a=gxp.plugins.LayerTree.superclass.addOutput.call(this,b);a.on({contextmenu:this.handleTreeContextMenu,beforemovenode:this.handleBeforeMoveNode,scope:this});return a},createOutputConfig:function(){var c=new Ext.tree.TreeNode({text:this.rootNodeText,expanded:true,isTarget:false,allowDrop:false});var a;if(this.initialConfig.loader&&this.initialConfig.loader.baseAttrs){a=this.initialConfig.loader.baseAttrs}var b=this.defaultGroup,d=this,e,g;for(var f in this.groups){e=typeof this.groups[f]=="string"?{title:this.groups[f]}:this.groups[f];g=e.exclusive;c.appendChild(new GeoExt.tree.LayerContainer(Ext.apply({text:e.title,iconCls:"gxp-folder",expanded:true,group:f==this.defaultGroup?undefined:f,loader:new GeoExt.tree.LayerLoader({baseAttrs:g?Ext.apply({checkedGroup:Ext.isString(g)?g:f},a):a,store:this.target.mapPanel.layers,filter:(function(h){return function(i){return(i.get("group")||b)==h&&i.getLayer().displayInLayerSwitcher==true}})(f),createNode:function(h){d.configureLayerNode(this,h);return GeoExt.tree.LayerLoader.prototype.createNode.apply(this,arguments)}}),singleClickExpand:true,allowDrag:false,listeners:{append:function(h,i){i.expand()}}},e)))}return{xtype:"treepanel",root:c,rootVisible:false,shortTitle:this.shortTitle,border:false,enableDD:true,selModel:new Ext.tree.DefaultSelectionModel({listeners:{beforeselect:this.handleBeforeSelect,scope:this}}),contextMenu:new Ext.menu.Menu({items:[]})}},configureLayerNode:function(b,a){a.uiProvider=this.treeNodeUI;var e=a.layer;var d=a.layerStore;if(e&&d){var c=d.getAt(d.findBy(function(f){return f.getLayer()===e}));if(c){a.qtip=c.get("abstract");if(!c.get("queryable")&&!a.iconCls){a.iconCls="gxp-tree-rasterlayer-icon"}if(c.get("fixed")){a.allowDrag=false}a.listeners={rendernode:function(f){if(c===this.target.selectedLayer){f.select()}this.target.on("layerselectionchange",function(g){if(!this.selectionChanging&&g===c){f.select()}},this)},scope:this}}}},handleBeforeSelect:function(c,e){var f=true;var d=e&&e.layer;var a;if(d){var b=e.layerStore;a=b.getAt(b.findBy(function(g){return g.getLayer()===d}))}this.selectionChanging=true;f=this.target.selectLayer(a);this.selectionChanging=false;return f},handleTreeContextMenu:function(b,d){if(b&&b.layer){b.select();var a=b.getOwnerTree();if(a.getSelectionModel().getSelectedNode()===b){var f=a.contextMenu;f.contextNode=b;f.items.getCount()>0&&f.showAt(d.getXY())}}},handleBeforeMoveNode:function(a,h,f,g,e){if(f!==g){var c=g.loader.store;var d=c.findBy(function(i){return i.getLayer()===h.layer});var b=c.getAt(d);b.set("group",g.attributes.group)}}});Ext.preg(gxp.plugins.LayerTree.prototype.ptype,gxp.plugins.LayerTree);Ext.namespace("GeoExt.plugins");GeoExt.plugins.TreeNodeComponent=Ext.extend(Ext.util.Observable,{constructor:function(a){Ext.apply(this.initialConfig,Ext.apply({},a));Ext.apply(this,a);GeoExt.plugins.TreeNodeComponent.superclass.constructor.apply(this,arguments)},init:function(a){a.on({rendernode:this.onRenderNode,beforedestroy:this.onBeforeDestroy,scope:this})},onRenderNode:function(d){var e=d.rendered;var a=d.attributes;var c=a.component||this.component;if(!e&&c){var b=Ext.DomHelper.append(d.ui.elNode,[{tag:"div"}]);if(typeof c=="function"){c=c(d,b)}else{if(typeof c=="object"&&typeof c.fn=="function"){c=c.fn.apply(c.scope,[d,b])}}if(typeof c=="object"&&typeof c.xtype=="string"){c=Ext.ComponentMgr.create(c)}if(c instanceof Ext.Component){c.render(b);d.component=c}}},onBeforeDestroy:function(a){a.un("rendernode",this.onRenderNode,this);a.un("beforedestroy",this.onBeforeDestroy,this)}});Ext.preg("gx_treenodecomponent",GeoExt.plugins.TreeNodeComponent);Ext.namespace("gxp.plugins");gxp.plugins.LayerManager=Ext.extend(gxp.plugins.LayerTree,{ptype:"gxp_layermanager",baseNodeText:"Base Maps",createOutputConfig:function(){var a=gxp.plugins.LayerManager.superclass.createOutputConfig.apply(this,arguments);Ext.applyIf(a,Ext.apply({cls:"gxp-layermanager-tree",lines:false,useArrows:true,plugins:[{ptype:"gx_treenodecomponent"}]},this.treeConfig));return a},configureLayerNode:function(b,a){gxp.plugins.LayerManager.superclass.configureLayerNode.apply(this,arguments);var c;if(OpenLayers.Layer.WMS&&a.layer instanceof OpenLayers.Layer.WMS){c="gx_wmslegend"}else{if(OpenLayers.Layer.Vector&&a.layer instanceof OpenLayers.Layer.Vector){c="gx_vectorlegend"}}if(c){var d;if(b&&b.baseAttrs&&b.baseAttrs.baseParams){d=b.baseAttrs.baseParams}Ext.apply(a,{component:{xtype:c,hidden:!a.layer.getVisibility(),baseParams:Ext.apply({transparent:true,format:"image/png",legend_options:"fontAntiAliasing:true;fontSize:11;fontName:Arial"},d),layerRecord:this.target.mapPanel.layers.getByLayer(a.layer),showTitle:false,cls:"legend"}})}}});Ext.preg(gxp.plugins.LayerManager.prototype.ptype,gxp.plugins.LayerManager);Ext.namespace("gxp");gxp.NewSourceDialog=Ext.extend(Ext.Panel,{title:"Add New Server...",cancelText:"Cancel",addServerText:"Add Server",invalidURLText:"Enter a valid URL to a WMS/TMS/REST endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Contacting Server...",bodyStyle:"padding: 0px",error:null,initComponent:function(){this.addEvents("urlselected");this.urlTextField=new Ext.form.TextField({fieldLabel:"URL",allowBlank:false,width:240,msgTarget:"under",validator:this.urlValidator.createDelegate(this),listeners:{specialkey:function(a,b){if(b.getKey()===b.ENTER){this.addServer()}},scope:this}});this.form=new Ext.form.FormPanel({items:[{xtype:"combo",width:240,name:"type",fieldLabel:"Type",value:"WMS",mode:"local",triggerAction:"all",store:[["WMS","Web Map Service (WMS)"],["TMS","Tiled Map Service (TMS)"],["REST","ArcGIS REST Service (REST)"]]},this.urlTextField],border:false,labelWidth:30,bodyStyle:"padding: 5px",autoWidth:true,autoHeight:true,listeners:{afterrender:function(){this.urlTextField.focus(false,true)},scope:this}});this.bbar=[new Ext.Button({text:this.cancelText,handler:this.hide,scope:this}),new Ext.Toolbar.Fill(),new Ext.Button({text:this.addServerText,iconCls:"add",handler:this.addServer,scope:this})];this.items=this.form;gxp.NewSourceDialog.superclass.initComponent.call(this);this.form.on("render",function(){this.loadMask=new Ext.LoadMask(this.form.getEl(),{msg:this.contactingServerText})},this);this.on({hide:this.reset,removed:this.reset,scope:this});this.on("urlselected",function(c,b){this.setLoading();var a=function(){this.setError(this.sourceLoadFailureMessage)};this.addSource(b,this.hide,a,this)},this)},addServer:function(){this.error=null;if(this.urlTextField.validate()){this.fireEvent("urlselected",this,this.urlTextField.getValue(),this.form.getForm().findField("type").getValue())}},reset:function(){this.error=null;this.urlTextField.reset();this.loadMask.hide()},urlRegExp:/^(http(s)?:)?\/\/([\w%]+:[\w%]+@)?([^@\/:]+)(:\d+)?\//i,urlValidator:function(a){var b;if(!this.urlRegExp.test(a)){b=this.invalidURLText}else{b=!this.error||this.error}this.error=null;return b},setLoading:function(){this.loadMask.show()},setError:function(a){this.loadMask.hide();this.error=a;this.urlTextField.validate()},addSource:function(b,d,a,c){}});Ext.reg("gxp_newsourcedialog",gxp.NewSourceDialog);Ext.namespace("gxp.plugins");gxp.plugins.FeedGetFeatureInfo=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_getfeedfeatureinfo",init:function(a){gxp.plugins.FeedGetFeatureInfo.superclass.init.apply(this,arguments);this.target.mapPanel.layers.on({add:this.addLayer,remove:this.removeLayer,scope:this})},addLayer:function(h,b,f){for(var c=0,j=b.length;c<j;++c){var d=b[c];var a=this.target.getSource(d);var e=d.getLayer();if(a instanceof gxp.plugins.FeedSource){if(this.target.selectControl==null){this.target.selectControl=new OpenLayers.Control.SelectFeature(e,{clickout:true,listeners:{clickoutFeature:function(){}},scope:this});this.target.mapPanel.map.addControl(this.target.selectControl)}else{var g=this.target.selectControl.layers?this.target.selectControl.layers:(this.target.selectControl.layer?[this.target.selectControl.layer]:[]);g.push(e);this.target.selectControl.setLayer(g)}}}if(this.target.selectControl){this.target.selectControl.activate()}},removeLayer:function(j,b,f){if(!b.length){b=[b]}for(var c=0,k=b.length;c<k;++c){var e=b[c].getLayer();var d=this.target.selectControl;if(d!=null){if(d.layers){for(var h=0;h<d.layers.length;h++){var g=d.layers[h];var a=d.layers;if(g.id===e.id){a.splice(h,1);d.setLayer(a)}}}else{if(d.layer!=null){if(e.id===d.layer.id){d.setLayer([])}}}}}}});Ext.preg(gxp.plugins.FeedGetFeatureInfo.prototype.ptype,gxp.plugins.FeedGetFeatureInfo);OpenLayers.Format.GeoRSS=OpenLayers.Class(OpenLayers.Format.XML,{rssns:"http://backend.userland.com/rss2",featureNS:"http://mapserver.gis.umn.edu/mapserver",georssns:"http://www.georss.org/georss",geons:"http://www.w3.org/2003/01/geo/wgs84_pos#",featureTitle:"Untitled",featureDescription:"No Description",gmlParser:null,xy:false,createGeometryFromItem:function(n){var m=this.getElementsByTagNameNS(n,this.georssns,"point");var g=this.getElementsByTagNameNS(n,this.geons,"lat");var a=this.getElementsByTagNameNS(n,this.geons,"long");var q=this.getElementsByTagNameNS(n,this.georssns,"line");var k=this.getElementsByTagNameNS(n,this.georssns,"polygon");var c=this.getElementsByTagNameNS(n,this.georssns,"where");var d=this.getElementsByTagNameNS(n,this.georssns,"box");if(m.length>0||(g.length>0&&a.length>0)){var l;if(m.length>0){l=OpenLayers.String.trim(m[0].firstChild.nodeValue).split(/\s+/);if(l.length!=2){l=OpenLayers.String.trim(m[0].firstChild.nodeValue).split(/\s*,\s*/)}}else{l=[parseFloat(g[0].firstChild.nodeValue),parseFloat(a[0].firstChild.nodeValue)]}var h=new OpenLayers.Geometry.Point(l[1],l[0])}else{if(q.length>0){var j=OpenLayers.String.trim(this.getChildValue(q[0])).split(/\s+/);var e=[];var m;for(var b=0,f=j.length;b<f;b+=2){m=new OpenLayers.Geometry.Point(j[b+1],j[b]);e.push(m)}h=new OpenLayers.Geometry.LineString(e)}else{if(k.length>0){var j=OpenLayers.String.trim(this.getChildValue(k[0])).split(/\s+/);var e=[];var m;for(var b=0,f=j.length;b<f;b+=2){m=new OpenLayers.Geometry.Point(j[b+1],j[b]);e.push(m)}h=new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing(e)])}else{if(c.length>0){if(!this.gmlParser){this.gmlParser=new OpenLayers.Format.GML({xy:this.xy})}var o=this.gmlParser.parseFeature(c[0]);h=o.geometry}else{if(d.length>0){var j=OpenLayers.String.trim(d[0].firstChild.nodeValue).split(/\s+/);var e=[];var m;if(j.length>3){m=new OpenLayers.Geometry.Point(j[1],j[0]);e.push(m);m=new OpenLayers.Geometry.Point(j[1],j[2]);e.push(m);m=new OpenLayers.Geometry.Point(j[3],j[2]);e.push(m);m=new OpenLayers.Geometry.Point(j[3],j[0]);e.push(m);m=new OpenLayers.Geometry.Point(j[1],j[0]);e.push(m)}h=new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing(e)])}}}}}if(h&&this.internalProjection&&this.externalProjection){h.transform(this.externalProjection,this.internalProjection)}return h},createFeatureFromItem:function(i){var d=this.createGeometryFromItem(i);var g=this._getChildValue(i,"*","title",this.featureTitle);var h=this._getChildValue(i,"*","description",this._getChildValue(i,"*","content",this._getChildValue(i,"*","summary",this.featureDescription)));var f=this._getChildValue(i,"*","link");if(!f){try{f=this.getElementsByTagNameNS(i,"*","link")[0].getAttribute("href")}catch(c){f=null}}var a=this._getChildValue(i,"*","id",null);var b={title:g,description:h,link:f};var j=new OpenLayers.Feature.Vector(d,b);j.fid=a;return j},_getChildValue:function(d,b,c,f){var e;var a=this.getElementsByTagNameNS(d,b,c);if(a&&a[0]&&a[0].firstChild&&a[0].firstChild.nodeValue){e=this.getChildValue(a[0])}else{e=(f==undefined)?"":f}return e},read:function(e){if(typeof e=="string"){e=OpenLayers.Format.XML.prototype.read.apply(this,[e])}var a=null;a=this.getElementsByTagNameNS(e,"*","item");if(a.length==0){a=this.getElementsByTagNameNS(e,"*","entry")}var c=a.length;var d=new Array(c);for(var b=0;b<c;b++){d[b]=this.createFeatureFromItem(a[b])}return d},write:function(c){var d;if(OpenLayers.Util.isArray(c)){d=this.createElementNS(this.rssns,"rss");for(var b=0,a=c.length;b<a;b++){d.appendChild(this.createFeatureXML(c[b]))}}else{d=this.createFeatureXML(c)}return OpenLayers.Format.XML.prototype.write.apply(this,[d])},createFeatureXML:function(j){var f=this.buildGeometryNode(j.geometry);var a=this.createElementNS(this.rssns,"item");var d=this.createElementNS(this.rssns,"title");d.appendChild(this.createTextNode(j.attributes.title?j.attributes.title:""));var b=this.createElementNS(this.rssns,"description");b.appendChild(this.createTextNode(j.attributes.description?j.attributes.description:""));a.appendChild(d);a.appendChild(b);if(j.attributes.link){var h=this.createElementNS(this.rssns,"link");h.appendChild(this.createTextNode(j.attributes.link));a.appendChild(h)}for(var i in j.attributes){if(i=="link"||i=="title"||i=="description"){continue}var g=this.createTextNode(j.attributes[i]);var e=i;if(i.search(":")!=-1){e=i.split(":")[1]}var c=this.createElementNS(this.featureNS,"feature:"+e);c.appendChild(g);a.appendChild(c)}a.appendChild(f);return a},buildGeometryNode:function(b){if(this.internalProjection&&this.externalProjection){b=b.clone();b.transform(this.internalProjection,this.externalProjection)}var a;if(b.CLASS_NAME=="OpenLayers.Geometry.Polygon"){a=this.createElementNS(this.georssns,"georss:polygon");a.appendChild(this.buildCoordinatesNode(b.components[0]))}else{if(b.CLASS_NAME=="OpenLayers.Geometry.LineString"){a=this.createElementNS(this.georssns,"georss:line");a.appendChild(this.buildCoordinatesNode(b))}else{if(b.CLASS_NAME=="OpenLayers.Geometry.Point"){a=this.createElementNS(this.georssns,"georss:point");a.appendChild(this.buildCoordinatesNode(b))}else{throw"Couldn't parse "+b.CLASS_NAME}}}return a},buildCoordinatesNode:function(f){var c=null;if(f.components){c=f.components}var e;if(c){var b=c.length;var d=new Array(b);for(var a=0;a<b;a++){d[a]=c[a].y+" "+c[a].x}e=d.join(" ")}else{e=f.y+" "+f.x}return this.createTextNode(e)},CLASS_NAME:"OpenLayers.Format.GeoRSS"});OpenLayers.Format.QueryStringFilter=(function(){var b={};b[OpenLayers.Filter.Comparison.EQUAL_TO]="eq";b[OpenLayers.Filter.Comparison.NOT_EQUAL_TO]="ne";b[OpenLayers.Filter.Comparison.LESS_THAN]="lt";b[OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO]="lte";b[OpenLayers.Filter.Comparison.GREATER_THAN]="gt";b[OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO]="gte";b[OpenLayers.Filter.Comparison.LIKE]="ilike";function a(c){c=c.replace(/%/g,"\\%");c=c.replace(/\\\\\.(\*)?/g,function(e,d){return d?e:"\\\\_"});c=c.replace(/\\\\\.\*/g,"\\\\%");c=c.replace(/(\\)?\.(\*)?/g,function(e,d,f){return d||f?e:"_"});c=c.replace(/(\\)?\.\*/g,function(e,d){return d?e:"%"});c=c.replace(/\\\./g,".");c=c.replace(/(\\)?\\\*/g,function(e,d){return d?e:"*"});return c}return OpenLayers.Class(OpenLayers.Format,{wildcarded:false,srsInBBOX:false,write:function(f,j){j=j||{};var e=f.CLASS_NAME;var g=e.substring(e.lastIndexOf(".")+1);switch(g){case"Spatial":switch(f.type){case OpenLayers.Filter.Spatial.BBOX:j.bbox=f.value.toArray();if(this.srsInBBOX&&f.projection){j.bbox.push(f.projection.getCode())}break;case OpenLayers.Filter.Spatial.DWITHIN:j.tolerance=f.distance;case OpenLayers.Filter.Spatial.WITHIN:j.lon=f.value.x;j.lat=f.value.y;break;default:OpenLayers.Console.warn("Unknown spatial filter type "+f.type)}break;case"Comparison":var k=b[f.type];if(k!==undefined){var h=f.value;if(f.type==OpenLayers.Filter.Comparison.LIKE){h=a(h);if(this.wildcarded){h="%"+h+"%"}}j[f.property+"__"+k]=h;j.queryable=j.queryable||[];j.queryable.push(f.property)}else{OpenLayers.Console.warn("Unknown comparison filter type "+f.type)}break;case"Logical":if(f.type===OpenLayers.Filter.Logical.AND){for(var d=0,c=f.filters.length;d<c;d++){j=this.write(f.filters[d],j)}}else{OpenLayers.Console.warn("Unsupported logical filter type "+f.type)}break;default:OpenLayers.Console.warn("Unknown filter type "+g)}return j},CLASS_NAME:"OpenLayers.Format.QueryStringFilter"})})();OpenLayers.Strategy=OpenLayers.Class({layer:null,options:null,active:null,autoActivate:true,autoDestroy:true,initialize:function(a){OpenLayers.Util.extend(this,a);this.options=a;this.active=false},destroy:function(){this.deactivate();this.layer=null;this.options=null},setLayer:function(a){this.layer=a},activate:function(){if(!this.active){this.active=true;return true}return false},deactivate:function(){if(this.active){this.active=false;return true}return false},CLASS_NAME:"OpenLayers.Strategy"});OpenLayers.Strategy.BBOX=OpenLayers.Class(OpenLayers.Strategy,{bounds:null,resolution:null,ratio:2,resFactor:null,response:null,activate:function(){var a=OpenLayers.Strategy.prototype.activate.call(this);if(a){this.layer.events.on({moveend:this.update,refresh:this.update,visibilitychanged:this.update,scope:this});this.update()}return a},deactivate:function(){var a=OpenLayers.Strategy.prototype.deactivate.call(this);if(a){this.layer.events.un({moveend:this.update,refresh:this.update,visibilitychanged:this.update,scope:this})}return a},update:function(b){var a=this.getMapBounds();if(a!==null&&((b&&b.force)||(this.layer.visibility&&this.layer.calculateInRange()&&this.invalidBounds(a)))){this.calculateBounds(a);this.resolution=this.layer.map.getResolution();this.triggerRead(b)}},getMapBounds:function(){if(this.layer.map===null){return null}var a=this.layer.map.getExtent();if(a&&!this.layer.projection.equals(this.layer.map.getProjectionObject())){a=a.clone().transform(this.layer.map.getProjectionObject(),this.layer.projection)}return a},invalidBounds:function(a){if(!a){a=this.getMapBounds()}var c=!this.bounds||!this.bounds.containsBounds(a);if(!c&&this.resFactor){var b=this.resolution/this.layer.map.getResolution();c=(b>=this.resFactor||b<=(1/this.resFactor))}return c},calculateBounds:function(b){if(!b){b=this.getMapBounds()}var a=b.getCenterLonLat();var d=b.getWidth()*this.ratio;var c=b.getHeight()*this.ratio;this.bounds=new OpenLayers.Bounds(a.lon-(d/2),a.lat-(c/2),a.lon+(d/2),a.lat+(c/2))},triggerRead:function(b){if(this.response&&!(b&&b.noAbort===true)){this.layer.protocol.abort(this.response);this.layer.events.triggerEvent("loadend")}var a={filter:this.createFilter()};this.layer.events.triggerEvent("loadstart",a);this.response=this.layer.protocol.read(OpenLayers.Util.applyDefaults({filter:a.filter,callback:this.merge,scope:this},b))},createFilter:function(){var a=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:this.bounds,projection:this.layer.projection});if(this.layer.filter){a=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[this.layer.filter,a]})}return a},merge:function(g){this.layer.destroyFeatures();if(g.success()){var e=g.features;if(e&&e.length>0){var f=this.layer.projection;var d=this.layer.map.getProjectionObject();if(!d.equals(f)){var c;for(var b=0,a=e.length;b<a;++b){c=e[b].geometry;if(c){c.transform(f,d)}}}this.layer.addFeatures(e)}}else{this.bounds=null}this.response=null;this.layer.events.triggerEvent("loadend",{response:g})},CLASS_NAME:"OpenLayers.Strategy.BBOX"});OpenLayers.Strategy.Fixed=OpenLayers.Class(OpenLayers.Strategy,{preload:false,activate:function(){var a=OpenLayers.Strategy.prototype.activate.apply(this,arguments);if(a){this.layer.events.on({refresh:this.load,scope:this});if(this.layer.visibility==true||this.preload){this.load()}else{this.layer.events.on({visibilitychanged:this.load,scope:this})}}return a},deactivate:function(){var a=OpenLayers.Strategy.prototype.deactivate.call(this);if(a){this.layer.events.un({refresh:this.load,visibilitychanged:this.load,scope:this})}return a},load:function(a){var b=this.layer;b.events.triggerEvent("loadstart",{filter:b.filter});b.protocol.read(OpenLayers.Util.applyDefaults({callback:this.merge,filter:b.filter,scope:this},a));b.events.un({visibilitychanged:this.load,scope:this})},merge:function(h){var e=this.layer;e.destroyFeatures();var f=h.features;if(f&&f.length>0){var g=e.projection;var d=e.map.getProjectionObject();if(!d.equals(g)){var c;for(var b=0,a=f.length;b<a;++b){c=f[b].geometry;if(c){c.transform(g,d)}}}e.addFeatures(f)}e.events.triggerEvent("loadend",{response:h})},CLASS_NAME:"OpenLayers.Strategy.Fixed"});Ext.namespace("gxp.plugins");gxp.plugins.FeedSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_feedsource",title:"Feed Source",format:"OpenLayers.Format.GeoRSS",popupTemplate:'<a target="_blank" href="{link}">{description}</a>',fixed:true,createLayerRecord:function(d){var c;var e=new OpenLayers.Layer.Vector(d.name,{projection:"projection" in d?d.projection:"EPSG:4326",visibility:"visibility" in d?d.visibility:true,strategies:[this.fixed?new OpenLayers.Strategy.Fixed():new OpenLayers.Strategy.BBOX({resFactor:1,ratio:1})],protocol:new OpenLayers.Protocol.HTTP({url:this.url,params:d.params,format:this.getFormat(d)}),styleMap:this.getStyleMap(d)});this.configureInfoPopup(e);var b=GeoExt.data.LayerRecord.create([{name:"name",type:"string"},{name:"source",type:"string"},{name:"group",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"},{name:"visibility",type:"boolean"},{name:"format",type:"string"},{name:"defaultStyle"},{name:"selectStyle"},{name:"params"}]);var a="format" in d?d.format:this.format;var f={layer:e,name:d.name,source:d.source,group:d.group,fixed:("fixed" in d)?d.fixed:false,selected:("selected" in d)?d.selected:false,params:("params" in d)?d.params:{},visibility:("visibility" in d)?d.visibility:false,format:a instanceof String?a:null,defaultStyle:("defaultStyle" in d)?d.defaultStyle:{},selectStyle:("selectStyle" in d)?d.selectStyle:{}};c=new b(f,e.id);return c},getConfigForRecord:function(a){var b=gxp.plugins.FeedSource.superclass.getConfigForRecord.apply(this,arguments);return Ext.apply(b,{name:a.get("name"),group:a.get("group"),fixed:a.get("fixed"),selected:a.get("selected"),params:a.get("params"),visibility:a.getLayer().getVisibility(),format:a.get("format"),defaultStyle:a.getLayer().styleMap.styles["default"]["defaultStyle"],selectStyle:a.getLayer().styleMap.styles["select"]["defaultStyle"]})},getFormat:function(c){var b=window;var a=("format" in c)?c.format:this.format;if(typeof a=="string"||a instanceof String){var g=a.split(".");for(var d=0,e=g.length;d<e;++d){b=b[g[d]];if(!b){break}}if(b&&b.prototype&&b.prototype.initialize){var h=function(){b.prototype.initialize.apply(this)};h.prototype=b.prototype;var f=new h();return f}}else{return a}},configureInfoPopup:function(b){var a=new Ext.XTemplate(this.popupTemplate);b.events.on({featureselected:function(c){var d=c.feature;var e=d.geometry;if(this.target.selectControl){if(this.target.selectControl.popup){this.target.selectControl.popup.close()}this.target.selectControl.popup=new GeoExt.Popup({title:d.attributes.title,closeAction:"destroy",location:d,html:a.apply(d.attributes)});this.target.selectControl.popup.show()}},featureunselected:function(){if(this.target.selectControl&&this.target.selectControl.popup){this.target.selectControl.popup.close()}},scope:this})},getStyleMap:function(a){return new OpenLayers.StyleMap({"default":new OpenLayers.Style("defaultStyle" in a?a.defaultStyle:{graphicName:"circle",pointRadius:5,fillOpacity:0.7,fillColor:"Red"},{title:a.name}),select:new OpenLayers.Style("selectStyle" in a?a.selectStyle:{graphicName:"circle",pointRadius:10,fillOpacity:1,fillColor:"Yellow"})})}});Ext.preg(gxp.plugins.FeedSource.prototype.ptype,gxp.plugins.FeedSource);Ext.namespace("gxp.plugins");gxp.plugins.PicasaFeedSource=Ext.extend(gxp.plugins.FeedSource,{ptype:"gxp_picasasource",url:"http://picasaweb.google.com/data/feed/base/all?thumbsize=160c&",format:"OpenLayers.Format.Picasa",title:"Picasa Photos",pointRadius:14,popupTemplate:'<tpl for="."><a target="_blank" href="{link}"><img  title="{title}" src="{thumbnail}"/></a></tpl>',fixed:false,createLayerRecord:function(b){if(Ext.isEmpty(b.params["max-results"])){b.params["max-results"]=50}b.url=this.url;this.format=new OpenLayers.Format.GeoRSS({createFeatureFromItem:function(e){var d=OpenLayers.Format.GeoRSS.prototype.createFeatureFromItem.apply(this,arguments);d.attributes.thumbnail=this.getElementsByTagNameNS(e,"http://search.yahoo.com/mrss/","thumbnail")[0].getAttribute("url");d.attributes.content=OpenLayers.Util.getXmlNodeValue(this.getElementsByTagNameNS(e,"*","summary")[0]);return d}});var a=gxp.plugins.PicasaFeedSource.superclass.createLayerRecord.apply(this,arguments);var c=a.getLayer();c.protocol.filterToParams=function(d,f){if(d.type===OpenLayers.Filter.Spatial.BBOX){var e=d.value.toArray();f.bbox=[Math.max(-180,e[0]),Math.max(-90,e[1]),Math.min(180,e[2]),Math.min(90,e[3])]}return f};return a},configureInfoPopup:function(b){var a=new Ext.XTemplate(this.popupTemplate);b.events.on({featureselected:function(c){var d=c.feature;var g=d.geometry;if(this.target.selectControl.popup!=null){this.target.selectControl.popup.close()}var e=document.createElement("div");e.innerHTML=d.attributes.content;var f={link:e.getElementsByTagName("a")[0].getAttribute("href"),title:d.attributes.title,thumbnail:d.attributes.thumbnail};this.target.selectControl.popup=new GeoExt.Popup({title:d.attributes.title,closeAction:"destroy",location:d,width:175,height:200,html:a.apply(f)});this.target.selectControl.popup.show()},featureunselected:function(c){if(this.target.selectControl&&this.target.selectControl.popup){this.target.selectControl.popup.close()}},scope:this})},getStyleMap:function(a){return new OpenLayers.StyleMap({"default":new OpenLayers.Style({externalGraphic:"${thumbnail}",pointRadius:this.pointRadius},{title:this.title}),select:new OpenLayers.Style({pointRadius:this.pointRadius+5})})}});Ext.preg(gxp.plugins.PicasaFeedSource.prototype.ptype,gxp.plugins.PicasaFeedSource);Ext.namespace("gxp.plugins");gxp.plugins.YouTubeFeedSource=Ext.extend(gxp.plugins.FeedSource,{ptype:"gxp_youtubesource",url:"http://gdata.youtube.com/feeds/api/videos?v=2&prettyprint=true&",format:"OpenLayers.Format.YouTube",title:"Youtube Videos",pointRadius:24,popupTemplate:'<tpl for="."><a target="_blank" href="{link}"><img height="180"  width="240" title="{title}" src="{thumbnail}"/></a></tpl>',fixed:false,createLayerRecord:function(b){if(Ext.isEmpty(b.params["max-results"])){b.params["max-results"]=50}else{b.params["max-results"]=Math.min(b.params["max-results"],50)}b.url=this.url;this.format=new OpenLayers.Format.GeoRSS({createFeatureFromItem:function(e){var d=OpenLayers.Format.GeoRSS.prototype.createFeatureFromItem.apply(this,arguments);d.attributes.thumbnail=this.getElementsByTagNameNS(e,"http://search.yahoo.com/mrss/","thumbnail")[4].getAttribute("url");d.attributes.content=OpenLayers.Util.getXmlNodeValue(this.getElementsByTagNameNS(e,"*","summary")[0]);return d}});var a=gxp.plugins.YouTubeFeedSource.superclass.createLayerRecord.apply(this,arguments);var c=a.getLayer();c.protocol.filterToParams=function(e,g){if(e.type===OpenLayers.Filter.Spatial.BBOX){var d=e.value;var k=d.getCenterLonLat();var h=6378.137;var l=3.1415926;var j=h*(d.left)/180/l;var f=h*(d.right)/180/l;var i=Math.min((f-j)/2*2,1000);Ext.apply(g,{location:""+k.lat+","+k.lon,"location-radius":i+"km"})}return g};return a},configureInfoPopup:function(b){var a=new Ext.XTemplate(this.popupTemplate);b.events.on({featureselected:function(c){var d=c.feature;var e=d.geometry;if(this.target.selectControl.popup!=null){this.target.selectControl.popup.close()}this.target.selectControl.popup=new GeoExt.Popup({title:d.attributes.title,location:d,width:240,height:220,closeAction:"destroy",html:a.apply(d.attributes)});this.target.selectControl.popup.show()},featureunselected:function(c){if(this.target.selectControl&&this.target.selectControl.popup){this.target.selectControl.popup.close()}},scope:this})},getStyleMap:function(a){return new OpenLayers.StyleMap({"default":new OpenLayers.Style({externalGraphic:"${thumbnail}",pointRadius:24},{title:this.title}),select:new OpenLayers.Style({pointRadius:this.pointRadius+5})})}});Ext.preg(gxp.plugins.YouTubeFeedSource.prototype.ptype,gxp.plugins.YouTubeFeedSource);Ext.namespace("gxp");gxp.FeedSourceDialog=Ext.extend(Ext.Container,{feedTypeText:"Source",addPicasaText:"Picasa Photos",addYouTubeText:"YouTube Videos",addRSSText:"GeoRSS Feed",addFeedText:"Add to Map",addTitleText:"Title",keywordText:"Keyword",doneText:"Done",titleText:"Add Feeds",maxResultsText:"Max Items",width:300,autoHeight:true,closeAction:"destroy",initComponent:function(){this.addEvents("addfeed");if(!this.feedTypes){this.feedTypes=[[gxp.plugins.PicasaFeedSource.ptype,this.addPicasaText],[gxp.plugins.YouTubeFeedSource.ptype,this.addYouTubeText],[gxp.plugins.FeedSource.ptype,this.addRSSText]]}var b=new Ext.data.ArrayStore({fields:["type","name"],data:this.feedTypes});var a=new Ext.form.ComboBox({store:b,fieldLabel:this.feedTypeText,displayField:"name",valueField:"type",typeAhead:true,width:180,mode:"local",triggerAction:"all",emptyText:"Select a feed source...",selectOnFocus:true,listeners:{select:function(j){if(j.value==gxp.plugins.FeedSource.ptype){h.show();e.hide();d.hide();f.show()}else{h.hide();e.show();d.show();f.hide()}c.setDisabled(j.value==null)},scope:this}});var h=new Ext.form.TextField({fieldLabel:"URL",allowBlank:false,width:180,msgTarget:"right",validator:this.urlValidator.createDelegate(this)});var e=new Ext.form.TextField({fieldLabel:this.keywordText,allowBlank:true,hidden:true,width:180,msgTarget:"right"});var g=new Ext.form.TextField({fieldLabel:this.addTitleText,allowBlank:true,width:180,msgTarget:"right"});var d=new Ext.form.ComboBox({fieldLabel:this.maxResultsText,hidden:true,hiddenName:"max-results",store:new Ext.data.ArrayStore({fields:["max-results"],data:[[10],[25],[50],[100]]}),displayField:"max-results",mode:"local",triggerAction:"all",emptyText:"Choose number...",labelWidth:70,width:180,defaults:{labelWidth:70,width:180}});var f=new gxp.PointSymbolizer({bodyStyle:{padding:"10px"},width:280,border:false,hidden:true,labelWidth:70,defaults:{labelWidth:70},symbolizer:{pointGraphics:"circle",pointRadius:"5"}});f.find("name","rotation")[0].hidden=true;if(this.symbolType==="Point"&&this.pointGraphics){cfg.pointGraphics=this.pointGraphics}var c=new Ext.Button({text:this.addFeedText,iconCls:"gxp-icon-addlayers",disabled:true,handler:function(){var l=a.getValue();var j={name:g.getValue()};if(l!="gxp_feedsource"){j.params={q:e.getValue(),"max-results":d.getValue()}}else{j.url=h.getValue();var k=f.symbolizer;j.defaultStyle={};j.selectStyle={};Ext.apply(j.defaultStyle,k);Ext.apply(j.selectStyle,k);Ext.apply(j.selectStyle,{fillColor:"Yellow",pointRadius:parseInt(k.pointRadius)+2})}this.fireEvent("addfeed",l,j)},scope:this});var i=["->",c,new Ext.Button({text:this.doneText,handler:function(){this.hide()},scope:this})];this.panel=new Ext.Panel({bbar:i,autoScroll:true,items:[a,g,h,e,d,f],layout:"form",border:false,labelWidth:100,bodyStyle:"padding: 5px",autoWidth:true,autoHeight:true});this.items=this.panel;gxp.FeedSourceDialog.superclass.initComponent.call(this)},urlRegExp:/^(http(s)?:)?\/\/([\w%]+:[\w%]+@)?([^@\/:]+)(:\d+)?\//i,urlValidator:function(a){var b;if(!this.urlRegExp.test(a)){b=this.invalidURLText}else{b=!this.error||this.error}this.error=null;return b}});Ext.reg("gxp_feedsourcedialog",gxp.FeedSourceDialog);Ext.namespace("gxp.plugins");gxp.plugins.GeoNodeCatalogueSource=Ext.extend(gxp.plugins.CatalogueSource,{ptype:"gxp_geonodecataloguesource",rootProperty:"results",baseParams:null,fields:[{name:"title",convert:function(a){return[a]}},{name:"abstract",mapping:"description"},{name:"bounds",mapping:"bbox",convert:function(a){return{left:a.minx,right:a.maxx,bottom:a.miny,top:a.maxy}}},{name:"URI",mapping:"links",convert:function(b){var a=[];for(var c in b){a.push({value:b[c].url})}return a}}],createStore:function(){this.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy(Ext.apply({url:this.url,method:"GET"},this.proxyOptions||{})),baseParams:Ext.apply({type:"layer"},this.baseParams),reader:new Ext.data.JsonReader({root:this.rootProperty},this.fields)});gxp.plugins.LayerSource.prototype.createStore.apply(this,arguments)},getPagingStart:function(){return 0},getPagingParamNames:function(){return{start:"startIndex",limit:"limit"}},filter:function(a){var e=undefined;if(a.filters!==undefined){for(var b=0,c=a.filters.length;b<c;++b){var d=a.filters[b];if(d instanceof OpenLayers.Filter.Spatial){e=d.value.toBBOX();break}}}Ext.apply(this.store.baseParams,{q:a.queryString});if(a.limit!==undefined){Ext.apply(this.store.baseParams,{limit:a.limit})}if(e!==undefined){Ext.apply(this.store.baseParams,{bbox:e})}else{delete this.store.baseParams.bbox}this.store.load()},createLayerRecord:function(a){a.restUrl=this.restUrl;a.queryable=true;return gxp.plugins.GeoNodeCatalogueSource.superclass.createLayerRecord.apply(this,arguments)}});Ext.preg(gxp.plugins.GeoNodeCatalogueSource.prototype.ptype,gxp.plugins.GeoNodeCatalogueSource);Ext.namespace("gxp.form");gxp.form.CSWFilterField=Ext.extend(Ext.form.CompositeField,{clearTooltip:"Clear the filter for this category",emptyText:"Select filter",property:null,map:null,type:OpenLayers.Filter.Comparison.EQUAL_TO,name:null,comboFieldLabel:null,comboStoreData:null,target:null,getFilter:function(){if(this.property==="BoundingBox"){return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:this.property,projection:"EPSG:4326",value:this.map.getExtent().transform(this.map.getProjectionObject(),new OpenLayers.Projection("EPSG:4326"))})}else{return new OpenLayers.Filter.Comparison({type:this.type,property:this.property,value:this.combo.getValue()})}},initComponent:function(){this.items=[{ref:"combo",xtype:"combo",fieldLabel:this.comboFieldLabel,store:new Ext.data.ArrayStore({fields:["id","value"],data:this.comboStoreData}),displayField:"value",valueField:"id",mode:"local",listeners:{select:function(b,a){if(this.filter){this.target.removeFilter(this.filter)}this.filter=this.getFilter();this.target.addFilter(this.filter);return false},scope:this},emptyText:this.emptyText,triggerAction:"all"},{xtype:"button",iconCls:"gxp-icon-removelayers",tooltip:this.clearTooltip,handler:function(a){this.target.removeFilter(this.filter);this.hide()},scope:this}];this.hidden=true;gxp.form.CSWFilterField.superclass.initComponent.apply(this,arguments)},destroy:function(){this.filter=null;this.target=null;this.map=null;gxp.form.CSWFilterField.superclass.destroy.call(this)}});Ext.reg("gxp_cswfilterfield",gxp.form.CSWFilterField);Ext.namespace("gxp");gxp.CatalogueSearchPanel=Ext.extend(Ext.Panel,{border:false,maxRecords:10,map:null,selectedSource:null,sources:null,searchFieldEmptyText:"Search",searchButtonText:"Search",addTooltip:"Create filter",addMapTooltip:"Add to map",advancedTitle:"Advanced",datatypeLabel:"Data type",extentLabel:"Spatial extent",categoryLabel:"Category",datasourceLabel:"Data source",filterLabel:"Filter search by",removeSourceTooltip:"Switch back to original source",initComponent:function(){var c=this;this.addEvents("addlayer");this.filters=[];var b=[];for(var a in this.sources){b.push([a,this.sources[a].title])}if(b.length>=1){this.selectedSource=b[0][0]}var d=[["datatype","data type"],["extent","spatial extent"],["category","category"]];if(b.length>1){d.push(["csw","data source"])}this.sources[this.selectedSource].store.on("loadexception",function(g,i,f,h){if(f.success()){Ext.Msg.show({title:h.message,msg:gxp.util.getOGCExceptionText(h.arg.exceptionReport),icon:Ext.MessageBox.ERROR,buttons:Ext.MessageBox.OK})}});this.items=[{xtype:"form",border:false,ref:"form",hideLabels:true,autoHeight:true,style:"margin-left: 5px; margin-right: 5px; margin-bottom: 5px; margin-top: 5px",items:[{xtype:"compositefield",items:[{xtype:"textfield",emptyText:this.searchFieldEmptyText,ref:"../../search",name:"search",listeners:{specialkey:function(g,f){if(f.getKey()==f.ENTER){this.performQuery()}},scope:this},width:250},{xtype:"button",text:this.searchButtonText,handler:this.performQuery,scope:this}]},{xtype:"fieldset",collapsible:true,collapsed:true,hideLabels:false,hidden:true,title:this.advancedTitle,items:[{xtype:"gxp_cswfilterfield",name:"datatype",property:"apiso:Type",comboFieldLabel:this.datatypeLabel,comboStoreData:[["dataset","Dataset"],["datasetcollection","Dataset collection"],["application","Application"],["service","Service"]],target:this},{xtype:"gxp_cswfilterfield",name:"extent",property:"BoundingBox",map:this.map,comboFieldLabel:this.extentLabel,comboStoreData:[["map","spatial extent of the map"]],target:this},{xtype:"gxp_cswfilterfield",name:"category",property:"apiso:TopicCategory",comboFieldLabel:this.categoryLabel,comboStoreData:[["farming","Farming"],["biota","Biota"],["boundaries","Boundaries"],["climatologyMeteorologyAtmosphere","Climatology/Meteorology/Atmosphere"],["economy","Economy"],["elevation","Elevation"],["environment","Environment"],["geoscientificinformation","Geoscientific Information"],["health","Health"],["imageryBaseMapsEarthCover","Imagery/Base Maps/Earth Cover"],["intelligenceMilitary","Intelligence/Military"],["inlandWaters","Inland Waters"],["location","Location"],["oceans","Oceans"],["planningCadastre","Planning Cadastre"],["society","Society"],["structure","Structure"],["transportation","Transportation"],["utilitiesCommunications","Utilities/Communications"]],target:this},{xtype:"compositefield",id:"csw",ref:"../../cswCompositeField",hidden:true,items:[{xtype:"combo",ref:"../../../sourceCombo",fieldLabel:this.datasourceLabel,store:new Ext.data.ArrayStore({fields:["id","value"],data:b}),displayField:"value",valueField:"id",mode:"local",listeners:{select:function(f,e){this.setSource(f.getValue())},render:function(){this.sourceCombo.setValue(this.selectedSource)},scope:this},triggerAction:"all"},{xtype:"button",iconCls:"gxp-icon-removelayers",tooltip:this.removeSourceTooltip,handler:function(e){this.setSource(this.initialConfig.selectedSource);this.sourceCombo.setValue(this.initialConfig.selectedSource);this.cswCompositeField.hide()},scope:this}]},{xtype:"compositefield",items:[{xtype:"combo",fieldLabel:this.filterLabel,store:new Ext.data.ArrayStore({fields:["id","value"],data:d}),displayField:"value",valueField:"id",mode:"local",triggerAction:"all"},{xtype:"button",iconCls:"gxp-icon-addlayers",tooltip:this.addTooltip,handler:function(e){e.ownerCt.items.each(function(f){if(f.getXType()==="combo"){var h=f.getValue();f.clearValue();var g=this.form.getForm().findField(h);if(g){g.show()}}},this)},scope:this}]}]},{xtype:"grid",width:"100%",anchor:"99%",viewConfig:{scrollOffset:0,forceFit:true},border:false,ref:"../grid",bbar:new Ext.PagingToolbar({listeners:{beforechange:function(e,f){var g=c.sources[c.selectedSource].getPagingStart();if(f.startPosition){f.startPosition+=g}}},onLoad:function(e,g,k){var l=c.sources[c.selectedSource].getPagingStart();if(!this.rendered){this.dsLoaded=[e,g,k];return}var h=this.getParams();this.cursor=(k.params&&k.params[h.start])?k.params[h.start]-l:0;var j=this.getPageData(),f=j.activePage,i=j.pages;this.afterTextItem.setText(String.format(this.afterPageText,j.pages));this.inputItem.setValue(f);this.first.setDisabled(f==1);this.prev.setDisabled(f==1);this.next.setDisabled(f==i);this.last.setDisabled(f==i);this.refresh.enable();this.updateInfo();this.fireEvent("change",this,j)},paramNames:this.sources[this.selectedSource].getPagingParamNames(),store:this.sources[this.selectedSource].store,pageSize:this.maxRecords}),loadMask:true,hideHeaders:true,store:this.sources[this.selectedSource].store,columns:[{id:"title",xtype:"templatecolumn",tpl:new Ext.XTemplate("<b>{title}</b><br/>{abstract}"),sortable:true},{xtype:"actioncolumn",width:30,items:[{getClass:function(e,f,g){if(this.findWMS(g.get("URI"))!==false||this.findWMS(g.get("references"))!==false){return"gxp-icon-addlayers"}},tooltip:this.addMapTooltip,handler:function(f,h,e){var g=this.grid.store.getAt(h);this.addLayer(g)},scope:this}]}],autoExpandColumn:"title",autoHeight:true}]}];gxp.CatalogueSearchPanel.superclass.initComponent.apply(this,arguments)},destroy:function(){this.sources=null;this.map=null;gxp.CatalogueSearchPanel.superclass.destroy.call(this)},setSource:function(b){this.selectedSource=b;var a=this.sources[b].store;this.grid.reconfigure(a,this.grid.getColumnModel());this.grid.getBottomToolbar().bindStore(a)},performQuery:function(){var a=this.sources[this.selectedSource];a.filter({queryString:this.search.getValue(),limit:this.maxRecords,filters:this.filters})},addFilter:function(a){this.filters.push(a)},removeFilter:function(a){this.filters.remove(a)},findWMS:function(j){var g=["OGC:WMS-1.1.1-HTTP-GET-MAP","OGC:WMS"];var a=null,b=null,d,h,e;for(d=0,h=j.length;d<h;++d){e=j[d];if(e.protocol&&g.indexOf(e.protocol.toUpperCase())!==-1&&e.value&&e.name){a=e.value;b=e.name;break}}if(a===null){for(d=0,h=j.length;d<h;++d){e=j[d];var f=e.value?e.value:e;if(f.toLowerCase().indexOf("service=wms")>0){var c=OpenLayers.Util.createUrlObject(f);a=c.protocol+"//"+c.host+":"+c.port+c.pathname;b=c.args.layers;break}}}if(a!==null&&b!==null){return{url:a,name:b}}else{return false}},addLayer:function(h){var e=h.get("URI");var b=h.get("bounds");var c=b.left,k=b.right,g=b.bottom,d=b.top;var f=Math.min(c,k),m=Math.max(c,k),a=Math.min(g,d),j=Math.max(g,d);var i=this.findWMS(e);if(i===false){var l=h.get("references");i=this.findWMS(l)}if(i!==false){this.fireEvent("addlayer",this,this.selectedSource,Ext.apply({title:h.get("title")[0],bbox:[f,a,m,j],srs:"EPSG:4326",projection:h.get("projection")},i))}}});Ext.reg("gxp_cataloguesearchpanel",gxp.CatalogueSearchPanel);OpenLayers.Format.TMSCapabilities=OpenLayers.Class(OpenLayers.Format.XML,{defaultPrefix:"tms",readers:{tms:{Services:function(a,b){b.services=[];this.readChildNodes(a,b)},TileMapService:function(a,b){if(b.services){b.services.push({service:"TMS",version:a.getAttribute("version"),title:a.getAttribute("title"),href:a.getAttribute("href")})}else{this.readChildNodes(a,b)}},TileMaps:function(a,b){b.tileMaps=[];this.readChildNodes(a,b)},TileMap:function(a,b){if(b.tileMaps){b.tileMaps.push({href:a.getAttribute("href"),srs:a.getAttribute("srs"),title:a.getAttribute("title"),profile:a.getAttribute("profile")})}else{b.version=a.getAttribute("version");b.tileMapService=a.getAttribute("tilemapservice");this.readChildNodes(a,b)}},Title:function(a,b){b.title=this.getChildValue(a)},Abstract:function(a,b){b["abstract"]=this.getChildValue(a)},SRS:function(a,b){b.srs=this.getChildValue(a)},BoundingBox:function(a,b){b.bbox=new OpenLayers.Bounds(a.getAttribute("minx"),a.getAttribute("miny"),a.getAttribute("maxx"),a.getAttribute("maxy"))},Origin:function(a,b){b.origin=new OpenLayers.LonLat(a.getAttribute("x"),a.getAttribute("y"))},TileFormat:function(a,b){b.tileFormat={width:parseInt(a.getAttribute("width"),10),height:parseInt(a.getAttribute("height"),10),mimeType:a.getAttribute("mime-type"),extension:a.getAttribute("extension")}},TileSets:function(a,b){b.tileSets=[];this.readChildNodes(a,b)},TileSet:function(a,b){b.tileSets.push({href:a.getAttribute("href"),unitsPerPixel:parseFloat(a.getAttribute("units-per-pixel")),order:parseInt(a.getAttribute("order"),10)})},TileMapServerError:function(a,b){b.error=true},Message:function(a,b){b.message=this.getChildValue(a)}}},read:function(c){if(typeof c=="string"){c=OpenLayers.Format.XML.prototype.read.apply(this,[c])}var b=c;if(c&&c.nodeType==9){c=c.documentElement}var a={};this.readNode(c,a);return a},CLASS_NAME:"OpenLayers.Format.TMSCapabilities"});Ext.ns("gxp.data","gxp.plugins");gxp.data.TMSCapabilitiesReader=Ext.extend(Ext.data.DataReader,{constructor:function(a,b){a=a||{};if(!a.format){a.format=new OpenLayers.Format.TMSCapabilities()}if(typeof b!=="function"){b=GeoExt.data.LayerRecord.create(b||a.fields||[{name:"name",type:"string"},{name:"title",type:"string"},{name:"tileMapUrl",type:"string"}])}gxp.data.TMSCapabilitiesReader.superclass.constructor.call(this,a,b)},read:function(a){var b=a.responseXML;if(!b||!b.documentElement){b=a.responseText}return this.readRecords(b)},readRecords:function(e){var c=[],f,j,a,d;if(typeof e==="string"||e.nodeType){e=this.meta.format.read(e);this.raw=e;if(!e.tileMaps){if(e.tileSets){d=new OpenLayers.Projection(e.srs);if(this.meta.mapProjection.equals(d)){var k=[];for(f=0,j=e.tileSets.length;f<j;++f){k.push(e.tileSets[f].unitsPerPixel)}a=this.meta.baseUrl;var g=a.substring(a.indexOf(this.meta.version)+this.meta.version.length+1,a.lastIndexOf("/"));c.push(new this.recordType({layer:new OpenLayers.Layer.TMS(e.title,e.tileMapService.replace("/"+this.meta.version,""),{serverResolutions:k,type:e.tileFormat.extension,layername:g}),title:e.title,name:e.title,tileMapUrl:this.meta.baseUrl}))}}}else{for(f=0,j=e.tileMaps.length;f<j;++f){var h=e.tileMaps[f];d=new OpenLayers.Projection(h.srs);if(this.meta.mapProjection.equals(d)){a=h.href;var b=a.substring(a.indexOf(this.meta.version+"/")+6);c.push(new this.recordType({layer:new OpenLayers.Layer.TMS(h.title,(this.meta.baseUrl.indexOf(this.meta.version)!==-1)?this.meta.baseUrl.replace(this.meta.version+"/",""):this.meta.baseUrl,{layername:b}),title:h.title,name:h.title,tileMapUrl:a}))}}}}return{totalRecords:c.length,success:true,records:c}}});gxp.plugins.TMSSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_tmssource",version:"1.0.0",constructor:function(a){gxp.plugins.TMSSource.superclass.constructor.apply(this,arguments);this.format=new OpenLayers.Format.TMSCapabilities();if(this.url.slice(-1)!=="/"){this.url=this.url+"/"}},createStore:function(){var a=this.format;this.store=new Ext.data.Store({autoLoad:true,listeners:{load:function(){this.title=this.store.reader.raw.title;this.fireEvent("ready",this)},exception:function(){var c="Trouble creating TMS layer store from response.";var b="Unable to handle response.";this.fireEvent("failure",this,c,b)},scope:this},proxy:new Ext.data.HttpProxy({url:this.url.indexOf(this.version)===-1?this.url+this.version:this.url,disableCaching:false,method:"GET"}),reader:new gxp.data.TMSCapabilitiesReader({baseUrl:this.url,version:this.version,mapProjection:this.getMapProjection()})})},createLayerRecord:function(c,f,e){var b=this.store.findExact("name",c.name);if(b>-1){var a=this.store.getAt(b);var d=a.getLayer();if(d.serverResolutions!==null){return a}else{Ext.Ajax.request({url:a.get("tileMapUrl"),success:function(g){var l=[];var k=this.format.read(g.responseText);for(var h=0,j=k.tileSets.length;h<j;++h){l.push(k.tileSets[h].unitsPerPixel)}d.addOptions({serverResolutions:l,type:k.tileFormat.extension});this.target.createLayerRecord({source:this.id,name:c.name},f,e)},scope:this})}}}});Ext.preg(gxp.plugins.TMSSource.prototype.ptype,gxp.plugins.TMSSource);OpenLayers.Layer.ArcGIS93Rest=OpenLayers.Class(OpenLayers.Layer.Grid,{DEFAULT_PARAMS:{format:"png"},isBaseLayer:true,initialize:function(d,c,e,b){var a=[];e=OpenLayers.Util.upperCaseObject(e);a.push(d,c,e,b);OpenLayers.Layer.Grid.prototype.initialize.apply(this,a);OpenLayers.Util.applyDefaults(this.params,OpenLayers.Util.upperCaseObject(this.DEFAULT_PARAMS));if(this.params.TRANSPARENT&&this.params.TRANSPARENT.toString().toLowerCase()=="true"){if((b==null)||(!b.isBaseLayer)){this.isBaseLayer=false}if(this.params.FORMAT=="jpg"){this.params.FORMAT=OpenLayers.Util.alphaHack()?"gif":"png"}}},clone:function(a){if(a==null){a=new OpenLayers.Layer.ArcGIS93Rest(this.name,this.url,this.params,this.getOptions())}a=OpenLayers.Layer.Grid.prototype.clone.apply(this,[a]);return a},getURL:function(e){e=this.adjustBounds(e);var d=this.projection.getCode().split(":");var c=d[d.length-1];var g=this.getImageSize();var h={BBOX:e.toBBOX(),SIZE:g.w+","+g.h,F:"image",BBOXSR:c,IMAGESR:c};if(this.layerDefs){var f=[];var a;for(a in this.layerDefs){if(this.layerDefs.hasOwnProperty(a)){if(this.layerDefs[a]){f.push(a);f.push(":");f.push(this.layerDefs[a]);f.push(";")}}}if(f.length>0){h.LAYERDEFS=f.join("")}}var b=this.getFullRequestString(h);return b},setLayerFilter:function(b,a){if(!this.layerDefs){this.layerDefs={}}if(a){this.layerDefs[b]=a}else{delete this.layerDefs[b]}},clearLayerFilter:function(a){if(a){delete this.layerDefs[a]}else{delete this.layerDefs}},mergeNewParams:function(c){var b=OpenLayers.Util.upperCaseObject(c);var a=[b];return OpenLayers.Layer.Grid.prototype.mergeNewParams.apply(this,a)},CLASS_NAME:"OpenLayers.Layer.ArcGIS93Rest"});Ext.namespace("gxp.plugins");gxp.plugins.ArcRestSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_arcrestsource",requiredProperties:["name"],constructor:function(a){this.config=a;gxp.plugins.ArcRestSource.superclass.constructor.apply(this,arguments)},createStore:function(){var b=this.url.split("?")[0];var c=this;var a=function(g){var i=Ext.decode(g.responseText);var j=c.getArcProjection(i.spatialReference.wkid);var k=[];if(j!=null){for(var f=0;f<i.layers.length;f++){var h=i.layers[f];var e="show:"+h.id;k.push(new OpenLayers.Layer.ArcGIS93Rest(h.name,b+"/export",{layers:e,TRANSPARENT:true},{isBaseLayer:false,ratio:1,displayInLayerSwitcher:true,visibility:true,projection:j,queryable:i.capabilities&&i.capabilities.Identify}))}}else{d(g)}c.title=i.documentInfo.Title;c.store=new GeoExt.data.LayerStore({layers:k,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"name"},{name:"layerid",type:"string"},{name:"group",type:"string",defaultValue:this.title},{name:"fixed",type:"boolean",defaultValue:true},{name:"tiled",type:"boolean",defaultValue:true},{name:"queryable",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});c.fireEvent("ready",c)};var d=function(e){Ext.Msg.alert("No ArcGIS Layers","Could not find any compatible layers  at "+c.config.url);c.fireEvent("failure",c)};this.lazy=this.isLazy();if(!this.lazy){Ext.Ajax.request({url:b,params:{f:"json",pretty:"false",keepPostParams:"true"},method:"POST",success:a,failure:d})}else{this.fireEvent("ready")}},isLazy:function(){var d=true;var c=false;var f=this.target.initialConfig.map;if(f&&f.layers){var a;for(var b=0,e=f.layers.length;b<e;++b){a=f.layers[b];if(a.source===this.id){c=true;d=this.layerConfigComplete(a);if(d===false){break}}}}return(d&&c)},layerConfigComplete:function(a){var c=true;var d=this.requiredProperties;for(var b=d.length-1;b>=0;--b){c=!!a[d[b]];if(c===false){break}}return c},createLayerRecord:function(b){var a,c;var e=function(g){return g.get("name")===b.name};var f=this.lazy||(this.store&&this.store.findBy(e)>-1);if(this.target.mapPanel.layers.findBy(e)==-1&&f){if(!this.lazy&&this.store.findBy(e)>-1){a=this.store.getAt(this.store.findBy(e)).clone()}else{a=this.createLazyLayerRecord(b)}c=a.getLayer();if(b.title){c.setName(b.title);a.set("title",b.title)}if("visibility" in b){c.visibility=b.visibility}if("opacity" in b){c.opacity=b.opacity}if("format" in b){c.params.FORMAT=b.format;a.set("format",b.format)}var d=false;if("tiled" in b){d=!b.tiled}a.set("tiled",!d);a.set("selected",b.selected||false);a.set("queryable",b.queryable||true);a.set("source",b.source);a.set("name",b.name);a.set("layerid",b.layerid);a.set("properties","gxp_wmslayerpanel");if("group" in b){a.set("group",b.group)}a.commit()}return a},getArcProjection:function(b){var a=this.getMapProjection();var d=a;var c="EPSG:"+b+"";if(c!==a.getCode()){d=null;if((p=new OpenLayers.Projection(c)).equals(a)){d=p}}return d},createLazyLayerRecord:function(b){var c=b.srs||this.target.map.projection;b.srs={};b.srs[c]=true;var d=b.bbox||this.target.map.maxExtent||OpenLayers.Projection.defaults[c].maxExtent;b.bbox={};b.bbox[c]={bbox:d};var a=new GeoExt.data.LayerRecord(b);a.set("name",b.name);a.set("layerid",b.layerid||"show:0");a.set("format",b.format||"png");a.set("tiled","tiled" in b?b.tiled:true);a.setLayer(new OpenLayers.Layer.ArcGIS93Rest(b.name,this.url.split("?")[0]+"/export",{layers:b.layerid,TRANSPARENT:true,FORMAT:"format" in b?b.format:"png"},{isBaseLayer:false,displayInLayerSwitcher:true,projection:c,singleTile:"tiled" in b?!b.tiled:false,queryable:"queryable" in b?b.queryable:false}));return a},getConfigForRecord:function(a){var b=a.getLayer();return{source:a.get("source"),name:a.get("name"),title:a.get("title"),tiled:a.get("tiled"),visibility:b.getVisibility(),layerid:b.params.LAYERS,format:b.params.FORMAT,opacity:b.opacity||undefined,group:a.get("group"),fixed:a.get("fixed"),selected:a.get("selected")}}});Ext.preg(gxp.plugins.ArcRestSource.prototype.ptype,gxp.plugins.ArcRestSource);Ext.namespace("gxp.plugins");gxp.plugins.AddLayers=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_addlayers",addActionMenuText:"Add layers",findActionMenuText:"Find layers",addFeedActionMenuText:"Add feeds",addActionTip:"Add layers",addServerText:"Add a New Server",addButtonText:"Add layers",untitledText:"Untitled",addLayerSourceErrorText:"Error getting {type} capabilities ({msg}).\nPlease check the url and try again.",availableLayersText:"Available Layers",searchText:"Search for layers",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",panelTitleText:"Title",layerSelectionText:"View available data from:",doneText:"Done",uploadRoles:["ROLE_ADMINISTRATOR"],uploadText:"Upload layers",relativeUploadOnly:true,startSourceId:null,catalogSourceKey:null,selectedSource:null,addServerId:null,constructor:function(a){this.addEvents("sourceselected");gxp.plugins.AddLayers.superclass.constructor.apply(this,arguments)},addActions:function(){var e={tooltip:this.addActionTip,text:this.addActionText,menuText:this.addActionMenuText,disabled:true,iconCls:"gxp-icon-addlayers"};var c,b;if(this.initialConfig.search||(this.uploadSource)){var a=[new Ext.menu.Item({iconCls:"gxp-icon-addlayers",text:this.addActionMenuText,handler:this.showCapabilitiesGrid,scope:this})];if(this.initialConfig.search&&this.initialConfig.search.selectedSource&&this.target.sources[this.initialConfig.search.selectedSource]){var d=new Ext.menu.Item({iconCls:"gxp-icon-addlayers",text:this.findActionMenuText,handler:this.showCatalogueSearch,scope:this});a.push(d);Ext.Ajax.request({method:"GET",url:this.target.sources[this.initialConfig.search.selectedSource].url,callback:function(h,i,g){if(i===false){this.target.layerSources[this.initialConfig.search.selectedSource].disable();d.hide()}},scope:this})}if(this.initialConfig.feeds){a.push(new Ext.menu.Item({iconCls:"gxp-icon-addlayers",text:this.addFeedActionMenuText,handler:this.showFeedDialog,scope:this}))}if(this.uploadSource){b=this.createUploadButton(Ext.menu.Item);if(b){a.push(b)}}c=Ext.apply(e,{menu:new Ext.menu.Menu({items:a})})}else{c=Ext.apply(e,{handler:this.showCapabilitiesGrid,scope:this})}var f=gxp.plugins.AddLayers.superclass.addActions.apply(this,[c]);this.target.on("ready",function(){if(this.uploadSource){var g=this.target.layerSources[this.uploadSource];if(g){this.setSelectedSource(g)}else{delete this.uploadSource;if(b){b.hide()}}}f[0].enable()},this);return f},showCatalogueSearch:function(){var g=this.initialConfig.search.selectedSource;var c={};var f=false;for(var d in this.target.layerSources){var e=this.target.layerSources[d];if(e instanceof gxp.plugins.CatalogueSource){var h={};h[d]=e;Ext.apply(c,h);f=true}}if(f===false){if(window.console){window.console.debug("No catalogue source specified")}return}var b=gxp.plugins.AddLayers.superclass.addOutput.apply(this,[{sources:c,title:this.searchText,height:300,width:315,selectedSource:g,xtype:"gxp_cataloguesearchpanel",map:this.target.mapPanel.map}]);b.on({addlayer:function(n,l,j){var o=this.target.layerSources[l];var m=OpenLayers.Bounds.fromArray(j.bbox,(o.yx&&o.yx[j.projection]===true));var k=this.target.mapPanel.map.getProjection();var q=m.transform(j.srs,k);j.srs=k;j.bbox=q.toArray();j.source=this.initialConfig.catalogSourceKey!==null?this.initialConfig.catalogSourceKey:l;var i=o.createLayerRecord(j);this.target.mapPanel.layers.add(i);if(q){this.target.mapPanel.map.zoomToExtent(q)}},scope:this});var a=b.findParentByType("window");a&&a.center();return b},showCapabilitiesGrid:function(){if(!this.capGrid){this.initCapGrid()}else{if(!(this.capGrid instanceof Ext.Window)){this.addOutput(this.capGrid)}}this.capGrid.show()},showFeedDialog:function(){if(!this.feedDialog){var a=this.outputTarget?Ext.Panel:Ext.Window;this.feedDialog=new a(Ext.apply({closeAction:"hide",autoScroll:true,title:this.addFeedActionMenuText,items:[{xtype:"gxp_feedsourcedialog",target:this.target,listeners:{addfeed:function(d,b){var f={config:{ptype:d}};if(b.url){f.config.url=b.url}var e=this.target.addLayerSource(f);b.source=e.id;var c=e.createLayerRecord(b);this.target.mapPanel.layers.add([c]);this.feedDialog.hide()},scope:this}}]},this.initialConfig.outputConfig));if(a===Ext.Panel){this.addOutput(this.feedDialog)}}if(!(this.feedDialog instanceof Ext.Window)){this.addOutput(this.feedDialog)}this.feedDialog.show()},initCapGrid:function(){var m,t=[],s=this.target;for(var l in s.layerSources){m=s.layerSources[l];if(m.store&&!m.hidden){t.push([l,m.title||l,m.url])}}var a=new Ext.data.ArrayStore({fields:["id","title","url"],data:t});var h=this.createExpander();function q(){var B=this.selectedSource;var y=o.getSelectionModel().getSelections();var x=[],w=y.length;function v(C){if(x){x.push(C)}w--;if(w===0){this.addLayers(x)}}for(var z=0,A=y.length;z<A;++z){var u=B.createLayerRecord({name:y[z].get("name"),source:B.id},v,this);if(u){v.call(this,u)}}}var j=0;if(this.startSourceId!==null){a.each(function(u){if(u.get("id")===this.startSourceId){j=a.indexOf(u)}},this)}m=this.target.layerSources[t[j][0]];var o=new Ext.grid.GridPanel({store:m.store,autoScroll:true,autoExpandColumn:"title",plugins:[h],loadMask:true,colModel:new Ext.grid.ColumnModel([h,{id:"title",header:this.panelTitleText,dataIndex:"title",sortable:true},{header:"Id",dataIndex:"name",width:120,sortable:true}]),listeners:{rowdblclick:q,scope:this}});var f=new Ext.form.ComboBox({ref:"../../sourceComboBox",width:165,store:a,valueField:"id",displayField:"title",tpl:'<tpl for="."><div ext:qtip="{url}" class="x-combo-list-item">{title}</div></tpl>',triggerAction:"all",editable:false,allowBlank:false,forceSelection:true,mode:"local",value:t[j][0],listeners:{select:function(x,u,v){var y=u.get("id");if(y===this.addServerId){b();f.reset();return}var w=this.target.layerSources[y];o.reconfigure(w.store,o.getColumnModel());o.getView().focusRow(0);this.setSelectedSource(w);(function(){x.triggerBlur();x.el.blur()}).defer(100)},focus:function(u){if(s.proxy){u.reset()}},scope:this}});var e=null,i;if(this.target.proxy||t.length>1){i=new Ext.Container({cls:"gxp-addlayers-sourceselect",items:[new Ext.Toolbar.TextItem({text:this.layerSelectionText}),f]});e=[i]}if(this.target.proxy){this.addServerId=Ext.id();a.loadData([[this.addServerId,this.addServerText+"..."]],true)}var n={xtype:"gxp_newsourcedialog",header:false,listeners:{hide:function(u){if(!this.outputTarget){u.ownerCt.hide()}},urlselected:function(w,u,v){w.setLoading();var x;switch(v){case"TMS":x="gxp_tmssource";break;case"REST":x="gxp_arcrestsource";break;default:x="gxp_wmscsource"}this.target.addLayerSource({config:{url:u,ptype:x},callback:function(z){var y=new a.recordType({id:z,title:this.target.layerSources[z].title||this.untitledText});a.insert(0,[y]);f.onSelect(y,0);w.hide()},fallback:function(y,z){w.setError(new Ext.Template(this.addLayerSourceErrorText).apply({type:v,msg:z}))},scope:this})},scope:this}};var r=this;function b(){if(r.outputTarget){r.addOutput(n)}else{new Ext.Window({title:gxp.NewSourceDialog.prototype.title,modal:true,hideBorders:true,width:300,items:n}).show()}}var k={xtype:"container",region:"center",layout:"fit",hideBorders:true,items:[o]};if(this.instructionsText){k.items.push({xtype:"box",autoHeight:true,autoEl:{tag:"p",cls:"x-form-item",style:"padding-left: 5px; padding-right: 5px"},html:this.instructionsText})}var d=["->",new Ext.Button({text:this.addButtonText,iconCls:"gxp-icon-addlayers",handler:q,scope:this}),new Ext.Button({text:this.doneText,handler:function(){this.capGrid.hide()},scope:this})];var c;if(!this.uploadSource){c=this.createUploadButton();if(c){d.unshift(c)}}var g=this.outputTarget?Ext.Panel:Ext.Window;this.capGrid=new g(Ext.apply({title:this.availableLayersText,closeAction:"hide",layout:"border",height:300,width:315,modal:true,items:k,tbar:e,bbar:d,listeners:{hide:function(u){o.getSelectionModel().clearSelections()},show:function(u){if(this.selectedSource===null){this.setSelectedSource(this.target.layerSources[t[j][0]])}else{this.setSelectedSource(this.selectedSource)}},scope:this}},this.initialConfig.outputConfig));if(g===Ext.Panel){this.addOutput(this.capGrid)}},addLayers:function(b,g){var a=this.selectedSource;var h=this.target.mapPanel.layers,l,e,f;for(var d=0,j=b.length;d<j;++d){e=a.createLayerRecord({name:b[d].get("name"),source:a.id})||b[d];if(e){f=e.getLayer();if(f.maxExtent){if(!l){l=e.getLayer().maxExtent.clone()}else{l.extend(e.getLayer().maxExtent)}}if(e.get("group")==="background"){h.insert(1,[e])}else{h.add([e])}}}if(l){this.target.mapPanel.map.zoomToExtent(l)}if(b.length===1&&e){this.target.selectLayer(e);if(g&&this.postUploadAction){var k,c=this.postUploadAction;if(!Ext.isString(c)){k=c.outputConfig;c=c.plugin}this.target.tools[c].addOutput(k)}}},setSelectedSource:function(b,c){this.selectedSource=b;var a=b.store;this.fireEvent("sourceselected",this,b);if(this.capGrid&&b.lazy){b.store.load({callback:(function(){var g=this.capGrid.sourceComboBox,d=g.store,f=g.valueField,e=d.findExact(f,g.getValue()),i=d.getAt(e),h=this.target.layerSources[i.get("id")];if(h){if(h.title!==i.get("title")&&!Ext.isEmpty(h.title)){i.set("title",h.title);g.setValue(i.get(f))}}else{d.remove(i)}}).createDelegate(this)})}},createUploadButton:function(e){e=e||Ext.Button;var d;var a=this.initialConfig.upload||!!this.initialConfig.uploadSource;var b;if(a){if(typeof a==="boolean"){a={}}d=new e({text:this.uploadText,iconCls:"gxp-icon-filebrowse",hidden:!this.uploadSource,handler:function(){this.target.doAuthorized(this.uploadRoles,function(){var g=new gxp.LayerUploadPanel(Ext.apply({title:this.outputTarget?this.uploadText:undefined,url:b,width:300,border:false,bodyStyle:"padding: 10px 10px 0 10px;",labelWidth:65,autoScroll:true,defaults:{anchor:"99%",allowBlank:false,msgTarget:"side"},listeners:{uploadcomplete:function(j,n){var l=n["import"].tasks;var t,s={},k,o;for(var m=0,q=l.length;m<q;++m){t=l[m];if(t.state==="ERROR"){Ext.Msg.alert(t.layer.originalName,t.errorMessage);return}var r;if(t.target.dataStore){r=t.target.dataStore.workspace.name}else{if(t.target.coverageStore){r=t.target.coverageStore.workspace.name}}s[r+":"+t.layer.name]=true}this.selectedSource.store.load({params:{_dc:Math.random()},callback:function(i,u,z){var v,x;if(this.capGrid&&this.capGrid.isVisible()){v=this.capGrid.get(0).get(0);x=v.getSelectionModel();x.clearSelections()}var y=[];var w=0;this.selectedSource.store.each(function(A,B){if(A.get("name") in s){w=B;y.push(A)}});if(v){window.setTimeout(function(){x.selectRecords(y);v.getView().focusRow(w)},100)}else{this.addLayers(y,true)}},scope:this});if(this.outputTarget){j.hide()}else{h.close()}},scope:this}},a));var h;if(this.outputTarget){this.addOutput(g)}else{h=new Ext.Window({title:this.uploadText,modal:true,resizable:false,items:[g]});h.show()}},this)},scope:this});var c={};function f(g,i,h){if(g in c){window.setTimeout(function(){i.call(h,c[g])},0)}else{Ext.Ajax.request({url:g,disableCaching:false,callback:function(l,m,k){var j=k.status;c[g]=j;i.call(h,j)}})}}this.on({sourceselected:function(h,i){d[this.uploadSource?"show":"hide"]();var g=false;if(this.isEligibleForUpload(i)){b=this.getGeoServerRestUrl(i.url);if(this.target.isAuthorized()){f(b+"/imports",function(j){d.setVisible(j===200)},this)}}},scope:this})}return d},getGeoServerRestUrl:function(a){var b=a.split("/");b.pop();b.push("rest");return b.join("/")},isEligibleForUpload:function(a){return(a.url&&(this.relativeUploadOnly?(a.url.charAt(0)==="/"):true)&&(this.nonUploadSources||[]).indexOf(a.id)===-1)},createExpander:function(){return new Ext.grid.RowExpander({tpl:new Ext.Template(this.expanderTemplateText)})}});Ext.preg(gxp.plugins.AddLayers.prototype.ptype,gxp.plugins.AddLayers);Ext.namespace("gxp.plugins");gxp.plugins.RemoveLayer=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_removelayer",removeMenuText:"Remove layer",removeActionTip:"Remove layer",addActions:function(){var b;var c=gxp.plugins.RemoveLayer.superclass.addActions.apply(this,[{menuText:this.removeMenuText,iconCls:"gxp-icon-removelayers",disabled:true,tooltip:this.removeActionTip,handler:function(){var e=b;if(e){this.target.mapPanel.layers.remove(e)}},scope:this}]);var d=c[0];this.target.on("layerselectionchange",function(e){b=e;d.setDisabled(this.target.mapPanel.layers.getCount()<=1||!e)},this);var a=function(e){d.setDisabled(!b||e.getCount()<=1)};this.target.mapPanel.layers.on({add:a,remove:a});return c}});Ext.preg(gxp.plugins.RemoveLayer.prototype.ptype,gxp.plugins.RemoveLayer);Ext.namespace("gxp.plugins");gxp.plugins.LayerProperties=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_layerproperties",menuText:"Layer Properties",toolTip:"Layer Properties",constructor:function(a){gxp.plugins.LayerProperties.superclass.constructor.apply(this,arguments);if(!this.outputConfig){this.outputConfig={width:325,autoHeight:true}}},addActions:function(){var a=gxp.plugins.LayerProperties.superclass.addActions.apply(this,[{menuText:this.menuText,iconCls:"gxp-icon-layerproperties",disabled:true,tooltip:this.toolTip,handler:function(){this.removeOutput();this.addOutput()},scope:this}]);var b=a[0];this.target.on("layerselectionchange",function(c){b.setDisabled(!c||!c.get("properties"))},this);return a},addOutput:function(d){d=d||{};var a=this.target.selectedLayer;var c=this.initialConfig.outputConfig||{};this.outputConfig.title=c.title||this.menuText+": "+a.get("title");this.outputConfig.shortTitle=a.get("title");var f=a.get("properties")||"gxp_layerpanel";var e=this.layerPanelConfig;if(e&&e[f]){Ext.apply(d,e[f])}var b=gxp.plugins.LayerProperties.superclass.addOutput.call(this,Ext.apply({xtype:f,authorized:this.target.isAuthorized(),layerRecord:a,source:this.target.getSource(a),defaults:{style:"padding: 10px",autoHeight:this.outputConfig.autoHeight}},d));b.on({added:function(g){if(!this.outputTarget){g.on("afterrender",function(){g.ownerCt.ownerCt.center()},this,{single:true})}},scope:this});return b}});Ext.preg(gxp.plugins.LayerProperties.prototype.ptype,gxp.plugins.LayerProperties);Ext.namespace("gxp.plugins");gxp.plugins.ZoomToLayerExtent=Ext.extend(gxp.plugins.ZoomToExtent,{ptype:"gxp_zoomtolayerextent",menuText:"Zoom to layer extent",tooltip:"Zoom to layer extent",iconCls:"gxp-icon-zoom-to",destroy:function(){this.selectedRecord=null;gxp.plugins.ZoomToLayerExtent.superclass.destroy.apply(this,arguments)},extent:function(){var a=this.selectedRecord.getLayer(),b;if(OpenLayers.Layer.Vector){b=a instanceof OpenLayers.Layer.Vector&&a.getDataExtent()}return a.restrictedExtent||b||a.maxExtent||map.maxExtent},addActions:function(){var a=gxp.plugins.ZoomToLayerExtent.superclass.addActions.apply(this,arguments);a[0].disable();this.target.on("layerselectionchange",function(b){this.selectedRecord=b;a[0].setDisabled(!b||!b.get("layer"))},this);return a}});Ext.preg(gxp.plugins.ZoomToLayerExtent.prototype.ptype,gxp.plugins.ZoomToLayerExtent);Ext.namespace("gxp.plugins");gxp.plugins.ZoomToSelectedFeatures=Ext.extend(gxp.plugins.ZoomToExtent,{ptype:"gxp_zoomtoselectedfeatures",menuText:"Zoom to selected features",tooltip:"Zoom to selected features",closest:false,layer:null,iconCls:"gxp-icon-zoom-to",extent:function(){var c=this.target.tools[this.featureManager].featureLayer;var f,b,e,d=c.selectedFeatures;for(var a=d.length-1;a>=0;--a){b=d[a].geometry;if(b){e=b.getBounds();if(f){f.extend(e)}else{f=e.clone()}}}return f},addActions:function(){var d=gxp.plugins.ZoomToSelectedFeatures.superclass.addActions.apply(this,arguments);d[0].disable();var b={featureselected:function(e){if(d[0].isDisabled()&&e.feature.geometry!==null){d[0].enable()}},featureunselected:function(){if(this.layer.selectedFeatures.length===0){d[0].disable()}},scope:this};var a=this.target.tools[this.featureManager];function c(){if(this.layer){this.layer.events.un(b)}this.layer=a.featureLayer;if(this.layer){this.layer.events.on(b)}}this.target.on("layerselectionchange",c);a.on("query",function(){d[0].disable()});c.call(this);return d}});Ext.preg(gxp.plugins.ZoomToSelectedFeatures.prototype.ptype,gxp.plugins.ZoomToSelectedFeatures);Ext.namespace("gxp.plugins");gxp.plugins.Legend=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_legend",menuText:"Legend",tooltip:"Show Legend",actionTarget:null,constructor:function(a){gxp.plugins.Legend.superclass.constructor.apply(this,arguments);if(!this.outputConfig){this.outputConfig={width:300,height:400}}Ext.applyIf(this.outputConfig,{title:this.menuText})},addActions:function(){var a=[{menuText:this.menuText,iconCls:"gxp-icon-legend",tooltip:this.tooltip,handler:function(){this.removeOutput();this.addOutput(this.outputConfig)},scope:this}];return gxp.plugins.Legend.superclass.addActions.apply(this,[a])},getLegendPanel:function(){return this.output[0]},addOutput:function(a){return gxp.plugins.Legend.superclass.addOutput.call(this,Ext.apply({xtype:"gx_legendpanel",ascending:false,border:false,hideMode:"offsets",layerStore:this.target.mapPanel.layers,defaults:{cls:"gxp-legend-item"}},a))}});Ext.preg(gxp.plugins.Legend.prototype.ptype,gxp.plugins.Legend);Ext.namespace("gxp.plugins");gxp.plugins.Print=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_print",printService:null,printCapabilities:null,customParams:null,includeLegend:false,menuText:"Print Map",tooltip:"Print Map",buttonText:"Print",notAllNotPrintableText:"Not All Layers Can Be Printed",nonePrintableText:"None of your current map layers can be printed",previewText:"Print Preview",openInNewWindow:false,constructor:function(a){gxp.plugins.Print.superclass.constructor.apply(this,arguments)},addActions:function(){if(this.printService!==null||this.printCapabilities!=null){var j=new GeoExt.data.PrintProvider({capabilities:this.printCapabilities,url:this.printService,customParams:this.customParams,autoLoad:false,listeners:{beforedownload:function(l,k){if(this.openInNewWindow===true){window.open(k);return false}},beforeencodelegend:function(o,n,m){if(m&&m.ptype==="gxp_layermanager"){var l=[];var k=m.output;if(k&&k[0]){k[0].getRootNode().cascade(function(r){if(r.component&&!r.component.hidden){var q=r.component;var s=this.encoders.legends[q.getXType()];l=l.concat(s.call(this,q,n.pages[0].scale))}},o)}n.legends=l;return false}},beforeprint:function(){h.items.get(0).printMapPanel.layers.each(function(k){var n=k.get("layer").params;for(var m in n){if(n[m] instanceof Array){n[m]=n[m].join(",")}}})},loadcapabilities:function(){if(f){f.initialConfig.disabled=false;f.enable()}},print:function(){try{h.close()}catch(k){}},printException:function(l,k){this.target.displayXHRTrouble&&this.target.displayXHRTrouble(k)},scope:this}});var c=gxp.plugins.Print.superclass.addActions.call(this,[{menuText:this.menuText,buttonText:this.buttonText,tooltip:this.tooltip,iconCls:"gxp-icon-print",disabled:this.printCapabilities!==null?false:true,handler:function(){var k=e();if(k.length>0){var l=i.call(this);g.call(this);return l}else{Ext.Msg.alert(this.notAllNotPrintableText,this.nonePrintableText)}},scope:this,listeners:{render:function(){j.loadCapabilities()}}}]);var f=c[0].items[0];var h;function a(){if(h){try{var k=h.items.first();k.printMapPanel.printPage.destroy()}catch(l){}h=null}}var b=this.target.mapPanel;function e(){var k=[];b.layers.each(function(l){var m=l.getLayer();if(d(m)){k.push(m)}});return k}function d(k){return k.getVisibility()===true&&(k instanceof OpenLayers.Layer.WMS||k instanceof OpenLayers.Layer.OSM)}function i(){var m=null;if(this.includeLegend===true){var l,k;for(l in this.target.tools){k=this.target.tools[l];if(k.ptype==="gxp_legend"){m=k.getLegendPanel();break}}if(m===null){for(l in this.target.tools){k=this.target.tools[l];if(k.ptype==="gxp_layermanager"){m=k;break}}}}h=new Ext.Window({title:this.previewText,modal:true,border:false,autoHeight:true,resizable:false,width:360,items:[new GeoExt.ux.PrintPreview({minWidth:336,mapTitle:this.target.about&&this.target.about.title,comment:this.target.about&&this.target.about["abstract"],printMapPanel:{autoWidth:true,height:Math.min(420,Ext.get(document.body).getHeight()-150),limitScales:true,map:Ext.applyIf({controls:[new OpenLayers.Control.Navigation({zoomWheelEnabled:false,zoomBoxEnabled:false}),new OpenLayers.Control.PanPanel(),new OpenLayers.Control.ZoomPanel(),new OpenLayers.Control.Attribution()],eventListeners:{preaddlayer:function(n){return d(n.layer)}}},b.initialConfig.map),items:[{xtype:"gx_zoomslider",vertical:true,height:100,aggressive:true}],listeners:{afterlayout:function(n){h.setWidth(Math.max(360,this.getWidth()+24));h.center()}}},printProvider:j,includeLegend:this.includeLegend,legend:m,sourceMap:b})],listeners:{beforedestroy:a}});return h}function g(){h.show();h.setWidth(0);var l=h.items.get(0).items.get(0);var k=0;l.items.each(function(m){if(m.getEl()){k+=m.getWidth()}});h.setWidth(Math.max(h.items.get(0).printMapPanel.getWidth(),k+20));h.center()}return c}}});Ext.preg(gxp.plugins.Print.prototype.ptype,gxp.plugins.Print);Ext.namespace("gxp.plugins");gxp.plugins.WMSRasterStylesDialog={isRaster:null,init:function(a){Ext.apply(a,gxp.plugins.WMSRasterStylesDialog)},createRule:function(){var a=[new OpenLayers.Symbolizer[this.isRaster?"Raster":this.symbolType]];return new OpenLayers.Rule({symbolizers:a})},addRule:function(){var a=this.items.get(2).items.get(0);if(this.isRaster){a.rules.push(this.createPseudoRule());a.rules.length==1&&a.rules.push(this.createPseudoRule());this.savePseudoRules()}else{this.selectedStyle.get("userStyle").rules.push(this.createRule());a.update();this.selectedStyle.store.afterEdit(this.selectedStyle)}this.updateRuleRemoveButton()},removeRule:function(){if(this.isRaster){var a=this.items.get(2).items.get(0);var b=this.selectedRule;a.unselect();a.rules.remove(b);a.rules.length==1&&a.rules.remove(a.rules[0]);this.savePseudoRules()}else{gxp.WMSStylesDialog.prototype.removeRule.apply(this,arguments)}},duplicateRule:function(){var a=this.items.get(2).items.get(0);if(this.isRaster){a.rules.push(this.createPseudoRule({quantity:this.selectedRule.name,label:this.selectedRule.title,color:this.selectedRule.symbolizers[0].fillColor,opacity:this.selectedRule.symbolizers[0].fillOpacity}));this.savePseudoRules()}else{var b=this.selectedRule.clone();b.name=gxp.util.uniqueName((b.title||b.name)+" (copy)");delete b.title;this.selectedStyle.get("userStyle").rules.push(b);a.update()}this.updateRuleRemoveButton()},editRule:function(){this.isRaster?this.editPseudoRule():gxp.WMSStylesDialog.prototype.editRule.apply(this,arguments)},editPseudoRule:function(){var c=this;var d=this.selectedRule;var a=new Ext.Window({title:"Color Map Entry: "+d.name,width:340,autoHeight:true,modal:true,items:[{bodyStyle:"padding-top: 5px",border:false,defaults:{autoHeight:true,hideMode:"offsets"},items:[{xtype:"form",border:false,labelAlign:"top",defaults:{border:false},style:{padding:"0.3em 0 0 1em"},items:[{layout:"column",defaults:{border:false,style:{"padding-right":"1em"}},items:[{layout:"form",width:70,items:[{xtype:"numberfield",anchor:"95%",value:d.name,allowBlank:false,fieldLabel:"Quantity",validator:function(f){var g=c.items.get(2).items.get(0).rules;for(var e=g.length-1;e>=0;e--){if(d!==g[e]&&g[e].name==f){return"Quantity "+f+" is already defined"}}return true},listeners:{valid:function(e){this.selectedRule.name=String(e.getValue());this.savePseudoRules()},scope:this}}]},{layout:"form",width:130,items:[{xtype:"textfield",fieldLabel:"Label",anchor:"95%",value:d.title,listeners:{valid:function(e){this.selectedRule.title=e.getValue();this.savePseudoRules()},scope:this}}]},{layout:"form",width:70,items:[new GeoExt.FeatureRenderer({symbolType:this.symbolType,symbolizers:[d.symbolizers[0]],isFormField:true,fieldLabel:"Appearance"})]}]}]},{xtype:"gxp_polygonsymbolizer",symbolizer:d.symbolizers[0],bodyStyle:{padding:"10px"},border:false,labelWidth:70,defaults:{labelWidth:70},listeners:{change:function(e){var f=a.findByType(GeoExt.FeatureRenderer)[0];f.setSymbolizers([e],{draw:f.rendered});this.selectedRule.symbolizers[0]=e;this.savePseudoRules()},scope:this}}]}]});var b=a.findByType("gxp_strokesymbolizer")[0];b.ownerCt.remove(b);a.show()},savePseudoRules:function(){var f=this.selectedStyle;var e=this.items.get(2).items.get(0);var g=f.get("userStyle");var b=e.rules;b.sort(function(j,i){var l=parseFloat(j.name);var k=parseFloat(i.name);return l===k?0:(l<k?-1:1)});var d=g.rules[0].symbolizers[0];d.colorMap=b.length>0?new Array(b.length):undefined;var h;for(var c=0,a=b.length;c<a;++c){h=b[c];d.colorMap[c]={quantity:parseFloat(h.name),label:h.title||undefined,color:h.symbolizers[0].fillColor||undefined,opacity:h.symbolizers[0].fill==false?0:h.symbolizers[0].fillOpacity}}this.afterRuleChange(this.selectedRule)},createLegend:function(c,a){var b=OpenLayers.Symbolizer.Raster;if(b&&c[0]&&c[0].symbolizers[0] instanceof b){this.getComponent("rulesfieldset").setTitle("Color Map Entries");this.isRaster=true;this.addRasterLegend(c,a)}else{this.isRaster=false;this.addVectorLegend(c)}},addRasterLegend:function(h,e){e=e||{};var g=h[0].symbolizers[0];var d=g.colorMap||[];var c=[];var b;for(var f=0,a=d.length;f<a;f++){c.push(this.createPseudoRule(d[f]))}this.selectedRule=e.selectedRuleIndex!=null?c[e.selectedRuleIndex]:null;return this.addVectorLegend(c,{symbolType:"Polygon",enableDD:false})},createPseudoRule:function(b){var d=-1;if(!b){var a=this.items.get(2);if(a.items){rules=a.items.get(0).rules;for(var c=rules.length-1;c>=0;c--){d=Math.max(d,parseFloat(rules[c].name))}}}b=Ext.applyIf(b||{},{quantity:++d,color:"#000000",opacity:1});return new OpenLayers.Rule({title:b.label,name:String(b.quantity),symbolizers:[new OpenLayers.Symbolizer.Polygon({fillColor:b.color,fillOpacity:b.opacity,stroke:false,fill:b.opacity!==0})]})},updateRuleRemoveButton:function(){this.items.get(3).items.get(1).setDisabled(!this.selectedRule||(this.isRaster===false&&this.items.get(2).items.get(0).rules.length<=1))}};Ext.preg("gxp_wmsrasterstylesdialog",gxp.plugins.WMSRasterStylesDialog);Ext.namespace("gxp.plugins");gxp.plugins.Styler=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_styler",menuText:"Edit Styles",tooltip:"Manage layer styles",roles:["ROLE_ADMINISTRATOR"],sameOriginStyling:true,rasterStyling:false,requireDescribeLayer:true,constructor:function(a){gxp.plugins.Styler.superclass.constructor.apply(this,arguments);if(!this.outputConfig){this.outputConfig={autoHeight:true,width:265}}Ext.applyIf(this.outputConfig,{closeAction:"close"})},init:function(a){gxp.plugins.Styler.superclass.init.apply(this,arguments);this.target.on("authorizationchange",this.enableOrDisable,this)},destroy:function(){this.target.un("authorizationchange",this.enableOrDisable,this);gxp.plugins.Styler.superclass.destroy.apply(this,arguments)},enableOrDisable:function(){if(this.target&&this.target.selectedLayer!==null){this.handleLayerChange(this.target.selectedLayer)}},addActions:function(){var b;var a=gxp.plugins.Styler.superclass.addActions.apply(this,[{menuText:this.menuText,iconCls:"gxp-icon-palette",disabled:true,tooltip:this.tooltip,handler:function(){this.target.doAuthorized(this.roles,this.addOutput,this)},scope:this}]);this.launchAction=a[0];this.target.on({layerselectionchange:this.handleLayerChange,scope:this});return a},handleLayerChange:function(a){this.launchAction.disable();if(a){var b=this.target.getSource(a);if(b instanceof gxp.plugins.WMSSource){b.describeLayer(a,function(c){this.checkIfStyleable(a,c)},this)}}},checkIfStyleable:function(g,d){if(d){var c=["WFS"];if(this.rasterStyling===true){c.push("WCS")}}if(d?c.indexOf(d.get("owsType"))!==-1:!this.requireDescribeLayer){var f=false;var e=this.target.layerSources[g.get("source")];var b;var a=g.get("restUrl");if(a){b=a+"/styles"}else{b=e.url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest/styles")}if(this.sameOriginStyling){f=b.charAt(0)==="/";if(this.target.authenticate&&f){this.launchAction.enable();return}}else{f=true}if(f){if(this.target.isAuthorized()){this.enableActionIfAvailable(b)}}}},enableActionIfAvailable:function(a){Ext.Ajax.request({method:"PUT",url:a,callback:function(c,d,b){this.launchAction.setDisabled(b.status!==405)},scope:this})},addOutput:function(d){d=d||{};var a=this.target.selectedLayer;var c=this.initialConfig.outputConfig||{};this.outputConfig.title=c.title||this.menuText+": "+a.get("title");this.outputConfig.shortTitle=a.get("title");Ext.apply(d,gxp.WMSStylesDialog.createGeoServerStylerConfig(a));if(this.rasterStyling===true){d.plugins.push({ptype:"gxp_wmsrasterstylesdialog"})}Ext.applyIf(d,{style:"padding: 10px"});var b=gxp.plugins.Styler.superclass.addOutput.call(this,d);if(!(b.ownerCt.ownerCt instanceof Ext.Window)){b.dialogCls=Ext.Panel;b.showDlg=function(e){e.layout="fit";e.autoHeight=false;b.ownerCt.add(e)}}b.stylesStore.on("load",function(){if(!this.outputTarget&&b.ownerCt.ownerCt instanceof Ext.Window){b.ownerCt.ownerCt.center()}})}});Ext.preg(gxp.plugins.Styler.prototype.ptype,gxp.plugins.Styler);Ext.namespace("gxp.plugins");gxp.plugins.GoogleEarth=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_googleearth",timeout:7000,menuText:"3D Viewer",tooltip:"Switch to 3D Viewer",tooltipMap:"Switch back to normal map view",constructor:function(a){gxp.plugins.GoogleEarth.superclass.constructor.apply(this,arguments)},addActions:function(){var a=[{menuText:this.menuText,enableToggle:true,iconCls:"gxp-icon-googleearth",tooltip:this.tooltip,toggleHandler:function(b,c){this.actions[0].each(function(d){if(d.toggle){d.toggle(false,true)}});this.togglePanelDisplay(c)},scope:this}];return gxp.plugins.GoogleEarth.superclass.addActions.apply(this,[a])},togglePanelDisplay:function(b){var a=this.target.mapPanel.ownerCt;var c=a&&a.getLayout();if(c&&c instanceof Ext.layout.CardLayout){if(b===true){gxp.plugins.GoogleEarth.loader.onLoad({callback:function(){c.setActiveItem(1);this.actions[0].enable();this.actions[0].items[0].setTooltip(this.tooltipMap);this.actions[0].each(function(d){if(d.toggle){d.toggle(true,true)}})},scope:this})}else{c.setActiveItem(0);this.actions[0].items[0].setTooltip(this.tooltip)}}},getHost:function(){var b=window.location.host.split(":").shift();var a=window.location.port||"80";return b+":"+a}});gxp.plugins.GoogleEarth.loader=new (Ext.extend(Ext.util.Observable,{ready:!!(window.google&&window.google.earth),loading:false,constructor:function(){this.addEvents("ready","failure");return Ext.util.Observable.prototype.constructor.apply(this,arguments)},onScriptLoad:function(){var a=gxp.plugins.GoogleEarth.loader;if(!a.ready){a.ready=true;a.loading=false;a.fireEvent("ready")}},onLoad:function(a){if(this.ready){window.setTimeout(function(){a.callback.call(a.scope)},0)}else{if(!this.loading){this.loadScript(a)}else{this.on({ready:a.callback,failure:a.errback||Ext.emptyFn,scope:a.scope})}}},loadScript:function(d){if(window.google){delete google.loader}var f={autoload:Ext.encode({modules:[{name:"earth",version:"1",callback:"gxp.plugins.GoogleEarth.loader.onScriptLoad"}]})};var c=document.createElement("script");c.src="//www.google.com/jsapi?"+Ext.urlEncode(f);var b=d.errback||Ext.emptyFn;var e=d.timeout||gxp.plugins.GoogleSource.prototype.timeout;window.setTimeout((function(){if(!gxp.plugins.GoogleEarth.loader.ready){this.fireEvent("failure");this.unload()}}).createDelegate(this),e);this.on({ready:d.callback,failure:d.errback||Ext.emptyFn,scope:d.scope});this.loading=true;function a(){document.getElementsByTagName("head")[0].appendChild(c)}if(document.body){a()}else{Ext.onReady(a)}this.script=c},unload:function(){this.purgeListeners();if(this.script){document.getElementsByTagName("head")[0].removeChild(this.script);delete this.script}this.loading=false;this.ready=false;delete google.loader;delete google.earth}}))();Ext.preg(gxp.plugins.GoogleEarth.prototype.ptype,gxp.plugins.GoogleEarth);Ext.ns("Ext.ux.form");Ext.ux.form.FileUploadField=Ext.extend(Ext.form.TextField,{buttonText:"Browse...",buttonOnly:false,buttonOffset:3,readOnly:true,autoSize:Ext.emptyFn,initComponent:function(){Ext.ux.form.FileUploadField.superclass.initComponent.call(this);this.addEvents("fileselected")},onRender:function(c,a){Ext.ux.form.FileUploadField.superclass.onRender.call(this,c,a);this.wrap=this.el.wrap({cls:"x-form-field-wrap x-form-file-wrap"});this.el.addClass("x-form-file-text");this.el.dom.removeAttribute("name");this.createFileInput();var b=Ext.applyIf(this.buttonCfg||{},{text:this.buttonText});this.button=new Ext.Button(Ext.apply(b,{renderTo:this.wrap,cls:"x-form-file-btn"+(b.iconCls?" x-btn-icon":"")}));if(this.buttonOnly){this.el.hide();this.wrap.setWidth(this.button.getEl().getWidth())}this.bindListeners();this.resizeEl=this.positionEl=this.wrap},bindListeners:function(){this.fileInput.on({scope:this,mouseenter:function(){this.button.addClass(["x-btn-over","x-btn-focus"])},mouseleave:function(){this.button.removeClass(["x-btn-over","x-btn-focus","x-btn-click"])},mousedown:function(){this.button.addClass("x-btn-click")},mouseup:function(){this.button.removeClass(["x-btn-over","x-btn-focus","x-btn-click"])},change:function(){var a=this.fileInput.dom.value;this.setValue(a);this.fireEvent("fileselected",this,a)}})},createFileInput:function(){this.fileInput=this.wrap.createChild({id:this.getFileInputId(),name:this.name||this.getId(),cls:"x-form-file",tag:"input",type:"file",size:1})},reset:function(){this.fileInput.remove();this.createFileInput();this.bindListeners();Ext.ux.form.FileUploadField.superclass.reset.call(this)},getFileInputId:function(){return this.id+"-file"},onResize:function(a,b){Ext.ux.form.FileUploadField.superclass.onResize.call(this,a,b);this.wrap.setWidth(a);if(!this.buttonOnly){var a=this.wrap.getWidth()-this.button.getEl().getWidth()-this.buttonOffset;this.el.setWidth(a)}},onDestroy:function(){Ext.ux.form.FileUploadField.superclass.onDestroy.call(this);Ext.destroy(this.fileInput,this.button,this.wrap)},onDisable:function(){Ext.ux.form.FileUploadField.superclass.onDisable.call(this);this.doDisable(true)},onEnable:function(){Ext.ux.form.FileUploadField.superclass.onEnable.call(this);this.doDisable(false)},doDisable:function(a){this.fileInput.dom.disabled=a;this.button.setDisabled(a)},preFocus:Ext.emptyFn,alignErrorIcon:function(){this.errorIcon.alignTo(this.wrap,"tl-tr",[2,0])}});Ext.reg("fileuploadfield",Ext.ux.form.FileUploadField);Ext.form.FileUploadField=Ext.ux.form.FileUploadField;Ext.grid.RowExpander=function(a){Ext.apply(this,a);this.addEvents({beforeexpand:true,expand:true,beforecollapse:true,collapse:true});Ext.grid.RowExpander.superclass.constructor.call(this);if(this.tpl){if(typeof this.tpl=="string"){this.tpl=new Ext.Template(this.tpl)}this.tpl.compile()}this.state={};this.bodyContent={}};Ext.extend(Ext.grid.RowExpander,Ext.util.Observable,{header:"",width:20,sortable:false,fixed:true,menuDisabled:true,dataIndex:"",id:"expander",lazyRender:true,enableCaching:true,getRowClass:function(a,e,d,c){d.cols=d.cols-1;var b=this.bodyContent[a.id];if(!b&&!this.lazyRender){b=this.getBodyContent(a,e)}if(b){d.body=b}return this.state[a.id]?"x-grid3-row-expanded":"x-grid3-row-collapsed"},init:function(b){this.grid=b;var a=b.getView();a.getRowClass=this.getRowClass.createDelegate(this);a.enableRowBody=true;b.on("render",function(){a.mainBody.on("mousedown",this.onMouseDown,this)},this)},getBodyContent:function(a,b){if(!this.enableCaching){return this.tpl.apply(a.data)}var c=this.bodyContent[a.id];if(!c){c=this.tpl.apply(a.data);this.bodyContent[a.id]=c}return c},onMouseDown:function(b,a){if(a.className=="x-grid3-row-expander"){b.stopEvent();var c=b.getTarget(".x-grid3-row");this.toggleRow(c)}},renderer:function(b,c,a){c.cellAttr='rowspan="2"';return'<div class="x-grid3-row-expander">&#160;</div>'},beforeExpand:function(b,a,c){if(this.fireEvent("beforeexpand",this,b,a,c)!==false){if(this.tpl&&this.lazyRender){a.innerHTML=this.getBodyContent(b,c)}return true}else{return false}},toggleRow:function(a){if(typeof a=="number"){a=this.grid.view.getRow(a)}this[Ext.fly(a).hasClass("x-grid3-row-collapsed")?"expandRow":"collapseRow"](a)},expandRow:function(c){if(typeof c=="number"){c=this.grid.view.getRow(c)}var b=this.grid.store.getAt(c.rowIndex);var a=Ext.DomQuery.selectNode("tr:nth(2) div.x-grid3-row-body",c);if(this.beforeExpand(b,a,c.rowIndex)){this.state[b.id]=true;Ext.fly(c).replaceClass("x-grid3-row-collapsed","x-grid3-row-expanded");this.fireEvent("expand",this,b,a,c.rowIndex)}},collapseRow:function(c){if(typeof c=="number"){c=this.grid.view.getRow(c)}var b=this.grid.store.getAt(c.rowIndex);var a=Ext.fly(c).child("tr:nth(1) div.x-grid3-row-body",true);if(this.fireEvent("beforecollapse",this,b,a,c.rowIndex)!==false){this.state[b.id]=false;Ext.fly(c).replaceClass("x-grid3-row-expanded","x-grid3-row-collapsed");this.fireEvent("collapse",this,b,a,c.rowIndex)}}});Ext.namespace("Ext.ux");Ext.ux.ColorPicker=function(a){a.bodyStyle={padding:"3px"};Ext.ux.ColorPicker.superclass.constructor.call(this,a);this.initialize(a)};Ext.extend(Ext.ux.ColorPicker,Ext.util.Observable,{HCHARS:"0123456789ABCDEF",initialize:function(a){this.events={};this.config=this.config||a;this.config.captions=this.config.captions||{};this.config.pickerHotPoint=this.config.pickerHotPoint||{x:3,y:3};this._HSV={h:0,s:100,v:100};this._RGB={r:255,g:255,b:255};this._HEX="000000";this.lastXYRgb={x:0,y:0};this.lastYHue=0;this.domElement=this.config.renderTo||Ext.DomHelper.append(document.body,{},true);this.domElement.addClass("x-cp-panel");this.cpCreateDomObjects();if(this.config.hidePanel){this.formContainer.hide()}this.rgbPicker.on("mousedown",this.rgbPickerClick.createDelegate(this),this);this.huePicker.on("mousedown",this.huePickerClick.createDelegate(this),this);this.wsColorContainer.on("mousedown",this.setColorFromWebsafe.createDelegate(this),this);this.inColorContainer.on("mousedown",this.setColorFromInvert.createDelegate(this),this);Ext.getCmp("redValue"+this.domElement.id).on("change",this.changeRGBField.createDelegate(this));Ext.getCmp("greenValue"+this.domElement.id).on("change",this.changeRGBField.createDelegate(this));Ext.getCmp("blueValue"+this.domElement.id).on("change",this.changeRGBField.createDelegate(this));Ext.getCmp("hueValue"+this.domElement.id).on("change",this.changeHSVField.createDelegate(this));Ext.getCmp("saturationValue"+this.domElement.id).on("change",this.changeHSVField.createDelegate(this));Ext.getCmp("brightnessValue"+this.domElement.id).on("change",this.changeHSVField.createDelegate(this));Ext.getCmp("colorValue"+this.domElement.id).on("change",this.changeHexaField.createDelegate(this));Ext.getCmp("redValue"+this.domElement.id).on("specialkey",this.changeRGBField.createDelegate(this));Ext.getCmp("greenValue"+this.domElement.id).on("specialkey",this.changeRGBField.createDelegate(this));Ext.getCmp("blueValue"+this.domElement.id).on("specialkey",this.changeRGBField.createDelegate(this));Ext.getCmp("hueValue"+this.domElement.id).on("specialkey",this.changeHSVField.createDelegate(this));Ext.getCmp("saturationValue"+this.domElement.id).on("specialkey",this.changeHSVField.createDelegate(this));Ext.getCmp("brightnessValue"+this.domElement.id).on("specialkey",this.changeHSVField.createDelegate(this));Ext.getCmp("colorValue"+this.domElement.id).on({specialkey:function(c,b){if(b.getKey()===b.ENTER){this.changeHexaField(c,c.getValue())}},scope:this});this.checkConfig();this.addEvents({pickcolor:true,changergb:true,changehsv:true,changehexa:true})},cpCreateDomObjects:function(){this.rgbPicker=Ext.DomHelper.append(this.domElement,{tag:"div",cls:"x-cp-rgb-msk"},true);this.rgbPointer=Ext.DomHelper.append(this.rgbPicker,{tag:"div",cls:"x-cp-rgb-picker"},true);this.rgbPointer.setXY([this.rgbPicker.getLeft()-this.config.pickerHotPoint.x,this.rgbPicker.getTop()-this.config.pickerHotPoint.y]);this.huePicker=Ext.DomHelper.append(this.domElement,{tag:"div",cls:"x-cp-hue-msk"},true);this.huePointer=Ext.DomHelper.append(this.huePicker,{tag:"div",cls:"x-cp-hue-picker"},true);this.huePointer.setXY([this.huePicker.getLeft()+(this.huePointer.getWidth()/2)+1,this.huePicker.getTop()-this.config.pickerHotPoint.y]);this.formContainer=Ext.DomHelper.append(Ext.DomHelper.append(this.domElement,{tag:"div",cls:"x-cp-control-container x-unselectable"},true),{tag:"div",cls:"x-cp-rgb-container x-unselectable",style:"clear:both"},true);this.colorContainer=Ext.DomHelper.append(this.formContainer,{cls:"x-cp-coloro-container x-unselectable"},true).update(this.config.captions.color||"Color");this.form=new Ext.FormPanel({frame:true,width:"auto",height:227,cls:"x-cp-form",labelWidth:12,items:[{xtype:"fieldset",title:"RGB",autoHeight:true,style:"padding: 2px",defaultType:"numberfield",items:[{fieldLabel:"Red",id:"redValue"+this.domElement.id},{fieldLabel:"Green",id:"greenValue"+this.domElement.id},{fieldLabel:"Blue",id:"blueValue"+this.domElement.id}]},{xtype:"fieldset",title:"HSV",autoHeight:true,style:"padding: 2px",defaultType:"numberfield",items:[{fieldLabel:"Hue",id:"hueValue"+this.domElement.id},{fieldLabel:"Satur.",id:"saturationValue"+this.domElement.id},{fieldLabel:"Bright.",id:"brightnessValue"+this.domElement.id}]},{xtype:"fieldset",title:"Color",autoHeight:true,style:"padding: 2px",defaultType:"textfield",items:[{fieldLabel:"Color",id:"colorValue"+this.domElement.id}]}]});this.form.render(this.formContainer);var a=Ext.DomHelper.append(this.form.body,{cls:"x-cp-colors-container x-unselectable"},true);this.wsColorContainer=Ext.DomHelper.append(a,{cls:"x-cp-color-container x-unselectable"},true).update(this.config.captions.websafe||"Websafe");this.inColorContainer=Ext.DomHelper.append(a,{cls:"x-cp-color-container x-unselectable"},true).update(this.config.captions.inverse||"Inverse");Ext.DomHelper.append(a,{tag:"div",style:"height:0px;border:none;clear:both;font-size:1px;"});this.form.render(this.formContainer);Ext.DomHelper.append(this.domElement,{tag:"div",style:"height:0px;border:none;clear:both;font-size:1px;"})},realToDec:function(a){return Math.min(255,Math.round(a*256))},hsvToRgb:function(j,u,n){if(j instanceof Array){return this.hsvToRgb.call(this,j[0],j[1],j[2])}var a,k,m,e,l,d,c,o;e=Math.floor((j/60)%6);l=(j/60)-e;d=n*(1-u);c=n*(1-l*u);o=n*(1-(1-l)*u);switch(e){case 0:a=n;k=o;m=d;break;case 1:a=c;k=n;m=d;break;case 2:a=d;k=n;m=o;break;case 3:a=d;k=c;m=n;break;case 4:a=o;k=d;m=n;break;case 5:a=n;k=d;m=c;break}return[this.realToDec(a),this.realToDec(k),this.realToDec(m)]},rgbToHsv:function(a,e,f){if(a instanceof Array){return this.rgbToHsv.call(this,a[0],a[1],a[2])}a=a/255;e=e/255;f=f/255;var c,i,k,d,l,j;c=Math.min(Math.min(a,e),f);i=Math.max(Math.max(a,e),f);k=i-c;switch(i){case c:d=0;break;case a:d=60*(e-f)/k;if(e<f){d+=360}break;case e:d=(60*(f-a)/k)+120;break;case f:d=(60*(a-e)/k)+240;break}l=(i===0)?0:1-(c/i);return[Math.round(d),l,i]},rgbToHex:function(d,c,a){if(d instanceof Array){return this.rgbToHex.call(this,d[0],d[1],d[2])}return this.decToHex(d)+this.decToHex(c)+this.decToHex(a)},decToHex:function(a){a=parseInt(a,10);a=(!isNaN(a))?a:0;a=(a>255||a<0)?0:a;return this.HCHARS.charAt((a-a%16)/16)+this.HCHARS.charAt(a%16)},getHCharPos:function(a){return this.HCHARS.indexOf(a.toUpperCase())},hexToDec:function(b){var a=b.split("");return((this.getHCharPos(a[0])*16)+this.getHCharPos(a[1]))},hexToRgb:function(a){return[this.hexToDec(a.substr(0,2)),this.hexToDec(a.substr(2,2)),this.hexToDec(a.substr(4,2))]},checkSafeNumber:function(a){if(!isNaN(a)){a=Math.min(Math.max(0,a),255);var b,c;for(b=0;b<256;b=b+51){c=b+51;if(a>=b&&a<=c){return(a-b>25)?c:b}}}return a},websafe:function(d,c,a){if(d instanceof Array){return this.websafe.call(this,d[0],d[1],d[2])}return[this.checkSafeNumber(d),this.checkSafeNumber(c),this.checkSafeNumber(a)]},invert:function(d,c,a){if(d instanceof Array){return this.invert.call(this,d[0],d[1],d[2])}return[255-d,255-c,255-a]},getHue:function(b){var a=360-Math.round(((this.huePicker.getHeight()-b)/this.huePicker.getHeight())*360);return a===360?0:a},getHPos:function(a){return a*(this.huePicker.getHeight()/360)},getSaturation:function(a){return a/this.rgbPicker.getWidth()},getSPos:function(a){return a*this.rgbPicker.getWidth()},getValue:function(a){return(this.rgbPicker.getHeight()-a)/this.rgbPicker.getHeight()},getVPos:function(a){return this.rgbPicker.getHeight()-(a*this.rgbPicker.getHeight())},updateColorsFromRGBPicker:function(){this._HSV={h:this._HSV.h,s:this.getSaturation(this.lastXYRgb.x),v:this.getValue(this.lastXYRgb.y)}},updateColorsFromHUEPicker:function(){this._HSV.h=this.getHue(this.lastYHue);var a=this.hsvToRgb(this._HSV.h,1,1);a=this.rgbToHex(a[0],a[1],a[2]);this.rgbPicker.setStyle({backgroundColor:"#"+a})},updateColorsFromRGBFields:function(){var a=this.rgbToHsv(Ext.getCmp("redValue"+this.domElement.id).getValue(),Ext.getCmp("greenValue"+this.domElement.id).getValue(),Ext.getCmp("blueValue"+this.domElement.id).getValue());this._HSV={h:a[0],s:a[1],v:a[2]}},updateColorsFromHexaField:function(){var a=this.hexToRgb(this._HEX);this._RGB={r:a[0],g:a[1],b:a[2]};a=this.rgbToHsv(a[0],a[1],a[2]);this._HSV={h:a[0],s:a[1],v:a[2]}},updateColorsFromHSVFields:function(){var a=this.hsvToRgb(this._HSV.h,this._HSV.s,this._HSV.v);this._RGB={r:a[0],g:a[1],b:a[2]}},updateRGBFromHSV:function(){var a=this.hsvToRgb(this._HSV.h,this._HSV.s,this._HSV.v);this._RGB={r:a[0],g:a[1],b:a[2]}},updateInputFields:function(){Ext.getCmp("redValue"+this.domElement.id).setValue(this._RGB.r);Ext.getCmp("greenValue"+this.domElement.id).setValue(this._RGB.g);Ext.getCmp("blueValue"+this.domElement.id).setValue(this._RGB.b);Ext.getCmp("hueValue"+this.domElement.id).setValue(this._HSV.h);Ext.getCmp("saturationValue"+this.domElement.id).setValue(Math.round(this._HSV.s*100));Ext.getCmp("brightnessValue"+this.domElement.id).setValue(Math.round(this._HSV.v*100));Ext.getCmp("colorValue"+this.domElement.id).setValue(this._HEX)},updateColor:function(){this._HEX=this.rgbToHex(this._RGB.r,this._RGB.g,this._RGB.b);this.colorContainer.setStyle({backgroundColor:"#"+this._HEX});this.colorContainer.set({title:"#"+this._HEX});var a=this.rgbToHex(this.websafe(this._RGB.r,this._RGB.g,this._RGB.b));this.wsColorContainer.setStyle({backgroundColor:"#"+a});this.wsColorContainer.set({title:"#"+a});this.wsColorContainer.setStyle({color:"#"+this.rgbToHex(this.invert(this.websafe(this._RGB.r,this._RGB.g,this._RGB.b)))});var a=this.rgbToHex(this.invert(this._RGB.r,this._RGB.g,this._RGB.b));this.inColorContainer.setStyle({backgroundColor:"#"+a});this.inColorContainer.setStyle({color:"#"+this._HEX});this.inColorContainer.set({title:"#"+a});this.colorContainer.setStyle({color:"#"+a});this.updateInputFields();this.fireEvent("pickcolor",this,this._HEX)},updatePickers:function(){this.lastXYRgb={x:this.getSPos(this._HSV.s),y:this.getVPos(this._HSV.v)};this.rgbPointer.setXY([this.lastXYRgb.x-this.config.pickerHotPoint.x+this.rgbPicker.getLeft(),this.lastXYRgb.y-this.config.pickerHotPoint.y+this.rgbPicker.getTop()],this.config.animate);this.lastYHue=this.getHPos(this._HSV.h);this.huePointer.setXY([this.huePicker.getLeft()+(this.huePointer.getWidth()/2)+1,this.lastYHue+this.huePicker.getTop()-this.config.pickerHotPoint.y],this.config.animate);var a=this.hsvToRgb(this._HSV.h,1,1);a=this.rgbToHex(a[0],a[1],a[2]);this.rgbPicker.setStyle({backgroundColor:"#"+a})},rgbPickerClick:function(a,b){this.lastXYRgb={x:a.getPageX()-this.rgbPicker.getLeft(),y:a.getPageY()-this.rgbPicker.getTop()};this.rgbPointer.setXY([a.getPageX()-this.config.pickerHotPoint.x,a.getPageY()-this.config.pickerHotPoint.y],this.config.animate);this.updateColorsFromRGBPicker();this.updateRGBFromHSV();this.updateColor()},huePickerClick:function(a,b){this.lastYHue=a.getPageY()-this.huePicker.getTop();this.huePointer.setY([a.getPageY()-3],this.config.animate);this.updateColorsFromHUEPicker();this.updateRGBFromHSV();this.updateColor()},changeRGBField:function(b,c,a){if(!(c instanceof String)){c=b.getValue()}if(c<0){c=0}if(c>255){c=255}if(b==Ext.getCmp("redValue"+this.domElement.id)){this._RGB.r=c}else{if(b==Ext.getCmp("greenValue"+this.domElement.id)){this._RGB.g=c}else{if(b==Ext.getCmp("blueValue"+this.domElement.id)){this._RGB.b=c}}}this.updateColorsFromRGBFields();this.updateColor();this.updatePickers();this.fireEvent("changergb",this,this._RGB)},changeHSVField:function(b,c,a){if(!(c instanceof String)){c=b.getValue()}if(b==Ext.getCmp("hueValue"+this.domElement.id)){if(c<0){c=0}if(c>360){c=360}this._HSV.h=c}else{if(c<0){c=0}if(c>100){c=100}if(b==Ext.getCmp("saturationValue"+this.domElement.id)){this._HSV.s=(c/100)}else{if(b==Ext.getCmp("brightnessValue"+this.domElement.id)){this._HSV.v=(c/100)}}}this.updateColorsFromHSVFields();this.updateColor();this.updatePickers();this.fireEvent("changehsv",this,this._HSV)},changeHexaField:function(b,c,a){c=c.trim().substring(0,6);if(c.length===3){c=c[0]+c[0]+c[1]+c[1]+c[2]+c[2]}if(!c.match(/^[0-9a-f]{6}$/i)){c="000000"}this._HEX=c;this.updateColorsFromHexaField();this.updateColor();this.updatePickers();this.fireEvent("changehexa",this,this._HEX)},setColorFromWebsafe:function(){this.setColor(this.wsColorContainer.getColor("backgroundColor","",""))},setColorFromInvert:function(){this.setColor(this.inColorContainer.getColor("backgroundColor","",""))},checkConfig:function(){if(this.config){if(this.config.color){this.setColor(this.config.color)}else{if(this.config.hsv){this.setHSV(this.config.hsv)}else{if(this.config.rgb){this.setRGB(this.config.rgb)}}}}},setColor:function(b){var a=this.hexToRgb(b);this._RGB={r:a[0],g:a[1],b:a[2]};var a=this.rgbToHsv(a);this._HSV={h:a[0],s:a[1],v:a[2]};this.updateColor();this.updatePickers()},setRGB:function(b){this._RGB=b;var a=this.rgbToHsv(b.r,b.g,b.b);this._HSV={h:a[0],s:a[1],v:a[2]};this.updateColor();this.updatePickers()},setHSV:function(b){this._HSV={h:b.h,s:(b.s/100),v:(b.v/100)};var a=this.hsvToRgb(b.h,(b.s/100),(b.v/100));this._RGB={r:a[0],g:a[1],b:a[2]};this.updateColor();this.updatePickers()},getColor:function(a){return(a?"":"#")+this._HEX},getRGB:function(){return this._RGB},getHSV:function(){return this._HSV},setPanelVisible:function(a,b){return this.formContainer.setVisible(a,b)},isPanelVisible:function(){return this.formContainer.isDisplayed()},showPicker:function(){this.domElement.show()},hidePicker:function(){this.domElement.hide()}});Ext.ux.ColorPanel=function(a){this.config=a;this.config.renderTo=this.config.renderTo||Ext.DomHelper.append(document.body,{},true);Ext.ux.ColorPanel.superclass.constructor.call(this,a);this.domElement=Ext.get(this.config.renderTo);this.render(this.domElement);this.config.renderTo=this.body;this.initialize(this.config);this.getEl().addClass("x-cp-panel");this.domElement.removeClass("x-cp-panel");this.body.setStyle({padding:"5px"})};Ext.extend(Ext.ux.ColorPanel,Ext.Panel);Ext.applyIf(Ext.ux.ColorPanel.prototype,Ext.ux.ColorPicker.prototype);Ext.ux.ColorDialog=function(a){this.config=a;this.config.resizable=false;this.config.renderTo=this.config.renderTo||Ext.DomHelper.append(document.body,{},true);Ext.ux.ColorDialog.superclass.constructor.call(this,a);this.domElement=Ext.get(this.config.renderTo);this.render(this.domElement);this.config.renderTo=this.body;this.initialize(this.config);this.body.addClass("x-cp-panel");this.body.setStyle({padding:"5px"});this.setSize(398,300)};Ext.extend(Ext.ux.ColorDialog,Ext.Window);Ext.applyIf(Ext.ux.ColorDialog.prototype,Ext.ux.ColorPicker.prototype);Ext.namespace("Styler");Styler.ColorManager=function(a){Ext.apply(this,a)};Ext.apply(Styler.ColorManager.prototype,{field:null,init:function(a){this.register(a)},destroy:function(){if(this.field){this.unregister(this.field)}},register:function(a){if(this.field){this.unregister(this.field)}this.field=a;a.on({focus:this.fieldFocus,destroy:this.destroy,scope:this})},unregister:function(a){a.un("focus",this.fieldFocus,this);a.un("destroy",this.destroy,this);if(Styler.ColorManager.picker&&a==this.field){Styler.ColorManager.picker.un("pickcolor",this.setFieldValue,this)}this.field=null},fieldFocus:function(a){if(!Styler.ColorManager.pickerWin){Styler.ColorManager.picker=new Ext.ux.ColorPanel({hidePanel:false,autoHeight:false});Styler.ColorManager.pickerWin=new Ext.Window({title:"Color Picker",layout:"fit",closeAction:"hide",width:405,height:300,plain:true,items:Styler.ColorManager.picker})}Styler.ColorManager.picker.purgeListeners();this.setPickerValue();Styler.ColorManager.picker.on({pickcolor:this.setFieldValue,scope:this});Styler.ColorManager.pickerWin.show()},setFieldValue:function(b,a){if(this.field.isVisible()){this.field.setValue("#"+a)}},setPickerValue:function(){var b=this.field;var a=b.getHexValue?b.getHexValue():b.getValue();if(a){Styler.ColorManager.picker.setColor(a.substring(1))}}});(function(){Ext.util.Observable.observeClass(gxp.form.ColorField);gxp.form.ColorField.on({render:function(b){var a=new Styler.ColorManager();a.register(b)}})})();Styler.ColorManager.picker=null;Styler.ColorManager.pickerWin=null;Ext.namespace("GeoExt.ux");GeoExt.ux.PrintPreview=Ext.extend(Ext.Container,{paperSizeText:"Paper size:",resolutionText:"Resolution:",printText:"Print",emptyTitleText:"Enter map title here.",includeLegendText:"Include legend?",emptyCommentText:"Enter comments here.",creatingPdfText:"Creating PDF...",printProvider:null,sourceMap:null,printMapPanel:null,mapTitleField:"mapTitle",commentField:"comment",legend:null,includeLegend:false,mapTitle:null,comment:null,addMapOverlay:true,busyMask:null,form:null,autoEl:"center",cls:"x-panel-body x-panel-body-noheader",initComponent:function(){var a={sourceMap:this.sourceMap,printProvider:this.printProvider};if(this.printMapPanel){if(!(this.printMapPanel instanceof GeoExt.PrintMapPanel)){a.xtype="gx_printmappanel";this.printMapPanel=new GeoExt.PrintMapPanel(Ext.applyIf(this.printMapPanel,a))}}else{this.printMapPanel=new GeoExt.PrintMapPanel(a)}this.sourceMap=this.printMapPanel.sourceMap;this.printProvider=this.printMapPanel.printProvider;this.form=this.createForm();if(!this.items){this.items=[]}this.items.push(this.createToolbar(),{xtype:"container",cls:"gx-printpreview",autoHeight:this.autoHeight,autoWidth:this.autoWidth,items:[this.form,this.printMapPanel]});GeoExt.ux.PrintPreview.superclass.initComponent.call(this);this.addMapOverlay&&this.printMapPanel.add(this.createMapOverlay());this.printMapPanel.on({resize:this.updateSize,scope:this});this.on({render:function(){if(!this.busyMask){this.busyMask=new Ext.LoadMask(this.getEl(),{msg:this.creatingPdfText})}this.printProvider.on({beforeprint:this.busyMask.show,print:this.busyMask.hide,printexception:this.busyMask.hide,scope:this.busyMask})},scope:this})},createToolbar:function(){var a=[];this.printProvider.layouts.getCount()>1&&a.push(this.paperSizeText,{xtype:"combo",width:98,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider}),store:this.printProvider.layouts,displayField:"name",typeAhead:true,mode:"local",forceSelection:true,triggerAction:"all",selectOnFocus:true},"&nbsp;");this.printProvider.dpis.getCount()>1&&a.push(this.resolutionText,{xtype:"combo",width:62,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider}),store:this.printProvider.dpis,displayField:"name",tpl:'<tpl for="."><div class="x-combo-list-item">{name} dpi</div></tpl>',typeAhead:true,mode:"local",forceSelection:true,triggerAction:"all",selectOnFocus:true,setValue:function(b){b=parseInt(b)+" dpi";Ext.form.ComboBox.prototype.setValue.apply(this,arguments)}},"&nbsp;");a.push("->",{text:this.printText,iconCls:"icon-print",handler:function(){this.printMapPanel.print(this.includeLegend&&{legend:this.legend})},scope:this});return{xtype:"toolbar",items:a}},createForm:function(){var a={xtype:"textfield",name:this.mapTitleField,value:this.mapTitle,emptyText:this.emptyTitleText,margins:"0 5 0 0",flex:1,anchor:"100%",hideLabel:true,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider})};if(this.legend){var b=new Ext.form.Checkbox({name:"legend",checked:this.includeLegend,boxLabel:this.includeLegendText,hideLabel:true,ctCls:"gx-item-nowrap",handler:function(c,d){this.includeLegend=d},scope:this})}return new Ext.form.FormPanel({autoHeight:true,border:false,defaults:{anchor:"100%"},items:[this.legend?{xtype:"container",layout:"hbox",cls:"x-form-item",items:[a,b]}:a,{xtype:"textarea",name:this.commentField,value:this.comment,emptyText:this.emptyCommentText,hideLabel:true,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider})}]})},createMapOverlay:function(){var b=this.printMapPanel.map;var a=new OpenLayers.Control.ScaleLine({geodesic:!(b.getProjectionObject()||new OpenLayers.Projection(b.projection||"EPSG:4326")).equals("EPSG:4326")});b.addControl(a);a.activate();return new Ext.Panel({cls:"gx-map-overlay",layout:"column",width:235,bodyStyle:"padding:5px",items:[{xtype:"box",el:a.div,width:a.maxWidth},{xtype:"container",layout:"form",style:"padding: .2em 5px 0 0;",columnWidth:1,cls:"x-small-editor x-form-item",items:{xtype:"combo",name:"scale",anchor:"100%",hideLabel:true,store:this.printMapPanel.previewScales,displayField:"name",typeAhead:true,mode:"local",forceSelection:true,triggerAction:"all",selectOnFocus:true,getListParent:function(){return this.el.up(".x-window")||document.body},plugins:new GeoExt.plugins.PrintPageField({printPage:this.printMapPanel.printPage})}},{xtype:"box",autoEl:{tag:"div",cls:"gx-northarrow"}}],listeners:{render:function(){function c(d){d.stopPropagation()}this.getEl().on({click:c,dblclick:c,mousedown:c})}}})},updateSize:function(){this.suspendEvents();var a=this.printMapPanel.getWidth();this.form.setWidth(a);this.form.items.get(0).setWidth(a);var c=this.initialConfig.minWidth||0;this.items.get(0).setWidth(this.form.ownerCt.el.getPadding("lr")+Math.max(a,c));var b=this.ownerCt;if(b&&b instanceof Ext.Window){this.ownerCt.syncShadow()}this.resumeEvents()},beforeDestroy:function(){if(this.busyMask){this.printProvider.un("beforeprint",this.busyMask.show,this.busyMask);this.printProvider.un("print",this.busyMask.hide,this.busyMask)}this.printMapPanel.un("resize",this.updateSize,this);GeoExt.ux.PrintPreview.superclass.beforeDestroy.apply(this,arguments)}});Ext.reg("gxux_printpreview",GeoExt.ux.PrintPreview);Ext.USE_NATIVE_JSON=true;Ext.override(Ext.dd.DragTracker,{onMouseMove:function(d,c){if(this.active&&Ext.isIE&&!Ext.isIE9&&!d.browserEvent.button){d.preventDefault();this.onMouseUp(d);return}d.preventDefault();var b=d.getXY(),a=this.startXY;this.lastXY=b;if(!this.active){if(Math.abs(a[0]-b[0])>this.tolerance||Math.abs(a[1]-b[1])>this.tolerance){this.triggerStart(d)}else{return}}this.fireEvent("mousemove",this,d);this.onDrag(d);this.fireEvent("drag",this,d)}});(function(){Ext.preg("gx_wmssource",gxp.plugins.WMSSource);Ext.preg("gx_olsource",gxp.plugins.OLSource);Ext.preg("gx_googlesource",gxp.plugins.GoogleSource);Ext.preg("gx_bingsource",gxp.plugins.BingSource);Ext.preg("gx_osmsource",gxp.plugins.OSMSource);Ext.preg("gxp_layertree",gxp.plugins.LayerManager)})();var GeoExplorer=Ext.extend(gxp.Viewer,{zoomSliderText:"<div>Zoom Level: {zoom}</div><div>Scale: 1:{scale}</div>",loadConfigErrorText:"Trouble reading saved configuration: <br />",loadConfigErrorDefaultText:"Server Error.",xhrTroubleText:"Communication Trouble: Status ",layersText:"Layers",titleText:"Title",bookmarkText:"Bookmark URL",permakinkText:"Permalink",appInfoText:"GeoExplorer",aboutText:"About GeoExplorer",mapInfoText:"Map Info",descriptionText:"Description",contactText:"Contact",aboutThisMapText:"About this Map",aboutUrl:"../about.html",mapPanel:null,constructor:function(a){this.mapItems=[{xtype:"gxp_scaleoverlay"},{xtype:"gx_zoomslider",vertical:true,height:100,plugins:new GeoExt.ZoomSliderTip({template:this.zoomSliderText})}];a.viewerTools=[{hidden:true,actions:["layerchooser"],checked:true},{hidden:true,actions:["-"],checked:true},{leaf:true,text:gxp.plugins.Print.prototype.tooltip,ptype:"gxp_print",iconCls:"gxp-icon-print",customParams:{outputFilename:"GeoExplorer-print"},printService:a.printService,checked:true},{leaf:true,text:gxp.plugins.Navigation.prototype.tooltip,checked:true,iconCls:"gxp-icon-pan",ptype:"gxp_navigation",toggleGroup:"navigation"},{leaf:true,text:gxp.plugins.WMSGetFeatureInfo.prototype.infoActionTip,checked:true,iconCls:"gxp-icon-getfeatureinfo",ptype:"gxp_wmsgetfeatureinfo",format:"grid",toggleGroup:"interaction"},{leaf:true,text:gxp.plugins.Measure.prototype.measureTooltip,checked:true,iconCls:"gxp-icon-measure-length",ptype:"gxp_measure",controlOptions:{immediate:true},toggleGroup:"interaction"},{leaf:true,text:gxp.plugins.Zoom.prototype.zoomInTooltip+" / "+gxp.plugins.Zoom.prototype.zoomOutTooltip,checked:true,iconCls:"gxp-icon-zoom-in",ptype:"gxp_zoom"},{leaf:true,text:gxp.plugins.NavigationHistory.prototype.previousTooltip+" / "+gxp.plugins.NavigationHistory.prototype.nextTooltip,checked:true,iconCls:"gxp-icon-zoom-previous",ptype:"gxp_navigationhistory"},{leaf:true,text:gxp.plugins.ZoomToExtent.prototype.tooltip,checked:true,iconCls:gxp.plugins.ZoomToExtent.prototype.iconCls,ptype:"gxp_zoomtoextent"},{leaf:true,text:gxp.plugins.Legend.prototype.tooltip,checked:true,iconCls:"gxp-icon-legend",ptype:"gxp_legend"},{leaf:true,text:gxp.plugins.GoogleEarth.prototype.tooltip,checked:true,iconCls:"gxp-icon-googleearth",ptype:"gxp_googleearth"},{hidden:true,actions:["->"],checked:true},{hidden:true,actions:["aboutbutton"],checked:true}];GeoExplorer.superclass.constructor.apply(this,arguments)},loadConfig:function(b){var e=window.location.hash.substr(1);var a=e.match(/^maps\/(\d+)$/);if(a){this.id=Number(a[1]);Ext.Ajax.request({url:"../"+e,success:function(j){var i=Ext.util.JSON.decode(j.responseText);delete i.tools;this.applyConfig(Ext.applyIf(i,b))},failure:function(j){var k;try{k=Ext.util.JSON.decode(j.responseText)}catch(i){}var l=this.loadConfigErrorText;if(k&&k.error){l+=k.error}else{l+=this.loadConfigErrorDefaultText}this.on({ready:function(){this.displayXHRTrouble(l,j.status)},scope:this});delete this.id;window.location.hash="";this.applyConfig(b)},scope:this})}else{var f=Ext.urlDecode(document.location.search.substr(1));if(f){if(f.q){var h=Ext.util.JSON.decode(f.q);Ext.apply(b,h)}if(f.layers){var g=f.layers.split(/\s*,\s*/);for(var c=0,d=g.length;c<d;++c){b.map.layers.push({source:"local",name:g[c],visibility:true,bbox:f.lazy&&f.bbox?f.bbox.split(","):undefined})}}if(f.bbox){delete b.map.zoom;delete b.map.center;b.map.extent=f.bbox.split(/\s*,\s*/)}if(f.lazy&&b.sources.local){b.sources.local.requiredProperties=[]}}this.applyConfig(b)}},displayXHRTrouble:function(b,a){Ext.Msg.show({title:this.xhrTroubleText+a,msg:b,icon:Ext.MessageBox.WARNING})},initPortal:function(){this.createTools();GeoExplorer.superclass.initPortal.apply(this,arguments)},createTools:function(){new Ext.Button({id:"aboutbutton",text:this.appInfoText,iconCls:"icon-geoexplorer",handler:this.displayAppInfo,scope:this})},showUrl:function(b){if(b.status==200){var c=new Ext.Window({title:this.bookmarkText,layout:"form",labelAlign:"top",modal:true,bodyStyle:"padding: 5px",width:300,items:[{xtype:"textfield",fieldLabel:this.permakinkText,readOnly:true,anchor:"100%",selectOnFocus:true,value:window.location.href}]});c.show();c.items.first().selectText()}else{var a=Ext.util.JSON.decode(b.responseText);this.displayXHRTrouble(a.error,b.status)}},getBookmark:function(){var b=Ext.apply(OpenLayers.Util.getParameters(),{q:Ext.util.JSON.encode(this.getState())});var a=document.location.href.split("?").shift()+"?"+Ext.urlEncode(b);return a},displayAppInfo:function(){var c=new Ext.Panel({title:this.appInfoText,html:"<iframe style='border: none; height: 100%; width: 100%' src='"+this.aboutUrl+"' frameborder='0' border='0'><a target='_blank' href='"+this.aboutUrl+"'>"+this.aboutText+"</a> </iframe>"});var b=Ext.applyIf(this.about,{title:"","abstract":"",contact:""});var e=new Ext.Panel({title:this.mapInfoText,html:'<div class="gx-info-panel"><h2>'+this.titleText+"</h2><p>"+b.title+"</p><h2>"+this.descriptionText+"</h2><p>"+b["abstract"]+"</p> <h2>"+this.contactText+"</h2><p>"+b.contact+"</p></div>",height:"auto",width:"auto"});var a=new Ext.TabPanel({activeTab:0,items:[e,c]});var d=new Ext.Window({title:this.aboutThisMapText,modal:true,layout:"fit",width:300,height:300,items:[a]});d.show()},getState:function(){var a=GeoExplorer.superclass.getState.apply(this,arguments);delete a.tools;return a}});GeoExplorer.Composer=Ext.extend(GeoExplorer,{cookieParamName:"geoexplorer-user",mapText:"Map",saveMapText:"Save map",exportMapText:"Export map",toolsTitle:"Choose tools to include in the toolbar:",previewText:"Preview",backText:"Back",nextText:"Next",loginText:"Login",logoutText:"Logout, {user}",loginErrorText:"Invalid username or password.",userFieldText:"User",passwordFieldText:"Password",tableText:"Table",queryText:"Query",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?",constructor:function(a){if(a.authStatus===401){this.authorizedRoles=[]}else{if(a.authStatus!==404){this.authorizedRoles=["ROLE_ADMINISTRATOR"]}}delete a.authStatus;a.tools=[{ptype:"gxp_layermanager",outputConfig:{id:"layers",tbar:[],autoScroll:true},outputTarget:"tree"},{ptype:"gxp_addlayers",actionTarget:"layers.tbar",outputTarget:"tree",uploadSource:"local",postUploadAction:{plugin:"styler"},catalogSourceKey:"local",search:{selectedSource:"csw"}},{ptype:"gxp_removelayer",actionTarget:["layers.tbar","layers.contextMenu"]},{ptype:"gxp_layerproperties",id:"layerproperties",outputConfig:{defaults:{autoScroll:true},width:320},actionTarget:["layers.tbar","layers.contextMenu"],outputTarget:"tree"},{ptype:"gxp_styler",id:"styler",outputConfig:{autoScroll:true,width:320},actionTarget:["layers.tbar","layers.contextMenu"],outputTarget:"tree"},{ptype:"gxp_zoomtolayerextent",actionTarget:{target:"layers.contextMenu",index:0}},{ptype:"gxp_googleearth",actionTarget:["map.tbar","globe.tbar"]},{ptype:"gxp_navigation",toggleGroup:"navigation"},{ptype:"gxp_zoom",toggleGroup:"navigation",showZoomBoxAction:true,controlOptions:{zoomOnClick:false}},{ptype:"gxp_navigationhistory"},{ptype:"gxp_zoomtoextent"},{actions:["aboutbutton"],actionTarget:"paneltbar"},{actions:["-"],actionTarget:"paneltbar"},{actions:["mapmenu"],actionTarget:"paneltbar"},{ptype:"gxp_print",customParams:{outputFilename:"GeoExplorer-print"},printService:a.printService,actionTarget:"paneltbar",showButtonText:true},{actions:["-"],actionTarget:"paneltbar"},{ptype:"gxp_wmsgetfeatureinfo",format:"grid",toggleGroup:"interaction",showButtonText:true,actionTarget:"paneltbar"},{ptype:"gxp_featuremanager",id:"querymanager",selectStyle:{cursor:""},autoLoadFeatures:true,maxFeatures:50,paging:true,pagingType:gxp.plugins.FeatureManager.WFS_PAGING},{ptype:"gxp_queryform",featureManager:"querymanager",autoExpand:"query",actionTarget:"paneltbar",outputTarget:"query"},{ptype:"gxp_featuregrid",featureManager:"querymanager",showTotalResults:true,autoLoadFeature:false,alwaysDisplayOnMap:true,controlOptions:{multiple:true},displayMode:"selected",outputTarget:"table",outputConfig:{id:"featuregrid",columnsSortable:false}},{ptype:"gxp_zoomtoselectedfeatures",featureManager:"querymanager",actionTarget:["featuregrid.contextMenu","featuregrid.bbar"]},{ptype:"gxp_measure",toggleGroup:"interaction",controlOptions:{immediate:true},showButtonText:true,actionTarget:"paneltbar"},{ptype:"gxp_featuremanager",id:"featuremanager",maxFeatures:20,paging:false},{ptype:"gxp_featureeditor",featureManager:"featuremanager",autoLoadFeature:true,splitButton:true,showButtonText:true,toggleGroup:"interaction",actionTarget:"paneltbar"},{actions:["->"],actionTarget:"paneltbar"},{actions:["loginbutton"],actionTarget:"paneltbar"}];GeoExplorer.Composer.superclass.constructor.apply(this,arguments)},loadConfig:function(a){GeoExplorer.Composer.superclass.loadConfig.apply(this,arguments);var c=Ext.urlDecode(document.location.search.substr(1));if(c&&c.styler){for(var b=a.map.layers.length-1;b>=0;--b){delete a.map.layers[b].selected}a.map.layers.push({source:"local",name:c.styler,selected:true,bbox:c.lazy&&c.bbox?c.bbox.split(","):undefined});this.on("layerselectionchange",function(g){var f=this.tools.styler,d=g.getLayer(),e=d.maxExtent;if(e&&!c.bbox){this.mapPanel.map.zoomToExtent(e)}this.doAuthorized(f.roles,f.addOutput,f)},this,{single:true})}},setCookieValue:function(b,a){document.cookie=b+"="+escape(a)},clearCookieValue:function(a){document.cookie=a+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/"},getCookieValue:function(d){var b,a,e,c=document.cookie.split(";");for(b=0;b<c.length;b++){a=c[b].substr(0,c[b].indexOf("="));e=c[b].substr(c[b].indexOf("=")+1);a=a.replace(/^\s+|\s+$/g,"");if(a==d){return unescape(e)}}return null},logout:function(){var a=function(){this.clearCookieValue("JSESSIONID");this.clearCookieValue(this.cookieParamName);this.setAuthorizedRoles([]);window.location.reload()};Ext.Msg.show({title:this.logoutConfirmTitle,msg:this.logoutConfirmMessage,buttons:Ext.Msg.YESNOCANCEL,icon:Ext.MessageBox.WARNING,fn:function(b){if(b==="yes"){this.save(a,this)}else{if(b==="no"){a.call(this)}}},scope:this})},authenticate:function(){var b=new Ext.FormPanel({url:"../login/",frame:true,labelWidth:60,defaultType:"textfield",errorReader:{read:function(e){var f=false;var d=[];if(e.status===200){f=true}else{d=[{data:{id:"username",msg:this.loginErrorText}},{data:{id:"password",msg:this.loginErrorText}}]}return{success:f,records:d}}},items:[{fieldLabel:this.userFieldText,name:"username",width:137,allowBlank:false,listeners:{render:function(){this.focus(true,100)}}},{fieldLabel:this.passwordFieldText,name:"password",width:137,inputType:"password",allowBlank:false}],buttons:[{text:this.loginText,formBind:true,handler:a,scope:this}],keys:[{key:[Ext.EventObject.ENTER],handler:a,scope:this}]});function a(){b.buttons[0].disable();b.getForm().submit({success:function(e,f){Ext.getCmp("paneltbar").items.each(function(g){if(g.needsAuthorization===true){g.enable()}});var d=e.findField("username").getValue();this.setCookieValue(this.cookieParamName,d);this.setAuthorizedRoles(["ROLE_ADMINISTRATOR"]);this.showLogout(d);c.un("beforedestroy",this.cancelAuthentication,this);c.close()},failure:function(d,e){this.authorizedRoles=[];b.buttons[0].enable();d.markInvalid({username:this.loginErrorText,password:this.loginErrorText})},scope:this})}var c=new Ext.Window({title:this.loginText,layout:"fit",width:235,height:130,plain:true,border:false,modal:true,items:[b],listeners:{beforedestroy:this.cancelAuthentication,scope:this}});c.show()},applyLoginState:function(b,e,d,c){var a=Ext.getCmp("loginbutton");a.setIconClass(b);a.setText(e);a.setHandler(d,c)},showLogin:function(){var b=this.loginText;var a=this.authenticate;this.applyLoginState("login",b,a,this)},showLogout:function(a){var c=new Ext.Template(this.logoutText).applyTemplate({user:a});var b=this.logout;this.applyLoginState("logout",c,b,this)},initPortal:function(){var e=new gxp.CrumbPanel({id:"tree",region:"west",width:320,split:true,collapsible:true,collapseMode:"mini",hideCollapseTool:true,header:false});var d=new Ext.Panel({region:"south",id:"south",height:220,border:false,split:true,collapsible:true,collapseMode:"mini",collapsed:true,hideCollapseTool:true,header:false,layout:"border",items:[{region:"center",id:"table",title:this.tableText,layout:"fit"},{region:"west",width:320,id:"query",title:this.queryText,split:true,collapsible:true,collapseMode:"mini",collapsed:true,hideCollapseTool:true,layout:"fit"}]});var b=new Ext.Toolbar({disabled:true,id:"paneltbar",items:[]});this.on("ready",function(){var f=b.items.filterBy(function(g){return g.initialConfig&&g.initialConfig.disabled});b.enable();f.each(function(g){g.disable()})});var a=new gxp.GoogleEarthPanel({mapPanel:this.mapPanel,id:"globe",tbar:[],listeners:{beforeadd:function(f){return f.get("group")!=="background"}}});var c=[];a.on("show",function(){c.length=0;b.items.each(function(j){if(j.disabled){c.push(j)}});b.disable();for(var g in this.tools){var f=this.tools[g];if(f.outputTarget==="map"){f.removeOutput()}}var h=Ext.getCmp("tree");var i=h&&h.getTopToolbar();if(i){i.items.each(function(j){if(j.disabled){c.push(j)}});i.disable()}},this);a.on("hide",function(){b.enable();var h=Ext.getCmp("tree");var j=h&&h.getTopToolbar();if(j){j.enable()}for(var f=0,g=c.length;f<g;++f){c[f].disable()}},this);this.mapPanelContainer=new Ext.Panel({layout:"card",region:"center",defaults:{border:false},items:[this.mapPanel,a],activeItem:0});this.portalItems=[{region:"center",layout:"border",tbar:b,items:[this.mapPanelContainer,e,d]}];GeoExplorer.Composer.superclass.initPortal.apply(this,arguments)},createTools:function(){GeoExplorer.Composer.superclass.createTools.apply(this,arguments);new Ext.Button({id:"loginbutton"});if(this.authorizedRoles){if(this.authorizedRoles.length===0){this.showLogin()}else{var a=this.getCookieValue(this.cookieParamName);if(a===null){a="unknown"}this.showLogout(a)}}new Ext.Button({id:"mapmenu",text:this.mapText,iconCls:"icon-map",menu:new Ext.menu.Menu({items:[{text:this.exportMapText,handler:function(){this.doAuthorized(["ROLE_ADMINISTRATOR"],function(){this.save(this.showEmbedWindow)},this)},scope:this,iconCls:"icon-export"},{text:this.saveMapText,handler:function(){this.doAuthorized(["ROLE_ADMINISTRATOR"],function(){this.save(this.showUrl)},this)},scope:this,iconCls:"icon-save"}]})})},openPreview:function(b){var d=new Ext.Window({title:this.previewText,layout:"fit",resizable:false,items:[{border:false,html:b.getIframeHTML()}]});d.show();var a=d.items.get(0).body;var c=a.dom.firstChild;var e=new Ext.LoadMask(a);e.show();Ext.get(c).on("load",function(){e.hide()})},showEmbedWindow:function(){var d=new Ext.tree.TreePanel({title:this.toolsTitle,autoScroll:true,root:{nodeType:"async",expanded:true,children:this.viewerTools},rootVisible:false,id:"geobuilder-0"});var b=function(h){var e=Ext.getCmp("geobuilder-wizard-panel").getLayout();var f=e.activeItem.id.split("geobuilder-")[1];var g=parseInt(f,10)+h;e.setActiveItem(g);Ext.getCmp("wizard-prev").setDisabled(g==0);Ext.getCmp("wizard-next").setDisabled(g==1);if(h==1){this.save()}};var a=new gxp.EmbedMapDialog({id:"geobuilder-1",url:"../viewer/#maps/"+this.id});var c={id:"geobuilder-wizard-panel",border:false,layout:"card",activeItem:0,defaults:{border:false,hideMode:"offsets"},bbar:[{id:"preview",text:this.previewText,handler:function(){this.save(this.openPreview.createDelegate(this,[a]))},scope:this},"->",{id:"wizard-prev",text:this.backText,handler:b.createDelegate(this,[-1]),scope:this,disabled:true},{id:"wizard-next",text:this.nextText,handler:b.createDelegate(this,[1]),scope:this}],items:[d,a]};new Ext.Window({layout:"fit",width:500,height:300,title:this.exportMapText,items:[c]}).show()}});Ext.namespace("GeoExplorer");GeoExplorer.Viewer=Ext.extend(GeoExplorer,{applyConfig:function(a){var d=a.viewerTools||this.viewerTools;var c=[];var g;for(var b=0,f=d.length;b<f;b++){var e=d[b];if(e.checked===true){var h=["checked","iconCls","id","leaf","loader","text"];for(var j in h){delete e[h[j]]}g=Ext.applyIf({actionTarget:"paneltbar"},e);c.push(g)}}a.tools=c;GeoExplorer.Viewer.superclass.applyConfig.call(this,a)},initPortal:function(){this.toolbar=new Ext.Toolbar({disabled:true,id:"paneltbar"});this.on("ready",function(){this.toolbar.enable()},this);this.mapPanelContainer=new Ext.Panel({layout:"card",region:"center",defaults:{border:false},items:[this.mapPanel,new gxp.GoogleEarthPanel({mapPanel:this.mapPanel,listeners:{beforeadd:function(a){return a.get("group")!=="background"}}})],activeItem:0});this.portalItems=[{region:"center",layout:"border",tbar:this.toolbar,items:[this.mapPanelContainer]}];GeoExplorer.Viewer.superclass.initPortal.apply(this,arguments)},createTools:function(){GeoExplorer.Viewer.superclass.createTools.apply(this,arguments);Ext.getCmp("aboutbutton").setText(null).setIconClass("icon-about");new Ext.Button({id:"layerchooser",tooltip:"Layer Switcher",iconCls:"icon-layer-switcher",menu:new gxp.menu.LayerMenu({layers:this.mapPanel.layers})})}});Ext.namespace("GeoExt");GeoExt.Lang=new (Ext.extend(Ext.util.Observable,{locale:navigator.language||navigator.userLanguage,dict:null,constructor:function(){this.addEvents("localize");this.dict={};Ext.util.Observable.constructor.apply(this,arguments)},add:function(a,d){var c=this.dict[a];if(!c){this.dict[a]=Ext.apply({},d)}else{for(var b in d){c[b]=Ext.apply(c[b]||{},d[b])}}if(!a||a===this.locale){this.set(a)}else{if(this.locale.indexOf(a+"-")===0){this.set(this.locale)}}},set:function(j){var m=j?j.split("-"):[];var b="";var c={},k;for(var g=0,l=m.length;g<l;++g){b+=(b&&"-"||"")+m[g];if(b in this.dict){k=this.dict[b];for(var h in k){if(h in c){Ext.apply(c[h],k[h])}else{c[h]=Ext.apply({},k[h])}}}}for(var h in c){var f=window;var d=h.split(".");var e=false;for(var g=0,l=d.length;g<l;++g){var a=d[g];if(a in f){f=f[a]}else{e=true;break}}if(!e){Ext.apply(f,c[h])}}this.locale=j;this.fireEvent("localize",j)}}))();GeoExt.Lang.add("ca",{"GeoExplorer.prototype":{zoomSliderText:"<div>Grau de detall: {zoom}</div><div>Escala: 1:{scale}</div>",loadConfigErrorText:"Problemes llegint la configuració desada: <br />",loadConfigErrorDefaultText:"Error del servidor.",xhrTroubleText:"Problemes de comunicació. Estat ",layersText:"Capes",titleText:"Títol",bookmarkText:"URL del marcador",permakinkText:"Enllaç permanent",appInfoText:"GeoExplorer",aboutText:"Quant a GeoExplorer",mapInfoText:"Informació del mapa",descriptionText:"Descripció",contactText:"Contacte",aboutThisMapText:"Quant a aquest mapa"},"GeoExplorer.Composer.prototype":{mapText:"Mapa",tableText:"Table",queryText:"Query",exportMapText:"Exporta el Mapa",saveMapText:"Desa el Mapa",toolsTitle:"Escolliu els elements que desitgeu incloure a la barra d'eines:",previewText:"Vista prèvia",backText:"Anterior",nextText:"Següent",loginText:"Login",loginErrorText:"Invalid username or password.",userFieldText:"User",passwordFieldText:"Password",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?"}});GeoExt.Lang.add("de",{"GeoExplorer.prototype":{zoomSliderText:"<div>Zoomstufe: {zoom}</div><div>Maßstab: 1:{scale}</div>",loadConfigErrorText:"Gespeicherte Konfiguration kann nicht gelesen werden: <br />",loadConfigErrorDefaultText:"Server Fehler.",xhrTroubleText:"Kommunikationsfehler: Status ",layersText:"Layer",titleText:"Titel",zoomLevelText:"Zoomstufe",bookmarkText:"Bookmark URL",permakinkText:"Permalink",appInfoText:"GeoExplorer",aboutText:"Über GeoExplorer",mapInfoText:"Karteninfo",descriptionText:"Beschreibung",contactText:"Kontakt",aboutThisMapText:"Über diese Karte"},"GeoExplorer.Composer.prototype":{mapText:"Karte",tableText:"Tabelle",queryText:"Abfrage",exportMapText:"Karte veröffentlichen",saveMapText:"Karte speichern",toolsTitle:"Werkzeuge, die in der Werkzeugleiste zur Verfügung stehen sollen:",previewText:"Vorschau",backText:"Zurück",nextText:"Weiter",loginText:"Login",loginErrorText:"Ungültiger Benutzername oder ungültiges Kennwort.",userFieldText:"Benutzer",passwordFieldText:"Kennwort",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?"}});GeoExt.Lang.add("en",{"GeoExplorer.prototype":{zoomSliderText:"<div>Zoom Level: {zoom}</div><div>Scale: 1:{scale}</div>",loadConfigErrorText:"Trouble reading saved configuration: <br />",loadConfigErrorDefaultText:"Server Error.",xhrTroubleText:"Communication Trouble: Status ",layersText:"Layers",titleText:"Title",zoomLevelText:"Zoom level",bookmarkText:"Bookmark URL",permakinkText:"Permalink",appInfoText:"GeoExplorer",aboutText:"About GeoExplorer",mapInfoText:"Map info",descriptionText:"Description",contactText:"Contact",aboutThisMapText:"About this map"},"GeoExplorer.Composer.prototype":{mapText:"Map",tableText:"Table",queryText:"Query",exportMapText:"Publish map",saveMapText:"Save map",toolsTitle:"Choose tools to include in the toolbar:",previewText:"Preview",backText:"Back",nextText:"Next",loginText:"Login",loginErrorText:"Invalid username or password.",userFieldText:"User",passwordFieldText:"Password",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?"}});GeoExt.Lang.add("es",{"GeoExplorer.prototype":{zoomSliderText:"<div>Nivel de detalle: {zoom}</div><div>Escala: 1:{scale}</div>",loadConfigErrorText:"Problemas leyendo la configuración guardada: <br />",loadConfigErrorDefaultText:"Error del servidor.",xhrTroubleText:"Problemas de comunicación: Estado ",layersText:"Capas",titleText:"Título",bookmarkText:"URL del marcador",permakinkText:"Enlace permanente",appInfoText:"GeoExplorer",aboutText:"Acerca de GeoExplorer",mapInfoText:"Información del mapa",descriptionText:"Descripción",contactText:"Contacto",aboutThisMapText:"Acerca de este mapa"},"GeoExplorer.Composer.prototype":{mapText:"Mapa",tableText:"Table",queryText:"Query",exportMapText:"Exportar Mapa",saveMapText:"Guardar Mapa",toolsTitle:"Escoja los elementos que desea incluir en la barra de herramientas:",previewText:"Vista previa",backText:"Anterior",nextText:"Siguiente",loginText:"Login",loginErrorText:"Invalid username or password.",userFieldText:"User",passwordFieldText:"Password",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?"}});GeoExt.Lang.add("fr",{"GeoExplorer.prototype":{zoomSliderText:"<div> Niveau de zoom: {zoom}</div><div Echelle: 1:{scale}</div>",loadConfigErrorText:"Difficulté à lire configuration enregistrée: <br>",loadConfigErrorDefaultText:"Erreur du serveur.",xhrTroubleText:"Trouble de la communication: état",layersText:"Layers",titleText:"Titre",bookmarkText:"Mettre en favori URL",permakinkText:"Permalink",appInfoText:"GeoExplorer",aboutText:"À propos de GeoExplorer",mapInfoText:"Info carte",descriptionText:"Description",contactText:"Contact",aboutThisMapText:"À propos de cette carte"},"GeoExplorer.Composer.prototype":{mapText:"Carte",tableText:"Table",queryText:"Query",exportMapText:"Carte Export",saveMapText:"Enregistrez la carte",toolsTitle:"Choose tools to include in the toolbar:",previewText:"Preview",backText:"Back",nextText:"Next",loginText:"Login",loginErrorText:"Invalid username or password.",userFieldText:"User",passwordFieldText:"Password",logoutConfirmTitle:"Warning",logoutConfirmMessage:"Logging out will undo any unsaved changes, remove any layers you may have added, and reset the map composition. Do you want to save your composition first?"}});GeoExt.Lang.add("no",{"GeoExplorer.prototype":{zoomSliderText:"<div>Zoom nivå: {zoom}</div><div>Målestokk: 1:{scale}</div>",loadConfigErrorText:"Problemer med å lese lagret konfigurasjon: <br />",loadConfigErrorDefaultText:"Server Feil.",xhrTroubleText:"Kommunikasjons Problem: Status ",layersText:"Kartlag",titleText:"Titel",zoomLevelText:"Zoom nivå",bookmarkText:"Bokmerk URL",permakinkText:"Permalenke",appInfoText:"GeoExplorer",aboutText:"Om GeoExplorer",mapInfoText:"Kart Info",descriptionText:"Beskrivelse",contactText:"Kontakt",aboutThisMapText:"Om dette kartet"},"GeoExplorer.Composer.prototype":{mapText:"Kart",tableText:"Tabell",queryText:"Spørring",exportMapText:"Publiser kart",saveMapText:"Lagre kart",toolsTitle:"Velg verktøy og legge til i verktøyslinjen:",previewText:"Forhåndsvisning",backText:"Tilbake",nextText:"Neste",loginText:"Login",loginErrorText:"Ugylding brukernavn eller passord.",userFieldText:"Bruker",passwordFieldText:"Passord",logoutConfirmTitle:"Advarsel",logoutConfirmMessage:"Logge ut vil fjerne siste endringer, fjerne kartlag du har lagt til, og tilbakestille kart komposisjonen. Vil du lagre din komposisjon først?"}});GeoExt.Lang.add("ca",{"gxp.menu.LayerMenu.prototype":{layerText:"Capa"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Afegeix Capes",addActionTip:"Afegeix Capes",addServerText:"Afegeix servidor",addButtonText:"Afegeix Capes",untitledText:"Sense Títol",addLayerSourceErrorText:"Error obtenint les capabilities del WMS ({msg}).\nSi us plau, comproveu la URL i torneu-ho a intentar.",availableLayersText:"Capes disponibles",expanderTemplateText:"<p><b>Resum:</b> {abstract}</p>",panelTitleText:"Títol",layerSelectionText:"Veure dades disponibles de:",doneText:"Fet",uploadText:"Puja dades",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Capes Bing",roadTitle:"Bing Carrerer",aerialTitle:"Bing Fotografia Aèria",labeledAerialTitle:"Bing Fotografia Aèria amb Etiquetes"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Crea nou element",editFeatureActionTip:"Edita element existent",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Mostra al mapa",firstPageTip:"Primera pàgina",previousPageTip:"Pàgina anterior",zoomPageExtentTip:"Ajusta vista a l'extensió de la pàgina",nextPageTip:"Pàgina següent",lastPageTip:"Pàgina anterior",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"Vista 3D",tooltip:"Vista 3D"},"gxp.plugins.GoogleSource.prototype":{title:"Capes Google",roadmapAbstract:"Mostra carrerer",satelliteAbstract:"Mostra imatges de satèl·lit",hybridAbstract:"Mostra imatges amb noms de carrer",terrainAbstract:"Mostra carrerer amb terreny"},"gxp.plugins.LayerProperties.prototype":{menuText:"Propietats de la capa",toolTip:"Propietats de la capa"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Capes",rootNodeText:"Capes",overlayNodeText:"Capes addicionals",baseNodeText:"Capa base"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Capa base"},"gxp.plugins.Legend.prototype":{menuText:"Mostra Llegenda",tooltip:"Mostra Llegenda"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Loading Map..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Mesura",lengthMenuText:"Longitud",areaMenuText:"Àrea",lengthTooltip:"Mesura Longitud",areaTooltip:"Mesura Àrea",measureTooltip:"Mesura"},"gxp.plugins.Navigation.prototype":{menuText:"Desplaça mapa",tooltip:"Desplaça mapa"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Vista anterior",nextMenuText:"Vista següent",previousTooltip:"Vista anterior",nextTooltip:"Vista següent"},"gxp.plugins.OSMSource.prototype":{title:"Capes OpenStreetMap",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Daded CC-By-SA de <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Imprimeix",menuText:"Imprimeix mapa",tooltip:"Imprimeix mapa",previewText:"Vista prèvia",notAllNotPrintableText:"No es poden imprimir totes les capes",nonePrintableText:"No es pot imprimir cap de les capes del mapa"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Layers",osmAttribution:"Tessel·les cortesia de <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tessel·les cortesia de <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imatge"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Consulta",queryMenuText:"Consulta layer",queryActionTip:"Consulta la capa sel·leccionada",queryByLocationText:"Query by current map extent",queryByAttributesText:"Consulta per atributs",queryMsg:"Consultant...",cancelButtonText:"Cancel·la",noFeaturesTitle:"Sense coincidències",noFeaturesMessage:"La vostra consulta no ha produït resultats."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Elimina Capa",removeActionTip:"Elimina Capa"},"gxp.plugins.Styler.prototype":{menuText:"Edita Estils",tooltip:"Gestiona els estils de les capes"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Consulta elements",popupTitle:"Informació dels elements"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Apropa",zoomOutMenuText:"Allunya",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Apropa",zoomOutTooltip:"Allunya"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Mostra l'extensió total",tooltip:"Mostra l'extensió total"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Mostra tota la capa",tooltip:"Mostra tota la capa"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Mostra tota la capa",tooltip:"Mostra tota la capa"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Mostra els elements seleccionats",tooltip:"Mostra els elements seleccionats"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Desitgeu desar els canvis?",closeMsg:"Els canvis en aquest element no s'han desat. Desitja desar-los?",deleteMsgTitle:"Desitgeu esborrar l'element?",deleteMsg:"Esteu segurs de voler esborrar aquest element?",editButtonText:"Edita",editButtonTooltip:"Fes que aquest element sigui editable",deleteButtonText:"Esborra",deleteButtonTooltip:"Esborra aquest element",cancelButtonText:"Cancel·la",cancelButtonTooltip:"Deixa d'editar, descarta els canvis",saveButtonText:"Desa",saveButtonTooltip:"Desa els canvis"},"gxp.FillSymbolizer.prototype":{fillText:"Farcit",colorText:"Color",opacityText:"Opacitat"},"gxp.FilterBuilder.prototype":{builderTypeNames:["alguna de","totes","cap de","no totes"],preComboText:"Acompleix",postComboText:"les condicions següents:",addConditionText:"afegeix condició",addGroupText:"afegeix grup",removeConditionText:"treu condició"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Nom",titleHeaderText:"Títol",queryableHeaderText:"Consultable",layerSelectionLabel:"Llista les capes de:",layerAdditionLabel:"o afegeix un altre servidor.",expanderTemplateText:"<p><b>Resum:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"cercle",graphicSquareText:"quadrat",graphicTriangleText:"triangle",graphicStarText:"estrella",graphicCrossText:"creu",graphicXText:"x",graphicExternalText:"extern",urlText:"URL",opacityText:"opacitat",symbolText:"Símbol",sizeText:"Mides",rotationText:"Gir"},"gxp.QueryPanel.prototype":{queryByLocationText:"Consulta per lloc",currentTextText:"Vista actual",queryByAttributesText:"Consulta per atributs",layerText:"Capa"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Escala 1:{scale}",labelFeaturesText:"Etiqueta elements",labelsText:"Etiquetes",basicText:"Bàsic",advancedText:"Avançat",limitByScaleText:"Restringeix per escala",limitByConditionText:"Restringeix per condició",symbolText:"Símbol",nameText:"Nom"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Escala 1:{scale}",minScaleLimitText:"Escala mínima",maxScaleLimitText:"Escala màxima"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"continu",dashStrokeName:"guions",dotStrokeName:"punts",titleText:"Traç",styleText:"Estil",colorText:"Color",widthText:"Amplada",opacityText:"Opacitad"},"gxp.StylePropertiesDialog.prototype":{titleText:"General",nameFieldText:"Nom",titleFieldText:"Títol",abstractFieldText:"Resum"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Etiquetatge",haloText:"Halo",sizeText:"Mida"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"Quant a",titleText:"Títol",nameText:"Nom",descriptionText:"Descripció",displayText:"Mostra",opacityText:"Opacitat",formatText:"Format",transparentText:"Transparent",cacheText:"Caché",cacheFieldText:"Utiliza la versió en caché",stylesText:"Estils disponibles",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Ja podeu incloure el vostre mapa a altres webs! Simplement copieu el següent codi HTML allà on desitgeu incrustar-ho:",heightLabel:"Alçària",widthLabel:"Amplada",mapSizeLabel:"Mida",miniSizeLabel:"Mínima",smallSizeLabel:"Petita",premiumSizeLabel:"Premium",largeSizeLabel:"Gran"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Afegeix",addStyleTip:"Afegeix nou estil",chooseStyleText:"Escull estil",deleteStyleText:"Treu",deleteStyleTip:"Esborra l'estil sel·leccionat",editStyleText:"Canvia",editStyleTip:"Edita l'estil sel·leccionat",duplicateStyleText:"Clona",duplicateStyleTip:"Duplica l'estil sel·leccionat",addRuleText:"Afegeix",addRuleTip:"Afegeix nova regla",newRuleText:"Nova regla",deleteRuleText:"Treu",deleteRuleTip:"Esborra la regla sel·leccionada",editRuleText:"Edita",editRuleTip:"Edita la regla sel·leccionada",duplicateRuleText:"Clona",duplicateRuleTip:"Duplica la regla sel·leccionada",cancelText:"Cancel·la",saveText:"Desa",styleWindowTitle:"Estil: {0}",ruleWindowTitle:"Regla: {0}",stylesFieldsetTitle:"Estils",rulesFieldsetTitle:"Regles"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Títol",titleEmptyText:"Títol de la capa",abstractLabel:"Descripció",abstractEmptyText:"Descripció de la capa",fileLabel:"Dades",fieldEmptyText:"Navegueu per les dades...",uploadText:"Puja",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Pugeu les vostres dades...",invalidFileExtensionText:"L'extensió del fitxer ha de ser alguna d'aquestes: ",optionsText:"Opcions",workspaceLabel:"Espai de treball",workspaceEmptyText:"Espai de treball per defecte",dataStoreLabel:"Magatzem",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Magatzem de dades per defecte"},"gxp.NewSourceDialog.prototype":{title:"Afegeix Servidor...",cancelText:"Cancel·la",addServerText:"Afegeix Servidor",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Connectant amb el Servidor..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Escala"},"gxp.Viewer.prototype":{saveErrorText:"Problemes desant: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Font",addPicasaText:"Picasa fotos",addYouTubeText:"YouTube Videos",addRSSText:"Feed GeoRSS Un altre",addFeedText:"Afegeix a Mapa",addTitleText:"Títol",keywordText:"Paraula clau",doneText:"Fet",titleText:"Afegir Feeds",maxResultsText:"Productes Max"}});GeoExt.Lang.add("de",{"gxp.menu.LayerMenu.prototype":{layerText:"Layer"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Layer hinzufügen",addActionTip:"Layer hinzufügen",addServerText:"Server hinzufügen",addButtonText:"Layer hinzufügen",untitledText:"ohne Titel",addLayerSourceErrorText:"Fehler beim Abfragen der WMS Capabilities ({msg}).\nBitte URL prüfen und erneut versuchen.",availableLayersText:"verfügbare Layer",expanderTemplateText:"<p><b>Kurzbeschreibung:</b> {abstract}</p>",panelTitleText:"Titel",layerSelectionText:"Verfügbare Daten anzeigen von:",doneText:"Fertig",uploadText:"Daten hochladen",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Bing Layer",roadTitle:"Bing Strassen",aerialTitle:"Bing Luftbilder",labeledAerialTitle:"Bing Luftbilder mit Beschriftung"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Editieren",createFeatureActionText:"Erzeugen",editFeatureActionText:"Bearbeiten",createFeatureActionTip:"neues Objekt erstellen",editFeatureActionTip:"bestehendes Objekt bearbeiten",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"auf der Karte darstellen",firstPageTip:"erste Seite",previousPageTip:"vorherige Seite",zoomPageExtentTip:"Zoom zur max. Ausdehnung",nextPageTip:"nächste Seite",lastPageTip:"letzte Seite",totalMsg:"{1} bis {2} von {0} Datensätzen"},"gxp.plugins.GoogleEarth.prototype":{menuText:"3D Viewer",tooltip:"zum 3D Viewer wechseln"},"gxp.plugins.GoogleSource.prototype":{title:"Google Layers",roadmapAbstract:"Strassenkarte zeigen",satelliteAbstract:"Luftbilder zeigen",hybridAbstract:"Luftbilder mit Strassennamen zeigen",terrainAbstract:"Strassenkarte mit Gelände zeigen"},"gxp.plugins.LayerProperties.prototype":{menuText:"Layer Eigenschaften",toolTip:"Layer Eigenschaften"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Layer",rootNodeText:"Layer",overlayNodeText:"überlagernde Layer",baseNodeText:"Basiskarten"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Basiskarte"},"gxp.plugins.Legend.prototype":{menuText:"Legende zeigen",tooltip:"Legende zeigen"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Karte laden..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Messen",lengthMenuText:"Länge",areaMenuText:"Fläche",lengthTooltip:"Länge messen",areaTooltip:"Fläche messen",measureTooltip:"Messen"},"gxp.plugins.Navigation.prototype":{menuText:"Kartenausschnitt verschieben",tooltip:"Kartenausschnitt verschieben"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Kartenausschnitt zurück",nextMenuText:"Kartenausschnitt vorwärts",previousTooltip:"Vorherigen Kartenausschnitt anzeigen",nextTooltip:"Nächsten Kartenausschnit anzeigen"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap Layer",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Drucken",menuText:"Karte drucken",tooltip:"Karte drucken",previewText:"Druckansicht",notAllNotPrintableText:"Es können nicht alle Layer gedruckt werden.",nonePrintableText:"Keiner der aktuellen Kartenlayer kann gedruckt werden."},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Layers",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Abfrage",queryMenuText:"Abfrage Layer",queryActionTip:"selektierten Layer abfragen",queryByLocationText:"Abfrage nach aktuellem Kartenauscchnitt",queryByAttributesText:"Attributabfrage",queryMsg:"Abfrage wird ausgeführt",cancelButtonText:"Abbrechen",noFeaturesTitle:"keine Übereinstimmung",noFeaturesMessage:"Ihre Abfrage liefert keine Resultate."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Layer löschen",removeActionTip:"Layer löschen"},"gxp.plugins.Styler.prototype":{menuText:"Style bearbeiten",tooltip:"Layer Styles verwalten"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Objektinformation",infoActionTip:"Objektinformation abfragen",popupTitle:"Objektinformation"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Vergrössern",zoomOutMenuText:"Verkleinern",zoomTooltip:"Box aufziehen zum Zoomen",zoomInTooltip:"Vergrössern",zoomOutTooltip:"Verkleinern"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Maximale Ausdehnung",tooltip:"Maximale Ausdehnung anzeigen"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Auf Layer zoomen",tooltip:"Auf Layer zoomen"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Auf Layer zoomen",tooltip:"Auf Layer zoomen"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Auf selektierte Objekte zoomen",tooltip:"Auf selektierte Objekte zoomen"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Änderung speichern?",closeMsg:"Ungespeicherte Änderungen. Möchten Sie die Änderungen speichern?",deleteMsgTitle:"Objekt löschen?",deleteMsg:"Sind Sie sicher, dass Sie dieses Objekt löschen möchten?",editButtonText:"Bearbeiten",editButtonTooltip:"Objekt editieren",deleteButtonText:"Löschen",deleteButtonTooltip:"Objekt löschen",cancelButtonText:"Abbrechen",cancelButtonTooltip:"Bearbeitung beenden, Änderungen verwerfen.",saveButtonText:"Speichern",saveButtonTooltip:"Änderungen speichern"},"gxp.FillSymbolizer.prototype":{fillText:"Füllung",colorText:"Farbe",opacityText:"Transparenz"},"gxp.FilterBuilder.prototype":{builderTypeNames:["beliebige","alle","keine","nicht alle"],preComboText:"Match",postComboText:"der folgenden:",addConditionText:"Bedingung hinzufügen",addGroupText:"Gruppe hinzufügen",removeConditionText:"Bedingung entfernen"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Name",titleHeaderText:"Titel",queryableHeaderText:"abfragbar",layerSelectionLabel:"Verfügbare Daten anzeigen von:",layerAdditionLabel:"oder neuen Server hinzufügen.",expanderTemplateText:"<p><b>Kurzbeschreibung:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"Kreis",graphicSquareText:"Rechteck",graphicTriangleText:"Dreieck",graphicStarText:"Stern",graphicCrossText:"Kreuz",graphicXText:"x",graphicExternalText:"extern",urlText:"URL",opacityText:"Transparenz",symbolText:"Symbol",sizeText:"Grösse",rotationText:"Rotation"},"gxp.QueryPanel.prototype":{queryByLocationText:"lagebezogene Abfrage",currentTextText:"aktuelle Ausdehnung",queryByAttributesText:"Attributabfrage",layerText:"Layer"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Massstab 1:{scale}",labelFeaturesText:"Objekte beschriften",labelsText:"Beschriftung",basicText:"Basic",advancedText:"Erweitert",limitByScaleText:"Massstabsbeschränkung",limitByConditionText:"Einschränkung durch Bedingung",symbolText:"Symbol",nameText:"Name"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Massstab 1:{scale}",minScaleLimitText:"Minimale Massstabsgrenze",maxScaleLimitText:"Maximale Massstabsgrenze"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"ausgezogen",dashStrokeName:"gestrichelt",dotStrokeName:"gepunktet",titleText:"Linie",styleText:"Style",colorText:"Farbe",widthText:"Breite",opacityText:"Transparenz"},"gxp.StylePropertiesDialog.prototype":{titleText:"Allgemein",nameFieldText:"Name",titleFieldText:"Titel",abstractFieldText:"Kurzbeschreibung"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Label values",haloText:"Halo",sizeText:"Grösse"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"Über",titleText:"Titel",nameText:"Name",descriptionText:"Beschreibung",displayText:"Anzeige",opacityText:"Transparenz",formatText:"Format",transparentText:"transparent",cacheText:"Cache",cacheFieldText:"Version aus dem Cache benützen",stylesText:"Verfügbare Styles",infoFormatText:"Info Format",infoFormatEmptyText:"Format auswählen",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Ihre Karte ist für die Publikation im Web bereit. Kopieren Sie einfach den folgenden HTML-Code, um die Karte in Ihre Webseite einzubinden:",heightLabel:"Höhe",widthLabel:"Breite",mapSizeLabel:"Kartengrösse",miniSizeLabel:"Mini",smallSizeLabel:"Klein",premiumSizeLabel:"Premium",largeSizeLabel:"Gross"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Hinzufügen",addStyleTip:"neuen Style hinzufügen",chooseStyleText:"Style auswählen",deleteStyleText:"Löschen",deleteStyleTip:"selektierten Style löschen",editStyleText:"Bearbeiten",editStyleTip:"selektierten Style bearbeiten",duplicateStyleText:"Duplizieren",duplicateStyleTip:"selektierten Style duplizieren",addRuleText:"Hinzufügen",addRuleTip:"neue Regel hinzufügen",newRuleText:"neue Regel",deleteRuleText:"Entfernen",deleteRuleTip:"selektierte Regel löschen",editRuleText:"Bearbeiten",editRuleTip:"selektierte Regel bearbeiten",duplicateRuleText:"Duplizieren",duplicateRuleTip:"selektierte Regel duplizieren",cancelText:"Abbrechen",saveText:"Speichern",styleWindowTitle:"User Style: {0}",ruleWindowTitle:"Style Regel: {0}",stylesFieldsetTitle:"Styles",rulesFieldsetTitle:"Regeln"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Titel",titleEmptyText:"Layertitel",abstractLabel:"Beschreibung",abstractEmptyText:"Layerbeschreibung",fileLabel:"Daten",fieldEmptyText:"Datenarchiv durchsuchen...",uploadText:"Hochladen",uploadFailedText:"Hochladen fehlgeschlagen",processingUploadText:"Upload wird bearbeitet",waitMsgText:"Ihre Daten werden hochgeladen...",invalidFileExtensionText:"Dateierweiterung muss eine sein von: ",optionsText:"Optionen",workspaceLabel:"Workspace",workspaceEmptyText:"Standard Workspace",dataStoreLabel:"Store",dataStoreEmptyText:"Neuen Store erzeugen",defaultDataStoreEmptyText:"Default Datastore"},"gxp.NewSourceDialog.prototype":{title:"neuen Server hinzufügen...",cancelText:"Abbrechen",addServerText:"Server hinzufügen",invalidURLText:"Fügen Sie eine gültige URL zu einem WMS ein (z.B. http://example.com/geoserver/wms)",contactingServerText:"Server wird kontaktiert..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Zoomstufe"},"gxp.Viewer.prototype":{saveErrorText:"Beim Speichern ist ein Problem aufgetreten: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Source",addPicasaText:"Picasa Fotos",addYouTubeText:"YouTube Videos",addRSSText:"Andere GeoRSS Feed",addFeedText:"zur Karte hinzufügen",addTitleText:"Titel",keywordText:"Keyword",doneText:"Fertig",titleText:"Add-Feeds",maxResultsText:"Max Items"}});GeoExt.Lang.add("el",{"gxp.menu.LayerMenu.prototype":{layerText:"Επιφάνεια"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Προσθέστε επιφάνειες",addActionTip:"Προσθέστε επιφάνειες",addServerText:"Προσθέστε ένα Νέο Διακομιστή",addButtonText:"Προσθέστε επιφάνειες",untitledText:"Χωρίς τίτλο",addLayerSourceErrorText:"Σφάλμα στην ανάκτηση δυνατοτήτων WMS ({msg}).\nΠαρακαλώ ελέγξτε το url και δοκιμάστε ξανά.",availableLayersText:"Διαθέσιμες Επιφάνειες",expanderTemplateText:"<p><b>Περίληψη:</b> {abstract}</p>",panelTitleText:"Τίτλος",layerSelectionText:"Δείτε διαθέσιμα δεδομένα από:",doneText:"Ολοκληρώθηκε",uploadText:"Ανεβάστε Δεδομένα",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Επιφάνειες Bing",roadTitle:"Δρόμοι Bing",aerialTitle:"Εναέριες Bing",labeledAerialTitle:"Εναέριες Bing με Ετικέτες"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Δημιουργήστε ένα νέο χαρακτηριστικό",editFeatureActionTip:"Τροποποιήστε υπάρχον χαρακτηριστικό",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Προβολή στον χάρτη",firstPageTip:"Πρώτη σελίδα",previousPageTip:"Προηγούμενη σελίδα",zoomPageExtentTip:"Ζουμ στο εύρος της σελίδας",nextPageTip:"Επόμενη σελίδα",nextPageTip:"Τελευταία σελίδα",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{apiKeyPrompt:"Παρακαλώ εισάγετε το Google API κλειδί για ",menuText:"3D Προβολή",tooltip:"Αλλάξτε σε 3D Προβολή"},"gxp.plugins.GoogleSource.prototype":{title:"Επιφάνειες Google",roadmapAbstract:"Προβολή οδικού χάρτη",satelliteAbstract:"Προβολή εικόνων από δορυφόρο",hybridAbstract:"Προβολή εικόνων με ονόματα οδών",terrainAbstract:"Προβολή οδικού χάρτη με ανάγλυφο εδάφους"},"gxp.plugins.LayerProperties.prototype":{menuText:"Επιλογές Επιφάνειας",toolTip:"Επιλογές Επιφάνειας"},"gxp.plugins.LayerTree.prototype":{rootNodeText:"Επιφάνειες",overlayNodeText:"Επιστρώματα",baseNodeText:"Υπόβαθρα"},"gxp.plugins.Legend.prototype":{menuText:"Προβολή Υπομνήματος",tooltip:"Προβολή Υπομνήματος"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Φόρτωση Χάρτη..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Μέτρο",lengthMenuText:"Απόσταση",areaMenuText:"Εμβαδόν",lengthTooltip:"Υπολογίστε απόσταση",areaTooltip:"Υπολογίστε εμβαδόν",measureTooltip:"Μέτρο"},"gxp.plugins.Navigation.prototype":{menuText:"Μετακινήστε Χάρτη",tooltip:"Μετακινήστε Χάρτη"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Ζουμ Στο Προηγούμενο Επίπεδο",nextMenuText:"Ζουμ Στο Επόμενο Επίπεδο",previousTooltip:"Ζουμ Στο Προηγούμενο Επίπεδο",nextTooltip:"Ζουμ Στο Επόμενο Επίπεδο"},"gxp.plugins.OSMSource.prototype":{title:"Επιφάνειες OpenStreetMap",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Δεδομένα CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Εκτύπωση",menuText:"Εκτύπωση Χάρτη",tooltip:"Εκτύπωση Χάρτη",previewText:"Προεπισκόπηση Εκτύπωσης",notAllNotPrintableText:"Δεν Μπορούν Να Εκτυπωθούν Όλες Οι Επιφάνειες",nonePrintableText:"Καμία από τις επιφάνειες του τρέχοντος χάρτη δεν μπορεί να εκτυπωθεί"},"gxp.plugins.MapQuestSource.prototype":{title:"Επιφάνειες MapQuest",osmAttribution:"Πλακίδια Προσφορά Των <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Πλακίδια Προσφορά Των of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"Εικόνες MapQuest"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Επερώτηση",queryMenuText:"Επιφάνεια επερώτησης",queryActionTip:"Κάντε επερώτηση στην επιλεγμένη επιφάνεια",queryByLocationText:"Query by current map extent",queryByAttributesText:"Επερώτηση βάσει χαρακτηριστικών",queryMsg:"Γίνεται επερώτηση...",cancelButtonText:"Ακύρωση",noFeaturesTitle:"Κανένα Αποτέλεσμα",noFeaturesMessage:"Η επερώτηση σας δεν επέστρεψε αποτελέσματα."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Κατάργηση επιφάνειας",removeActionTip:"Κατάργηση επιφάνειας"},"gxp.plugins.Styler.prototype":{menuText:"Επεξεργασία Στυλ",tooltip:"Επεξεργασία στυλ επιφάνειας"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Πάρτε Πληροφορίες Χαρακτηριστικού",popupTitle:"Πληροφορίες Χαρακτηριστικού"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Ζουμ Μέσα",zoomOutMenuText:"Ζουμ Έξω",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Ζουμ Μέσα",zoomOutTooltip:"Ζουμ Έξω"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Ζουμ Στο Μέγιστο Εύρος",tooltip:"Ζουμ Στο Μέγιστο Εύρος"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Ζουμ στο εύρος επιφάνειας",tooltip:"Ζουμ στο εύρος επιφάνειας"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Ζουμ στο εύρος επιφάνειας",tooltip:"Ζουμ στο εύρος επιφάνειας"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Ζουμ στα συγκεκριμένα χαρακτηριστικά",tooltip:"Ζουμ στα συγκεκριμένα χαρακτηριστικά"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Αποθήκευση Αλλαγών;",closeMsg:"Αυτό το χαρακτηριστικό έχει τροποποιήσεις που δεν έχουν αποθηκευτεί. Θέλετε να φυλάξετε τις αλλαγές σας;",deleteMsgTitle:"Διαγραφή Χαρακτηριστικού",deleteMsg:"Είστε σίγουροι οτι θέλετε να διαγράψετε το συγκεκριμένο χαρακτηριστικό",editButtonText:"Τροποποίηση",editButtonTooltip:"Κάντε αυτό το χαρακτηριστικό τροποποιήσιμο",deleteButtonText:"Διαγραφή",deleteButtonTooltip:"Διαγράψτε αυτό το χαρακτηριστικό",cancelButtonText:"Ακύρωση",cancelButtonTooltip:"Σταματήστε την τροποποίηση, απορρίπτοντας οποιεσδήποτε αλλαγές",saveButtonText:"Αποθήκευση",saveButtonTooltip:"Αποθήκευση αλλαγών"},"gxp.FillSymbolizer.prototype":{fillText:"Γέμισμα",colorText:"Χρώμα",opacityText:"Αδιαφάνεια"},"gxp.FilterBuilder.prototype":{builderTypeNames:["οποιοδήποτε","όλα","κανένα","όχι όλα"],preComboText:"Ταύτιση",postComboText:"των ακόλουθων:",addConditionText:"προσθήκη συνθήκης",addGroupText:"προσθήκη ομάδας",removeConditionText:"κατάργηση συνθήκης"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Όνομα",titleHeaderText:"Τίτλος",queryableHeaderText:"Μπορούν να γίνουν επερωτήσεις",layerSelectionLabel:"Δείτε διαθέσιμα δεδομένα από:",layerAdditionLabel:"ή προσθέστε νέο διακομιστή.",expanderTemplateText:"<p><b>Περιγραφή:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"κύκλος",graphicSquareText:"τετράγωνο",graphicTriangleText:"τρίγωνο",graphicStarText:"αστέρι",graphicCrossText:"σταυρός",graphicXText:"χ",graphicExternalText:"εξωτερικό",urlText:"URL",opacityText:"αδιαφάνεια",symbolText:"Σύμβολο",sizeText:"Εύρος",rotationText:"Περιστροφή"},"gxp.QueryPanel.prototype":{queryByLocationText:"Επερώτηση βάσει τοποθεσίας",currentTextText:"Τρέχον εύρος",queryByAttributesText:"Επερώτηση βάσει χαρακτηριστικών",layerText:"Επιφάνεια"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Κλίμακα 1:{scale}",labelFeaturesText:"Χαρακτηριστικά Επιφάνειας",labelsText:"Ετικέτες",basicText:"Απλή",advancedText:"Προηγμένη",limitByScaleText:"Περιορισμός βάσει κλίμακας",limitByConditionText:"Περιορισμός βάσει συνθήκης",symbolText:"Σύμβολο",nameText:"Όνομα"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Κλίμακα 1:{scale}",minScaleLimitText:"Όριο ελάχιστης κλίμακας",maxScaleLimitText:"Όριο μέγιστης κλίμακας"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"συμπαγής",dashStrokeName:"με παύλες",dotStrokeName:"με κουκίδες",titleText:"Πέρασμα",styleText:"Στύλο",colorText:"Χρώμα",widthText:"Πλάτος",opacityText:"Αδιαφάνεια"},"gxp.StylePropertiesDialog.prototype":{titleText:"Γενικά",nameFieldText:"Όνομα",titleFieldText:"Τίτλος",abstractFieldText:"Περίληψη"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Τιμές ετικέτας",haloText:"Φωτοστέφανο",sizeText:"Μέγεθος"},"gxp.WMSLayerPanel.prototype":{aboutText:"Σχετικά με",titleText:"Τίτλος",nameText:"Όνομα",descriptionText:"Περιγραφή",displayText:"Προβολή",opacityText:"Αδιαφάνεια",formatText:"Τύπος",transparentText:"Διαφανές",cacheText:"Cache",cacheFieldText:"Χρησιμοποίησε την cached έκδοση",stylesText:"Διαθέσιμες Στυλ",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Ο χάρτης σας είναι έτοιμος να δημοσιευτεί στο διαδίκτυο! Απλά αντιγράψτε τον ακόλουθο HTML κώδικα για να ενσωματώσετε τον χάρτη στην ιστοσελίδα σας:",heightLabel:"Ύψος",widthLabel:"Πλάτος",mapSizeLabel:"Μέγεθος Χάρτη",miniSizeLabel:"Μικρογραφία",smallSizeLabel:"Μικρό",premiumSizeLabel:"Εξαιρετικά ποιοτικό",largeSizeLabel:"Μεγάλος"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Προσθήκη",addStyleTip:"Προσθήκη νέου στυλ",chooseStyleText:"Επιλογή στυλ",deleteStyleText:"Αφαίρεση",deleteStyleTip:"Διαγραφή του επιλεγμένου στυλ",editStyleText:"Επεξεργασία",editStyleTip:"Επεξεργασία του επιλεγμένου στυλ",duplicateStyleText:"Διπλότυπο",duplicateStyleTip:"Φτιάξτε διπλότυπο του επιλεγμένου στύλ",addRuleText:"Προσθήκη",addRuleTip:"Προσθήκη νέου κανόνα",newRuleText:"Νέος Κανόνας",deleteRuleText:"Αφαίρεση",deleteRuleTip:"Διαγράψτε τον επιλεγμένο κανόνα",editRuleText:"Επεξεργασία",editRuleTip:"Επεξεργαστείτε τον επιλεγμένο κανόνα",duplicateRuleText:"Διπλότυπο",duplicateRuleTip:"Φτιάξτε διπλότυπο του επιλεγμένου κανόνα",cancelText:"Ακύρωση",saveText:"Αποθήκευση",styleWindowTitle:"Στυλ Χρήστη: {0}",ruleWindowTitle:"Κανόνες Στυλ: {0}",stylesFieldsetTitle:"Στυλ",rulesFieldsetTitle:"Κανόνες"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Τίτλος",titleEmptyText:"Τίτλος επιφάνειας",abstractLabel:"Περιγραφή",abstractEmptyText:"Περιγραφή επιφάνειας",fileLabel:"Δεδομένα",fieldEmptyText:"Βρείτε το μονοπάτι για ένα αρχείο δεδομένων...",uploadText:"Ανέβασμα",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Τα δεδομένα σας ανεβαίνουν...",invalidFileExtensionText:"Ο τύπος αρχείου πρέπει να είναι ένας από τους: ",optionsText:"Επιλογές",workspaceLabel:"Χώρος εργασίας",workspaceEmptyText:"Προεπιλεγμένος χώρος εργασίας",dataStoreLabel:"Αποθήκη",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Προεπιλεγμένη αποθήκη"},"gxp.NewSourceWindow.prototype":{title:"Προσθήκη Νέου Διακομιστή...",cancelText:"Ακύρωση",addServerText:"Προσθήκη Διακομιστή",invalidURLText:"Είσαγετε ένα έγκυρο URL για ένα WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Επικοινωνία με Διακομιστή..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Επίπεδο ζουμ"},"gxp.Viewer.prototype":{saveErrorText:"Trouble saving: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Πηγή",addPicasaText:"Φωτογραφίες Picasa",addYouTubeText:"YouTube βίντεο",addRSSText:"Άλλα Feed GeoRSS",addFeedText:"Προσθήκη στο χάρτη",addTitleText:"Τίτλος",keywordText:"Λέξη-κλειδί",doneText:"Done",titleText:"Προσθήκη ροής",maxResultsText:"Max Είδη"}});GeoExt.Lang.add("en",{"gxp.menu.LayerMenu.prototype":{layerText:"Layer"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Add layers",addActionTip:"Add layers",addServerText:"Add a New Server",addButtonText:"Add layers",untitledText:"Untitled",addLayerSourceErrorText:"Error getting WMS capabilities ({msg}).\nPlease check the url and try again.",availableLayersText:"Available Layers",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",panelTitleText:"Title",layerSelectionText:"View available data from:",doneText:"Done",uploadText:"Upload layers",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Bing Layers",roadTitle:"Bing Roads",aerialTitle:"Bing Aerial",labeledAerialTitle:"Bing Aerial With Labels"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Create a new feature",editFeatureActionTip:"Edit existing feature",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Display on map",firstPageTip:"First page",previousPageTip:"Previous page",zoomPageExtentTip:"Zoom to page extent",nextPageTip:"Next page",lastPageTip:"Last page",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"3D Viewer",tooltip:"Switch to 3D Viewer"},"gxp.plugins.GoogleSource.prototype":{title:"Google Layers",roadmapAbstract:"Show street map",satelliteAbstract:"Show satellite imagery",hybridAbstract:"Show imagery with street names",terrainAbstract:"Show street map with terrain"},"gxp.plugins.LayerProperties.prototype":{menuText:"Layer Properties",toolTip:"Layer Properties"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Layers",rootNodeText:"Layers",overlayNodeText:"Overlays",baseNodeText:"Base Layers"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Base Maps"},"gxp.plugins.Legend.prototype":{menuText:"Show legend",tooltip:"Show legend"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Loading map..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Measure",lengthMenuText:"Length",areaMenuText:"Area",lengthTooltip:"Measure length",areaTooltip:"Measure area",measureTooltip:"Measure"},"gxp.plugins.Navigation.prototype":{menuText:"Pan map",tooltip:"Pan map"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Zoom to previous extent",nextMenuText:"Zoom to next extent",previousTooltip:"Zoom to previous extent",nextTooltip:"Zoom to next extent"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap Layers",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Print",menuText:"Print map",tooltip:"Print map",previewText:"Print Preview",notAllNotPrintableText:"Not All Layers Can Be Printed",nonePrintableText:"None of your current map layers can be printed"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Layers",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Query",queryMenuText:"Query layer",queryActionTip:"Query the selected layer",queryByLocationText:"Query by current map extent",queryByAttributesText:"Query by attributes",queryMsg:"Querying...",cancelButtonText:"Cancel",noFeaturesTitle:"No Match",noFeaturesMessage:"Your query did not return any results."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Remove layer",removeActionTip:"Remove layer"},"gxp.plugins.Styler.prototype":{menuText:"Layer Styles",tooltip:"Layer Styles"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Get Feature Info",popupTitle:"Feature Info"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom box",zoomInMenuText:"Zoom in",zoomOutMenuText:"Zoom out",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Zoom in",zoomOutTooltip:"Zoom out"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Zoom to max extent",tooltip:"Zoom to max extent"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Zoom to layer extent",tooltip:"Zoom to layer extent"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Zoom to layer extent",tooltip:"Zoom to layer extent"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Zoom to selected features",tooltip:"Zoom to selected features"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Save Changes?",closeMsg:"This feature has unsaved changes. Would you like to save your changes?",deleteMsgTitle:"Delete Feature?",deleteMsg:"Are you sure you want to delete this feature?",editButtonText:"Edit",editButtonTooltip:"Make this feature editable",deleteButtonText:"Delete",deleteButtonTooltip:"Delete this feature",cancelButtonText:"Cancel",cancelButtonTooltip:"Stop editing, discard changes",saveButtonText:"Save",saveButtonTooltip:"Save changes"},"gxp.FillSymbolizer.prototype":{fillText:"Fill",colorText:"Color",opacityText:"Opacity"},"gxp.FilterBuilder.prototype":{builderTypeNames:["any","all","none","not all"],preComboText:"Match",postComboText:"of the following:",addConditionText:"add condition",addGroupText:"add group",removeConditionText:"remove condition"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Name",titleHeaderText:"Title",queryableHeaderText:"Queryable",layerSelectionLabel:"View available data from:",layerAdditionLabel:"or add a new server.",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"circle",graphicSquareText:"square",graphicTriangleText:"triangle",graphicStarText:"star",graphicCrossText:"cross",graphicXText:"x",graphicExternalText:"external",urlText:"URL",opacityText:"opacity",symbolText:"Symbol",sizeText:"Size",rotationText:"Rotation"},"gxp.QueryPanel.prototype":{queryByLocationText:"Query by location",currentTextText:"Current extent",queryByAttributesText:"Query by attributes",layerText:"Layer"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Scale 1:{scale}",labelFeaturesText:"Label Features",labelsText:"Labels",basicText:"Basic",advancedText:"Advanced",limitByScaleText:"Limit by scale",limitByConditionText:"Limit by condition",symbolText:"Symbol",nameText:"Name"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Scale 1:{scale}",minScaleLimitText:"Min scale limit",maxScaleLimitText:"Max scale limit"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"solid",dashStrokeName:"dash",dotStrokeName:"dot",titleText:"Stroke",styleText:"Style",colorText:"Color",widthText:"Width",opacityText:"Opacity"},"gxp.StylePropertiesDialog.prototype":{titleText:"General",nameFieldText:"Name",titleFieldText:"Title",abstractFieldText:"Abstract"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Label values",haloText:"Halo",sizeText:"Size"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"About",titleText:"Title",nameText:"Name",descriptionText:"Description",displayText:"Display",opacityText:"Opacity",formatText:"Format",transparentText:"Transparent",cacheText:"Cache",cacheFieldText:"Use cached version",stylesText:"Available Styles",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Your map is ready to be published to the web! Simply copy the following HTML to embed the map in your website:",heightLabel:"Height",widthLabel:"Width",mapSizeLabel:"Map Size",miniSizeLabel:"Mini",smallSizeLabel:"Small",premiumSizeLabel:"Premium",largeSizeLabel:"Large"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Add",addStyleTip:"Add a new style",chooseStyleText:"Choose style",deleteStyleText:"Remove",deleteStyleTip:"Delete the selected style",editStyleText:"Edit",editStyleTip:"Edit the selected style",duplicateStyleText:"Duplicate",duplicateStyleTip:"Duplicate the selected style",addRuleText:"Add",addRuleTip:"Add a new rule",newRuleText:"New Rule",deleteRuleText:"Remove",deleteRuleTip:"Delete the selected rule",editRuleText:"Edit",editRuleTip:"Edit the selected rule",duplicateRuleText:"Duplicate",duplicateRuleTip:"Duplicate the selected rule",cancelText:"Cancel",saveText:"Save",styleWindowTitle:"User Style: {0}",ruleWindowTitle:"Style Rule: {0}",stylesFieldsetTitle:"Styles",rulesFieldsetTitle:"Rules"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Title",titleEmptyText:"Layer title",abstractLabel:"Description",abstractEmptyText:"Layer description",fileLabel:"Data",fieldEmptyText:"Browse for data archive...",uploadText:"Upload",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Uploading your data...",invalidFileExtensionText:"File extension must be one of: ",optionsText:"Options",workspaceLabel:"Workspace",workspaceEmptyText:"Default workspace",dataStoreLabel:"Store",dataStoreEmptyText:"Choose a store",dataStoreNewText:"Create new store",crsLabel:"CRS",crsEmptyText:"Coordinate Reference System ID",invalidCrsText:"CRS identifier should be an EPSG code (e.g. EPSG:4326)"},"gxp.NewSourceDialog.prototype":{title:"Add new server...",cancelText:"Cancel",addServerText:"Add Server",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Contacting Server..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Zoom level"},"gxp.Viewer.prototype":{saveErrorText:"Trouble saving: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Source",addPicasaText:"Picasa Photos",addYouTubeText:"YouTube Videos",addRSSText:"Other GeoRSS Feed",addFeedText:"Add to Map",addTitleText:"Title",keywordText:"Keyword",doneText:"Done",titleText:"Add Feeds",maxResultsText:"Max Items"}});GeoExt.Lang.add("es",{"gxp.menu.LayerMenu.prototype":{layerText:"Capa"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Añadir Capas",addActionTip:"Añadir Capas",addServerText:"Añadir servidor",addButtonText:"Añadir Capas",untitledText:"Sin Título",addLayerSourceErrorText:"Error obteniendo capabilities de WMS ({msg}).\nPor favor, compruebe la URL y vuelva a intentarlo.",availableLayersText:"Capas disponibles",expanderTemplateText:"<p><b>Resumen:</b> {abstract}</p>",panelTitleText:"Título",layerSelectionText:"Ver datos disponibles de:",doneText:"Hecho",uploadText:"Subir Datos",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Capas Bing",roadTitle:"Bing Carreteras",aerialTitle:"Bing Foto Aérea",labeledAerialTitle:"Bing Híbrido"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Crear nuevo elemento",editFeatureActionTip:"Editar elemento existente",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Mostrar en el mapa",firstPageTip:"Primera página",previousPageTip:"Página anterior",zoomPageExtentTip:"Zoom a la extensión de la página",nextPageTip:"Página siguiente",lastPageTip:"Última página",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"Vista 3D",tooltip:"Vista 3D"},"gxp.plugins.GoogleSource.prototype":{title:"Capas Google",roadmapAbstract:"Mostrar Callejero",satelliteAbstract:"Mostrar imágenes aéreas",hybridAbstract:"Mostrar imágenes con nombres de calle",terrainAbstract:"Mostrar callejero con terreno"},"gxp.plugins.LayerProperties.prototype":{menuText:"Propiedades de la capa",toolTip:"Propiedades de la capa"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Capas",rootNodeText:"Capas",overlayNodeText:"Capas superpuestas",baseNodeText:"Capa base"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Capa base"},"gxp.plugins.Legend.prototype":{menuText:"Leyenda",tooltip:"Leyenda"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Loading Map..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Medir",lengthMenuText:"Longitud",areaMenuText:"Área",lengthTooltip:"Medir Longitud",areaTooltip:"Medir Área",measureTooltip:"Medir"},"gxp.plugins.Navigation.prototype":{menuText:"Desplazar mapa",tooltip:"Desplazar mapa"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Vista anterior",nextMenuText:"Vista siguiente",previousTooltip:"Vista anterior",nextTooltip:"Vista siguiente"},"gxp.plugins.OSMSource.prototype":{title:"Capas OpenStreetMap",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Datos CC-By-SA de <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Imprimir",menuText:"Imprimir mapa",tooltip:"Imprimir mapa",previewText:"Vista previa",notAllNotPrintableText:"No se pueden imprimir todas las capas",nonePrintableText:"No se puede imprimir ninguna de las capas del mapa"},"gxp.plugins.MapQuestSource.prototype":{title:"Capas MapQuest",osmAttribution:"Teselas cortesía de <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Teselas cortesía de <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imágenes"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Consultar",queryMenuText:"Consultar capa",queryActionTip:"Consultar la capa seleccionada",queryByLocationText:"Query by current map extent",queryByAttributesText:"Consultar por atributos",queryMsg:"Consultando...",cancelButtonText:"Cancelar",noFeaturesTitle:"Sin coincidencias",noFeaturesMessage:"Su consulta no produjo resultados."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Eliminar Capa",removeActionTip:"Eliminar Capa"},"gxp.plugins.Styler.prototype":{menuText:"Editar estilos",tooltip:"Gestionar estilos de capa"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Consultar elementos",popupTitle:"Información de elementos"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Acercar",zoomOutMenuText:"Alejar",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Acercar",zoomOutTooltip:"Alejar"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Ver extensión total",tooltip:"Ver extensión total"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Ver toda la capa",tooltip:"Ver toda la capa"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Ver toda la la capa",tooltip:"Ver toda la capa"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Ver los elementos seleccionados",tooltip:"Ver los elementos seleccionados"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"¿Desea guardar los cambios?",closeMsg:"Los cambios en este elemento no se han guardado. ¿Desea guardar los cambios?",deleteMsgTitle:"¿Desea borrar el elemento?",deleteMsg:"¿Está seguro de querer borrar este elemento?",editButtonText:"Editar",editButtonTooltip:"Hacer editable este elemento",deleteButtonText:"Borrar",deleteButtonTooltip:"Borrar este elemento",cancelButtonText:"Cancelar",cancelButtonTooltip:"Dejar de editar, descartar cambios",saveButtonText:"Guardar",saveButtonTooltip:"Guardar cambios"},"gxp.FillSymbolizer.prototype":{fillText:"Relleno",colorText:"Color",opacityText:"Opacidad"},"gxp.FilterBuilder.prototype":{builderTypeNames:["cualquiera de","todas","ninguna de","no todas"],preComboText:"Cumplir",postComboText:"las condiciones siguientes:",addConditionText:"añadir condición",addGroupText:"añadir grupo",removeConditionText:"eliminar condición"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Nombre",titleHeaderText:"Título",queryableHeaderText:"Consultable",layerSelectionLabel:"Ver datos disponibles de:",layerAdditionLabel:"o añadir otro servidor.",expanderTemplateText:"<p><b>Resumen:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"círculo",graphicSquareText:"cuadrado",graphicTriangleText:"triángulo",graphicStarText:"estrella",graphicCrossText:"cruz",graphicXText:"x",graphicExternalText:"externo",urlText:"URL",opacityText:"opacidad",symbolText:"Símbolo",sizeText:"Tamaño",rotationText:"Giro"},"gxp.QueryPanel.prototype":{queryByLocationText:"Consultar por localización",currentTextText:"Extensión actual",queryByAttributesText:"Consultar por atributo",layerText:"Capa"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Escala 1:{scale}",labelFeaturesText:"Etiquetado de elementos",labelsText:"Etiquetas",basicText:"Básico",advancedText:"Advanzado",limitByScaleText:"Limitar por escala",limitByConditionText:"Limitar por condición",symbolText:"Símbolo",nameText:"Nombre"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Escala 1:{scale}",minScaleLimitText:"Escala mínima",maxScaleLimitText:"Escala máxima"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"continuo",dashStrokeName:"guiones",dotStrokeName:"puntos",titleText:"Trazo",styleText:"Estilo",colorText:"Color",widthText:"Ancho",opacityText:"Opacidad"},"gxp.StylePropertiesDialog.prototype":{titleText:"General",nameFieldText:"Nombre",titleFieldText:"Título",abstractFieldText:"Resumen"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Etiquetado",haloText:"Halo",sizeText:"Tamaño"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"Acerca de",titleText:"Título",nameText:"Nombre",descriptionText:"Descripción",displayText:"Mostrar",opacityText:"Opacidad",formatText:"Formato",transparentText:"Transparente",cacheText:"Caché",cacheFieldText:"Usar la versión en caché",stylesText:"Estilos disponibles",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"¡Ya puede publicar su mapa en otras webs! Simplemente copie el siguiente código HTML en el lugar donde desee incrustarlo:",heightLabel:"Alto",widthLabel:"Ancho",mapSizeLabel:"Tamaño",miniSizeLabel:"Mínimo",smallSizeLabel:"Pequeño",premiumSizeLabel:"Premium",largeSizeLabel:"Grande"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Añadir",addStyleTip:"Añadir un estilo",chooseStyleText:"Escoger estilo",deleteStyleText:"Quitar",deleteStyleTip:"Borrar el estilo seleccionado",editStyleText:"Cambiar",editStyleTip:"Editar el estilo seleccionado",duplicateStyleText:"Clonar",duplicateStyleTip:"Duplicar el estilo seleccionado",addRuleText:"Añadir",addRuleTip:"Añadir una regla",newRuleText:"Nueva regla",deleteRuleText:"Quitar",deleteRuleTip:"Borrar la regla seleccionada",editRuleText:"Cambiar",editRuleTip:"Editar la regla seleccionada",duplicateRuleText:"Duplicar",duplicateRuleTip:"Duplicar la regla seleccionada",cancelText:"Cancelar",saveText:"Guardar",styleWindowTitle:"Estilo: {0}",ruleWindowTitle:"Regla: {0}",stylesFieldsetTitle:"Estilos",rulesFieldsetTitle:"Reglas"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Título",titleEmptyText:"Título de la capa",abstractLabel:"Descripción",abstractEmptyText:"Descripción de la capa",fileLabel:"Datos",fieldEmptyText:"Navegue por los datos...",uploadText:"Subir",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Suba sus datos data...",invalidFileExtensionText:"El fichero debe tener alguna de estas extensiones: ",optionsText:"Opciones",workspaceLabel:"Espacio de trabajo",workspaceEmptyText:"Espacio de trabajo por defecto",dataStoreLabel:"Almacén de datos",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Almacén de datos por defecto"},"gxp.NewSourceDialog.prototype":{title:"Añadir Servidor...",cancelText:"Cancelar",addServerText:"Añadir Servidor",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Conectando con el Servidor..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Escala"},"gxp.Viewer.prototype":{saveErrorText:"Problemas guardando: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Fuente",addPicasaText:"Picasa fotos",addYouTubeText:"YouTube Videos",addRSSText:"Feed GeoRSS Otro",addFeedText:"Agregar al Mapa",addTitleText:"Título",keywordText:"Palabra clave",doneText:"Hecho",titleText:"Agregar Feeds",maxResultsText:"Productos Max"}});GeoExt.Lang.add("fr",{"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Ajouter des calques",addActionTip:"Ajouter des calques",addServerText:"Ajouter un nouveau serveur",untitledText:"Sans titre",addLayerSourceErrorText:"Impossible d'obtenir les capacités WMS ({msg}).\nVeuillez vérifier l'URL et essayez à nouveau.",availableLayersText:"Couches disponibles",doneText:"Terminé",uploadText:"Télécharger des données",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Calques Bing",roadTitle:"Bing routes",aerialTitle:"Bing images aériennes",labeledAerialTitle:"Bing images aériennes avec étiquettes"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Créer un nouvel objet",editFeatureActionTip:"Modifier un objet existant",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Afficher sur la carte",firstPageTip:"Première page",previousPageTip:"Page précédente",zoomPageExtentTip:"Zoom sur la page",nextPageTip:"Page suivante",lastPageTip:"Dernière page",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"Passer à la visionneuse 3D",tooltip:"Passer à la visionneuse 3D"},"gxp.plugins.GoogleSource.prototype":{title:"Calques Google",roadmapAbstract:"Carte routière",satelliteAbstract:"Images satellite",hybridAbstract:"Images avec routes",terrainAbstract:"Carte routière avec le terrain"},"gxp.plugins.LayerProperties.prototype":{menuText:"Propriétés de la couche",toolTip:"Afficher les propriétés de la couche"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Layers",rootNodeText:"Layers",overlayNodeText:"Surimpressions",baseNodeText:"Couches"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Couche"},"gxp.plugins.Legend.prototype":{menuText:"Légende",tooltip:"Afficher la légende"},"gxp.plugins.Measure.prototype":{buttonText:"Mesure",lengthMenuText:"Longueur",areaMenuText:"Surface",lengthTooltip:"Mesurer une longueur",areaTooltip:"Mesurer une surface",measureTooltip:"Mesurer"},"gxp.plugins.Navigation.prototype":{menuText:"Panner",tooltip:"Faire glisser la carte"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Position précédente",nextMenuText:"Position suivante",previousTooltip:"Retourner à la position précédente",nextTooltip:"Aller à la position suivante"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Chargement de la carte..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.OSMSource.prototype":{title:"Calques OpenStreetMap",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Données CC-By-SA par <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Imprimer",menuText:"Imprimer la carte",tooltip:"Imprimer la carte",previewText:"Aperçu avant impression",notAllNotPrintableText:"Non, toutes les couches peuvent être imprimées",nonePrintableText:"Aucune de vos couches ne peut être imprimée"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Layers",osmAttribution:"Avec la permission de tuiles <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Avec la permission de tuiles <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Interrogation",queryMenuText:"Couche de requêtes",queryActionTip:"Interroger la couche sélectionnée",queryByLocationText:"Query by current map extent",queryByAttributesText:"Requête par attributs"},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Enlever la couche",removeActionTip:"Enlever la couche"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Get Feature Info",popupTitle:"Info sur l'objet"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Zoom avant",zoomOutMenuText:"Zoom arrière",zoomTooltip:"Zoomer en dessinant un rectangle",zoomInTooltip:"Zoomer",zoomOutTooltip:"Dézoomer"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Zoomer sur la carte max",tooltip:"Zoomer sur la carte max"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Zoomer sur la couche",tooltip:"Zoomer sur la couche"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Zoomer sur la couche",tooltip:"Zoomer sur la couche"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Zoomer sur les objets sélectionnés",tooltip:"Zoomer sur les objets sélectionnés"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Enregistrer les modifications ?",closeMsg:"Cet objet a des modifications non enregistrées. Voulez-vous enregistrer vos modifications ?",deleteMsgTitle:"Supprimer l'objet ?",deleteMsg:"Etes-vous sûr de vouloir supprimer cet objet ?",editButtonText:"Modifier",editButtonTooltip:"Modifier cet objet",deleteButtonText:"Supprimer",deleteButtonTooltip:"Supprimer cet objet",cancelButtonText:"Annuler",cancelButtonTooltip:"Arrêter de modifier, annuler les modifications",saveButtonText:"Enregistrer",saveButtonTooltip:"Enregistrer les modifications"},"gxp.FillSymbolizer.prototype":{fillText:"Remplir",colorText:"Couleur",opacityText:"Opacité"},"gxp.FilterBuilder.prototype":{builderTypeNames:["Tout","tous","aucun","pas tout"],preComboText:"Match",postComboText:"de ce qui suit:",addConditionText:"Ajouter la condition",addGroupText:"Ajouter un groupe",removeConditionText:"Supprimer la condition"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Nom",titleHeaderText:"Titre",queryableHeaderText:"Interrogeable",layerSelectionLabel:"Voir les données disponibles à partir de :",layerAdditionLabel:"ou ajouter un nouveau serveur.",expanderTemplateText:"<p><b>Résumé:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"Cercle",graphicSquareText:"Carré",graphicTriangleText:"Triangle",graphicStarText:"Étoile",graphicCrossText:"Croix",graphicXText:"x",graphicExternalText:"Externe",urlText:"URL",opacityText:"Opacité",symbolText:"Symbole",sizeText:"Taille",rotationText:"Rotation"},"gxp.QueryPanel.prototype":{queryByLocationText:"Interrogation selon le lieu",currentTextText:"Mesure actuelle",queryByAttributesText:"Requête par attributs",layerText:"Calque"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} échelle 1:{scale}",labelFeaturesText:"Label Caractéristiques",advancedText:"Avancé",limitByScaleText:"Limiter par l'échelle",limitByConditionText:"Limiter par condition",symbolText:"Symbole",nameText:"Nom"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} échelle 1:{scale}",maxScaleLimitText:"Échelle maximale"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Label valeurs",haloText:"Halo",sizeText:"Taille"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"A propos",titleText:"Titre",nameText:"Nom",descriptionText:"Description",displayText:"Affichage",opacityText:"Opacité",formatText:"Format",transparentText:"Transparent",cacheText:"Cache",cacheFieldText:"Utiliser la version mise en cache",stylesText:"Available styles",infoFormatText:"Info format",infoFormatEmptyText:"Choisissez un format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Votre carte est prête à être publiée sur le web. Il suffit de copier le code HTML suivant pour intégrer la carte dans votre site Web :",heightLabel:"Hauteur",widthLabel:"Largeur",mapSizeLabel:"Taille de la carte",miniSizeLabel:"Mini",smallSizeLabel:"Petit",premiumSizeLabel:"Premium",largeSizeLabel:"Large"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Titre",titleEmptyText:"Titre de la couche",abstractLabel:"Description",abstractEmptyText:"Description couche",fileLabel:"Données",fieldEmptyText:"Parcourir pour ...",uploadText:"Upload",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Transfert de vos données ...",invalidFileExtensionText:"L'extension du fichier doit être : ",optionsText:"Options",workspaceLabel:"Espace de travail",workspaceEmptyText:"Espace de travail par défaut",dataStoreLabel:"Magasin de données",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Magasin de données par défaut"},"gxp.NewSourceDialog.prototype":{title:"Ajouter un nouveau serveur...",cancelText:"Annuler",addServerText:"Ajouter un serveur",invalidURLText:"Indiquez l'URL valide d'un serveur WMS (e.g. http://example.com/geoserver/wms)",contactingServerText:"Interrogation du serveur..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Niveau de zoom"},"gxp.Viewer.prototype":{saveErrorText:"Sauver Trouble: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Source",addPicasaText:"Picasa Photos",addYouTubeText:"YouTube Vidéos",addRSSText:"GeoRSS Autre",addFeedText:"Ajouter à la carte",addTitleText:"Titre",keywordText:"Mot-clé",doneText:"Terminé",titletext:"Ajouter RSS",maxResultsText:"Articles Max"}});GeoExt.Lang.add("id",{"gxp.menu.LayerMenu.prototype":{layerText:"Layer"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Tambahkan layer",addActionTip:"Tambahkan layer",addServerText:"Tambahkan server baru",addButtonText:"Add layers",untitledText:"Untitled",addLayerSourceErrorText:"Kesalahan mendapatkan kemampuan WMS ({msg}). \nSilakan cek url dan coba lagi.",availableLayersText:"Layer tersedia",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",panelTitleText:"Title",layerSelectionText:"View available data from:",doneText:"Selesai",uploadText:"Unggah data",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Layers Bing",roadTitle:"Jalan Bing",aerialTitle:"Udara Bing",labeledAerialTitle:"Udara Bing dengan label"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Membuat sebuah fitur",editFeatureActionTip:"Edit fitur",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Tampilkan pada peta",firstPageTip:"Halaman pertama",previousPageTip:"Halaman sebelumnya",zoomPageExtentTip:"Zoom sampai batas halaman",nextPageTip:"Halaman berikut",lastPageTip:"Halaman terakhir",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"3D Viewer",tooltip:"Switch to 3D Viewer"},"gxp.plugins.GoogleSource.prototype":{title:"Google Layers",roadmapAbstract:"Tampilkan peta jalan",satelliteAbstract:"Tampilkan citra satelit",hybridAbstract:"Tampilkan citra dengan nama jalan",terrainAbstract:"Tampilkan peta jalan dengan peta medan"},"gxp.plugins.LayerProperties.prototype":{menuText:"Properti layer",toolTip:"Properti layer"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Layer-layer",rootNodeText:"Layer-layer",overlayNodeText:"Superimposisi",baseNodeText:"Layer dasar"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Layer dasar"},"gxp.plugins.Legend.prototype":{menuText:"Tampilkan legend",tooltip:"Tampilkan legend"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Loading Map..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{buttonText:"Pengukuran",lengthMenuText:"Panjang",areaMenuText:"Luas",lengthTooltip:"Pengukuran panjang",areaTooltip:"Pengukuran luas",measureTooltip:"Pengukuran"},"gxp.plugins.Navigation.prototype":{menuText:"Pan peta",tooltip:"Pan peta"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Zoom ke luas sebelumnya",nextMenuText:"Zoom ke luas setelahnya",previousTooltip:"Zoom ke luas sebelumnya",nextTooltip:"Zoom ke luas setelahnya"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap Layers",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Cetak",menuText:"Cetak peta",tooltip:"Cetak peta",previewText:"Preview cetak",notAllNotPrintableText:"Tidak semua layer dapat dicetak",nonePrintableText:"Tidak ada peta yang dapat dicetak"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Layers",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"Citra MapQuest"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Query",queryMenuText:"Queryable Layer",queryActionTip:"Query layer yang dipilih",queryByLocationText:"Query by current map extent",queryByAttributesText:"Query atribut",queryMsg:"Querying...",cancelButtonText:"Batal",noFeaturesTitle:"Tidak sesuai",noFeaturesMessage:"Permintaan anda tidak berhasil."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Hapus layer",removeActionTip:"Hapus layer"},"gxp.plugins.Styler.prototype":{menuText:"Edit Styles",tooltip:"Manage layer styles"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Get Feature Info",popupTitle:"Info fitur"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Memperbesar",zoomOutMenuText:"Memperkecil",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Memperbesar",zoomOutTooltip:"Memperkecil"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Pembesaran maksimum",tooltip:"Pembesaran maksimum"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Pembesaran batas layer",tooltip:"Pembesaran batas layer"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Pembesaran batas layer",tooltip:"Pembesaran batas layer"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Pembesaran pada fitur terpilih",tooltip:"Pembesaran pada fitur terpilih"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Simpan update?",closeMsg:"Fitur belum di simpan. Apakah ingin disimpan?",deleteMsgTitle:"Hapus Fitur?",deleteMsg:"Anda yakin untuk menghapus fitur ini?",editButtonText:"Edit",editButtonTooltip:"Jadikan fitur dapat diedit",deleteButtonText:"Hapus",deleteButtonTooltip:"Hapus fitur ini",cancelButtonText:"Batal",cancelButtonTooltip:"Berhenti mengedit, batalkan perubahan",saveButtonText:"Simpan",saveButtonTooltip:"Simpan Update"},"gxp.FillSymbolizer.prototype":{fillText:"Isikan warna",colorText:"Warna",opacityText:"Kepekatan"},"gxp.FilterBuilder.prototype":{builderTypeNames:["any","all","none","not all"],preComboText:"Sesuai",postComboText:"of the following:",addConditionText:"tambahkan kondisi",addGroupText:"tambahkan grup",removeConditionText:"Hilangkan kondisi"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Nama",titleHeaderText:"Judul",queryableHeaderText:"Queryable",layerSelectionLabel:"Melihat data dari:",layerAdditionLabel:"atau tambahkan sebagai server baru.",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"Lingkaran",graphicSquareText:"square",graphicTriangleText:"Segitiga",graphicStarText:"Bintang",graphicCrossText:"Silang",graphicXText:"x",graphicExternalText:"dari luar",urlText:"URL",opacityText:"Kepekatan",symbolText:"Simbol",sizeText:"Ukuran",rotationText:"Rotasi"},"gxp.QueryPanel.prototype":{queryByLocationText:"Query lokasi",currentTextText:"Sejauh ini",queryByAttributesText:"Query atribut",layerText:"Layer"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Scale 1:{scale}",labelFeaturesText:"Label Fitur",labelsText:"Labels",basicText:"Basic",advancedText:"Tingkat lanjut",limitByScaleText:"Batasan oleh skala",limitByConditionText:"Batasan oleh kondisi",symbolText:"Simbol",nameText:"Nama"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Scale 1:{scale}",minScaleLimitText:"Min scale limit",maxScaleLimitText:"Batas skala maksimum"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"solid",dashStrokeName:"dash",dotStrokeName:"dot",titleText:"Stroke",styleText:"Style",colorText:"Color",widthText:"Width",opacityText:"Opacity"},"gxp.StylePropertiesDialog.prototype":{titleText:"General",nameFieldText:"Name",titleFieldText:"Title",abstractFieldText:"Abstract"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Label nilai",haloText:"Halo",sizeText:"Ukuran"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"Tentang Program",titleText:"Judul",nameText:"Nama",descriptionText:"Deskripsi",displayText:"Tampilan",opacityText:"Kecerahan",formatText:"Format",transparentText:"Transparent",cacheText:"Cache",cacheFieldText:"Menggunakan versi cached",stylesText:"Styles tersedia",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Peta anda siap dipublikasikan melalui web! Cukup salin HTML berikut untuk meletakkan peta dalam situs web Anda:",heightLabel:"Tinggi",widthLabel:"Lebar",mapSizeLabel:"Ukuran peta",miniSizeLabel:"Mini",smallSizeLabel:"Kecil",premiumSizeLabel:"Premium",largeSizeLabel:"Besar"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Tambah",addStyleTip:"Tambah style baru",chooseStyleText:"Choose style",deleteStyleText:"Hilangkan",deleteStyleTip:"Hapus style yang dipilih",editStyleText:"Edit",editStyleTip:"Edit style yang dipilih",duplicateStyleText:"Duplikat",duplicateStyleTip:"Duplikat style yang dipilih",addRuleText:"Tambah",addRuleTip:"Tambah Rule baru",newRuleText:"New Rule",deleteRuleText:"Hilangkan",deleteRuleTip:"Hapus Rule yang dipilih",editRuleText:"Edit",editRuleTip:"Edit ule yang dipilih",duplicateRuleText:"Duplikat",duplicateRuleTip:"Duplikat style yang dipilih",cancelText:"Batal",saveText:"Save",styleWindowTitle:"User Style: {0}",ruleWindowTitle:"Style Rule: {0}",stylesFieldsetTitle:"Styles",rulesFieldsetTitle:"Rules"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Judul",titleEmptyText:"Judul Layer",abstractLabel:"Deskripsi",abstractEmptyText:"Deskripsi Layer",fileLabel:"Data",fieldEmptyText:"Pencarian arsip data...",uploadText:"Pengisian",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Mengisi Data anda...",invalidFileExtensionText:"Ekstensi file harus salah satu: ",optionsText:"Pilihan",workspaceLabel:"Ruang Kerja",workspaceEmptyText:"Ruang kerja Default",dataStoreLabel:"Penyimpanan",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Penyimpanan data Default"},"gxp.NewSourceDialog.prototype":{title:"Add New Server...",cancelText:"Cancel",addServerText:"Add Server",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Contacting Server..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Zoom level"},"gxp.Viewer.prototype":{saveErrorText:"Trouble saving: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Sumber",addPicasaText:"Picasa Foto",addYouTubeText:"YouTube Video",addRSSText:"GeoRSS Pakan lain",addFeedText:"Tambah ke Peta",addTitleText:"Judul",keywordText:"Kata Kunci",doneText:"Selesai",titleText:"Tambah Blog",maxResultsText:"Produk Max"}});GeoExt.Lang.add("nl",{"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Voeg kaartlagen toe",addActionTip:"Voeg kaartlagen toe",addServerText:"Voeg service toe",untitledText:"Onbekend",addLayerSourceErrorText:"Probleem bij het ophalen van de Error WMS GetCapabilities ({msg}).\nControleer de URL en probeer opnieuw.",availableLayersText:"Beschikbare kaartlagen",doneText:"Klaar",addFeedActionMenuText:"Add feeds",searchText:"Zoek naar kaartlagen"},"gxp.plugins.BingSource.prototype":{title:"Bing kaartlagen",roadTitle:"Bing wegen",aerialTitle:"Bing luchtfoto's",labeledAerialTitle:"Bing luchtfoto's met labels"},"gxp.plugins.FeatureEditor.prototype":{createFeatureActionTip:"Maak een nieuw object",editFeatureActionTip:"Wijzig een bestand object",commitTitle:"Wijzingsbeschrijving",commitText:"Voor a.u.b. een beschrijving in voor de wijziging:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Toon op kaart",firstPageTip:"Eerste pagina",previousPageTip:"Vorige pagina",zoomPageExtentTip:"Zoom naar de uitsnede van de pagina",nextPageTip:"Volgende pagina",lastPageTip:"Laatste pagina",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"3D weergave",tooltip:"Bekijk kaart in 3D"},"gxp.plugins.GoogleSource.prototype":{title:"Google Maps kaartlagen",roadmapAbstract:"Toon stratenkaart",satelliteAbstract:"Toon satellietbeeld",hybridAbstract:"Toon rasterbeelden met labels",terrainAbstract:"Toon stratenkaart met terrein"},"gxp.plugins.LayerProperties.prototype":{menuText:"Kaartlaag eigenschappen",toolTip:"Kaartlaag eigenschappen"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Kaartlagen",rootNodeText:"Kaartlagen",overlayNodeText:"Kaart overlays",baseNodeText:"Basis Kaarten"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Basis Kaart"},"gxp.plugins.Legend.prototype":{menuText:"Toon legenda",tooltip:"Toon legenda"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Laden van de kaart..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox Layers",blueMarbleTopoBathyJanTitle:"Blue Marble Topography & Bathymetry (January)",blueMarbleTopoBathyJulTitle:"Blue Marble Topography & Bathymetry (July)",blueMarbleTopoJanTitle:"Blue Marble Topography (January)",blueMarbleTopoJulTitle:"Blue Marble Topography (July)",controlRoomTitle:"Control Room",geographyClassTitle:"Geography Class",naturalEarthHypsoTitle:"Natural Earth Hypsometric",naturalEarthHypsoBathyTitle:"Natural Earth Hypsometric & Bathymetry",naturalEarth1Title:"Natural Earth I",naturalEarth2Title:"Natural Earth II",worldDarkTitle:"World Dark",worldLightTitle:"World Light",worldPrintTitle:"World Print"},"gxp.plugins.Measure.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",buttonText:"Meten",lengthMenuText:"Lengte",areaMenuText:"Oppervlakte",lengthTooltip:"Meet lengte",areaTooltip:"Meet oppervlakte",measureTooltip:"Meten"},"gxp.plugins.Navigation.prototype":{menuText:"Verschuif kaart",tooltip:"Verschuif kaart"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Zoom naar de vorige uitsnede",nextMenuText:"Zoom naar de volgende uitsnede",previousTooltip:"Zoom naar de vorige uitsnede",nextTooltip:"Zoom naar de volgende uitsnede"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap kaartlagen",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Afdrukken",menuText:"Afdrukken kaart",tooltip:"Afdrukken kaart",previewText:"Voorvertoning",notAllNotPrintableText:"Niet alle lagen kunnen worden afgedrukt",nonePrintableText:"Geen van de huidige lagen kunnen worden afgedrukt"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest kaartlagen",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Rasterbeelden"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Bevraag",queryMenuText:"Bevraag kaartlaag",queryActionTip:"Bevraag de geselecteerde kaartlaag",queryByLocationText:"Query by current map extent",queryByAttributesText:"Bevraag middels attributen",queryMsg:"Bevragen...",cancelButtonText:"Annuleren",noFeaturesTitle:"Niks gevonden",noFeaturesMessage:"De bevraging heeft geen resultaten opgeleverd."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Verwijder kaartlaag",removeActionTip:"Verwijder kaartlaag"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Attribuut-informatie",popupTitle:"Attribuut-informatie"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Inzoomen",zoomOutMenuText:"Uitzoomen",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Inzoomen",zoomOutTooltip:"Uitzoomen"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Zoom naar de maximale uitsnede",tooltip:"Zoom naar de maximale uitsnede"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Zoom naar de uitsnede van de kaartlaag",tooltip:"Zoom naar de uitsnede van de kaartlaag"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Zoom naar de uitsnede van de kaartlaag",tooltip:"Zoom naar de uitsnede van de kaartlaag"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Zoom naar de geselecteerde objecten",tooltip:"Zoom naar de geselecteerde objecten"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Wijzigingen opslaan?",closeMsg:"Het object is gewijzigd. Wilt u de wijzigingen opslaan?",deleteMsgTitle:"Verwijder object?",deleteMsg:"Weet u zeker dat u dit object wilt verwijderen?",editButtonText:"Wijzigen",editButtonTooltip:"Wijzig dit object",deleteButtonText:"Verwijderen",deleteButtonTooltip:"Verwijder dit object",cancelButtonText:"Annuleren",cancelButtonTooltip:"Stop met wijzigen, wijzigingen worden ongedaan gemaakt",saveButtonText:"Opslaan",saveButtonTooltip:"Wijzigingen opslaan"},"gxp.FillSymbolizer.prototype":{fillText:"Opvulling",colorText:"Kleur",opacityText:"Opaciteit"},"gxp.FilterBuilder.prototype":{builderTypeNames:["om het even welk","alle","geen","niet alle"],preComboText:"Overeenkomst",postComboText:"van de volgende:",addConditionText:"voeg voorwaarde toe",addGroupText:"voeg groep toe",removeConditionText:"verwijder voorwaarde"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Naam",titleHeaderText:"Titel",queryableHeaderText:"Bevraagbaar",layerSelectionLabel:"Bekijk beschikbare data van:",layerAdditionLabel:"of voeg een nieuwe server toe.",expanderTemplateText:"<p><b>Samenvatting:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"cirkel",graphicSquareText:"vierkant",graphicTriangleText:"driehoek",graphicStarText:"ster",graphicCrossText:"kruis",graphicXText:"x",graphicExternalText:"extern",urlText:"URL",opacityText:"opaciteit",symbolText:"Symbool",sizeText:"Grootte",rotationText:"Rotatie"},"gxp.QueryPanel.prototype":{queryByLocationText:"Bevraag middels locatie",currentTextText:"Huidige uitsnede",queryByAttributesText:"Bevraag middels attributen",layerText:"Kaartlaag"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Schaal 1:{scale}",labelFeaturesText:"Label objecten",advancedText:"Geavanceerd",limitByScaleText:"Beperk middels schaal",limitByConditionText:"Beperk middels voorwaarde",symbolText:"Symbool",nameText:"Naam"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Schaal 1:{scale}",maxScaleLimitText:"Maximale schaal"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Label waardes",haloText:"Halo",sizeText:"Grootte"},"gxp.WMSLayerPanel.prototype":{attributionText:"Bronvermelding",aboutText:"Informatie",titleText:"Titel",nameText:"Naam",descriptionText:"Omschrijving",displayText:"Toon",opacityText:"Opaciteit",formatText:"Formaat",transparentText:"Transparant",cacheText:"Cache",cacheFieldText:"Gebruik de versie vanuit de cache",stylesText:"Beschikbare Stijlen",infoFormatText:"Info formaat",infoFormatEmptyText:"Selecteer een formaat",displayOptionsText:"Weergave opties",queryText:"Begrens d.m.v. query",scaleText:"Bregens d.m.v. schaal",minScaleText:"Minimum schaal",maxScaleText:"Maximum schaal",switchToFilterBuilderText:"Terug naar de querybuilder",cqlPrefixText:"of ",cqlText:"gebruik een CQL filter",singleTileText:"Enkele kaarttegel",singleTileFieldText:"Gebruik 1 kaarttegel"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Uw map is klaar voor publicatie! Kopieer de volgende HTML in uw website om de kaart in te voegen:",heightLabel:"Hoogte",widthLabel:"Breedte",mapSizeLabel:"Kaartgrootte",miniSizeLabel:"Mini",smallSizeLabel:"Klein",premiumSizeLabel:"Extra groot",largeSizeLabel:"Groot"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Voeg toe",addStyleTip:"Voeg een nieuwe stijl toe",deleteStyleText:"Verwijder",deleteStyleTip:"Verwijder de geselecteerde stijl",editStyleText:"Wijzig",editStyleTip:"Wijzig de geselecteerde stijl",duplicateStyleText:"Dupliceer",duplicateStyleTip:"Dupliceer de geselecteerde stijl",addRuleText:"Voeg toe",addRuleTip:"Voeg een nieuwe klasse toe",deleteRuleText:"Verwijder",deleteRuleTip:"Verwijder de geselecteerde klasse",editRuleText:"Wijzig",editRuleTip:"Wijzig de geselecteerde klasse",duplicateRuleText:"Dupliceer",duplicateRuleTip:"Dupliceer de geselecteerde klasse",cancelText:"Annuleer",styleWindowTitle:"Kaartstijl: {0}",ruleWindowTitle:"Klasse: {0}",stylesFieldsetTitle:"Kaartstijlen",rulesFieldsetTitle:"Klassen"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Titel",titleEmptyText:"Kaartlaag titel",abstractLabel:"Omschrijving",abstractEmptyText:"Kaartlaag omschrijving",fileLabel:"Data",fieldEmptyText:"Kies data archief...",uploadText:"Upload",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",waitMsgText:"Bezig met uploaden van de data...",invalidFileExtensionText:"Bestandsextensie is een van: ",optionsText:"Opties",workspaceLabel:"Werkruimte",workspaceEmptyText:"Standaard werkruimte",dataStoreLabel:"Archief",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Standaard archief"},"gxp.NewSourceDialog.prototype":{title:"Add New Server...",cancelText:"Cancel",addServerText:"Add Server",invalidURLText:"Enter a valid URL to a WMS endpoint (e.g. http://example.com/geoserver/wms)",contactingServerText:"Contacting Server..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Zoom niveau"},"gxp.Viewer.prototype":{saveErrorText:"Problemen bij het opslaan: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Bron",addPicasaText:"Picasa Foto's",addYouTubeText:"YouTube video's",addRSSText:"Andere GeoRSS Feed",addFeedText:"Voeg toe aan Map",addTitleText:"Titel",keywordText:"Trefwoord",doneText:"Klaar",titleText:"Voeg Feeds",maxResultsText:"Max Items"}});GeoExt.Lang.add("no",{"gxp.menu.LayerMenu.prototype":{layerText:"Kartlag"},"gxp.plugins.AddLayers.prototype":{addActionMenuText:"Legg til kartlag",addActionTip:"Legg til kartlag",addServerText:"Legg til en ny server",addButtonText:"Legg til kartlag",untitledText:"Uten titel",addLayerSourceErrorText:"Feil ved henting av WMS capabilities ({msg}).\nSjekk urlen og prøv igjen.",availableLayersText:"Tilgjengelige kartlag",expanderTemplateText:"<p><b>Abstrakt:</b> {abstract}</p>",panelTitleText:"Titel",layerSelectionText:"Vis tilgjengelige data fra:",doneText:"Ferdig",uploadText:"Last opp kartlag",addFeedActionMenuText:"Legg til feeds",searchText:"Søk etter kartlag"},"gxp.plugins.BingSource.prototype":{title:"Bing kartlag",roadTitle:"Bing Roads",aerialTitle:"Bing Aerial",labeledAerialTitle:"Bing Aerial med Etikett"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Editer",createFeatureActionText:"Lag",editFeatureActionText:"Modifiser",createFeatureActionTip:"Lag en ny feature",editFeatureActionTip:"Editer eksisterende feature",commitTitle:"Sjekk inn melding",commitText:"Skriv in en innsjekkingsmelding for denne editeringen:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Vis på kart",firstPageTip:"Første side",previousPageTip:"Neste side",zoomPageExtentTip:"Zoom til side utstrekning",nextPageTip:"Neste side",lastPageTip:"Siste side",totalMsg:"Features {1} til {2} av {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"3D Visning",tooltip:"Bytt til 3D Visning"},"gxp.plugins.GoogleSource.prototype":{title:"Google kartlag",roadmapAbstract:"Vis street map",satelliteAbstract:"Vis satelitt bilder",hybridAbstract:"Vis bilder med gatenavn",terrainAbstract:"Vis street map med terreng"},"gxp.plugins.LayerProperties.prototype":{menuText:"Kartlag Egenskaper",toolTip:"Kartlag Egenskaper"},"gxp.plugins.LayerTree.prototype":{shortTitle:"kartlag",rootNodeText:"Kartlag",overlayNodeText:"Kartlag",baseNodeText:"Bakgrunnskart"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Bakgrunnskart"},"gxp.plugins.Legend.prototype":{menuText:"Vis tegnforklaring",tooltip:"Vis tegnforklaring"},"gxp.plugins.LoadingIndicator.prototype":{loadingMapMessage:"Laster kart..."},"gxp.plugins.MapBoxSource.prototype":{title:"MapBox kartlag",blueMarbleTopoBathyJanTitle:"Blue Marble Topografi & Batymetri (januar)",blueMarbleTopoBathyJulTitle:"Blue Marble Topografi & Batymetri (Juli)",blueMarbleTopoJanTitle:"Blue Marble Topografi (januar)",blueMarbleTopoJulTitle:"Blue Marble Topografi (Juli)",controlRoomTitle:"Kontrollrom",geographyClassTitle:"Geografi Klasse",naturalEarthHypsoTitle:"Naturlig Jordklode Hypsometri",naturalEarthHypsoBathyTitle:"Naturlig Jordklode  Hypsometri & Batymetri",naturalEarth1Title:"Naturlig Jordklode I",naturalEarth2Title:"Naturlig Jordklode II",worldDarkTitle:"Verden Mørk",worldLightTitle:"Verden Lys",worldPrintTitle:"Verden utskrift"},"gxp.plugins.Measure.prototype":{buttonText:"Mål",lengthMenuText:"Lengde",areaMenuText:"Areal",lengthTooltip:"Mål lengde",areaTooltip:"Mål areal",measureTooltip:"Mål"},"gxp.plugins.Navigation.prototype":{menuText:"Panorer kart",tooltip:"Panorer kart"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Zoom til forrige utstrekning",nextMenuText:"Zoom til neste utstrekning",previousTooltip:"Zoom til forrige utstrekning",nextTooltip:"Zoom til neste utstrekning"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap Kartlag",mapnikAttribution:"&kopier; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> bidragsytere",osmarenderAttribution:"Data CC-By-SA av <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Skriv ut",menuText:"Skriv ut kart",tooltip:"Skriv ut kart",previewText:"Forhåndsvinsning av utskrift",notAllNotPrintableText:"Ikke alle kartlag kan skrives ut",nonePrintableText:"Ingen av dine valgte kartlag kan skrives ut"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest Kartlag",osmAttribution:"Titler levert av <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tutker levert av <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest bilder"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Spør",queryMenuText:"Spør kartlag",queryActionTip:"Spør det valgte kartlaget",queryByLocationText:"Spør ved valgt kartlags utstrekning",queryByAttributesText:"Spør ved attributter",queryMsg:"Spørring...",cancelButtonText:"Kanseler",noFeaturesTitle:"Ingen treff",noFeaturesMessage:"Din spørring gav ingen treff."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Fjern kartlag",removeActionTip:"Fjern kartlag"},"gxp.plugins.Styler.prototype":{menuText:"Kartlag Stiler",tooltip:"Kartlag Stiler"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identifiser",infoActionTip:"Hent Feature Info",popupTitle:"Feature Info"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom firkant",zoomInMenuText:"Zoom inn",zoomOutMenuText:"Zoom ut",zoomTooltip:"Zoom ved å tegne en firkant",zoomInTooltip:"Zoom inn",zoomOutTooltip:"Zoom ut"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Zoom til maks utstrekning",tooltip:"Zoom til maks utstrekning"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Zoom til kartlagets utstrekning",tooltip:"Zoom til kartlagets utstrekning"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Zoom til kartlagets utstrekning",tooltip:"Zoom til kartlagets utstrekning"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Zoom til valgte features",tooltip:"Zoom til valgte features"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Lagre Endringer?",closeMsg:"Denne featuren har nye endringer som ikke er lagret. Vill du lagre endringene?",deleteMsgTitle:"Slett Feature?",deleteMsg:"Er du sikker på at du vil slette denne featuren?",editButtonText:"Editer",editButtonTooltip:"Gjør denne featuren editerbar",deleteButtonText:"Slett",deleteButtonTooltip:"Slett denne featuren",cancelButtonText:"Kanseler",cancelButtonTooltip:"Stopp editering, forkast endringer",saveButtonText:"Lagre",saveButtonTooltip:"Lagre endringer"},"gxp.FillSymbolizer.prototype":{fillText:"Fyll ut",colorText:"Farge",opacityText:"Gjennomskinnelighet"},"gxp.FilterBuilder.prototype":{builderTypeNames:["en","alle","ingen","ikke alle"],preComboText:"Treff",postComboText:"av følgende:",addConditionText:"legg til betingelse",addGroupText:"Legg til gruppe",removeConditionText:"fjern betingelse"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Navn",titleHeaderText:"Tittel",queryableHeaderText:"Mulig å spørre",layerSelectionLabel:"Vis tilgjengelig data fra:",layerAdditionLabel:"eller legg til en ny server.",expanderTemplateText:"<p><b>Abstrakt:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"sirkel",graphicSquareText:"firkant",graphicTriangleText:"triangel",graphicStarText:"stjerne",graphicCrossText:"kryss",graphicXText:"x",graphicExternalText:"ekstern",urlText:"URL",opacityText:"gjennomskinnelighet",symbolText:"Symbol",sizeText:"Størrelse",rotationText:"Rotasjon"},"gxp.QueryPanel.prototype":{queryByLocationText:"Spør etter plassering",currentTextText:"Nåværende utstrekning",queryByAttributesText:"Spør etter attributter",layerText:"Kartlag"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Målestokk 1:{scale}",labelFeaturesText:"Etikett Features",labelsText:"Etiketter",basicText:"Grunnleggende",advancedText:"Avansert",limitByScaleText:"Målestokksbegrensning",limitByConditionText:"Begrensning på tilstand",symbolText:"Symbol",nameText:"Navn"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Målestokk 1:{scale}",minScaleLimitText:"Minimum målestokksgrense",maxScaleLimitText:"Maximum målestokksgrense"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"solid",dashStrokeName:"dash",dotStrokeName:"dot",titleText:"Strek",styleText:"Stil",colorText:"Farge",widthText:"Bredde",opacityText:"gjennomskinnelighet"},"gxp.StylePropertiesDialog.prototype":{titleText:"Generel",nameFieldText:"Navn",titleFieldText:"Tittel",abstractFieldText:"Abstrakt"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Etikett verdier",haloText:"Halo",sizeText:"Størrelse"},"gxp.WMSLayerPanel.prototype":{attributionText:"Tilskrivende",aboutText:"Om",titleText:"Tittel",nameText:"Navn",descriptionText:"Beskrivelse",displayText:"Visning",opacityText:"Gjennomskinnelighet",formatText:"Format",transparentText:"Gjennomskinnelighet",cacheText:"Cache",cacheFieldText:"Bruk cachet versjon",stylesText:"Tilgjengelige Stiler",infoFormatText:"Info format",infoFormatEmptyText:"Velg et format",displayOptionsText:"Visningsvalg",queryText:"Begrensning ved filter",scaleText:"Begrensning ved målestokk",minScaleText:"Minimum målestokk",maxScaleText:"Maximum målestokk",switchToFilterBuilderText:"Bytt tilbake til filter bygger",cqlPrefixText:"eller ",cqlText:"bruk CQL filter istedenfor",singleTileText:"Enkel tile",singleTileFieldText:"Bruk enkel tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Ditt kartlag kan publisers til web!! Kopier følgende HTML for å legge ditt kartlag til din webside:",heightLabel:"Høyde",widthLabel:"Bredde",mapSizeLabel:"Kart størrelse",miniSizeLabel:"Mini",smallSizeLabel:"Liten",premiumSizeLabel:"Premium",largeSizeLabel:"Stor"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Legg til",addStyleTip:"Legg til en ny stil",chooseStyleText:"Velg en stil",deleteStyleText:"Fjern",deleteStyleTip:"Slett den valgte stilen",editStyleText:"Editer",editStyleTip:"Editer den valgte stilen",duplicateStyleText:"Reproduser",duplicateStyleTip:"Reproduser den valgte stilen",addRuleText:"Legg til",addRuleTip:"Legg til ny regel",newRuleText:"Ny Regel",deleteRuleText:"Fjern",deleteRuleTip:"Slett den valgte regelen",editRuleText:"Editer",editRuleTip:"Editer den valgte regelen",duplicateRuleText:"Reproduser",duplicateRuleTip:"Reproduser den valgte regelen",cancelText:"Kanseler",saveText:"Lagre",styleWindowTitle:"Bruker Stil: {0}",ruleWindowTitle:"Stil regel: {0}",stylesFieldsetTitle:"Stiler",rulesFieldsetTitle:"Regler"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Titel",titleEmptyText:"Kartlags titel",abstractLabel:"Beskrivelse",abstractEmptyText:"Kartlag beskrivelse",fileLabel:"Data",fieldEmptyText:"Bla igjennom data arkiv...",uploadText:"Last opp",uploadFailedText:"Opplasting feilet",processingUploadText:"Prosesserer opplasting...",waitMsgText:"Laster opp dataene...",invalidFileExtensionText:"Filtype må være en av: ",optionsText:"Valt",workspaceLabel:"arbeidsområde",workspaceEmptyText:"standard arbeidsområde",dataStoreLabel:"Lagre",dataStoreEmptyText:"Velg et lagringsmedium",dataStoreNewText:"Velg et nytt lagringsmedium",crsLabel:"KRS",crsEmptyText:"Koordinat Referanse System ID",invalidCrsText:"KRS identifikatorer må være en EPSG kode (e.g. EPSG:4326)"},"gxp.NewSourceDialog.prototype":{title:"Legg til ny Server...",cancelText:"Kanseler",addServerText:"Legg til Server",invalidURLText:"Skriv inn en gyldig URL til et WMS endepunkt (f.eks. http://example.com/geoserver/wms)",contactingServerText:"Kontakter Server..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Zoom nivå"},"gxp.Viewer.prototype":{saveErrorText:"Problemer med å lagre: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Kilde",addPicasaText:"Picasa Foto",addYouTubeText:"YouTube Videoer",addRSSText:"Andre GeoRSS Feed",addFeedText:"Legg til Kart",addTitleText:"Tittel",keywordText:"Nøkkelord",doneText:"Ferdig",titleText:"Legg til Feeds",maxResultsText:"Max elementer"}});GeoExt.Lang.add("pl",{"gxp.menu.LayerMenu.prototype":{layerText:"Warstwa"},"gxp.plugins.AddLayers.prototype":{addMenuText:"Dodaj warstwy",addActionTip:"Dodaj warstwy",addServerText:"Dodaj serwer",addButtonText:"Dodaj warstwy",untitledText:"Bez tytułu",addLayerSourceErrorText:"Błąd w czasie pobierania parametrów serwera WMS ({msg}).\nProszę sprawdzić adres.",availableLayersText:"Dostępne warstwy",expanderTemplateText:"<p><b>Opis:</b> {abstract}</p>",panelTitleText:"Tytuł",layerSelectionText:"Pokaż dostępne warstwy z:",doneText:"Gotowe",uploadText:"Wyślij dane",addFeedActionMenuText:"Add feeds",searchText:"Search for layers"},"gxp.plugins.BingSource.prototype":{title:"Bing Maps",roadTitle:"Bing - drogi",aerialTitle:"Bing - ortofoto",labeledAerialTitle:"Bing - ortofoto z etykietami"},"gxp.plugins.FeatureEditor.prototype":{splitButtonText:"Edit",createFeatureActionText:"Create",editFeatureActionText:"Modify",createFeatureActionTip:"Utwórz nowy obiekt",editFeatureActionTip:"Edytuj istniejący obiekt",commitTitle:"Commit message",commitText:"Please enter a commit message for this edit:"},"gxp.plugins.FeatureGrid.prototype":{displayFeatureText:"Pokaż na mapie",firstPageTip:"Pierwsza strona",previousPageTip:"Poprzednia strona",zoomPageExtentTip:"Powiększ do zasięgu strony",nextPageTip:"Następna strona",lastPageTip:"Ostatnia strona",totalMsg:"Features {1} to {2} of {0}"},"gxp.plugins.GoogleEarth.prototype":{menuText:"Przeglądarka 3D",tooltip:"Przełącz do widoku 3D"},"gxp.plugins.GoogleSource.prototype":{title:"Google Maps",roadmapAbstract:"Mapa drogowa",satelliteAbstract:"Zdjęcia satelitarne",hybridAbstract:"Zdjęcia satelitarne z etykietami",terrainAbstract:"Mapa terenowa z etykietami"},"gxp.plugins.LayerProperties.prototype":{menuText:"Właściwości",toolTip:"Właściwości"},"gxp.plugins.LayerTree.prototype":{shortTitle:"Mapa",rootNodeText:"Mapa",overlayNodeText:"Warstwy",baseNodeText:"Mapa referencyjna"},"gxp.plugins.LayerManager.prototype":{baseNodeText:"Mapa referencyjna"},"gxp.plugins.Legend.prototype":{menuText:"Legenda mapy",tooltip:"Legenda mapy"},"gxp.plugins.Measure.prototype":{buttonText:"Pomiary",lengthMenuText:"Długość",areaMenuText:"Powierzchnia",lengthTooltip:"Pomiar odległości",areaTooltip:"Pomiar powierzchni",measureTooltip:"Pomiary"},"gxp.plugins.Navigation.prototype":{menuText:"Przesuń mapę",tooltip:"Przesuń mapę"},"gxp.plugins.NavigationHistory.prototype":{previousMenuText:"Poprzedni widok",nextMenuText:"Kolejny widok",previousTooltip:"Poprzedni widok",nextTooltip:"Kolejny widok"},"gxp.plugins.OSMSource.prototype":{title:"OpenStreetMap",mapnikAttribution:"&copy; <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors",osmarenderAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/'>OpenStreetMap</a>"},"gxp.plugins.Print.prototype":{buttonText:"Drukuj",menuText:"Drukuj",tooltip:"Drukuj",previewText:"Podgląd wydruku",notAllNotPrintableText:"Nie wszystkie warstwy mogą być wydrukowane",nonePrintableText:"Żadna z warstw nie może byc wydrukowana"},"gxp.plugins.MapQuestSource.prototype":{title:"MapQuest",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",naipTitle:"MapQuest Imagery"},"gxp.plugins.QueryForm.prototype":{queryActionText:"Wyszukaj",queryMenuText:"Przeszukaj warstwę",queryActionTip:"Przeszukaj zaznaczoną warstwę",queryByLocationText:"Query by current map extent",queryByAttributesText:"Przeszukaj po atrybutach",queryMsg:"Przeszukiwanie...",cancelButtonText:"Anuluj",noFeaturesTitle:"Brak danych",noFeaturesMessage:"Przeszukanie nie zwróciło żadnych danych."},"gxp.plugins.RemoveLayer.prototype":{removeMenuText:"Usuń warstwę",removeActionTip:"Usuń warstwę"},"gxp.plugins.Styler.prototype":{menuText:"Eycja styli",tooltip:"Zarządzanie stylami warstwy"},"gxp.plugins.WMSGetFeatureInfo.prototype":{buttonText:"Identify",infoActionTip:"Info o obiekcie",popupTitle:"Info o obiekcie"},"gxp.plugins.Zoom.prototype":{zoomMenuText:"Zoom Box",zoomInMenuText:"Powiększ",zoomOutMenuText:"Pomniejsz",zoomTooltip:"Zoom by dragging a box",zoomInTooltip:"Powiększ",zoomOutTooltip:"Pomniejsz"},"gxp.plugins.ZoomToExtent.prototype":{menuText:"Cała mapa",tooltip:"Cała mapa"},"gxp.plugins.ZoomToDataExtent.prototype":{menuText:"Powiększ do zasięgu całej warstwy",tooltip:"Powiększ do zasięgu całej warstwy"},"gxp.plugins.ZoomToLayerExtent.prototype":{menuText:"Powiększ do zasięgu całej warstwy",tooltip:"Powiększ do zasięgu całej warstwy"},"gxp.plugins.ZoomToSelectedFeatures.prototype":{menuText:"Powiększ do wybranych obiektów",tooltip:"Powiększ do wybranych obiektów"},"gxp.FeatureEditPopup.prototype":{closeMsgTitle:"Zapisać zmiany?",closeMsg:"Istnieją nie zapisane zmiany. Chcesz je zapisać?",deleteMsgTitle:"Usunąć obiekt?",deleteMsg:"Jesteś pewien że chcesz usunąć ten obiekt?",editButtonText:"Edytuj",editButtonTooltip:"Edytuj ten obiekt",deleteButtonText:"Usuń",deleteButtonTooltip:"Usuń ten obiekt",cancelButtonText:"Anuluj",cancelButtonTooltip:"Anuluj edycję i nie zapisuj zmian",saveButtonText:"Zapisz",saveButtonTooltip:"Zapisz zmiany"},"gxp.FillSymbolizer.prototype":{fillText:"Wypełnienie",colorText:"Kolor",opacityText:"Prześwit"},"gxp.FilterBuilder.prototype":{builderTypeNames:["dowolny","wszystkie","żaden","odwrotność"],preComboText:"Dopasuj",postComboText:"sposród:",addConditionText:"dodaj warunek",addGroupText:"dodaj grupę",removeConditionText:"usuń warunek"},"gxp.grid.CapabilitiesGrid.prototype":{nameHeaderText:"Nazwa",titleHeaderText:"Tytuł",queryableHeaderText:"Przeszukiwalna",layerSelectionLabel:"Zobacz dostępne dane z:",layerAdditionLabel:"lub dodaj serwer.",expanderTemplateText:"<p><b>Opis:</b> {abstract}</p>"},"gxp.PointSymbolizer.prototype":{graphicCircleText:"koło",graphicSquareText:"kwadrat",graphicTriangleText:"trójkąt",graphicStarText:"gwiazda",graphicCrossText:"krzyż",graphicXText:"x",graphicExternalText:"inny",urlText:"URL",opacityText:"Prześwit",symbolText:"Symbol",sizeText:"Rozmiar",rotationText:"Obrót"},"gxp.QueryPanel.prototype":{queryByLocationText:"Zapytanie przestrzenne",currentTextText:"Aktualne powiększenie",queryByAttributesText:"Zapytanie atrybutowe",layerText:"Warstwa"},"gxp.RulePanel.prototype":{scaleSliderTemplate:"{scaleType} Skala 1:{scale}",labelFeaturesText:"Etykiety obiektów",labelsText:"Etykiety",basicText:"Podstawowa",advancedText:"Zaawansowana",limitByScaleText:"Ograniczenie skalowe",limitByConditionText:"Ograniczenie warunkowe",symbolText:"Symbol",nameText:"Nazwa"},"gxp.ScaleLimitPanel.prototype":{scaleSliderTemplate:"{scaleType} Skala 1:{scale}",minScaleLimitText:"Skala min.",maxScaleLimitText:"Skala max"},"gxp.StrokeSymbolizer.prototype":{solidStrokeName:"ciągły",dashStrokeName:"kreskowany",dotStrokeName:"kropkowany",titleText:"Obrys",styleText:"Styl",colorText:"Kolor",widthText:"Grubość",opacityText:"Prześwit"},"gxp.StylePropertiesDialog.prototype":{titleText:"Ogólny",nameFieldText:"Nazwa",titleFieldText:"Tytuł",abstractFieldText:"Opis"},"gxp.TextSymbolizer.prototype":{labelValuesText:"Wartości etykiet",haloText:"Efekt Halo",sizeText:"Rozmiar"},"gxp.WMSLayerPanel.prototype":{attributionText:"Attribution",aboutText:"O",titleText:"Tytuł",nameText:"Nazwa",descriptionText:"Opis",displayText:"Wyświetlanie",opacityText:"Prześwit",formatText:"Format",transparentText:"Przeźr.",cacheText:"Cache",cacheFieldText:"Użyj wersji cache",stylesText:"Dostępne Style",infoFormatText:"Info format",infoFormatEmptyText:"Select a format",displayOptionsText:"Display options",queryText:"Limit with filters",scaleText:"Limit by scale",minScaleText:"Min scale",maxScaleText:"Max scale",switchToFilterBuilderText:"Switch back to filter builder",cqlPrefixText:"or ",cqlText:"use CQL filter instead",singleTileText:"Single tile",singleTileFieldText:"Use a single tile"},"gxp.EmbedMapDialog.prototype":{publishMessage:"Twoja mapa jest gotowa do publikacji! Po prostu wklej poniższy kod na swojej witrynie:",heightLabel:"Wysokość",widthLabel:"Szerokość",mapSizeLabel:"Rozmiar mapy",miniSizeLabel:"Mini",smallSizeLabel:"Mały",premiumSizeLabel:"Średni",largeSizeLabel:"Duży"},"gxp.WMSStylesDialog.prototype":{addStyleText:"Dodaj",addStyleTip:"Dodaj nowy styl",chooseStyleText:"Wybierz styl",deleteStyleText:"Usuń",deleteStyleTip:"Usuń styl",editStyleText:"Edytuj",editStyleTip:"Edytuj wybrany styl",duplicateStyleText:"Stwórz kopię",duplicateStyleTip:"Stwórz kopię wybranego stylu",addRuleText:"Dodaj",addRuleTip:"Dodaj nową regułę",newRuleText:"Nowa reguła",deleteRuleText:"Usuń",deleteRuleTip:"Usuń wybraną regułę",editRuleText:"Edytuj",editRuleTip:"Edytuj wybraną regułę",duplicateRuleText:"Stwórz kopię",duplicateRuleTip:"Skopiuj wybraną regułę",cancelText:"Anuluj",saveText:"Zapisz",styleWindowTitle:"Styl użytkownika: {0}",ruleWindowTitle:"Reguła stylu: {0}",stylesFieldsetTitle:"Style",rulesFieldsetTitle:"Reguły"},"gxp.LayerUploadPanel.prototype":{titleLabel:"Tytuł",titleEmptyText:"Tytuł warstwy",abstractLabel:"Opis",abstractEmptyText:"Opis warstwy",fileLabel:"Dane",fieldEmptyText:"Wskaż lokalizację danych...",uploadText:"Prześlij",uploadFailedText:"Upload failed",processingUploadText:"Processing upload...",importText:"Importing upload...",waitMsgText:"Przesyłanie danych...",invalidFileExtensionText:"Typ pliku musi być jednym z poniższych: ",optionsText:"Opcje",workspaceLabel:"Obszar roboczy",workspaceEmptyText:"Domyślny obszar roboczy",dataStoreLabel:"Magazyn danych",dataStoreEmptyText:"Create new store",defaultDataStoreEmptyText:"Domyślny magazyn danych"},"gxp.NewSourceDialog.prototype":{title:"Dodaj serwer...",cancelText:"Anuluj",addServerText:"Dodaj serwer",invalidURLText:"Podaj prawidłowy adres URL usługi WMS (n.p. http://example.com/geoserver/wms)",contactingServerText:"Łączenie z serwerem..."},"gxp.ScaleOverlay.prototype":{zoomLevelText:"Poziom powiększenia"},"gxp.Viewer.prototype":{saveErrorText:"Trouble saving: "},"gxp.FeedSourceDialog.prototype":{feedTypeText:"Źródło",addPicasaText:"Picasa zdjęcia",addYouTubeText:"YouTube Videos",addRSSText:"Inne GeoRSS",addFeedText:"Dodaj do mapy",addTitleText:"Tytuł",keywordText:"Słowo",doneText:"Gotowe",titleText:"Dodaj kanały",maxResultsText:"Rzeczy Max"}});
